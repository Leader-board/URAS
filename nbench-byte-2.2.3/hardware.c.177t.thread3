
;; Function hardware (hardware, funcdef_no=56, decl_uid=3373, cgraph_uid=56, symbol_order=56)

Disambiguating loop 2 with multiple latches
Merged latch edges of loop 2
Disambiguating loop 3 with multiple latches
Merged latch edges of loop 3
Disambiguating loop 4 with multiple latches
Merged latch edges of loop 4
Disambiguating loop 5 with multiple latches
Merged latch edges of loop 5
Created preheader block for loop 1
Created preheader block for loop 2
Created preheader block for loop 3
Created preheader block for loop 4
Created preheader block for loop 5
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 98 11 12 13 14 15 16 17 99 18 94 19 20 21 22 23 24 25 26 27 28 29 30 100 31 95 32 33 34 35 36 37 38 39 40 41 42 43 101 44 96 45 46 47 48 49 50 51 52 53 54 55 56 102 57 97 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
;;
;; Loop 1
;;  header 66, latch 65
;;  depth 1, outer 0
;;  nodes: 66 65 23 12 25 36 38 49 51 52 62 64 24 37 50 63 97 93 53 56 61 60 59 58 55 54 57 102 39 26 13 11 96 92 40 43 48 47 46 45 42 41 44 101 95 91 27 30 35 34 33 32 29 28 31 100 94 90 14 17 22 21 20 19 16 15 18 99
;;
;; Loop 2
;;  header 94, latch 18
;;  depth 2, outer 1
;;  nodes: 94 18 21 22 19 20
;;
;; Loop 3
;;  header 95, latch 31
;;  depth 2, outer 1
;;  nodes: 95 31 34 35 32 33
;;
;; Loop 4
;;  header 96, latch 44
;;  depth 2, outer 1
;;  nodes: 96 44 47 48 45 46
;;
;; Loop 5
;;  header 97, latch 57
;;  depth 2, outer 1
;;  nodes: 97 57 60 61 58 59
;; 2 succs { 3 4 }
;; 3 succs { 9 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 85 }
;; 10 succs { 98 84 }
;; 98 succs { 66 }
;; 11 succs { 12 13 }
;; 12 succs { 65 }
;; 13 succs { 14 26 }
;; 14 succs { 15 23 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 99 90 }
;; 99 succs { 94 }
;; 18 succs { 94 }
;; 94 succs { 19 23 }
;; 19 succs { 20 22 }
;; 20 succs { 21 }
;; 21 succs { 18 90 }
;; 22 succs { 18 90 }
;; 23 succs { 24 65 }
;; 24 succs { 25 65 }
;; 25 succs { 65 }
;; 26 succs { 27 39 }
;; 27 succs { 28 36 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 100 91 }
;; 100 succs { 95 }
;; 31 succs { 95 }
;; 95 succs { 32 36 }
;; 32 succs { 33 35 }
;; 33 succs { 34 }
;; 34 succs { 31 91 }
;; 35 succs { 31 91 }
;; 36 succs { 37 65 }
;; 37 succs { 38 65 }
;; 38 succs { 65 }
;; 39 succs { 40 52 }
;; 40 succs { 41 49 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 101 92 }
;; 101 succs { 96 }
;; 44 succs { 96 }
;; 96 succs { 45 49 }
;; 45 succs { 46 48 }
;; 46 succs { 47 }
;; 47 succs { 44 92 }
;; 48 succs { 44 92 }
;; 49 succs { 50 65 }
;; 50 succs { 51 65 }
;; 51 succs { 65 }
;; 52 succs { 53 65 }
;; 53 succs { 54 62 }
;; 54 succs { 55 56 }
;; 55 succs { 56 }
;; 56 succs { 102 93 }
;; 102 succs { 97 }
;; 57 succs { 97 }
;; 97 succs { 58 62 }
;; 58 succs { 59 61 }
;; 59 succs { 60 }
;; 60 succs { 57 93 }
;; 61 succs { 57 93 }
;; 62 succs { 63 65 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 66 }
;; 66 succs { 11 67 }
;; 67 succs { 68 71 }
;; 68 succs { 69 70 }
;; 69 succs { 71 }
;; 70 succs { 71 }
;; 71 succs { 72 75 }
;; 72 succs { 73 74 }
;; 73 succs { 74 }
;; 74 succs { 75 }
;; 75 succs { 76 79 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 79 }
;; 79 succs { 80 83 }
;; 80 succs { 81 82 }
;; 81 succs { 82 }
;; 82 succs { 83 }
;; 83 succs { 84 }
;; 84 succs { 86 }
;; 85 succs { 86 }
;; 86 succs { 87 89 }
;; 87 succs { 88 }
;; 88 succs { 1 }
;; 89 succs { 88 }
;; 90 succs { 23 }
;; 91 succs { 36 }
;; 92 succs { 49 }
;; 93 succs { 62 }
Jump threading proved probability of edge 17->90 too small (it is 375, should be 10000).
Jump threading proved probability of edge 56->93 too small (it is 375, should be 10000).
Jump threading proved probability of edge 43->92 too small (it is 375, should be 10045).
Jump threading proved probability of edge 30->91 too small (it is 375, should be 10000).
Removing basic block 61
Removing basic block 48
Removing basic block 35
Removing basic block 22
Merging blocks 20 and 21
Merging blocks 33 and 34
Merging blocks 46 and 47
Merging blocks 59 and 60
Removing basic block 98
Removing basic block 99
Removing basic block 100
Removing basic block 101
Removing basic block 102

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_217 -> { _262 }
_224 -> { _253 }
_230 -> { _77 }
_231 -> { _192 }
_236 -> { _198 }
_242 -> { _204 }
_247 -> { _214 }
_256 -> { _271 }

SSA names to release after updating the SSA web

_77 _198 _214 _262 
Incremental SSA update started at block: 13
Number of blocks in CFG: 98
Number of blocks to update: 20 ( 20%)


hardware (const int write_to_file, struct FILE * global_ofile)
{
  struct FILE * info;
  char * cp;
  int cpus;
  char * buffer_end;
  char buffer[1024];
  char vendor_id[1024];
  char model_name[1024];
  char cpu_MHz[1024];
  int i;
  float f;
  struct FILE * pipe;
  char os_command[12];
  char cache[1024];
  char model[1024];
  char os[1024];
  char buffer[1024];
  char * _1;
  long unsigned int _5;
  long unsigned int _11;
  long unsigned int _13;
  char _24;
  char * _25;
  char _27;
  long unsigned int _28;
  sizetype _29;
  char * _30;
  char _31;
  long unsigned int _33;
  int _35;
  int _38;
  char _41;
  char _46;
  int _47;
  char _50;
  char _55;
  int _56;
  char _59;
  char _64;
  int _65;
  unsigned char _66;
  char _68;
  _Bool _73;
  char _74;
  char * _75;
  long unsigned int _78;
  long unsigned int _79;
  char _81;
  long unsigned int _85;
  char _87;
  long unsigned int _92;
  char _94;
  double _97;
  float _99;
  int _102;
  long unsigned int _104;
  sizetype _105;
  char * _106;
  char _107;
  long unsigned int _108;
  sizetype _109;
  char * _110;
  char _111;
  long unsigned int _112;
  sizetype _113;
  char * _114;
  char _115;
  long unsigned int _116;
  sizetype _117;
  char * _118;
  char _119;
  char _182;
  long unsigned int _185;
  long unsigned int _187;
  int _189;
  unsigned char _190;
  _Bool _192;
  int _195;
  unsigned char _196;
  _Bool _199;
  int _201;
  unsigned char _202;
  _Bool _204;
  _Bool _205;
  int _207;
  unsigned char _210;
  _Bool _211;
  _Bool _217;
  long unsigned int _222;
  char _223;
  _Bool _224;
  long unsigned int _225;
  long unsigned int _226;
  long unsigned int _227;
  _Bool _228;
  _Bool _230;
  _Bool _231;
  char _232;
  _Bool _236;
  _Bool _242;
  unsigned char _246;
  _Bool _247;
  int _249;
  long unsigned int _250;
  long unsigned int _251;
  _Bool _252;
  _Bool _253;
  unsigned char _255;
  _Bool _256;
  int _258;
  long unsigned int _259;
  long unsigned int _260;
  _Bool _261;
  unsigned char _264;
  int _267;
  long unsigned int _268;
  long unsigned int _269;
  _Bool _270;
  _Bool _271;

  <bb 2> [31.42%]:
  os_command = "uname -s -r";
  pipe_22 = popen (&os_command, "r");
  if (pipe_22 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [9.43%]:
  MEM[(char *)&os] = 0;
  goto <bb 9>; [100.00%]

  <bb 4> [21.99%]:
  _25 = __fgets_alias (&os, 1024, pipe_22);
  if (_25 == 0B)
    goto <bb 5>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 5> [6.60%]:
  MEM[(char *)&os] = 0;

  <bb 6> [21.99%]:
  pclose (pipe_22);
  _27 = MEM[(const char *)&os];
  if (_27 != 0)
    goto <bb 7>; [52.35%]
  else
    goto <bb 9>; [47.65%]

  <bb 7> [11.51%]:
  _28 = strlen (&os);
  _29 = _28 + 18446744073709551615;
  _30 = &os + _29;
  _31 = *_30;
  if (_31 == 10)
    goto <bb 8>; [37.68%]
  else
    goto <bb 9>; [62.32%]

  <bb 8> [4.34%]:
  *_30 = 0;

  <bb 9> [31.42%]:
  _1 = strstr (&os, "Linux");
  if (_1 != 0B)
    goto <bb 10>; [49.47%]
  else
    goto <bb 89>; [50.53%]

  <bb 10> [15.54%]:
  MEM[(char *)&cache] = 0;
  MEM[(char *)&model] = 0;
  cpu_MHz[0] = 0;
  model_name[0] = 0;
  vendor_id[0] = 0;
  info_32 = fopen ("/proc/cpuinfo", "r");
  if (info_32 != 0B)
    goto <bb 70>; [73.26%]
  else
    goto <bb 88>; [26.74%]

  <bb 11> [64.52%]:
  _33 = strlen (&buffer);
  _35 = strncmp (&buffer, "processor", 9);
  if (_35 == 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [32.26%]:
  cpus_37 = cpus_36 + 1;
  goto <bb 69>; [100.00%]

  <bb 13> [32.26%]:
  buffer_end_34 = &buffer + _33;
  _38 = strncmp (&buffer, "vendor_id", 9);
  if (_38 == 0)
    goto <bb 14>; [34.00%]
  else
    goto <bb 27>; [66.00%]

  <bb 14> [11.00%]:
  if (&MEM[(void *)&buffer + 9B] < buffer_end_34)
    goto <bb 15>; [92.50%]
  else
    goto <bb 24>; [7.50%]

  <bb 15> [10.18%]:
  _232 = MEM[(char *)&buffer + 9B];
  _264 = (unsigned char) _232;
  if (_264 > 58)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 16> [5.09%]:
  # _256 = PHI <1(15)>
  goto <bb 94>; [100.00%]

  <bb 17> [10.18%]:
  _267 = (int) _264;
  _268 = 288230380446679552 >> _267;
  _269 = _268 & 1;
  _270 = _269 == 0;

  <bb 18> [5.09%]:
  # _271 = PHI <_270(17)>
  if (_271 != 0)
    goto <bb 94>; [0.97%]
  else
    goto <bb 20>; [99.03%]

  <bb 19> [79.24%]:
  # cp_76 = PHI <cp_40(22)>

  <bb 20> [89.03%]:
  # cp_216 = PHI <cp_76(19), &MEM[(void *)&buffer + 9B](18)>
  cp_40 = cp_216 + 1;
  if (cp_40 != buffer_end_34)
    goto <bb 21>; [92.50%]
  else
    goto <bb 24>; [7.50%]

  <bb 21> [82.33%]:
  _41 = MEM[base: cp_40, offset: 0B];
  _255 = (unsigned char) _41;
  if (_255 > 58)
    goto <bb 23>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 22> [82.33%]:
  _258 = (int) _255;
  _259 = 288230380446679552 >> _258;
  _260 = _259 & 1;
  _261 = _260 == 0;
  if (_261 != 0)
    goto <bb 94>; [3.75%]
  else
    goto <bb 19>; [96.25%]

  <bb 23> [0.00%]:
  # _217 = PHI <1(21)>
  goto <bb 94>; [100.00%]

  <bb 24> [10.97%]:
  _46 = MEM[(const char *)&vendor_id];
  if (_46 != 0)
    goto <bb 25>; [33.00%]
  else
    goto <bb 69>; [67.00%]

  <bb 25> [3.62%]:
  _104 = strlen (&vendor_id);
  _105 = _104 + 18446744073709551615;
  _106 = &vendor_id + _105;
  _107 = *_106;
  if (_107 == 10)
    goto <bb 26>; [37.68%]
  else
    goto <bb 69>; [62.32%]

  <bb 26> [1.36%]:
  *_106 = 0;
  goto <bb 69>; [100.00%]

  <bb 27> [21.29%]:
  _47 = strncmp (&buffer, "model name", 10);
  if (_47 == 0)
    goto <bb 28>; [34.00%]
  else
    goto <bb 41>; [66.00%]

  <bb 28> [7.26%]:
  if (&MEM[(void *)&buffer + 10B] < buffer_end_34)
    goto <bb 29>; [92.50%]
  else
    goto <bb 38>; [7.50%]

  <bb 29> [6.72%]:
  _182 = MEM[(char *)&buffer + 10B];
  _246 = (unsigned char) _182;
  if (_246 > 58)
    goto <bb 30>; [50.00%]
  else
    goto <bb 31>; [50.00%]

  <bb 30> [3.36%]:
  # _224 = PHI <1(29)>
  goto <bb 95>; [100.00%]

  <bb 31> [6.72%]:
  _249 = (int) _246;
  _250 = 288230380446679552 >> _249;
  _251 = _250 & 1;
  _252 = _251 == 0;

  <bb 32> [3.36%]:
  # _253 = PHI <_252(31)>
  if (_253 != 0)
    goto <bb 95>; [0.97%]
  else
    goto <bb 34>; [99.03%]

  <bb 33> [52.29%]:
  # cp_42 = PHI <cp_49(36)>

  <bb 34> [58.76%]:
  # cp_215 = PHI <cp_42(33), &MEM[(void *)&buffer + 10B](32)>
  cp_49 = cp_215 + 1;
  if (cp_49 != buffer_end_34)
    goto <bb 35>; [92.50%]
  else
    goto <bb 38>; [7.50%]

  <bb 35> [54.33%]:
  _50 = MEM[base: cp_49, offset: 0B];
  _190 = (unsigned char) _50;
  if (_190 > 58)
    goto <bb 37>; [50.00%]
  else
    goto <bb 36>; [50.00%]

  <bb 36> [54.33%]:
  _189 = (int) _190;
  _13 = 288230380446679552 >> _189;
  _11 = _13 & 1;
  _73 = _11 == 0;
  if (_73 != 0)
    goto <bb 95>; [3.75%]
  else
    goto <bb 33>; [96.25%]

  <bb 37> [0.00%]:
  # _230 = PHI <1(35)>
  goto <bb 95>; [100.00%]

  <bb 38> [7.24%]:
  _55 = MEM[(const char *)&model_name];
  if (_55 != 0)
    goto <bb 39>; [33.00%]
  else
    goto <bb 69>; [67.00%]

  <bb 39> [2.39%]:
  _108 = strlen (&model_name);
  _109 = _108 + 18446744073709551615;
  _110 = &model_name + _109;
  _111 = *_110;
  if (_111 == 10)
    goto <bb 40>; [37.68%]
  else
    goto <bb 69>; [62.32%]

  <bb 40> [0.90%]:
  *_110 = 0;
  goto <bb 69>; [100.00%]

  <bb 41> [14.05%]:
  _56 = strncmp (&buffer, "cpu MHz", 7);
  if (_56 == 0)
    goto <bb 42>; [34.00%]
  else
    goto <bb 55>; [66.00%]

  <bb 42> [4.79%]:
  if (&MEM[(void *)&buffer + 7B] < buffer_end_34)
    goto <bb 43>; [92.50%]
  else
    goto <bb 52>; [7.50%]

  <bb 43> [4.43%]:
  _24 = MEM[(char *)&buffer + 7B];
  _196 = (unsigned char) _24;
  if (_196 > 58)
    goto <bb 44>; [50.00%]
  else
    goto <bb 45>; [50.00%]

  <bb 44> [2.22%]:
  # _231 = PHI <1(43)>
  goto <bb 96>; [100.00%]

  <bb 45> [4.43%]:
  _195 = (int) _196;
  _5 = 288230380446679552 >> _195;
  _225 = _5 & 1;
  _211 = _225 == 0;

  <bb 46> [2.21%]:
  # _192 = PHI <_211(45)>
  if (_192 != 0)
    goto <bb 96>; [0.97%]
  else
    goto <bb 48>; [99.03%]

  <bb 47> [34.52%]:
  # cp_23 = PHI <cp_58(50)>

  <bb 48> [38.78%]:
  # cp_212 = PHI <cp_23(47), &MEM[(void *)&buffer + 7B](46)>
  cp_58 = cp_212 + 1;
  if (cp_58 != buffer_end_34)
    goto <bb 49>; [92.50%]
  else
    goto <bb 52>; [7.50%]

  <bb 49> [35.86%]:
  _59 = MEM[base: cp_58, offset: 0B];
  _202 = (unsigned char) _59;
  if (_202 > 58)
    goto <bb 51>; [50.00%]
  else
    goto <bb 50>; [50.00%]

  <bb 50> [35.86%]:
  _201 = (int) _202;
  _185 = 288230380446679552 >> _201;
  _226 = _185 & 1;
  _205 = _226 == 0;
  if (_205 != 0)
    goto <bb 96>; [3.75%]
  else
    goto <bb 47>; [96.25%]

  <bb 51> [0.00%]:
  # _236 = PHI <1(49)>
  goto <bb 96>; [100.00%]

  <bb 52> [4.78%]:
  _64 = MEM[(const char *)&cpu_MHz];
  if (_64 != 0)
    goto <bb 53>; [33.00%]
  else
    goto <bb 69>; [67.00%]

  <bb 53> [1.58%]:
  _112 = strlen (&cpu_MHz);
  _113 = _112 + 18446744073709551615;
  _114 = &cpu_MHz + _113;
  _115 = *_114;
  if (_115 == 10)
    goto <bb 54>; [37.68%]
  else
    goto <bb 69>; [62.32%]

  <bb 54> [0.59%]:
  *_114 = 0;
  goto <bb 69>; [100.00%]

  <bb 55> [9.27%]:
  _65 = strncmp (&buffer, "cache size", 10);
  if (_65 == 0)
    goto <bb 56>; [34.00%]
  else
    goto <bb 69>; [66.00%]

  <bb 56> [3.16%]:
  if (&MEM[(void *)&buffer + 10B] < buffer_end_34)
    goto <bb 57>; [92.50%]
  else
    goto <bb 66>; [7.50%]

  <bb 57> [2.92%]:
  _223 = MEM[(char *)&buffer + 10B];
  _210 = (unsigned char) _223;
  if (_210 > 58)
    goto <bb 58>; [50.00%]
  else
    goto <bb 59>; [50.00%]

  <bb 58> [1.46%]:
  # _242 = PHI <1(57)>
  goto <bb 97>; [100.00%]

  <bb 59> [2.92%]:
  _207 = (int) _210;
  _187 = 288230380446679552 >> _207;
  _227 = _187 & 1;
  _199 = _227 == 0;

  <bb 60> [1.46%]:
  # _204 = PHI <_199(59)>
  if (_204 != 0)
    goto <bb 97>; [0.97%]
  else
    goto <bb 62>; [99.03%]

  <bb 61> [22.78%]:
  # cp_265 = PHI <cp_67(64)>

  <bb 62> [25.60%]:
  # cp_193 = PHI <cp_265(61), &MEM[(void *)&buffer + 10B](60)>
  cp_67 = cp_193 + 1;
  if (cp_67 != buffer_end_34)
    goto <bb 63>; [92.50%]
  else
    goto <bb 66>; [7.50%]

  <bb 63> [23.67%]:
  _68 = MEM[base: cp_67, offset: 0B];
  _66 = (unsigned char) _68;
  if (_66 > 58)
    goto <bb 65>; [50.00%]
  else
    goto <bb 64>; [50.00%]

  <bb 64> [23.67%]:
  _102 = (int) _66;
  _78 = 288230380446679552 >> _102;
  _222 = _78 & 1;
  _228 = _222 == 0;
  if (_228 != 0)
    goto <bb 97>; [3.75%]
  else
    goto <bb 61>; [96.25%]

  <bb 65> [0.00%]:
  # _247 = PHI <1(63)>
  goto <bb 97>; [100.00%]

  <bb 66> [3.15%]:
  _74 = MEM[(const char *)&cache];
  if (_74 != 0)
    goto <bb 67>; [33.00%]
  else
    goto <bb 69>; [67.00%]

  <bb 67> [1.04%]:
  _116 = strlen (&cache);
  _117 = _116 + 18446744073709551615;
  _118 = &cache + _117;
  _119 = *_118;
  if (_119 == 10)
    goto <bb 68>; [37.68%]
  else
    goto <bb 69>; [62.32%]

  <bb 68> [0.39%]:
  *_118 = 0;

  <bb 69> [64.51%]:
  # cpus_103 = PHI <cpus_36(24), cpus_37(12), cpus_36(26), cpus_36(38), cpus_36(40), cpus_36(52), cpus_36(54), cpus_36(55), cpus_36(66), cpus_36(68), cpus_36(25), cpus_36(39), cpus_36(53), cpus_36(67)>

  <bb 70> [75.91%]:
  # cpus_36 = PHI <cpus_103(69), 0(10)>
  _75 = __fgets_alias (&buffer, 1024, info_32);
  if (_75 != 0B)
    goto <bb 11>; [85.00%]
  else
    goto <bb 71>; [15.00%]

  <bb 71> [11.39%]:
  # cpus_61 = PHI <cpus_36(70)>
  if (cpus_61 > 1)
    goto <bb 72>; [64.00%]
  else
    goto <bb 75>; [36.00%]

  <bb 72> [7.29%]:
  if (cpus_61 == 2)
    goto <bb 73>; [34.00%]
  else
    goto <bb 74>; [66.00%]

  <bb 73> [2.48%]:
  __builtin_memcpy (&model, "Dual", 5);
  goto <bb 75>; [100.00%]

  <bb 74> [4.81%]:
  __builtin___sprintf_chk (&model, 1, 1024, "%d CPU", cpus_61);

  <bb 75> [11.39%]:
  _79 = strlen (&model);
  cp_80 = &model + _79;
  _81 = vendor_id[0];
  if (_81 != 0)
    goto <bb 76>; [50.00%]
  else
    goto <bb 79>; [50.00%]

  <bb 76> [5.69%]:
  if (&model != cp_80)
    goto <bb 77>; [70.00%]
  else
    goto <bb 78>; [30.00%]

  <bb 77> [3.99%]:
  cp_82 = cp_80 + 1;
  *cp_80 = 32;

  <bb 78> [5.69%]:
  # cp_83 = PHI <&model(76), cp_82(77)>
  __builtin_strcpy (cp_83, &vendor_id);
  _85 = strlen (&vendor_id);
  cp_86 = cp_83 + _85;

  <bb 79> [11.39%]:
  # cp_88 = PHI <cp_80(75), cp_86(78)>
  _87 = model_name[0];
  if (_87 != 0)
    goto <bb 80>; [50.00%]
  else
    goto <bb 83>; [50.00%]

  <bb 80> [5.69%]:
  if (&model != cp_88)
    goto <bb 81>; [70.00%]
  else
    goto <bb 82>; [30.00%]

  <bb 81> [3.99%]:
  cp_89 = cp_88 + 1;
  *cp_88 = 32;

  <bb 82> [5.69%]:
  # cp_90 = PHI <&model(80), cp_89(81)>
  __builtin_strcpy (cp_90, &model_name);
  _92 = strlen (&model_name);
  cp_93 = cp_90 + _92;

  <bb 83> [11.39%]:
  # cp_95 = PHI <cp_88(79), cp_93(82)>
  _94 = cpu_MHz[0];
  if (_94 != 0)
    goto <bb 84>; [50.00%]
  else
    goto <bb 87>; [50.00%]

  <bb 84> [5.69%]:
  if (&model != cp_95)
    goto <bb 85>; [70.00%]
  else
    goto <bb 86>; [30.00%]

  <bb 85> [3.99%]:
  cp_96 = cp_95 + 1;
  *cp_95 = 32;

  <bb 86> [5.69%]:
  # cp_101 = PHI <&model(84), cp_96(85)>
  _97 = strtod (&cpu_MHz, 0B);
  f_98 = (float) _97;
  _99 = f_98 + 5.0e-1;
  i_100 = (int) _99;
  __builtin___sprintf_chk (&cpu_MHz, 1, 1024, "%dMHz", i_100);
  __builtin_strcpy (cp_101, &cpu_MHz);

  <bb 87> [11.39%]:
  fclose (info_32);

  <bb 88> [15.54%]:
  buffer ={v} {CLOBBER};
  vendor_id ={v} {CLOBBER};
  model_name ={v} {CLOBBER};
  cpu_MHz ={v} {CLOBBER};
  goto <bb 90>; [100.00%]

  <bb 89> [15.88%]:
  model[0] = 0;
  cache[0] = 0;

  <bb 90> [31.42%]:
  __builtin___sprintf_chk (&buffer, 1, 1024, "CPU                 : %s\n", &model);
  __printf_chk (1, "%s", &buffer);
  if (write_to_file_9(D) != 0)
    goto <bb 91>; [36.64%]
  else
    goto <bb 93>; [63.36%]

  <bb 91> [11.51%]:
  __builtin_fputs (&buffer, global_ofile_10(D));
  __builtin___sprintf_chk (&buffer, 1, 1024, "L2 Cache            : %s\n", &cache);
  __printf_chk (1, "%s", &buffer);
  __builtin_fputs (&buffer, global_ofile_10(D));
  __builtin___sprintf_chk (&buffer, 1, 1024, "OS                  : %s\n", &os);
  __printf_chk (1, "%s", &buffer);
  __builtin_fputs (&buffer, global_ofile_10(D));

  <bb 92> [31.42%]:
  buffer ={v} {CLOBBER};
  os ={v} {CLOBBER};
  model ={v} {CLOBBER};
  cache ={v} {CLOBBER};
  os_command ={v} {CLOBBER};
  return;

  <bb 93> [19.91%]:
  __builtin___sprintf_chk (&buffer, 1, 1024, "L2 Cache            : %s\n", &cache);
  __printf_chk (1, "%s", &buffer);
  __builtin___sprintf_chk (&buffer, 1, 1024, "OS                  : %s\n", &os);
  __printf_chk (1, "%s", &buffer);
  goto <bb 92>; [100.00%]

  <bb 94> [3.62%]:
  # cp_48 = PHI <&MEM[(void *)&buffer + 9B](18), cp_40(23), cp_40(22), &MEM[(void *)&buffer + 9B](16)>
  __builtin___strcpy_chk (&vendor_id, cp_48, 1024);
  goto <bb 24>; [100.00%]

  <bb 95> [2.39%]:
  # cp_39 = PHI <&MEM[(void *)&buffer + 10B](32), &MEM[(void *)&buffer + 10B](30), cp_49(36), cp_49(37)>
  __builtin___strcpy_chk (&model_name, cp_39, 1024);
  goto <bb 38>; [100.00%]

  <bb 96> [1.58%]:
  # cp_209 = PHI <&MEM[(void *)&buffer + 7B](46), &MEM[(void *)&buffer + 7B](44), cp_58(50), cp_58(51)>
  __builtin___strcpy_chk (&cpu_MHz, cp_209, 1024);
  goto <bb 52>; [100.00%]

  <bb 97> [1.04%]:
  # cp_208 = PHI <&MEM[(void *)&buffer + 10B](60), &MEM[(void *)&buffer + 10B](58), cp_67(64), cp_67(65)>
  __builtin___strcpy_chk (&cache, cp_208, 1024);
  goto <bb 66>; [100.00%]

}


