
;; Function DivideInternalFPF (DivideInternalFPF, funcdef_no=51, decl_uid=2827, cgraph_uid=51, symbol_order=51)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
x = &NONLOCAL
y = &NONLOCAL
z = &NONLOCAL
_1 = *x
_2 = _1
_3 = _2
_3 = &NONLOCAL
_4 = *y
_5 = _4
_6 = _3
_6 = _5
derefaddrtmp(17) = &NONLOCAL
*z = derefaddrtmp(17)
derefaddrtmp(18) = &NONLOCAL
*z + 16 = derefaddrtmp(18)
derefaddrtmp(19) = &NONLOCAL
*z + 8 = derefaddrtmp(19)
derefaddrtmp(20) = &NONLOCAL
*z + 32 = derefaddrtmp(20)
derefaddrtmp(21) = &NULL
*z + 48 = derefaddrtmp(21)
derefaddrtmp(22) = &NULL
*z + 64 = derefaddrtmp(22)
derefaddrtmp(23) = &NULL
*z + 80 = derefaddrtmp(23)
_7 = y + UNKNOWN
i_316 = i_78
i_316 = &NULL
n_233 = n_77
n_233 = &NULL
_71 = i_316
_72 = _71
_72 = &NONLOCAL
_73 = _7 + UNKNOWN
_74 = *_73
_75 = _74
n_77 = _75
n_77 = n_233
i_78 = i_316
i_78 = &NONLOCAL
n_335 = n_77
derefaddrtmp(35) = &NONLOCAL
*z = derefaddrtmp(35)
derefaddrtmp(36) = &NONLOCAL
*z + 16 = derefaddrtmp(36)
derefaddrtmp(37) = &NONLOCAL
*z + 8 = derefaddrtmp(37)
derefaddrtmp(38) = &NONLOCAL
*z + 32 = derefaddrtmp(38)
derefaddrtmp(39) = &NULL
*z + 48 = derefaddrtmp(39)
derefaddrtmp(40) = &NULL
*z + 64 = derefaddrtmp(40)
derefaddrtmp(41) = &NULL
*z + 80 = derefaddrtmp(41)
_8 = *x + 8
_9 = *y + 8
_10 = _8
_10 = _9
derefaddrtmp(45) = &NULL
*z = derefaddrtmp(45)
*z + 8 = _10
derefaddrtmp(46) = &NONLOCAL
*z + 16 = derefaddrtmp(46)
derefaddrtmp(47) = &NULL
*z + 32 = derefaddrtmp(47)
derefaddrtmp(48) = &NULL
*z + 48 = derefaddrtmp(48)
derefaddrtmp(49) = &NULL
*z + 64 = derefaddrtmp(49)
derefaddrtmp(50) = &NULL
*z + 80 = derefaddrtmp(50)
_11 = x + UNKNOWN
i_45 = i_91
i_45 = &NULL
n_43 = n_90
n_43 = &NULL
_84 = i_45
_85 = _84
_85 = &NONLOCAL
_86 = _11 + UNKNOWN
_87 = *_86
_88 = _87
n_90 = n_43
n_90 = _88
i_91 = i_45
i_91 = &NONLOCAL
n_315 = n_90
derefaddrtmp(62) = &NONLOCAL
*z = derefaddrtmp(62)
derefaddrtmp(63) = &NONLOCAL
*z + 16 = derefaddrtmp(63)
derefaddrtmp(64) = &NONLOCAL
*z + 8 = derefaddrtmp(64)
derefaddrtmp(65) = &NONLOCAL
*z + 32 = derefaddrtmp(65)
derefaddrtmp(66) = &NULL
*z + 48 = derefaddrtmp(66)
derefaddrtmp(67) = &NULL
*z + 64 = derefaddrtmp(67)
derefaddrtmp(68) = &NULL
*z + 80 = derefaddrtmp(68)
derefaddrtmp(69) = &NONLOCAL
*z = derefaddrtmp(69)
derefaddrtmp(70) = &NULL
*z + 8 = derefaddrtmp(70)
derefaddrtmp(71) = &NONLOCAL
*z + 16 = derefaddrtmp(71)
derefaddrtmp(72) = &NULL
*z + 32 = derefaddrtmp(72)
derefaddrtmp(73) = &NULL
*z + 48 = derefaddrtmp(73)
derefaddrtmp(74) = &NULL
*z + 64 = derefaddrtmp(74)
derefaddrtmp(75) = &NULL
*z + 80 = derefaddrtmp(75)
_12 = *x + 8
_13 = *y + 8
_14 = _12
_14 = _13
*z + 8 = _14
doubledereftmp(79) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(79)
doubledereftmp(80) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(80)
locx = *x + UNKNOWN
_774 = locx
_783 = locx
_647 = _774
_647 = _783
_792 = locx
_646 = _647
_646 = _792
_801 = locx
_712 = _646
_712 = _801
_16 = y + UNKNOWN
i_615 = i_114
i_615 = &NULL
n_614 = n_113
n_614 = &NULL
_107 = i_615
_108 = _107
_108 = &NONLOCAL
_109 = _16 + UNKNOWN
_110 = *_109
_111 = _110
n_113 = _111
n_113 = n_614
i_114 = i_615
i_114 = &NONLOCAL
n_300 = n_113
derefaddrtmp(100) = &NONLOCAL
*z = derefaddrtmp(100)
derefaddrtmp(101) = &NONLOCAL
*z + 16 = derefaddrtmp(101)
derefaddrtmp(102) = &NONLOCAL
*z + 8 = derefaddrtmp(102)
derefaddrtmp(103) = &NONLOCAL
*z + 32 = derefaddrtmp(103)
derefaddrtmp(104) = &NULL
*z + 48 = derefaddrtmp(104)
derefaddrtmp(105) = &NULL
*z + 64 = derefaddrtmp(105)
derefaddrtmp(106) = &NULL
*z + 80 = derefaddrtmp(106)
derefaddrtmp(107) = &NULL
*z = derefaddrtmp(107)
derefaddrtmp(108) = &NULL
*z + 8 = derefaddrtmp(108)
derefaddrtmp(109) = &NONLOCAL
*z + 16 = derefaddrtmp(109)
derefaddrtmp(110) = &NULL
*z + 32 = derefaddrtmp(110)
derefaddrtmp(111) = &NULL
*z + 48 = derefaddrtmp(111)
derefaddrtmp(112) = &NULL
*z + 64 = derefaddrtmp(112)
derefaddrtmp(113) = &NULL
*z + 80 = derefaddrtmp(113)
_17 = y + UNKNOWN
i_613 = i_127
i_613 = &NULL
n_599 = n_126
n_599 = &NULL
_120 = i_613
_121 = _120
_121 = &NONLOCAL
_122 = _17 + UNKNOWN
_123 = *_122
_124 = _123
n_126 = _124
n_126 = n_599
i_127 = i_613
i_127 = &NONLOCAL
n_698 = n_126
derefaddrtmp(125) = &NONLOCAL
*z = derefaddrtmp(125)
derefaddrtmp(126) = &NULL
*z + 8 = derefaddrtmp(126)
derefaddrtmp(127) = &NONLOCAL
*z + 16 = derefaddrtmp(127)
derefaddrtmp(128) = &NULL
*z + 32 = derefaddrtmp(128)
derefaddrtmp(129) = &NULL
*z + 48 = derefaddrtmp(129)
derefaddrtmp(130) = &NULL
*z + 64 = derefaddrtmp(130)
derefaddrtmp(131) = &NULL
*z + 80 = derefaddrtmp(131)
*z = _1
_20 = *x + 8
_21 = *y + 8
_22 = _20
_22 = _21
*z + 8 = _22
_23 = *x + 16
_24 = _23
_25 = *y + 16
_26 = _25
_27 = _24
_27 = _26
_28 = _27
_28 = &NONLOCAL
_29 = _28
*z + 16 = _29
derefaddrtmp(142) = &NULL
*z + 32 = derefaddrtmp(142)
derefaddrtmp(143) = &NULL
*z + 48 = derefaddrtmp(143)
derefaddrtmp(144) = &NULL
*z + 64 = derefaddrtmp(144)
derefaddrtmp(145) = &NULL
*z + 80 = derefaddrtmp(145)
locx__lsm.34_669 = locx
locx__lsm.35_651 = &NULL
locx__lsm.36_320 = locx
locx__lsm.37_664 = &NULL
locx__lsm.38_695 = locx
locx__lsm.39_321 = &NULL
locx__lsm.40_677 = locx
locx__lsm.41_112 = &NULL
z__exp_lsm.32_690 = *z + 16
z__exp_lsm.33_106 = &NULL
accum_654 = accum_653
accum_654 = &NONLOCAL
accum_655 = accum_653
accum_655 = accum_654
accum_666 = extra_bits$2_256
accum_666 = &NONLOCAL
_364 = extra_bits$3_327
accum_667 = accum_666
accum_667 = &NONLOCAL
accum_668 = accum_666
accum_668 = accum_667
accum_679 = extra_bits$1_234
accum_679 = &NONLOCAL
_363 = extra_bits$2_256
accum_680 = accum_679
accum_680 = &NONLOCAL
accum_681 = accum_679
accum_681 = accum_680
accum_692 = extra_bits$0_299
accum_692 = &NONLOCAL
_359 = extra_bits$1_234
accum_693 = accum_692
accum_693 = &NONLOCAL
accum_694 = accum_692
accum_694 = accum_693
_297 = extra_bits$0_299
_630 = *y + 32
accum_777 = *z + 80
accum_781 = accum_777
accum_781 = &NONLOCAL
_634 = *y + 48
accum_791 = *z + 80
accum_798 = accum_791
accum_798 = &NONLOCAL
_638 = *y + 64
accum_753 = *z + 80
accum_763 = accum_753
accum_763 = &NONLOCAL
_642 = *y + 80
accum_741 = *z + 80
accum_663 = accum_741
accum_663 = &NONLOCAL
_568 = *y + 80
accum_570 = accum_655
_571 = _568
accum_572 = accum_570
accum_572 = _571
_575 = accum_572
_575 = &NONLOCAL
_576 = _575
_577 = _576 + UNKNOWN
_578 = accum_655
_578 = _568
_584 = *y + 64
accum_586 = accum_668
_587 = _584
accum_588 = accum_586
accum_588 = _587
_589 = _577
accum_590 = accum_588
accum_590 = _589
_591 = accum_590
_591 = &NONLOCAL
_592 = _591
_593 = _592 + UNKNOWN
_594 = accum_590
_600 = *y + 48
accum_602 = accum_681
_603 = _600
accum_604 = accum_602
accum_604 = _603
_605 = _593
accum_606 = accum_604
accum_606 = _605
_607 = accum_606
_607 = &NONLOCAL
_608 = _607
_609 = _608 + UNKNOWN
_610 = accum_606
_616 = *y + 32
accum_618 = accum_694
_619 = _616
accum_620 = accum_618
accum_620 = _619
_621 = _609
accum_622 = accum_620
accum_622 = _621
_626 = accum_622
accum_639 = *z + 80
accum_188 = accum_639
accum_188 = &NONLOCAL
accum_522 = accum_188
accum_522 = &NONLOCAL
accum_523 = accum_663
accum_523 = accum_522
accum_523 = accum_781
accum_523 = accum_798
accum_523 = accum_763
accum_569 = accum_741
accum_569 = accum_639
accum_569 = accum_777
accum_569 = accum_791
accum_569 = accum_753
extra_bits$0_47 = accum_694
extra_bits$0_47 = _626
extra_bits$0_47 = accum_694
extra_bits$0_47 = accum_694
extra_bits$0_47 = accum_694
extra_bits$1_521 = accum_681
extra_bits$1_521 = _610
extra_bits$1_521 = accum_681
extra_bits$1_521 = accum_681
extra_bits$1_521 = accum_681
extra_bits$2_293 = accum_668
extra_bits$2_293 = _594
extra_bits$2_293 = accum_668
extra_bits$2_293 = accum_668
extra_bits$2_293 = accum_668
extra_bits$3_250 = accum_655
extra_bits$3_250 = _578
extra_bits$3_250 = accum_655
extra_bits$3_250 = accum_655
extra_bits$3_250 = accum_655
*z + 80 = accum_523
accum_532 = *z + 64
accum_534 = accum_532
accum_534 = &NONLOCAL
_274 = accum_569
accum_535 = accum_534
accum_535 = &NONLOCAL
accum_536 = accum_534
accum_536 = accum_535
*z + 64 = accum_536
accum_545 = *z + 48
accum_547 = accum_545
accum_547 = &NONLOCAL
_343 = accum_532
accum_548 = accum_547
accum_548 = &NONLOCAL
accum_549 = accum_547
accum_549 = accum_548
*z + 48 = accum_549
accum_560 = _519
accum_560 = &NONLOCAL
_342 = accum_545
accum_561 = accum_560
accum_561 = &NONLOCAL
accum_562 = accum_560
accum_562 = accum_561
*z + 32 = accum_562
_35 = z__exp_lsm.32_237
_36 = _35
_37 = _36
_37 = &NONLOCAL
_38 = _37
z__exp_lsm.32_762 = _38
z__exp_lsm.33_757 = &NONLOCAL
_39 = *z + 32
_40 = _39
locx__lsm.37_336 = locx__lsm.37_83
locx__lsm.36_319 = locx__lsm.36_89
locx__lsm.40_768 = locx__lsm.40_301
locx__lsm.34_799 = locx__lsm.34_324
locx__lsm.35_782 = locx__lsm.35_325
locx__lsm.38_771 = locx__lsm.38_582
locx__lsm.39_775 = locx__lsm.39_682
z__exp_lsm.33_784 = z__exp_lsm.33_757
z__exp_lsm.32_785 = z__exp_lsm.32_762
locx__lsm.41_793 = locx__lsm.41_767
*z + 16 = z__exp_lsm.32_785
locx = locx__lsm.34_799
locx = locx__lsm.36_319
locx = locx__lsm.38_771
locx = locx__lsm.40_768
_519 = _39
_519 = &NULL
extra_bits$0_299 = extra_bits$0_47
extra_bits$0_299 = &NULL
extra_bits$1_234 = extra_bits$1_521
extra_bits$1_234 = &NULL
extra_bits$2_256 = extra_bits$2_293
extra_bits$2_256 = &NULL
extra_bits$3_327 = extra_bits$3_250
extra_bits$3_327 = &NULL
z__exp_lsm.32_237 = z__exp_lsm.32_762
z__exp_lsm.32_237 = z__exp_lsm.32_690
locx__lsm.34_125 = locx__lsm.34_324
locx__lsm.34_125 = locx__lsm.34_669
locx__lsm.36_119 = locx__lsm.36_89
locx__lsm.36_119 = locx__lsm.36_320
locx__lsm.38_317 = locx__lsm.38_582
locx__lsm.38_317 = locx__lsm.38_695
locx__lsm.40_518 = locx__lsm.40_301
locx__lsm.40_518 = locx__lsm.40_677
accum_703 = locx__lsm.34_125
accum_705 = accum_703
accum_705 = &NONLOCAL
locx__lsm.34_324 = accum_705
locx__lsm.35_325 = &NONLOCAL
accum_716 = locx__lsm.36_119
accum_718 = accum_716
accum_718 = &NONLOCAL
_711 = accum_703
accum_719 = accum_718
accum_719 = &NONLOCAL
accum_720 = accum_718
accum_720 = accum_719
locx__lsm.36_89 = accum_720
locx__lsm.37_83 = &NONLOCAL
accum_729 = locx__lsm.38_317
accum_731 = accum_729
accum_731 = &NONLOCAL
_707 = accum_716
accum_732 = accum_731
accum_732 = &NONLOCAL
accum_733 = accum_731
accum_733 = accum_732
locx__lsm.38_582 = accum_733
locx__lsm.39_682 = &NONLOCAL
accum_742 = locx__lsm.40_518
accum_744 = accum_742
accum_744 = &NONLOCAL
_18 = accum_729
accum_745 = accum_744
accum_745 = &NONLOCAL
accum_746 = accum_744
accum_746 = accum_745
locx__lsm.40_301 = accum_746
locx__lsm.41_767 = &NONLOCAL
accum_653 = extra_bits$3_327
accum_653 = &NONLOCAL
_290 = accum_742
i_598 = i_241
i_598 = &NULL
_238 = *x + UNKNOWN
_239 = *y + UNKNOWN
doubledereftmp(300) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(300)
doubledereftmp(301) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(301)
i_241 = i_598
i_241 = &NONLOCAL
doubledereftmp(302) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(302)
_170 = *z
_171 = _170
_171 = &NONLOCAL
_249 = z + UNKNOWN
i_597 = i_258
i_597 = &NULL
n_583 = n_257
n_583 = &NULL
_251 = i_597
_252 = _251
_252 = &NONLOCAL
_253 = _249 + UNKNOWN
_254 = *_253
_255 = _254
n_257 = _255
n_257 = n_583
i_258 = i_597
i_258 = &NONLOCAL
n_19 = n_257
ESCAPED = &STRING
_267 = _341
_269 = _267
_269 = &NONLOCAL
_270 = _269
*z + 16 = _270
_273 = *z
_292 = accum_398
_292 = &NONLOCAL
*z + 80 = _292
accum_355 = *z + 32
_356 = accum_355 + UNKNOWN
accum_357 = accum_355
accum_357 = &NONLOCAL
*z + 32 = accum_357
accum_368 = *z + 48
_369 = accum_368 + UNKNOWN
accum_370 = accum_368
accum_370 = &NONLOCAL
accum_371 = accum_370
accum_371 = &NONLOCAL
accum_372 = accum_370
accum_372 = accum_371
*z + 48 = accum_372
accum_381 = *z + 64
_382 = accum_381 + UNKNOWN
accum_383 = accum_381
accum_383 = &NONLOCAL
accum_384 = accum_383
accum_384 = &NONLOCAL
accum_385 = accum_383
accum_385 = accum_384
*z + 64 = accum_385
accum_394 = *z + 80
_395 = accum_394 + UNKNOWN
accum_396 = accum_394
accum_396 = &NONLOCAL
accum_397 = accum_396
accum_397 = &NONLOCAL
accum_398 = accum_396
accum_398 = accum_397
*z + 80 = accum_398
_246 = *z
_247 = *z + 80
_248 = _247 + UNKNOWN
*z + 80 = _248
_341 = *z + 16
_344 = _341
_345 = _344
_345 = &NONLOCAL
exponent_difference_348 = _345

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"x"[label="x = { 5 }"];
"y"[label="y = { 5 }"];
"z"[label="z = { 5 }"];
"_1";
"_2";
"_3"[label="_3 = { 5 }"];
"_4";
"_5";
"_6";
"derefaddrtmp(17)"[label="derefaddrtmp(17) = { 5 }"];
"derefaddrtmp(18)"[label="derefaddrtmp(18) = { 5 }"];
"derefaddrtmp(19)"[label="derefaddrtmp(19) = { 5 }"];
"derefaddrtmp(20)"[label="derefaddrtmp(20) = { 5 }"];
"derefaddrtmp(21)"[label="derefaddrtmp(21) = { 1 }"];
"derefaddrtmp(22)"[label="derefaddrtmp(22) = { 1 }"];
"derefaddrtmp(23)"[label="derefaddrtmp(23) = { 1 }"];
"_7";
"i_316"[label="i_316 = { 1 5 }"];
"n_233"[label="n_233 = { 1 }"];
"_71";
"_72"[label="_72 = { 5 }"];
"_73";
"_74";
"_75";
"n_335";
"derefaddrtmp(35)"[label="derefaddrtmp(35) = { 5 }"];
"derefaddrtmp(36)"[label="derefaddrtmp(36) = { 5 }"];
"derefaddrtmp(37)"[label="derefaddrtmp(37) = { 5 }"];
"derefaddrtmp(38)"[label="derefaddrtmp(38) = { 5 }"];
"derefaddrtmp(39)"[label="derefaddrtmp(39) = { 1 }"];
"derefaddrtmp(40)"[label="derefaddrtmp(40) = { 1 }"];
"derefaddrtmp(41)"[label="derefaddrtmp(41) = { 1 }"];
"_8";
"_9";
"_10";
"derefaddrtmp(45)"[label="derefaddrtmp(45) = { 1 }"];
"derefaddrtmp(46)"[label="derefaddrtmp(46) = { 5 }"];
"derefaddrtmp(47)"[label="derefaddrtmp(47) = { 1 }"];
"derefaddrtmp(48)"[label="derefaddrtmp(48) = { 1 }"];
"derefaddrtmp(49)"[label="derefaddrtmp(49) = { 1 }"];
"derefaddrtmp(50)"[label="derefaddrtmp(50) = { 1 }"];
"_11";
"i_45"[label="i_45 = { 1 5 }"];
"n_43"[label="n_43 = { 1 }"];
"_84";
"_85"[label="_85 = { 5 }"];
"_86";
"_87";
"_88";
"n_315";
"derefaddrtmp(62)"[label="derefaddrtmp(62) = { 5 }"];
"derefaddrtmp(63)"[label="derefaddrtmp(63) = { 5 }"];
"derefaddrtmp(64)"[label="derefaddrtmp(64) = { 5 }"];
"derefaddrtmp(65)"[label="derefaddrtmp(65) = { 5 }"];
"derefaddrtmp(66)"[label="derefaddrtmp(66) = { 1 }"];
"derefaddrtmp(67)"[label="derefaddrtmp(67) = { 1 }"];
"derefaddrtmp(68)"[label="derefaddrtmp(68) = { 1 }"];
"derefaddrtmp(69)"[label="derefaddrtmp(69) = { 5 }"];
"derefaddrtmp(70)"[label="derefaddrtmp(70) = { 1 }"];
"derefaddrtmp(71)"[label="derefaddrtmp(71) = { 5 }"];
"derefaddrtmp(72)"[label="derefaddrtmp(72) = { 1 }"];
"derefaddrtmp(73)"[label="derefaddrtmp(73) = { 1 }"];
"derefaddrtmp(74)"[label="derefaddrtmp(74) = { 1 }"];
"derefaddrtmp(75)"[label="derefaddrtmp(75) = { 1 }"];
"_12";
"_13";
"_14";
"doubledereftmp(79)";
"doubledereftmp(80)";
"locx"[label="locx = { 5 }"];
"_774";
"_783";
"_647";
"_792";
"_646";
"_801";
"_712";
"_16";
"i_615"[label="i_615 = { 1 5 }"];
"n_614"[label="n_614 = { 1 }"];
"_107";
"_108"[label="_108 = { 5 }"];
"_109";
"_110";
"_111";
"n_300";
"derefaddrtmp(100)"[label="derefaddrtmp(100) = { 5 }"];
"derefaddrtmp(101)"[label="derefaddrtmp(101) = { 5 }"];
"derefaddrtmp(102)"[label="derefaddrtmp(102) = { 5 }"];
"derefaddrtmp(103)"[label="derefaddrtmp(103) = { 5 }"];
"derefaddrtmp(104)"[label="derefaddrtmp(104) = { 1 }"];
"derefaddrtmp(105)"[label="derefaddrtmp(105) = { 1 }"];
"derefaddrtmp(106)"[label="derefaddrtmp(106) = { 1 }"];
"derefaddrtmp(107)"[label="derefaddrtmp(107) = { 1 }"];
"derefaddrtmp(108)"[label="derefaddrtmp(108) = { 1 }"];
"derefaddrtmp(109)"[label="derefaddrtmp(109) = { 5 }"];
"derefaddrtmp(110)"[label="derefaddrtmp(110) = { 1 }"];
"derefaddrtmp(111)"[label="derefaddrtmp(111) = { 1 }"];
"derefaddrtmp(112)"[label="derefaddrtmp(112) = { 1 }"];
"derefaddrtmp(113)"[label="derefaddrtmp(113) = { 1 }"];
"_17";
"i_613"[label="i_613 = { 1 5 }"];
"n_599"[label="n_599 = { 1 }"];
"_120";
"_121"[label="_121 = { 5 }"];
"_122";
"_123";
"_124";
"n_698";
"derefaddrtmp(125)"[label="derefaddrtmp(125) = { 5 }"];
"derefaddrtmp(126)"[label="derefaddrtmp(126) = { 1 }"];
"derefaddrtmp(127)"[label="derefaddrtmp(127) = { 5 }"];
"derefaddrtmp(128)"[label="derefaddrtmp(128) = { 1 }"];
"derefaddrtmp(129)"[label="derefaddrtmp(129) = { 1 }"];
"derefaddrtmp(130)"[label="derefaddrtmp(130) = { 1 }"];
"derefaddrtmp(131)"[label="derefaddrtmp(131) = { 1 }"];
"_20";
"_21";
"_22";
"_23";
"_24";
"_25";
"_26";
"_27";
"_28"[label="_28 = { 5 }"];
"_29";
"derefaddrtmp(142)"[label="derefaddrtmp(142) = { 1 }"];
"derefaddrtmp(143)"[label="derefaddrtmp(143) = { 1 }"];
"derefaddrtmp(144)"[label="derefaddrtmp(144) = { 1 }"];
"derefaddrtmp(145)"[label="derefaddrtmp(145) = { 1 }"];
"locx__lsm.35_651"[label="locx__lsm.35_651 = { 1 }"];
"locx__lsm.37_664"[label="locx__lsm.37_664 = { 1 }"];
"locx__lsm.39_321"[label="locx__lsm.39_321 = { 1 }"];
"locx__lsm.41_112"[label="locx__lsm.41_112 = { 1 }"];
"z__exp_lsm.32_690";
"z__exp_lsm.33_106"[label="z__exp_lsm.33_106 = { 1 }"];
"accum_654"[label="accum_654 = { 1 5 }"];
"accum_666"[label="accum_666 = { 1 5 }"];
"_364";
"accum_679"[label="accum_679 = { 1 5 }"];
"_363";
"accum_692"[label="accum_692 = { 1 5 }"];
"_359";
"_297";
"_630";
"accum_777";
"accum_781"[label="accum_781 = { 5 }"];
"_634";
"accum_791";
"accum_798"[label="accum_798 = { 5 }"];
"_638";
"accum_753";
"accum_763"[label="accum_763 = { 5 }"];
"_642";
"accum_741";
"accum_663"[label="accum_663 = { 5 }"];
"_568";
"accum_570";
"_571";
"accum_572";
"_575"[label="_575 = { 5 }"];
"_576";
"_577";
"_584";
"_587";
"_589";
"_591"[label="_591 = { 5 }"];
"_592";
"_593";
"_600";
"_603";
"_605";
"_607"[label="_607 = { 5 }"];
"_608";
"_609";
"_616";
"_619";
"_621";
"accum_639";
"accum_188"[label="accum_188 = { 5 }"];
"accum_522"[label="accum_522 = { 5 }"];
"accum_523";
"accum_569";
"accum_532";
"accum_534"[label="accum_534 = { 5 }"];
"_274";
"accum_535"[label="accum_535 = { 5 }"];
"accum_536";
"accum_545";
"accum_547"[label="accum_547 = { 5 }"];
"_343";
"accum_548"[label="accum_548 = { 5 }"];
"accum_549";
"accum_560"[label="accum_560 = { 5 }"];
"_519"[label="_519 = { 1 }"];
"_342";
"accum_561"[label="accum_561 = { 5 }"];
"accum_562";
"_35"[label="_35 = { 5 }"];
"z__exp_lsm.33_757"[label="z__exp_lsm.33_757 = { 5 }"];
"_39";
"_40";
"locx__lsm.37_336";
"locx__lsm.37_83"[label="locx__lsm.37_83 = { 5 }"];
"locx__lsm.35_782";
"locx__lsm.35_325"[label="locx__lsm.35_325 = { 5 }"];
"locx__lsm.39_775";
"locx__lsm.39_682"[label="locx__lsm.39_682 = { 5 }"];
"z__exp_lsm.33_784";
"z__exp_lsm.32_785";
"locx__lsm.41_793";
"locx__lsm.41_767"[label="locx__lsm.41_767 = { 5 }"];
"_711";
"_707";
"_18";
"_290";
"i_598"[label="i_598 = { 1 5 }"];
"_238";
"_239";
"doubledereftmp(300)";
"doubledereftmp(301)";
"doubledereftmp(302)";
"_170";
"_171"[label="_171 = { 5 }"];
"_249";
"i_597"[label="i_597 = { 1 5 }"];
"n_583"[label="n_583 = { 1 }"];
"_251";
"_252"[label="_252 = { 5 }"];
"_253";
"_254";
"_255";
"n_19";
"puts";
"_267";
"_341";
"_269"[label="_269 = { 5 }"];
"_270";
"_273";
"_292"[label="_292 = { 5 }"];
"accum_398";
"accum_355";
"_356";
"accum_357"[label="accum_357 = { 5 }"];
"accum_368";
"_369";
"accum_370"[label="accum_370 = { 5 }"];
"accum_371"[label="accum_371 = { 5 }"];
"accum_372";
"accum_381";
"_382";
"accum_383"[label="accum_383 = { 5 }"];
"accum_384"[label="accum_384 = { 5 }"];
"accum_385";
"accum_394";
"_395";
"accum_396"[label="accum_396 = { 5 }"];
"accum_397"[label="accum_397 = { 5 }"];
"_246";
"_247";
"_248";
"extra_bits";
"_344";
"_345"[label="_345 = { 5 }"];
"exponent_difference_348";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*x";
"*y";
"*z";
"*_1";
"*_2";
"*_3";
"*_4";
"*_5";
"*_6";
"*derefaddrtmp(17)";
"*derefaddrtmp(18)";
"*derefaddrtmp(19)";
"*derefaddrtmp(20)";
"*derefaddrtmp(21)";
"*derefaddrtmp(22)";
"*derefaddrtmp(23)";
"*_7";
"*i_316";
"*i_78";
"*n_233";
"*n_77";
"*_71";
"*_72";
"*_73";
"*_74";
"*_75";
"*n_335";
"*derefaddrtmp(35)";
"*derefaddrtmp(36)";
"*derefaddrtmp(37)";
"*derefaddrtmp(38)";
"*derefaddrtmp(39)";
"*derefaddrtmp(40)";
"*derefaddrtmp(41)";
"*_8";
"*_9";
"*_10";
"*derefaddrtmp(45)";
"*derefaddrtmp(46)";
"*derefaddrtmp(47)";
"*derefaddrtmp(48)";
"*derefaddrtmp(49)";
"*derefaddrtmp(50)";
"*_11";
"*i_45";
"*i_91";
"*n_43";
"*n_90";
"*_84";
"*_85";
"*_86";
"*_87";
"*_88";
"*n_315";
"*derefaddrtmp(62)";
"*derefaddrtmp(63)";
"*derefaddrtmp(64)";
"*derefaddrtmp(65)";
"*derefaddrtmp(66)";
"*derefaddrtmp(67)";
"*derefaddrtmp(68)";
"*derefaddrtmp(69)";
"*derefaddrtmp(70)";
"*derefaddrtmp(71)";
"*derefaddrtmp(72)";
"*derefaddrtmp(73)";
"*derefaddrtmp(74)";
"*derefaddrtmp(75)";
"*_12";
"*_13";
"*_14";
"*doubledereftmp(79)";
"*doubledereftmp(80)";
"*locx";
"*_774";
"*_783";
"*_647";
"*_792";
"*_646";
"*_801";
"*_712";
"*_16";
"*i_615";
"*i_114";
"*n_614";
"*n_113";
"*_107";
"*_108";
"*_109";
"*_110";
"*_111";
"*n_300";
"*derefaddrtmp(100)";
"*derefaddrtmp(101)";
"*derefaddrtmp(102)";
"*derefaddrtmp(103)";
"*derefaddrtmp(104)";
"*derefaddrtmp(105)";
"*derefaddrtmp(106)";
"*derefaddrtmp(107)";
"*derefaddrtmp(108)";
"*derefaddrtmp(109)";
"*derefaddrtmp(110)";
"*derefaddrtmp(111)";
"*derefaddrtmp(112)";
"*derefaddrtmp(113)";
"*_17";
"*i_613";
"*i_127";
"*n_599";
"*n_126";
"*_120";
"*_121";
"*_122";
"*_123";
"*_124";
"*n_698";
"*derefaddrtmp(125)";
"*derefaddrtmp(126)";
"*derefaddrtmp(127)";
"*derefaddrtmp(128)";
"*derefaddrtmp(129)";
"*derefaddrtmp(130)";
"*derefaddrtmp(131)";
"*_20";
"*_21";
"*_22";
"*_23";
"*_24";
"*_25";
"*_26";
"*_27";
"*_28";
"*_29";
"*derefaddrtmp(142)";
"*derefaddrtmp(143)";
"*derefaddrtmp(144)";
"*derefaddrtmp(145)";
"*locx__lsm.34_669";
"*locx__lsm.35_651";
"*locx__lsm.36_320";
"*locx__lsm.37_664";
"*locx__lsm.38_695";
"*locx__lsm.39_321";
"*locx__lsm.40_677";
"*locx__lsm.41_112";
"*z__exp_lsm.32_690";
"*z__exp_lsm.33_106";
"*accum_654";
"*accum_653";
"*accum_655";
"*accum_666";
"*extra_bits$2_256";
"*_364";
"*extra_bits$3_327";
"*accum_667";
"*accum_668";
"*accum_679";
"*extra_bits$1_234";
"*_363";
"*accum_680";
"*accum_681";
"*accum_692";
"*extra_bits$0_299";
"*_359";
"*accum_693";
"*accum_694";
"*_297";
"*_630";
"*accum_777";
"*accum_781";
"*_634";
"*accum_791";
"*accum_798";
"*_638";
"*accum_753";
"*accum_763";
"*_642";
"*accum_741";
"*accum_663";
"*_568";
"*accum_570";
"*_571";
"*accum_572";
"*_575";
"*_576";
"*_577";
"*_578";
"*_584";
"*accum_586";
"*_587";
"*accum_588";
"*_589";
"*accum_590";
"*_591";
"*_592";
"*_593";
"*_594";
"*_600";
"*accum_602";
"*_603";
"*accum_604";
"*_605";
"*accum_606";
"*_607";
"*_608";
"*_609";
"*_610";
"*_616";
"*accum_618";
"*_619";
"*accum_620";
"*_621";
"*accum_622";
"*_626";
"*accum_639";
"*accum_188";
"*accum_522";
"*accum_523";
"*accum_569";
"*extra_bits$0_47";
"*extra_bits$1_521";
"*extra_bits$2_293";
"*extra_bits$3_250";
"*accum_532";
"*accum_534";
"*_274";
"*accum_535";
"*accum_536";
"*accum_545";
"*accum_547";
"*_343";
"*accum_548";
"*accum_549";
"*accum_560";
"*_519";
"*_342";
"*accum_561";
"*accum_562";
"*_35";
"*z__exp_lsm.32_237";
"*_36";
"*_37";
"*_38";
"*z__exp_lsm.32_762";
"*z__exp_lsm.33_757";
"*_39";
"*_40";
"*locx__lsm.37_336";
"*locx__lsm.37_83";
"*locx__lsm.36_319";
"*locx__lsm.36_89";
"*locx__lsm.40_768";
"*locx__lsm.40_301";
"*locx__lsm.34_799";
"*locx__lsm.34_324";
"*locx__lsm.35_782";
"*locx__lsm.35_325";
"*locx__lsm.38_771";
"*locx__lsm.38_582";
"*locx__lsm.39_775";
"*locx__lsm.39_682";
"*z__exp_lsm.33_784";
"*z__exp_lsm.32_785";
"*locx__lsm.41_793";
"*locx__lsm.41_767";
"*locx__lsm.34_125";
"*locx__lsm.36_119";
"*locx__lsm.38_317";
"*locx__lsm.40_518";
"*accum_703";
"*accum_705";
"*accum_716";
"*accum_718";
"*_711";
"*accum_719";
"*accum_720";
"*accum_729";
"*accum_731";
"*_707";
"*accum_732";
"*accum_733";
"*accum_742";
"*accum_744";
"*_18";
"*accum_745";
"*accum_746";
"*_290";
"*i_598";
"*i_241";
"*_238";
"*_239";
"*doubledereftmp(300)";
"*doubledereftmp(301)";
"*doubledereftmp(302)";
"*_170";
"*_171";
"*_249";
"*i_597";
"*i_258";
"*n_583";
"*n_257";
"*_251";
"*_252";
"*_253";
"*_254";
"*_255";
"*n_19";
"*puts";
"*_267";
"*_341";
"*_269";
"*_270";
"*_273";
"*_292";
"*accum_398";
"*accum_355";
"*_356";
"*accum_357";
"*accum_368";
"*_369";
"*accum_370";
"*accum_371";
"*accum_372";
"*accum_381";
"*_382";
"*accum_383";
"*accum_384";
"*accum_385";
"*accum_394";
"*_395";
"*accum_396";
"*accum_397";
"*_246";
"*_247";
"*_248";
"*extra_bits";
"*_344";
"*_345";
"*exponent_difference_348";

  // Edges in the constraint graph:
"*ESCAPED" -> "ESCAPED";
"*x" -> "_1";
"_1" -> "_2";
"_2" -> "_3";
"*y" -> "_4";
"_4" -> "_5";
"_3" -> "_6";
"_5" -> "_6";
"i_316" -> "i_316";
"i_316" -> "i_316";
"n_233" -> "n_233";
"n_233" -> "n_233";
"_75" -> "n_233";
"i_316" -> "_71";
"_71" -> "_72";
"*_73" -> "_74";
"_74" -> "_75";
"n_233" -> "n_335";
"_8" -> "_10";
"_9" -> "_10";
"i_45" -> "i_45";
"i_45" -> "i_45";
"n_43" -> "n_43";
"n_43" -> "n_43";
"_88" -> "n_43";
"i_45" -> "_84";
"_84" -> "_85";
"*_86" -> "_87";
"_87" -> "_88";
"n_43" -> "n_315";
"_12" -> "_14";
"_13" -> "_14";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "_774";
"locx" -> "_783";
"_774" -> "_647";
"_783" -> "_647";
"locx" -> "_792";
"_647" -> "_646";
"_792" -> "_646";
"locx" -> "_801";
"_646" -> "_712";
"_801" -> "_712";
"i_615" -> "i_615";
"i_615" -> "i_615";
"n_614" -> "n_614";
"n_614" -> "n_614";
"_111" -> "n_614";
"i_615" -> "_107";
"_107" -> "_108";
"*_109" -> "_110";
"_110" -> "_111";
"n_614" -> "n_300";
"i_613" -> "i_613";
"i_613" -> "i_613";
"n_599" -> "n_599";
"n_599" -> "n_599";
"_124" -> "n_599";
"i_613" -> "_120";
"_120" -> "_121";
"*_122" -> "_123";
"_123" -> "_124";
"n_599" -> "n_698";
"_20" -> "_22";
"_21" -> "_22";
"_23" -> "_24";
"_25" -> "_26";
"_24" -> "_27";
"_26" -> "_27";
"_27" -> "_28";
"_28" -> "_29";
"accum_654" -> "accum_654";
"accum_654" -> "accum_654";
"accum_654" -> "accum_654";
"accum_654" -> "accum_654";
"_568" -> "accum_654";
"accum_654" -> "accum_654";
"accum_654" -> "accum_654";
"accum_666" -> "accum_666";
"accum_666" -> "accum_666";
"accum_666" -> "accum_666";
"accum_666" -> "accum_666";
"accum_666" -> "accum_666";
"_587" -> "accum_666";
"accum_666" -> "accum_666";
"_589" -> "accum_666";
"accum_666" -> "accum_666";
"accum_666" -> "accum_666";
"accum_666" -> "accum_666";
"accum_654" -> "_364";
"accum_679" -> "accum_679";
"accum_679" -> "accum_679";
"accum_679" -> "accum_679";
"accum_679" -> "accum_679";
"accum_679" -> "accum_679";
"_603" -> "accum_679";
"accum_679" -> "accum_679";
"_605" -> "accum_679";
"accum_679" -> "accum_679";
"accum_679" -> "accum_679";
"accum_679" -> "accum_679";
"accum_666" -> "_363";
"accum_692" -> "accum_692";
"accum_692" -> "accum_692";
"accum_692" -> "accum_692";
"accum_692" -> "accum_692";
"accum_692" -> "accum_692";
"_619" -> "accum_692";
"accum_692" -> "accum_692";
"_621" -> "accum_692";
"accum_692" -> "accum_692";
"accum_692" -> "accum_692";
"accum_692" -> "accum_692";
"accum_679" -> "_359";
"accum_692" -> "_297";
"accum_777" -> "accum_781";
"accum_791" -> "accum_798";
"accum_753" -> "accum_763";
"accum_741" -> "accum_663";
"accum_654" -> "accum_570";
"_568" -> "_571";
"accum_570" -> "accum_572";
"_571" -> "accum_572";
"accum_572" -> "_575";
"_575" -> "_576";
"_584" -> "_587";
"_577" -> "_589";
"accum_666" -> "_591";
"_591" -> "_592";
"_600" -> "_603";
"_593" -> "_605";
"accum_679" -> "_607";
"_607" -> "_608";
"_616" -> "_619";
"_609" -> "_621";
"accum_639" -> "accum_188";
"accum_188" -> "accum_522";
"accum_781" -> "accum_523";
"accum_798" -> "accum_523";
"accum_763" -> "accum_523";
"accum_663" -> "accum_523";
"accum_522" -> "accum_523";
"accum_777" -> "accum_569";
"accum_791" -> "accum_569";
"accum_753" -> "accum_569";
"accum_741" -> "accum_569";
"accum_639" -> "accum_569";
"accum_532" -> "accum_534";
"accum_569" -> "_274";
"accum_534" -> "accum_535";
"accum_534" -> "accum_536";
"accum_535" -> "accum_536";
"accum_545" -> "accum_547";
"accum_532" -> "_343";
"accum_547" -> "accum_548";
"accum_547" -> "accum_549";
"accum_548" -> "accum_549";
"_519" -> "accum_560";
"_39" -> "_519";
"accum_545" -> "_342";
"accum_560" -> "accum_561";
"accum_560" -> "accum_562";
"accum_561" -> "accum_562";
"z__exp_lsm.32_690" -> "_35";
"_35" -> "_35";
"_35" -> "_35";
"_35" -> "_35";
"_35" -> "_35";
"_35" -> "_35";
"_35" -> "_35";
"_39" -> "_40";
"locx__lsm.37_83" -> "locx__lsm.37_336";
"locx__lsm.35_325" -> "locx__lsm.35_782";
"locx__lsm.39_682" -> "locx__lsm.39_775";
"z__exp_lsm.33_757" -> "z__exp_lsm.33_784";
"_35" -> "z__exp_lsm.32_785";
"locx__lsm.41_767" -> "locx__lsm.41_793";
"locx" -> "_711";
"locx" -> "_707";
"locx" -> "_18";
"locx" -> "_290";
"i_598" -> "i_598";
"i_598" -> "i_598";
"*z" -> "_170";
"_170" -> "_171";
"i_597" -> "i_597";
"i_597" -> "i_597";
"n_583" -> "n_583";
"n_583" -> "n_583";
"_255" -> "n_583";
"i_597" -> "_251";
"_251" -> "_252";
"*_253" -> "_254";
"_254" -> "_255";
"n_583" -> "n_19";
"_341" -> "_267";
"_267" -> "_269";
"_269" -> "_270";
"*z" -> "_273";
"accum_398" -> "_292";
"accum_396" -> "accum_398";
"accum_397" -> "accum_398";
"accum_355" -> "accum_357";
"accum_368" -> "accum_370";
"accum_370" -> "accum_371";
"accum_370" -> "accum_372";
"accum_371" -> "accum_372";
"accum_381" -> "accum_383";
"accum_383" -> "accum_384";
"accum_383" -> "accum_385";
"accum_384" -> "accum_385";
"accum_394" -> "accum_396";
"accum_396" -> "accum_397";
"*z" -> "_246";
"_341" -> "_344";
"_344" -> "_345";
"_345" -> "exponent_difference_348";
"NONLOCAL" -> "*ESCAPED";
"_1" -> "*z";
"derefaddrtmp(17)" -> "*z";
"derefaddrtmp(35)" -> "*z";
"derefaddrtmp(45)" -> "*z";
"derefaddrtmp(62)" -> "*z";
"derefaddrtmp(69)" -> "*z";
"derefaddrtmp(100)" -> "*z";
"derefaddrtmp(107)" -> "*z";
"derefaddrtmp(125)" -> "*z";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"x" [label="\N\n_1 = *x\l_4 = *x\l_7 = x + UNKNOWN\l_8 = *x + 8\l_9 = *x + 8\l_11 = x + UNKNOWN\l_12 = *x + 8\l_13 = *x + 8\ldoubledereftmp(79) = *x + UNKNOWN\ldoubledereftmp(80) = *x + UNKNOWN\llocx = *x + UNKNOWN\l_16 = x + UNKNOWN\l_17 = x + UNKNOWN\l_20 = *x + 8\l_21 = *x + 8\l_23 = *x + 16\l_25 = *x + 16\lz__exp_lsm.32_690 = *x + 16\l_630 = *x + 32\laccum_777 = *x + 80\l_634 = *x + 48\laccum_791 = *x + 80\l_638 = *x + 64\laccum_753 = *x + 80\l_642 = *x + 80\laccum_741 = *x + 80\l_568 = *x + 80\l_584 = *x + 64\l_600 = *x + 48\l_616 = *x + 32\laccum_639 = *x + 80\laccum_532 = *x + 64\laccum_545 = *x + 48\l_39 = *x + 32\l_238 = *x + UNKNOWN\l_239 = *x + UNKNOWN\ldoubledereftmp(300) = *x + UNKNOWN\ldoubledereftmp(301) = *x + UNKNOWN\ldoubledereftmp(302) = *x + UNKNOWN\l_170 = *x\l_249 = x + UNKNOWN\l_267 = *x + 16\laccum_355 = *x + 32\laccum_368 = *x + 48\laccum_381 = *x + 64\laccum_394 = *x + 80\l_247 = *x + 80\l*x + UNKNOWN = doubledereftmp(79)\l*x + UNKNOWN = doubledereftmp(80)\l*x + UNKNOWN = doubledereftmp(300)\l*x + UNKNOWN = doubledereftmp(301)\l*x + UNKNOWN = doubledereftmp(302)\l*x = x\l*x = _1\l*x = derefaddrtmp(21)\l*x + 8 = x\l*x + 8 = derefaddrtmp(21)\l*x + 8 = _10\l*x + 8 = _14\l*x + 8 = _22\l*x + 16 = x\l*x + 16 = _28\l*x + 16 = _35\l*x + 16 = _269\l*x + 32 = x\l*x + 32 = derefaddrtmp(21)\l*x + 32 = accum_560\l*x + 32 = accum_357\l*x + 48 = derefaddrtmp(21)\l*x + 48 = accum_547\l*x + 48 = accum_370\l*x + 64 = derefaddrtmp(21)\l*x + 64 = accum_534\l*x + 64 = accum_383\l*x + 80 = derefaddrtmp(21)\l*x + 80 = accum_523\l*x + 80 = _292\l*x + 80 = _248\l"];
"_1";
"_3";
"_4";
"_6";
"derefaddrtmp(21)";
"_7" [label="\N\n_73 = _7 + UNKNOWN\l"];
"i_316";
"n_233";
"_73" [label="\N\n_74 = *_73\l"];
"_74";
"_8";
"_9";
"_10";
"_11" [label="\N\n_86 = _11 + UNKNOWN\l"];
"n_43";
"_86" [label="\N\n_87 = *_86\l"];
"_87";
"_12";
"_13";
"_14";
"doubledereftmp(79)";
"doubledereftmp(80)";
"locx";
"_16" [label="\N\n_109 = _16 + UNKNOWN\l"];
"n_614";
"_109" [label="\N\n_110 = *_109\l"];
"_110";
"_17" [label="\N\n_122 = _17 + UNKNOWN\l"];
"n_599";
"_122" [label="\N\n_123 = *_122\l"];
"_123";
"_20";
"_21";
"_22";
"_23";
"_25";
"_27";
"_28";
"z__exp_lsm.32_690";
"accum_654" [label="\N\n_577 = accum_654 + UNKNOWN\l"];
"accum_666" [label="\N\n_593 = accum_666 + UNKNOWN\l"];
"accum_679" [label="\N\n_609 = accum_679 + UNKNOWN\l"];
"accum_692";
"_630";
"accum_777";
"accum_781";
"_634";
"accum_791";
"accum_798";
"_638";
"accum_753";
"accum_763";
"_642";
"accum_741";
"accum_663";
"_568";
"_577";
"_584";
"_593";
"_600";
"_609";
"_616";
"accum_639";
"accum_188";
"accum_523";
"accum_569";
"accum_532";
"accum_534";
"accum_545";
"accum_547";
"accum_560";
"_519";
"_35";
"_39";
"_238";
"_239";
"doubledereftmp(300)";
"doubledereftmp(301)";
"doubledereftmp(302)";
"_170";
"_249" [label="\N\n_253 = _249 + UNKNOWN\l"];
"n_583";
"_253" [label="\N\n_254 = *_253\l"];
"_254";
"puts";
"_267";
"_269";
"_292";
"accum_355" [label="\N\n_356 = accum_355 + UNKNOWN\l"];
"_356";
"accum_357";
"accum_368" [label="\N\n_369 = accum_368 + UNKNOWN\l"];
"_369";
"accum_370";
"accum_381" [label="\N\n_382 = accum_381 + UNKNOWN\l"];
"_382";
"accum_383";
"accum_394" [label="\N\n_395 = accum_394 + UNKNOWN\l"];
"_395";
"_247" [label="\N\n_248 = _247 + UNKNOWN\l"];
"_248";
"extra_bits";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_7";
"STOREDANYTHING" -> "_73";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_11";
"STOREDANYTHING" -> "_86";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_13";
"STOREDANYTHING" -> "doubledereftmp(79)";
"STOREDANYTHING" -> "doubledereftmp(80)";
"STOREDANYTHING" -> "locx";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_109";
"STOREDANYTHING" -> "_17";
"STOREDANYTHING" -> "_122";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_21";
"STOREDANYTHING" -> "_23";
"STOREDANYTHING" -> "_25";
"STOREDANYTHING" -> "z__exp_lsm.32_690";
"STOREDANYTHING" -> "_630";
"STOREDANYTHING" -> "accum_777";
"STOREDANYTHING" -> "_634";
"STOREDANYTHING" -> "accum_791";
"STOREDANYTHING" -> "_638";
"STOREDANYTHING" -> "accum_753";
"STOREDANYTHING" -> "_642";
"STOREDANYTHING" -> "accum_741";
"STOREDANYTHING" -> "_568";
"STOREDANYTHING" -> "_577";
"STOREDANYTHING" -> "_584";
"STOREDANYTHING" -> "_593";
"STOREDANYTHING" -> "_600";
"STOREDANYTHING" -> "_609";
"STOREDANYTHING" -> "_616";
"STOREDANYTHING" -> "accum_639";
"STOREDANYTHING" -> "accum_532";
"STOREDANYTHING" -> "accum_545";
"STOREDANYTHING" -> "_39";
"STOREDANYTHING" -> "_238";
"STOREDANYTHING" -> "_239";
"STOREDANYTHING" -> "doubledereftmp(300)";
"STOREDANYTHING" -> "doubledereftmp(301)";
"STOREDANYTHING" -> "doubledereftmp(302)";
"STOREDANYTHING" -> "_249";
"STOREDANYTHING" -> "_253";
"STOREDANYTHING" -> "_267";
"STOREDANYTHING" -> "accum_355";
"STOREDANYTHING" -> "_356";
"STOREDANYTHING" -> "accum_368";
"STOREDANYTHING" -> "_369";
"STOREDANYTHING" -> "accum_381";
"STOREDANYTHING" -> "_382";
"STOREDANYTHING" -> "accum_394";
"STOREDANYTHING" -> "_395";
"STOREDANYTHING" -> "_247";
"STOREDANYTHING" -> "_248";
"_1" -> "_3";
"_3" -> "_6";
"_4" -> "_6";
"_74" -> "n_233";
"_8" -> "_10";
"_9" -> "_10";
"_87" -> "n_43";
"_12" -> "_14";
"_13" -> "_14";
"_110" -> "n_614";
"_123" -> "n_599";
"_20" -> "_22";
"_21" -> "_22";
"_23" -> "_27";
"_25" -> "_27";
"_27" -> "_28";
"z__exp_lsm.32_690" -> "_35";
"accum_777" -> "accum_781";
"accum_777" -> "accum_569";
"accum_781" -> "accum_523";
"accum_791" -> "accum_798";
"accum_791" -> "accum_569";
"accum_798" -> "accum_523";
"accum_753" -> "accum_763";
"accum_753" -> "accum_569";
"accum_763" -> "accum_523";
"accum_741" -> "accum_663";
"accum_741" -> "accum_569";
"accum_663" -> "accum_523";
"_568" -> "accum_654";
"_577" -> "accum_666";
"_584" -> "accum_666";
"_593" -> "accum_679";
"_600" -> "accum_679";
"_609" -> "accum_692";
"_616" -> "accum_692";
"accum_639" -> "accum_188";
"accum_639" -> "accum_569";
"accum_188" -> "accum_523";
"accum_532" -> "accum_534";
"accum_545" -> "accum_547";
"_519" -> "accum_560";
"_39" -> "_519";
"_254" -> "n_583";
"_267" -> "_269";
"accum_355" -> "accum_357";
"accum_368" -> "accum_370";
"accum_381" -> "accum_383";
"accum_394" -> "_292";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _1\l"];
"STOREDANYTHING";
"INTEGER";
"x" [label="\N\n_1 = *x\l_4 = *x\l_7 = x + UNKNOWN\l_8 = *x + 8\l_9 = *x + 8\l_11 = x + UNKNOWN\l_12 = *x + 8\l_13 = *x + 8\ldoubledereftmp(79) = *x + UNKNOWN\ldoubledereftmp(80) = *x + UNKNOWN\llocx = *x + UNKNOWN\l_16 = x + UNKNOWN\l_17 = x + UNKNOWN\l_20 = *x + 8\l_21 = *x + 8\l_23 = *x + 16\l_25 = *x + 16\lz__exp_lsm.32_690 = *x + 16\l_630 = *x + 32\laccum_777 = *x + 80\l_634 = *x + 48\laccum_791 = *x + 80\l_638 = *x + 64\laccum_753 = *x + 80\l_642 = *x + 80\laccum_741 = *x + 80\l_568 = *x + 80\l_584 = *x + 64\l_600 = *x + 48\l_616 = *x + 32\laccum_639 = *x + 80\laccum_532 = *x + 64\laccum_545 = *x + 48\l_39 = *x + 32\l_238 = *x + UNKNOWN\l_239 = *x + UNKNOWN\ldoubledereftmp(300) = *x + UNKNOWN\ldoubledereftmp(301) = *x + UNKNOWN\ldoubledereftmp(302) = *x + UNKNOWN\l_170 = *x\l_249 = x + UNKNOWN\l_267 = *x + 16\laccum_355 = *x + 32\laccum_368 = *x + 48\laccum_381 = *x + 64\laccum_394 = *x + 80\l_247 = *x + 80\l*x + UNKNOWN = doubledereftmp(79)\l*x + UNKNOWN = doubledereftmp(80)\l*x + UNKNOWN = doubledereftmp(300)\l*x + UNKNOWN = doubledereftmp(301)\l*x + UNKNOWN = doubledereftmp(302)\l*x = x\l*x = _1\l*x = derefaddrtmp(21)\l*x + 8 = x\l*x + 8 = derefaddrtmp(21)\l*x + 8 = _10\l*x + 8 = _14\l*x + 8 = _22\l*x + 16 = x\l*x + 16 = _28\l*x + 16 = _35\l*x + 16 = _269\l*x + 32 = x\l*x + 32 = derefaddrtmp(21)\l*x + 32 = accum_560\l*x + 32 = accum_357\l*x + 48 = derefaddrtmp(21)\l*x + 48 = accum_547\l*x + 48 = accum_370\l*x + 64 = derefaddrtmp(21)\l*x + 64 = accum_534\l*x + 64 = accum_383\l*x + 80 = derefaddrtmp(21)\l*x + 80 = accum_523\l*x + 80 = _292\l*x + 80 = _248\l"];
"_1";
"_3";
"_4";
"_6";
"derefaddrtmp(21)";
"_7" [label="\N\n_73 = _7 + UNKNOWN\l"];
"i_316";
"n_233";
"_73" [label="\N\n_74 = *_73\l"];
"_74";
"_8";
"_9";
"_10";
"_11" [label="\N\n_86 = _11 + UNKNOWN\l"];
"n_43";
"_86" [label="\N\n_87 = *_86\l"];
"_87";
"_12";
"_13";
"_14";
"doubledereftmp(79)";
"doubledereftmp(80)";
"locx";
"_16" [label="\N\n_109 = _16 + UNKNOWN\l"];
"n_614";
"_109" [label="\N\n_110 = *_109\l"];
"_110";
"_17" [label="\N\n_122 = _17 + UNKNOWN\l"];
"n_599";
"_122" [label="\N\n_123 = *_122\l"];
"_123";
"_20";
"_21";
"_22";
"_23";
"_25";
"_27";
"_28";
"z__exp_lsm.32_690";
"accum_654" [label="\N\n_577 = accum_654 + UNKNOWN\l"];
"accum_666" [label="\N\n_593 = accum_666 + UNKNOWN\l"];
"accum_679" [label="\N\n_609 = accum_679 + UNKNOWN\l"];
"accum_692";
"_630";
"accum_777";
"accum_781";
"_634";
"accum_791";
"accum_798";
"_638";
"accum_753";
"accum_763";
"_642";
"accum_741";
"accum_663";
"_568";
"_577";
"_584";
"_593";
"_600";
"_609";
"_616";
"accum_639";
"accum_188";
"accum_523";
"accum_569";
"accum_532";
"accum_534";
"accum_545";
"accum_547";
"accum_560";
"_519";
"_35";
"_39";
"_238";
"_239";
"doubledereftmp(300)";
"doubledereftmp(301)";
"doubledereftmp(302)";
"_170";
"_249" [label="\N\n_253 = _249 + UNKNOWN\l"];
"n_583";
"_253" [label="\N\n_254 = *_253\l"];
"_254";
"puts";
"_267";
"_269";
"_292";
"accum_355" [label="\N\n_356 = accum_355 + UNKNOWN\l"];
"_356";
"accum_357";
"accum_368" [label="\N\n_369 = accum_368 + UNKNOWN\l"];
"_369";
"accum_370";
"accum_381" [label="\N\n_382 = accum_381 + UNKNOWN\l"];
"_382";
"accum_383";
"accum_394" [label="\N\n_395 = accum_394 + UNKNOWN\l"];
"_395";
"_247" [label="\N\n_248 = _247 + UNKNOWN\l"];
"_248";
"extra_bits";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_7";
"STOREDANYTHING" -> "_73";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_11";
"STOREDANYTHING" -> "_86";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_13";
"STOREDANYTHING" -> "doubledereftmp(79)";
"STOREDANYTHING" -> "doubledereftmp(80)";
"STOREDANYTHING" -> "locx";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_109";
"STOREDANYTHING" -> "_17";
"STOREDANYTHING" -> "_122";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_21";
"STOREDANYTHING" -> "_23";
"STOREDANYTHING" -> "_25";
"STOREDANYTHING" -> "z__exp_lsm.32_690";
"STOREDANYTHING" -> "_630";
"STOREDANYTHING" -> "accum_777";
"STOREDANYTHING" -> "_634";
"STOREDANYTHING" -> "accum_791";
"STOREDANYTHING" -> "_638";
"STOREDANYTHING" -> "accum_753";
"STOREDANYTHING" -> "_642";
"STOREDANYTHING" -> "accum_741";
"STOREDANYTHING" -> "_568";
"STOREDANYTHING" -> "_577";
"STOREDANYTHING" -> "_584";
"STOREDANYTHING" -> "_593";
"STOREDANYTHING" -> "_600";
"STOREDANYTHING" -> "_609";
"STOREDANYTHING" -> "_616";
"STOREDANYTHING" -> "accum_639";
"STOREDANYTHING" -> "accum_532";
"STOREDANYTHING" -> "accum_545";
"STOREDANYTHING" -> "_39";
"STOREDANYTHING" -> "_238";
"STOREDANYTHING" -> "_239";
"STOREDANYTHING" -> "doubledereftmp(300)";
"STOREDANYTHING" -> "doubledereftmp(301)";
"STOREDANYTHING" -> "doubledereftmp(302)";
"STOREDANYTHING" -> "_249";
"STOREDANYTHING" -> "_253";
"STOREDANYTHING" -> "_267";
"STOREDANYTHING" -> "accum_355";
"STOREDANYTHING" -> "_356";
"STOREDANYTHING" -> "accum_368";
"STOREDANYTHING" -> "_369";
"STOREDANYTHING" -> "accum_381";
"STOREDANYTHING" -> "_382";
"STOREDANYTHING" -> "accum_394";
"STOREDANYTHING" -> "_395";
"STOREDANYTHING" -> "_247";
"STOREDANYTHING" -> "_248";
"x" -> "ESCAPED";
"_1" -> "ESCAPED";
"_1" -> "_3";
"_1" -> "_4";
"_1" -> "_74";
"_1" -> "_8";
"_1" -> "_9";
"_1" -> "_87";
"_1" -> "_12";
"_1" -> "_13";
"_1" -> "doubledereftmp(79)";
"_1" -> "doubledereftmp(80)";
"_1" -> "locx";
"_1" -> "_110";
"_1" -> "_123";
"_1" -> "_20";
"_1" -> "_21";
"_1" -> "_23";
"_1" -> "_25";
"_1" -> "z__exp_lsm.32_690";
"_1" -> "_630";
"_1" -> "accum_777";
"_1" -> "_634";
"_1" -> "accum_791";
"_1" -> "_638";
"_1" -> "accum_753";
"_1" -> "_642";
"_1" -> "accum_741";
"_1" -> "_568";
"_1" -> "_584";
"_1" -> "_600";
"_1" -> "_616";
"_1" -> "accum_639";
"_1" -> "accum_532";
"_1" -> "accum_545";
"_1" -> "_39";
"_1" -> "_238";
"_1" -> "_239";
"_1" -> "doubledereftmp(300)";
"_1" -> "doubledereftmp(301)";
"_1" -> "doubledereftmp(302)";
"_1" -> "_170";
"_1" -> "_254";
"_1" -> "_267";
"_1" -> "accum_355";
"_1" -> "accum_368";
"_1" -> "accum_381";
"_1" -> "accum_394";
"_1" -> "_247";
"_3" -> "_6";
"_4" -> "_6";
"derefaddrtmp(21)" -> "ESCAPED";
"_74" -> "n_233";
"_8" -> "_10";
"_9" -> "_10";
"_10" -> "ESCAPED";
"_87" -> "n_43";
"_12" -> "_14";
"_13" -> "_14";
"_14" -> "ESCAPED";
"doubledereftmp(79)" -> "ESCAPED";
"doubledereftmp(80)" -> "ESCAPED";
"_110" -> "n_614";
"_123" -> "n_599";
"_20" -> "_22";
"_21" -> "_22";
"_22" -> "ESCAPED";
"_23" -> "_27";
"_25" -> "_27";
"_27" -> "_28";
"_28" -> "ESCAPED";
"z__exp_lsm.32_690" -> "_35";
"accum_777" -> "accum_781";
"accum_777" -> "accum_569";
"accum_781" -> "accum_523";
"accum_791" -> "accum_798";
"accum_791" -> "accum_569";
"accum_798" -> "accum_523";
"accum_753" -> "accum_763";
"accum_753" -> "accum_569";
"accum_763" -> "accum_523";
"accum_741" -> "accum_663";
"accum_741" -> "accum_569";
"accum_663" -> "accum_523";
"_568" -> "accum_654";
"_577" -> "accum_666";
"_584" -> "accum_666";
"_593" -> "accum_679";
"_600" -> "accum_679";
"_609" -> "accum_692";
"_616" -> "accum_692";
"accum_639" -> "accum_188";
"accum_639" -> "accum_569";
"accum_188" -> "accum_523";
"accum_523" -> "ESCAPED";
"accum_532" -> "accum_534";
"accum_534" -> "ESCAPED";
"accum_545" -> "accum_547";
"accum_547" -> "ESCAPED";
"accum_560" -> "ESCAPED";
"_519" -> "accum_560";
"_35" -> "ESCAPED";
"_39" -> "_519";
"doubledereftmp(300)" -> "ESCAPED";
"doubledereftmp(301)" -> "ESCAPED";
"doubledereftmp(302)" -> "ESCAPED";
"_254" -> "n_583";
"_267" -> "_269";
"_269" -> "ESCAPED";
"_292" -> "ESCAPED";
"accum_355" -> "accum_357";
"accum_357" -> "ESCAPED";
"accum_368" -> "accum_370";
"accum_370" -> "ESCAPED";
"accum_381" -> "accum_383";
"accum_383" -> "ESCAPED";
"accum_394" -> "_292";
"_248" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as _1
STOREDANYTHING = { }
INTEGER = { ANYTHING }
x = { NONLOCAL }
y = { NONLOCAL } same as x
z = { NONLOCAL } same as x
_1 = { ESCAPED NONLOCAL }
_2 = { ESCAPED NONLOCAL } same as _1
_3 = { ESCAPED NONLOCAL }
_4 = { ESCAPED NONLOCAL }
_5 = { ESCAPED NONLOCAL } same as _4
_6 = { ESCAPED NONLOCAL }
derefaddrtmp(17) = { NONLOCAL } same as x
derefaddrtmp(18) = { NONLOCAL } same as x
derefaddrtmp(19) = { NONLOCAL } same as x
derefaddrtmp(20) = { NONLOCAL } same as x
derefaddrtmp(21) = { NULL }
derefaddrtmp(22) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(23) = { NULL } same as derefaddrtmp(21)
_7 = { NONLOCAL }
i_316 = { NULL NONLOCAL }
i_78 = { NULL NONLOCAL } same as i_316
n_233 = { NULL ESCAPED NONLOCAL }
n_77 = { NULL ESCAPED NONLOCAL } same as n_233
_71 = { NULL NONLOCAL } same as i_316
_72 = { NULL NONLOCAL } same as i_316
_73 = { NONLOCAL }
_74 = { ESCAPED NONLOCAL }
_75 = { ESCAPED NONLOCAL } same as _74
n_335 = { NULL ESCAPED NONLOCAL } same as n_233
derefaddrtmp(35) = { NONLOCAL } same as x
derefaddrtmp(36) = { NONLOCAL } same as x
derefaddrtmp(37) = { NONLOCAL } same as x
derefaddrtmp(38) = { NONLOCAL } same as x
derefaddrtmp(39) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(40) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(41) = { NULL } same as derefaddrtmp(21)
_8 = { ESCAPED NONLOCAL }
_9 = { ESCAPED NONLOCAL }
_10 = { ESCAPED NONLOCAL }
derefaddrtmp(45) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(46) = { NONLOCAL } same as x
derefaddrtmp(47) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(48) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(49) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(50) = { NULL } same as derefaddrtmp(21)
_11 = { NONLOCAL }
i_45 = { NULL NONLOCAL } same as i_316
i_91 = { NULL NONLOCAL } same as i_316
n_43 = { NULL ESCAPED NONLOCAL }
n_90 = { NULL ESCAPED NONLOCAL } same as n_43
_84 = { NULL NONLOCAL } same as i_316
_85 = { NULL NONLOCAL } same as i_316
_86 = { NONLOCAL }
_87 = { ESCAPED NONLOCAL }
_88 = { ESCAPED NONLOCAL } same as _87
n_315 = { NULL ESCAPED NONLOCAL } same as n_43
derefaddrtmp(62) = { NONLOCAL } same as x
derefaddrtmp(63) = { NONLOCAL } same as x
derefaddrtmp(64) = { NONLOCAL } same as x
derefaddrtmp(65) = { NONLOCAL } same as x
derefaddrtmp(66) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(67) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(68) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(69) = { NONLOCAL } same as x
derefaddrtmp(70) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(71) = { NONLOCAL } same as x
derefaddrtmp(72) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(73) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(74) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(75) = { NULL } same as derefaddrtmp(21)
_12 = { ESCAPED NONLOCAL }
_13 = { ESCAPED NONLOCAL }
_14 = { ESCAPED NONLOCAL }
doubledereftmp(79) = { ESCAPED NONLOCAL }
doubledereftmp(80) = { ESCAPED NONLOCAL }
locx = { ESCAPED NONLOCAL }
_774 = { ESCAPED NONLOCAL } same as locx
_783 = { ESCAPED NONLOCAL } same as locx
_647 = { ESCAPED NONLOCAL } same as locx
_792 = { ESCAPED NONLOCAL } same as locx
_646 = { ESCAPED NONLOCAL } same as locx
_801 = { ESCAPED NONLOCAL } same as locx
_712 = { ESCAPED NONLOCAL } same as locx
_16 = { NONLOCAL }
i_615 = { NULL NONLOCAL } same as i_316
i_114 = { NULL NONLOCAL } same as i_316
n_614 = { NULL ESCAPED NONLOCAL }
n_113 = { NULL ESCAPED NONLOCAL } same as n_614
_107 = { NULL NONLOCAL } same as i_316
_108 = { NULL NONLOCAL } same as i_316
_109 = { NONLOCAL }
_110 = { ESCAPED NONLOCAL }
_111 = { ESCAPED NONLOCAL } same as _110
n_300 = { NULL ESCAPED NONLOCAL } same as n_614
derefaddrtmp(100) = { NONLOCAL } same as x
derefaddrtmp(101) = { NONLOCAL } same as x
derefaddrtmp(102) = { NONLOCAL } same as x
derefaddrtmp(103) = { NONLOCAL } same as x
derefaddrtmp(104) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(105) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(106) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(107) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(108) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(109) = { NONLOCAL } same as x
derefaddrtmp(110) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(111) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(112) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(113) = { NULL } same as derefaddrtmp(21)
_17 = { NONLOCAL }
i_613 = { NULL NONLOCAL } same as i_316
i_127 = { NULL NONLOCAL } same as i_316
n_599 = { NULL ESCAPED NONLOCAL }
n_126 = { NULL ESCAPED NONLOCAL } same as n_599
_120 = { NULL NONLOCAL } same as i_316
_121 = { NULL NONLOCAL } same as i_316
_122 = { NONLOCAL }
_123 = { ESCAPED NONLOCAL }
_124 = { ESCAPED NONLOCAL } same as _123
n_698 = { NULL ESCAPED NONLOCAL } same as n_599
derefaddrtmp(125) = { NONLOCAL } same as x
derefaddrtmp(126) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(127) = { NONLOCAL } same as x
derefaddrtmp(128) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(129) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(130) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(131) = { NULL } same as derefaddrtmp(21)
_20 = { ESCAPED NONLOCAL }
_21 = { ESCAPED NONLOCAL }
_22 = { ESCAPED NONLOCAL }
_23 = { ESCAPED NONLOCAL }
_24 = { ESCAPED NONLOCAL } same as _23
_25 = { ESCAPED NONLOCAL }
_26 = { ESCAPED NONLOCAL } same as _25
_27 = { ESCAPED NONLOCAL }
_28 = { ESCAPED NONLOCAL }
_29 = { ESCAPED NONLOCAL } same as _28
derefaddrtmp(142) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(143) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(144) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(145) = { NULL } same as derefaddrtmp(21)
locx__lsm.34_669 = { ESCAPED NONLOCAL } same as locx
locx__lsm.35_651 = { NULL } same as derefaddrtmp(21)
locx__lsm.36_320 = { ESCAPED NONLOCAL } same as locx
locx__lsm.37_664 = { NULL } same as derefaddrtmp(21)
locx__lsm.38_695 = { ESCAPED NONLOCAL } same as locx
locx__lsm.39_321 = { NULL } same as derefaddrtmp(21)
locx__lsm.40_677 = { ESCAPED NONLOCAL } same as locx
locx__lsm.41_112 = { NULL } same as derefaddrtmp(21)
z__exp_lsm.32_690 = { ESCAPED NONLOCAL }
z__exp_lsm.33_106 = { NULL } same as derefaddrtmp(21)
accum_654 = { NULL ESCAPED NONLOCAL }
accum_653 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_655 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_666 = { NULL ESCAPED NONLOCAL }
extra_bits$2_256 = { NULL ESCAPED NONLOCAL } same as accum_666
_364 = { NULL ESCAPED NONLOCAL } same as accum_654
extra_bits$3_327 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_667 = { NULL ESCAPED NONLOCAL } same as accum_666
accum_668 = { NULL ESCAPED NONLOCAL } same as accum_666
accum_679 = { NULL ESCAPED NONLOCAL }
extra_bits$1_234 = { NULL ESCAPED NONLOCAL } same as accum_679
_363 = { NULL ESCAPED NONLOCAL } same as accum_666
accum_680 = { NULL ESCAPED NONLOCAL } same as accum_679
accum_681 = { NULL ESCAPED NONLOCAL } same as accum_679
accum_692 = { NULL ESCAPED NONLOCAL }
extra_bits$0_299 = { NULL ESCAPED NONLOCAL } same as accum_692
_359 = { NULL ESCAPED NONLOCAL } same as accum_679
accum_693 = { NULL ESCAPED NONLOCAL } same as accum_692
accum_694 = { NULL ESCAPED NONLOCAL } same as accum_692
_297 = { NULL ESCAPED NONLOCAL } same as accum_692
_630 = { ESCAPED NONLOCAL }
accum_777 = { ESCAPED NONLOCAL }
accum_781 = { ESCAPED NONLOCAL }
_634 = { ESCAPED NONLOCAL }
accum_791 = { ESCAPED NONLOCAL }
accum_798 = { ESCAPED NONLOCAL }
_638 = { ESCAPED NONLOCAL }
accum_753 = { ESCAPED NONLOCAL }
accum_763 = { ESCAPED NONLOCAL }
_642 = { ESCAPED NONLOCAL }
accum_741 = { ESCAPED NONLOCAL }
accum_663 = { ESCAPED NONLOCAL }
_568 = { ESCAPED NONLOCAL }
accum_570 = { NULL ESCAPED NONLOCAL } same as accum_654
_571 = { ESCAPED NONLOCAL } same as _568
accum_572 = { NULL ESCAPED NONLOCAL } same as accum_654
_575 = { NULL ESCAPED NONLOCAL } same as accum_654
_576 = { NULL ESCAPED NONLOCAL } same as accum_654
_577 = { NULL ESCAPED NONLOCAL }
_578 = { NULL ESCAPED NONLOCAL } same as accum_654
_584 = { ESCAPED NONLOCAL }
accum_586 = { NULL ESCAPED NONLOCAL } same as accum_666
_587 = { ESCAPED NONLOCAL } same as _584
accum_588 = { NULL ESCAPED NONLOCAL } same as accum_666
_589 = { NULL ESCAPED NONLOCAL } same as _577
accum_590 = { NULL ESCAPED NONLOCAL } same as accum_666
_591 = { NULL ESCAPED NONLOCAL } same as accum_666
_592 = { NULL ESCAPED NONLOCAL } same as accum_666
_593 = { NULL ESCAPED NONLOCAL }
_594 = { NULL ESCAPED NONLOCAL } same as accum_666
_600 = { ESCAPED NONLOCAL }
accum_602 = { NULL ESCAPED NONLOCAL } same as accum_679
_603 = { ESCAPED NONLOCAL } same as _600
accum_604 = { NULL ESCAPED NONLOCAL } same as accum_679
_605 = { NULL ESCAPED NONLOCAL } same as _593
accum_606 = { NULL ESCAPED NONLOCAL } same as accum_679
_607 = { NULL ESCAPED NONLOCAL } same as accum_679
_608 = { NULL ESCAPED NONLOCAL } same as accum_679
_609 = { NULL ESCAPED NONLOCAL }
_610 = { NULL ESCAPED NONLOCAL } same as accum_679
_616 = { ESCAPED NONLOCAL }
accum_618 = { NULL ESCAPED NONLOCAL } same as accum_692
_619 = { ESCAPED NONLOCAL } same as _616
accum_620 = { NULL ESCAPED NONLOCAL } same as accum_692
_621 = { NULL ESCAPED NONLOCAL } same as _609
accum_622 = { NULL ESCAPED NONLOCAL } same as accum_692
_626 = { NULL ESCAPED NONLOCAL } same as accum_692
accum_639 = { ESCAPED NONLOCAL }
accum_188 = { ESCAPED NONLOCAL }
accum_522 = { ESCAPED NONLOCAL } same as accum_188
accum_523 = { ESCAPED NONLOCAL }
accum_569 = { ESCAPED NONLOCAL }
extra_bits$0_47 = { NULL ESCAPED NONLOCAL } same as accum_692
extra_bits$1_521 = { NULL ESCAPED NONLOCAL } same as accum_679
extra_bits$2_293 = { NULL ESCAPED NONLOCAL } same as accum_666
extra_bits$3_250 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_532 = { ESCAPED NONLOCAL }
accum_534 = { ESCAPED NONLOCAL }
_274 = { ESCAPED NONLOCAL } same as accum_569
accum_535 = { ESCAPED NONLOCAL } same as accum_534
accum_536 = { ESCAPED NONLOCAL } same as accum_534
accum_545 = { ESCAPED NONLOCAL }
accum_547 = { ESCAPED NONLOCAL }
_343 = { ESCAPED NONLOCAL } same as accum_532
accum_548 = { ESCAPED NONLOCAL } same as accum_547
accum_549 = { ESCAPED NONLOCAL } same as accum_547
accum_560 = { NULL ESCAPED NONLOCAL }
_519 = { NULL ESCAPED NONLOCAL }
_342 = { ESCAPED NONLOCAL } same as accum_545
accum_561 = { NULL ESCAPED NONLOCAL } same as accum_560
accum_562 = { NULL ESCAPED NONLOCAL } same as accum_560
_35 = { ESCAPED NONLOCAL }
z__exp_lsm.32_237 = { ESCAPED NONLOCAL } same as _35
_36 = { ESCAPED NONLOCAL } same as _35
_37 = { ESCAPED NONLOCAL } same as _35
_38 = { ESCAPED NONLOCAL } same as _35
z__exp_lsm.32_762 = { ESCAPED NONLOCAL } same as _35
z__exp_lsm.33_757 = { NONLOCAL } same as x
_39 = { ESCAPED NONLOCAL }
_40 = { ESCAPED NONLOCAL } same as _39
locx__lsm.37_336 = { NONLOCAL } same as x
locx__lsm.37_83 = { NONLOCAL } same as x
locx__lsm.36_319 = { ESCAPED NONLOCAL } same as locx
locx__lsm.36_89 = { ESCAPED NONLOCAL } same as locx
locx__lsm.40_768 = { ESCAPED NONLOCAL } same as locx
locx__lsm.40_301 = { ESCAPED NONLOCAL } same as locx
locx__lsm.34_799 = { ESCAPED NONLOCAL } same as locx
locx__lsm.34_324 = { ESCAPED NONLOCAL } same as locx
locx__lsm.35_782 = { NONLOCAL } same as x
locx__lsm.35_325 = { NONLOCAL } same as x
locx__lsm.38_771 = { ESCAPED NONLOCAL } same as locx
locx__lsm.38_582 = { ESCAPED NONLOCAL } same as locx
locx__lsm.39_775 = { NONLOCAL } same as x
locx__lsm.39_682 = { NONLOCAL } same as x
z__exp_lsm.33_784 = { NONLOCAL } same as x
z__exp_lsm.32_785 = { ESCAPED NONLOCAL } same as _35
locx__lsm.41_793 = { NONLOCAL } same as x
locx__lsm.41_767 = { NONLOCAL } same as x
locx__lsm.34_125 = { ESCAPED NONLOCAL } same as locx
locx__lsm.36_119 = { ESCAPED NONLOCAL } same as locx
locx__lsm.38_317 = { ESCAPED NONLOCAL } same as locx
locx__lsm.40_518 = { ESCAPED NONLOCAL } same as locx
accum_703 = { ESCAPED NONLOCAL } same as locx
accum_705 = { ESCAPED NONLOCAL } same as locx
accum_716 = { ESCAPED NONLOCAL } same as locx
accum_718 = { ESCAPED NONLOCAL } same as locx
_711 = { ESCAPED NONLOCAL } same as locx
accum_719 = { ESCAPED NONLOCAL } same as locx
accum_720 = { ESCAPED NONLOCAL } same as locx
accum_729 = { ESCAPED NONLOCAL } same as locx
accum_731 = { ESCAPED NONLOCAL } same as locx
_707 = { ESCAPED NONLOCAL } same as locx
accum_732 = { ESCAPED NONLOCAL } same as locx
accum_733 = { ESCAPED NONLOCAL } same as locx
accum_742 = { ESCAPED NONLOCAL } same as locx
accum_744 = { ESCAPED NONLOCAL } same as locx
_18 = { ESCAPED NONLOCAL } same as locx
accum_745 = { ESCAPED NONLOCAL } same as locx
accum_746 = { ESCAPED NONLOCAL } same as locx
_290 = { ESCAPED NONLOCAL } same as locx
i_598 = { NULL NONLOCAL } same as i_316
i_241 = { NULL NONLOCAL } same as i_316
_238 = { ESCAPED NONLOCAL }
_239 = { ESCAPED NONLOCAL }
doubledereftmp(300) = { ESCAPED NONLOCAL }
doubledereftmp(301) = { ESCAPED NONLOCAL }
doubledereftmp(302) = { ESCAPED NONLOCAL }
_170 = { ESCAPED NONLOCAL }
_171 = { ESCAPED NONLOCAL } same as _170
_249 = { NONLOCAL }
i_597 = { NULL NONLOCAL } same as i_316
i_258 = { NULL NONLOCAL } same as i_316
n_583 = { NULL ESCAPED NONLOCAL }
n_257 = { NULL ESCAPED NONLOCAL } same as n_583
_251 = { NULL NONLOCAL } same as i_316
_252 = { NULL NONLOCAL } same as i_316
_253 = { NONLOCAL }
_254 = { ESCAPED NONLOCAL }
_255 = { ESCAPED NONLOCAL } same as _254
n_19 = { NULL ESCAPED NONLOCAL } same as n_583
puts = { }
_267 = { ESCAPED NONLOCAL }
_341 = { ESCAPED NONLOCAL } same as _267
_269 = { ESCAPED NONLOCAL }
_270 = { ESCAPED NONLOCAL } same as _269
_273 = { ESCAPED NONLOCAL } same as _170
_292 = { ESCAPED NONLOCAL }
accum_398 = { ESCAPED NONLOCAL } same as _292
accum_355 = { ESCAPED NONLOCAL }
_356 = { ESCAPED NONLOCAL }
accum_357 = { ESCAPED NONLOCAL }
accum_368 = { ESCAPED NONLOCAL }
_369 = { ESCAPED NONLOCAL }
accum_370 = { ESCAPED NONLOCAL }
accum_371 = { ESCAPED NONLOCAL } same as accum_370
accum_372 = { ESCAPED NONLOCAL } same as accum_370
accum_381 = { ESCAPED NONLOCAL }
_382 = { ESCAPED NONLOCAL }
accum_383 = { ESCAPED NONLOCAL }
accum_384 = { ESCAPED NONLOCAL } same as accum_383
accum_385 = { ESCAPED NONLOCAL } same as accum_383
accum_394 = { ESCAPED NONLOCAL }
_395 = { ESCAPED NONLOCAL }
accum_396 = { ESCAPED NONLOCAL } same as _292
accum_397 = { ESCAPED NONLOCAL } same as _292
_246 = { ESCAPED NONLOCAL } same as _170
_247 = { ESCAPED NONLOCAL }
_248 = { ESCAPED NONLOCAL }
extra_bits = { }
_344 = { ESCAPED NONLOCAL } same as _267
_345 = { ESCAPED NONLOCAL } same as _269
exponent_difference_348 = { ESCAPED NONLOCAL } same as _269


Alias information for DivideInternalFPF

Aliased symbols

locx, UID D.3079, struct InternalFPF, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_7, points-to non-local, points-to vars: { }
_11, points-to non-local, points-to vars: { }
_16, points-to non-local, points-to vars: { }
_17, points-to non-local, points-to vars: { }
x_50(D), points-to non-local, points-to NULL, points-to vars: { }
y_51(D), points-to non-local, points-to NULL, points-to vars: { }
z_52(D), points-to non-local, points-to NULL, points-to vars: { }
_73, points-to non-local, points-to NULL, points-to vars: { }
_86, points-to non-local, points-to NULL, points-to vars: { }
_109, points-to non-local, points-to NULL, points-to vars: { }
_122, points-to non-local, points-to NULL, points-to vars: { }
_249, points-to non-local, points-to vars: { }
_253, points-to non-local, points-to NULL, points-to vars: { }

;; 27 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 105 3 4 5 89 108 6 109 7 106 8 9 10 90 110 11 111 12 107 13 14 15 16 17 18 91 112 19 20 21 22 23 93 113 24 25 26 27 28 114 29 30 115 31 32 116 33 34 35 36 37 118 38 39 40 119 41 42 43 120 44 121 45 117 46 47 122 48 49 123 50 51 124 52 53 125 95 126 96 97 127 98 99 128 100 101 129 102 103 130 104 92 54 131 55 56 132 57 58 133 59 60 134 87 61 62 63 64 65 94 66 67 135 68 69 88 136 70 71 72 138 73 74 139 75 76 140 77 78 141 79 80 81 144 143 82 83 137 84 85 142 86
;;
;; Loop 23
;;  header 69, latch 88
;;  depth 1, outer 0
;;  nodes: 69 88
;;
;; Loop 6
;;  header 5, latch 89
;;  depth 1, outer 0
;;  nodes: 5 89
;;
;; Loop 9
;;  header 10, latch 90
;;  depth 1, outer 0
;;  nodes: 10 90
;;
;; Loop 13
;;  header 18, latch 91
;;  depth 1, outer 0
;;  nodes: 18 91
;;
;; Loop 2
;;  header 54, latch 92
;;  depth 1, outer 0
;;  nodes: 54 92 53 124 52 51 123 50 49 122 48 47 45 46 36 39 42 41 40 38 37 35 34 116 33 32 115 31 30 114 29 28 134 27 60 133 59 58 132 57 56 131 55 117 119 120 121 118 44 43
;;
;; Loop 16
;;  header 23, latch 93
;;  depth 1, outer 0
;;  nodes: 23 93
;;
;; Loop 21
;;  header 61, latch 94
;;  depth 1, outer 0
;;  nodes: 61 94 65 63
;; 2 succs { 105 3 4 106 15 9 16 107 14 87 }
;; 105 succs { 67 }
;; 3 succs { 85 }
;; 4 succs { 5 }
;; 5 succs { 89 108 }
;; 89 succs { 5 }
;; 108 succs { 6 }
;; 6 succs { 7 109 }
;; 109 succs { 8 }
;; 7 succs { 85 }
;; 106 succs { 8 }
;; 8 succs { 85 }
;; 9 succs { 10 }
;; 10 succs { 90 110 }
;; 90 succs { 10 }
;; 110 succs { 11 }
;; 11 succs { 12 111 }
;; 111 succs { 13 }
;; 12 succs { 85 }
;; 107 succs { 13 }
;; 13 succs { 85 }
;; 14 succs { 67 }
;; 15 succs { 67 }
;; 16 succs { 17 22 }
;; 17 succs { 18 }
;; 18 succs { 91 112 }
;; 91 succs { 18 }
;; 112 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 85 }
;; 21 succs { 85 }
;; 22 succs { 23 }
;; 23 succs { 93 113 }
;; 93 succs { 23 }
;; 113 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 85 }
;; 26 succs { 54 }
;; 27 succs { 28 }
;; 28 succs { 29 114 }
;; 114 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 31 115 }
;; 115 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 116 }
;; 116 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 35 117 }
;; 35 succs { 36 37 }
;; 36 succs { 47 }
;; 37 succs { 118 38 }
;; 118 succs { 46 }
;; 38 succs { 39 40 }
;; 39 succs { 47 }
;; 40 succs { 119 41 }
;; 119 succs { 46 }
;; 41 succs { 42 43 }
;; 42 succs { 47 }
;; 43 succs { 120 44 }
;; 120 succs { 46 }
;; 44 succs { 45 121 }
;; 121 succs { 46 }
;; 45 succs { 47 }
;; 117 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 48 122 }
;; 122 succs { 49 }
;; 48 succs { 49 }
;; 49 succs { 50 123 }
;; 123 succs { 51 }
;; 50 succs { 51 }
;; 51 succs { 52 124 }
;; 124 succs { 53 }
;; 52 succs { 53 }
;; 53 succs { 92 125 }
;; 125 succs { 95 }
;; 95 succs { 126 96 }
;; 126 succs { 97 }
;; 96 succs { 97 }
;; 97 succs { 127 98 }
;; 127 succs { 99 }
;; 98 succs { 99 }
;; 99 succs { 128 100 }
;; 128 succs { 101 }
;; 100 succs { 101 }
;; 101 succs { 129 102 }
;; 129 succs { 103 }
;; 102 succs { 103 }
;; 103 succs { 130 104 }
;; 130 succs { 67 }
;; 104 succs { 67 }
;; 92 succs { 54 }
;; 54 succs { 55 131 }
;; 131 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 57 132 }
;; 132 succs { 58 }
;; 57 succs { 58 }
;; 58 succs { 59 133 }
;; 133 succs { 60 }
;; 59 succs { 60 }
;; 60 succs { 27 134 }
;; 134 succs { 28 }
;; 87 succs { 61 }
;; 61 succs { 62 63 }
;; 62 succs { 67 }
;; 63 succs { 64 65 }
;; 64 succs { 67 }
;; 65 succs { 94 66 }
;; 94 succs { 61 }
;; 66 succs { 67 }
;; 67 succs { 68 135 }
;; 135 succs { 83 }
;; 68 succs { 69 }
;; 69 succs { 88 136 }
;; 88 succs { 69 }
;; 136 succs { 70 }
;; 70 succs { 71 137 }
;; 71 succs { 84 }
;; 72 succs { 74 138 }
;; 138 succs { 83 }
;; 73 succs { 86 }
;; 74 succs { 75 139 }
;; 139 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 140 }
;; 140 succs { 78 }
;; 77 succs { 78 }
;; 78 succs { 79 141 }
;; 141 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 73 142 }
;; 81 succs { 143 144 }
;; 144 succs { 83 }
;; 143 succs { 82 }
;; 82 succs { 83 }
;; 83 succs { 1 }
;; 137 succs { 84 }
;; 84 succs { 72 81 }
;; 85 succs { 83 }
;; 142 succs { 86 }
;; 86 succs { 82 }
find_duplicates: <bb 85> duplicate of <bb 135>
find_duplicates: <bb 85> duplicate of <bb 138>
find_duplicates: <bb 85> duplicate of <bb 144>
find_duplicates: <bb 62> duplicate of <bb 66>
find_duplicates: <bb 7> duplicate of <bb 12>
find_duplicates: <bb 7> duplicate of <bb 20>
Removing basic block 135
Removing basic block 138
Removing basic block 144
Removing basic block 66
Removing basic block 12
Removing basic block 20

Symbols to be put in SSA form
{ D.3269 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 145
Number of blocks to update: 138 ( 95%)


Removing basic block 126
Removing basic block 127
Removing basic block 128
Removing basic block 129
Removing basic block 130
Removing basic block 17
Removing basic block 22
Removing basic block 36
Removing basic block 39
Removing basic block 42
Removing basic block 45
Removing basic block 87
Removing basic block 88
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 105
Removing basic block 106
Removing basic block 107
Removing basic block 108
Removing basic block 109
Removing basic block 110
Removing basic block 111
Removing basic block 112
Removing basic block 113
Removing basic block 114
Removing basic block 115
Removing basic block 116
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 125
Removing basic block 131
Removing basic block 132
Removing basic block 133
Removing basic block 134
Removing basic block 136
Removing basic block 137
Removing basic block 139
Removing basic block 140
Removing basic block 141
Removing basic block 142
Merging blocks 96 and 97
Merging blocks 96 and 98
Merging blocks 96 and 99
Merging blocks 96 and 100
Merging blocks 96 and 101
Merging blocks 96 and 102
Merging blocks 96 and 103
Merging blocks 96 and 104
DivideInternalFPF (struct InternalFPF * x, struct InternalFPF * y, struct InternalFPF * z)
{
  _Bool locx__lsm.41;
  short unsigned int locx__lsm.40;
  _Bool locx__lsm.39;
  short unsigned int locx__lsm.38;
  _Bool locx__lsm.37;
  short unsigned int locx__lsm.36;
  _Bool locx__lsm.35;
  short unsigned int locx__lsm.34;
  _Bool z__exp_lsm.33;
  short int z__exp_lsm.32;
  short unsigned int extra_bits$3;
  short unsigned int extra_bits$2;
  short unsigned int extra_bits$1;
  short unsigned int extra_bits$0;
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  int n;
  long int exponent_difference;
  int i;
  int i;
  short unsigned int accum;
  unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  int i;
  int n;
  int i;
  int i;
  int i;
  int n;
  int i;
  int n;
  int i;
  int i;
  int i;
  int n;
  int i;
  int i;
  int i;
  int n;
  int i;
  struct InternalFPF locx;
  short unsigned int extra_bits[4];
  short unsigned int carry;
  int j;
  int i;
  unsigned char _1;
  int _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  short unsigned int[4] * _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;
  short unsigned int[4] * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  signed short _18;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  short int _23;
  unsigned short _24;
  short int _25;
  unsigned short _26;
  unsigned short _27;
  unsigned short _28;
  short int _29;
  short unsigned int pretmp_34;
  unsigned short _36;
  unsigned short _37;
  short int _38;
  signed short _40;
  long unsigned int _71;
  long unsigned int _72;
  short unsigned int * _73;
  short unsigned int _74;
  int _75;
  long unsigned int _84;
  long unsigned int _85;
  short unsigned int * _86;
  short unsigned int _87;
  int _88;
  long unsigned int _107;
  long unsigned int _108;
  short unsigned int * _109;
  short unsigned int _110;
  int _111;
  long unsigned int _120;
  long unsigned int _121;
  short unsigned int * _122;
  short unsigned int _123;
  int _124;
  unsigned char _170;
  unsigned char _171;
  short unsigned int _238;
  short unsigned int _239;
  short unsigned int _248;
  short unsigned int[4] * _249;
  long unsigned int _251;
  long unsigned int _252;
  short unsigned int * _253;
  short unsigned int _254;
  int _255;
  short unsigned int prephitmp_259;
  unsigned short _267;
  unsigned short _269;
  short int _270;
  signed short _274;
  signed short _290;
  short unsigned int prephitmp_291;
  short unsigned int _292;
  signed short _297;
  unsigned char prephitmp_309;
  short int _341;
  signed short _342;
  signed short _343;
  int _344;
  int _345;
  unsigned char pretmp_347;
  short unsigned int _356;
  signed short _359;
  signed short _363;
  signed short _364;
  short unsigned int _369;
  short unsigned int _382;
  short unsigned int _395;
  short unsigned int prephitmp_424;
  short unsigned int[4] * pretmp_436;
  short unsigned int prephitmp_456;
  short unsigned int prephitmp_460;
  short unsigned int pretmp_464;
  short unsigned int pretmp_468;
  short unsigned int prephitmp_484;
  short unsigned int _486;
  short unsigned int prephitmp_489;
  short unsigned int pretmp_490;
  short unsigned int pretmp_504;
  short unsigned int pretmp_508;
  short unsigned int _519;
  short unsigned int pretmp_557;
  short unsigned int prephitmp_558;
  unsigned int _571;
  short unsigned int pretmp_574;
  unsigned int _575;
  short unsigned int _576;
  short unsigned int _577;
  short unsigned int _578;
  unsigned int _587;
  unsigned int _589;
  unsigned int _591;
  short unsigned int _592;
  short unsigned int _593;
  short unsigned int _594;
  unsigned int _603;
  unsigned int _605;
  unsigned int _607;
  short unsigned int _608;
  short unsigned int _609;
  short unsigned int _610;
  short unsigned int pretmp_612;
  short unsigned int pretmp_617;
  unsigned int _619;
  unsigned int _621;
  short unsigned int _626;
  short unsigned int _646;
  short unsigned int _647;
  short unsigned int pretmp_702;
  signed short _707;
  signed short _711;
  short unsigned int _712;
  short unsigned int _774;
  short unsigned int _783;
  short unsigned int _792;
  short unsigned int _801;

  <bb 2> [81.50%]:
  _1 = x_50(D)->type;
  _2 = (int) _1;
  _3 = _2 * 5;
  _4 = y_51(D)->type;
  _5 = (int) _4;
  _6 = _3 + _5;
  switch (_6) <default: <L54> [10.00%], case 0: <L56> [10.00%], case 1 ... 2: <L2> [10.00%], case 3: <L5> [10.00%], case 4: <L58> [10.00%], case 5: <L9> [10.00%], case 6 ... 7: <L59> [10.00%], case 8: <L5> [10.00%], case 9: <L58> [10.00%], case 10: <L9> [10.00%], case 11 ... 12: <L59> [10.00%], case 13: <L5> [10.00%], case 14: <L58> [10.00%], case 15 ... 17: <L12> [10.00%], case 18: <L56> [10.00%], case 19: <L58> [10.00%], case 20 ... 23: <L57> [10.00%], case 24: <L66> [10.00%]>

<L56> [8.15%]:
  z_52(D)->type = 4;
  z_52(D)->exp = 32767;
  z_52(D)->sign = 1;
  z_52(D)->mantissa[0] = 16384;
  z_52(D)->mantissa[1] = 0;
  z_52(D)->mantissa[2] = 0;
  z_52(D)->mantissa[3] = 0;
  goto <bb 81>; [100.00%]

<L2> [8.15%]:
  _7 = &y_51(D)->mantissa;

  <bb 5> [32.60%]:
  # i_316 = PHI <i_78(5), 0(4)>
  # n_233 = PHI <n_77(5), 0(4)>
  _71 = (long unsigned int) i_316;
  _72 = _71 * 2;
  _73 = _7 + _72;
  _74 = *_73;
  _75 = (int) _74;
  n_77 = _75 | n_233;
  i_78 = i_316 + 1;
  if (i_78 != 4)
    goto <bb 5>; [75.00%]
  else
    goto <bb 6>; [25.00%]

  <bb 6> [8.15%]:
  if (n_77 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8> (<L5>); [50.00%]

  <bb 7> [10.20%]:
  z_52(D)->type = 4;
  z_52(D)->exp = 32767;
  z_52(D)->sign = 1;
  z_52(D)->mantissa[0] = 16384;
  z_52(D)->mantissa[1] = 0;
  z_52(D)->mantissa[2] = 0;
  z_52(D)->mantissa[3] = 0;
  goto <bb 81>; [100.00%]

<L5> [12.23%]:
  _8 = x_50(D)->sign;
  _9 = y_51(D)->sign;
  _10 = _8 ^ _9;
  z_52(D)->type = 0;
  z_52(D)->sign = _10;
  z_52(D)->exp = -32767;
  z_52(D)->mantissa[0] = 0;
  z_52(D)->mantissa[1] = 0;
  z_52(D)->mantissa[2] = 0;
  z_52(D)->mantissa[3] = 0;
  goto <bb 81>; [100.00%]

<L9> [8.15%]:
  _11 = &x_50(D)->mantissa;

  <bb 10> [32.60%]:
  # i_45 = PHI <i_91(10), 0(9)>
  # n_43 = PHI <n_90(10), 0(9)>
  _84 = (long unsigned int) i_45;
  _85 = _84 * 2;
  _86 = _11 + _85;
  _87 = *_86;
  _88 = (int) _87;
  n_90 = n_43 | _88;
  i_91 = i_45 + 1;
  if (i_91 != 4)
    goto <bb 10>; [75.00%]
  else
    goto <bb 11>; [25.00%]

  <bb 11> [8.15%]:
  if (n_90 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 12> (<L12>); [50.00%]

<L12> [12.23%]:
  z_52(D)->type = 3;
  z_52(D)->sign = 0;
  z_52(D)->exp = -32767;
  z_52(D)->mantissa[0] = 0;
  z_52(D)->mantissa[1] = 0;
  z_52(D)->mantissa[2] = 0;
  z_52(D)->mantissa[3] = 0;
  _12 = x_50(D)->sign;
  _13 = y_51(D)->sign;
  _14 = _12 ^ _13;
  z_52(D)->sign = _14;
  goto <bb 81>; [100.00%]

<L57> [8.15%]:
  __builtin_memmove (x_50(D), z_52(D), 12);
  goto <bb 62> (<L54>); [100.00%]

<L58> [8.15%]:
  __builtin_memmove (y_51(D), z_52(D), 12);
  goto <bb 62> (<L54>); [100.00%]

<L59> [8.15%]:
  __builtin_memcpy (&locx, x_50(D), 12);
  _774 = MEM[(short unsigned int *)&locx + 4B];
  _783 = MEM[(short unsigned int *)&locx + 6B];
  _647 = _774 | _783;
  _792 = MEM[(short unsigned int *)&locx + 8B];
  _646 = _647 | _792;
  _801 = MEM[(short unsigned int *)&locx + 10B];
  _712 = _646 | _801;
  pretmp_436 = &y_51(D)->mantissa;
  if (_712 == 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 16> [16.30%]:
  # i_615 = PHI <i_114(16), 0(15)>
  # n_614 = PHI <n_113(16), 0(15)>
  _107 = (long unsigned int) i_615;
  _108 = _107 * 2;
  _109 = pretmp_436 + _108;
  _110 = *_109;
  _111 = (int) _110;
  n_113 = _111 | n_614;
  i_114 = i_615 + 1;
  if (i_114 != 4)
    goto <bb 16>; [75.01%]
  else
    goto <bb 17>; [24.99%]

  <bb 17> [4.07%]:
  if (n_113 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 18> [2.04%]:
  z_52(D)->type = 0;
  z_52(D)->sign = 0;
  z_52(D)->exp = -32767;
  z_52(D)->mantissa[0] = 0;
  z_52(D)->mantissa[1] = 0;
  z_52(D)->mantissa[2] = 0;
  z_52(D)->mantissa[3] = 0;
  goto <bb 81>; [100.00%]

  <bb 19> [16.30%]:
  # i_613 = PHI <i_127(19), 0(15)>
  # n_599 = PHI <n_126(19), 0(15)>
  _120 = (long unsigned int) i_613;
  _121 = _120 * 2;
  _122 = pretmp_436 + _121;
  _123 = *_122;
  _124 = (int) _123;
  n_126 = _124 | n_599;
  i_127 = i_613 + 1;
  if (i_127 != 4)
    goto <bb 19>; [75.01%]
  else
    goto <bb 20>; [24.99%]

  <bb 20> [4.07%]:
  if (n_126 == 0)
    goto <bb 21>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 21> [2.04%]:
  z_52(D)->type = 3;
  z_52(D)->sign = 0;
  z_52(D)->exp = -32767;
  z_52(D)->mantissa[0] = 0;
  z_52(D)->mantissa[1] = 0;
  z_52(D)->mantissa[2] = 0;
  z_52(D)->mantissa[3] = 0;
  goto <bb 81>; [100.00%]

  <bb 22> [2.04%]:
  z_52(D)->type = _1;
  _20 = x_50(D)->sign;
  _21 = y_51(D)->sign;
  _22 = _20 ^ _21;
  z_52(D)->sign = _22;
  _23 = x_50(D)->exp;
  _24 = (unsigned short) _23;
  _25 = y_51(D)->exp;
  _26 = (unsigned short) _25;
  _27 = _24 - _26;
  _28 = _27 + 128;
  _29 = (short int) _28;
  z_52(D)->exp = _29;
  z_52(D)->mantissa[0] = 0;
  z_52(D)->mantissa[1] = 0;
  z_52(D)->mantissa[2] = 0;
  z_52(D)->mantissa[3] = 0;
  goto <bb 50>; [100.00%]

  <bb 23> [5.77%]:
  accum_654 = accum_653 | 1;

  <bb 24> [11.55%]:
  # accum_655 = PHI <accum_653(56), accum_654(23)>
  accum_666 = extra_bits$2_256 << 1;
  _364 = (signed short) extra_bits$3_327;
  if (_364 < 0)
    goto <bb 25>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 25> [5.77%]:
  accum_667 = accum_666 | 1;

  <bb 26> [11.55%]:
  # accum_668 = PHI <accum_666(24), accum_667(25)>
  accum_679 = extra_bits$1_234 << 1;
  _363 = (signed short) extra_bits$2_256;
  if (_363 < 0)
    goto <bb 27>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 27> [5.77%]:
  accum_680 = accum_679 | 1;

  <bb 28> [11.55%]:
  # accum_681 = PHI <accum_679(26), accum_680(27)>
  accum_692 = extra_bits$0_299 << 1;
  _359 = (signed short) extra_bits$1_234;
  if (_359 < 0)
    goto <bb 29>; [50.00%]
  else
    goto <bb 30>; [50.00%]

  <bb 29> [5.77%]:
  accum_693 = accum_692 | 1;

  <bb 30> [11.55%]:
  # accum_694 = PHI <accum_692(28), accum_693(29)>
  _297 = (signed short) extra_bits$0_299;
  pretmp_508 = y_51(D)->mantissa[0];
  _486 = prephitmp_484 << 1;
  if (_297 >= 0)
    goto <bb 31>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 31> [5.77%]:
  if (pretmp_508 > accum_694)
    goto <bb 42>; [5.00%]
  else
    goto <bb 32>; [95.00%]

  <bb 32> [5.48%]:
  pretmp_574 = y_51(D)->mantissa[1];
  if (pretmp_508 < accum_694)
    goto <bb 33>; [5.00%]
  else
    goto <bb 34>; [95.00%]

  <bb 33> [0.27%]:
  pretmp_464 = y_51(D)->mantissa[3];
  pretmp_617 = y_51(D)->mantissa[2];
  goto <bb 41>; [100.00%]

  <bb 34> [5.34%]:
  if (pretmp_574 > accum_681)
    goto <bb 42>; [5.00%]
  else
    goto <bb 35>; [95.00%]

  <bb 35> [5.07%]:
  pretmp_34 = y_51(D)->mantissa[2];
  if (pretmp_574 < accum_681)
    goto <bb 36>; [5.00%]
  else
    goto <bb 37>; [95.00%]

  <bb 36> [0.25%]:
  pretmp_504 = y_51(D)->mantissa[3];
  goto <bb 41>; [100.00%]

  <bb 37> [4.90%]:
  if (pretmp_34 > accum_668)
    goto <bb 42>; [5.00%]
  else
    goto <bb 38>; [95.00%]

  <bb 38> [4.66%]:
  pretmp_702 = y_51(D)->mantissa[3];
  if (pretmp_34 < accum_668)
    goto <bb 41>; [5.00%]
  else
    goto <bb 39>; [95.00%]

  <bb 39> [4.53%]:
  if (accum_655 < pretmp_702)
    goto <bb 42>; [5.00%]
  else
    goto <bb 41>; [95.00%]

  <bb 40> [5.78%]:
  pretmp_468 = y_51(D)->mantissa[3];
  pretmp_557 = y_51(D)->mantissa[2];
  pretmp_612 = y_51(D)->mantissa[1];

  <bb 41> [10.72%]:
  # prephitmp_558 = PHI <pretmp_468(40), pretmp_504(36), pretmp_702(38), pretmp_702(39), pretmp_464(33)>
  # prephitmp_460 = PHI <pretmp_557(40), pretmp_34(36), pretmp_34(38), pretmp_34(39), pretmp_617(33)>
  # prephitmp_456 = PHI <pretmp_612(40), pretmp_574(36), pretmp_574(38), pretmp_574(39), pretmp_574(33)>
  accum_570 = (unsigned int) accum_655;
  _571 = (unsigned int) prephitmp_558;
  accum_572 = accum_570 - _571;
  _575 = accum_572 >> 16;
  _576 = (short unsigned int) _575;
  _577 = _576 & 1;
  _578 = accum_655 - prephitmp_558;
  accum_586 = (unsigned int) accum_668;
  _587 = (unsigned int) prephitmp_460;
  accum_588 = accum_586 - _587;
  _589 = (unsigned int) _577;
  accum_590 = accum_588 - _589;
  _591 = accum_590 >> 16;
  _592 = (short unsigned int) _591;
  _593 = _592 & 1;
  _594 = (short unsigned int) accum_590;
  accum_602 = (unsigned int) accum_681;
  _603 = (unsigned int) prephitmp_456;
  accum_604 = accum_602 - _603;
  _605 = (unsigned int) _593;
  accum_606 = accum_604 - _605;
  _607 = accum_606 >> 16;
  _608 = (short unsigned int) _607;
  _609 = _608 & 1;
  _610 = (short unsigned int) accum_606;
  accum_618 = (unsigned int) accum_694;
  _619 = (unsigned int) pretmp_508;
  accum_620 = accum_618 - _619;
  _621 = (unsigned int) _609;
  accum_622 = accum_620 - _621;
  _626 = (short unsigned int) accum_622;
  accum_522 = _486 | 1;

  <bb 42> [11.55%]:
  # accum_523 = PHI <_486(39), accum_522(41), _486(31), _486(34), _486(37)>
  # extra_bits$0_47 = PHI <accum_694(39), _626(41), accum_694(31), accum_694(34), accum_694(37)>
  # extra_bits$1_521 = PHI <accum_681(39), _610(41), accum_681(31), accum_681(34), accum_681(37)>
  # extra_bits$2_293 = PHI <accum_668(39), _594(41), accum_668(31), accum_668(34), accum_668(37)>
  # extra_bits$3_250 = PHI <accum_655(39), _578(41), accum_655(31), accum_655(34), accum_655(37)>
  MEM[(short unsigned int *)z_52(D) + 10B] = accum_523;
  accum_534 = prephitmp_259 << 1;
  _274 = (signed short) prephitmp_484;
  if (_274 < 0)
    goto <bb 43>; [50.00%]
  else
    goto <bb 44>; [50.00%]

  <bb 43> [5.77%]:
  accum_535 = accum_534 | 1;

  <bb 44> [11.55%]:
  # accum_536 = PHI <accum_534(42), accum_535(43)>
  MEM[(short unsigned int *)z_52(D) + 8B] = accum_536;
  accum_547 = prephitmp_291 << 1;
  _343 = (signed short) prephitmp_259;
  if (_343 < 0)
    goto <bb 45>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 45> [5.77%]:
  accum_548 = accum_547 | 1;

  <bb 46> [11.55%]:
  # accum_549 = PHI <accum_547(44), accum_548(45)>
  MEM[(short unsigned int *)z_52(D) + 6B] = accum_549;
  accum_560 = _519 << 1;
  _342 = (signed short) prephitmp_291;
  if (_342 < 0)
    goto <bb 47>; [50.00%]
  else
    goto <bb 48>; [50.00%]

  <bb 47> [5.77%]:
  accum_561 = accum_560 | 1;

  <bb 48> [11.55%]:
  # accum_562 = PHI <accum_560(46), accum_561(47)>
  MEM[(short unsigned int *)z_52(D) + 4B] = accum_562;
  _36 = (unsigned short) z__exp_lsm.32_237;
  _37 = _36 + 65535;
  _38 = (short int) _37;
  _40 = (signed short) accum_562;
  if (_40 >= 0)
    goto <bb 50>; [85.00%]
  else
    goto <bb 49>; [15.00%]

  <bb 49> [0.00%]:
  z_52(D)->exp = _38;
  MEM[(short unsigned int *)&locx + 10B] = accum_705;
  MEM[(short unsigned int *)&locx + 8B] = accum_720;
  MEM[(short unsigned int *)&locx + 6B] = accum_733;
  MEM[(short unsigned int *)&locx + 4B] = accum_746;
  goto <bb 62> (<L54>); [0.00%]

  <bb 50> [11.55%]:
  # _519 = PHI <accum_562(48), 0(22)>
  # extra_bits$0_299 = PHI <extra_bits$0_47(48), 0(22)>
  # extra_bits$1_234 = PHI <extra_bits$1_521(48), 0(22)>
  # extra_bits$2_256 = PHI <extra_bits$2_293(48), 0(22)>
  # extra_bits$3_327 = PHI <extra_bits$3_250(48), 0(22)>
  # z__exp_lsm.32_237 = PHI <_38(48), _29(22)>
  # locx__lsm.34_125 = PHI <accum_705(48), _801(22)>
  # locx__lsm.36_119 = PHI <accum_720(48), _792(22)>
  # locx__lsm.38_317 = PHI <accum_733(48), _783(22)>
  # locx__lsm.40_518 = PHI <accum_746(48), _774(22)>
  # prephitmp_259 = PHI <accum_536(48), 0(22)>
  # prephitmp_291 = PHI <accum_549(48), 0(22)>
  # prephitmp_484 = PHI <accum_523(48), 0(22)>
  accum_705 = locx__lsm.34_125 << 1;
  accum_718 = locx__lsm.36_119 << 1;
  _711 = (signed short) locx__lsm.34_125;
  if (_711 < 0)
    goto <bb 51>; [50.00%]
  else
    goto <bb 52>; [50.00%]

  <bb 51> [5.77%]:
  accum_719 = accum_718 | 1;

  <bb 52> [11.55%]:
  # accum_720 = PHI <accum_718(50), accum_719(51)>
  accum_731 = locx__lsm.38_317 << 1;
  _707 = (signed short) locx__lsm.36_119;
  if (_707 < 0)
    goto <bb 53>; [50.00%]
  else
    goto <bb 54>; [50.00%]

  <bb 53> [5.77%]:
  accum_732 = accum_731 | 1;

  <bb 54> [11.55%]:
  # accum_733 = PHI <accum_731(52), accum_732(53)>
  accum_744 = locx__lsm.40_518 << 1;
  _18 = (signed short) locx__lsm.38_317;
  if (_18 < 0)
    goto <bb 55>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 55> [5.77%]:
  accum_745 = accum_744 | 1;

  <bb 56> [11.55%]:
  # accum_746 = PHI <accum_744(54), accum_745(55)>
  accum_653 = extra_bits$3_327 << 1;
  _290 = (signed short) locx__lsm.40_518;
  if (_290 < 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  # i_598 = PHI <i_241(61), 0(2)>
<L66> [23.45%]:
  _238 = x_50(D)->mantissa[i_598];
  _239 = y_51(D)->mantissa[i_598];
  if (_238 > _239)
    goto <bb 58>; [5.00%]
  else
    goto <bb 59>; [95.00%]

  <bb 58> [7.03%]:
  __builtin_memmove (x_50(D), z_52(D), 12);
  goto <bb 62> (<L54>); [100.00%]

  <bb 59> [22.28%]:
  if (_238 < _239)
    goto <bb 60>; [5.00%]
  else
    goto <bb 61>; [95.00%]

  <bb 60> [1.11%]:
  __builtin_memmove (y_51(D), z_52(D), 12);
  goto <bb 62> (<L54>); [100.00%]

  <bb 61> [21.17%]:
  i_241 = i_598 + 1;
  if (i_241 != 4)
    goto <bb 57> (<L66>); [72.30%]
  else
    goto <bb 58>; [27.70%]

<L54> [34.61%]:
  _170 = z_52(D)->type;
  _171 = _170 + 255;
  if (_171 <= 1)
    goto <bb 63>; [57.79%]
  else
    goto <bb 81>; [42.21%]

  <bb 63> [20.00%]:
  _249 = &z_52(D)->mantissa;

  <bb 64> [80.00%]:
  # i_597 = PHI <i_258(64), 0(63)>
  # n_583 = PHI <n_257(64), 0(63)>
  _251 = (long unsigned int) i_597;
  _252 = _251 * 2;
  _253 = _249 + _252;
  _254 = *_253;
  _255 = (int) _254;
  n_257 = _255 | n_583;
  i_258 = i_597 + 1;
  if (i_258 != 4)
    goto <bb 64>; [75.00%]
  else
    goto <bb 65>; [25.00%]

  <bb 65> [20.00%]:
  if (n_257 == 0)
    goto <bb 66>; [33.00%]
  else
    goto <bb 80>; [67.00%]

  <bb 66> [6.60%]:
  __builtin_puts (&"Error:  zero significand in denormalize"[0]);
  pretmp_347 = z_52(D)->type;
  goto <bb 80>; [100.00%]

  <bb 67> [2.62%]:
  _267 = (unsigned short) _341;
  _269 = _267 + 1;
  _270 = (short int) _269;
  z_52(D)->exp = _270;
  if (prephitmp_309 != 0)
    goto <bb 69>; [54.00%]
  else
    goto <bb 81>; [46.00%]

  <bb 68> [2.01%]:
  _292 = accum_398 | 1;
  MEM[(short unsigned int *)z_52(D) + 10B] = _292;
  goto <bb 82>; [100.00%]

  <bb 69> [4.02%]:
  accum_355 = MEM[(short unsigned int *)z_52(D) + 4B];
  _356 = accum_355 & 1;
  accum_357 = accum_355 >> 1;
  MEM[(short unsigned int *)z_52(D) + 4B] = accum_357;
  accum_368 = MEM[(short unsigned int *)z_52(D) + 6B];
  _369 = accum_368 & 1;
  accum_370 = accum_368 >> 1;
  if (_356 != 0)
    goto <bb 70>; [50.00%]
  else
    goto <bb 71>; [50.00%]

  <bb 70> [2.01%]:
  accum_371 = accum_370 | 32768;

  <bb 71> [4.02%]:
  # accum_372 = PHI <accum_370(69), accum_371(70)>
  MEM[(short unsigned int *)z_52(D) + 6B] = accum_372;
  accum_381 = MEM[(short unsigned int *)z_52(D) + 8B];
  _382 = accum_381 & 1;
  accum_383 = accum_381 >> 1;
  if (_369 != 0)
    goto <bb 72>; [50.00%]
  else
    goto <bb 73>; [50.00%]

  <bb 72> [2.01%]:
  accum_384 = accum_383 | 32768;

  <bb 73> [4.02%]:
  # accum_385 = PHI <accum_383(71), accum_384(72)>
  MEM[(short unsigned int *)z_52(D) + 8B] = accum_385;
  accum_394 = MEM[(short unsigned int *)z_52(D) + 10B];
  _395 = accum_394 & 1;
  accum_396 = accum_394 >> 1;
  if (_382 != 0)
    goto <bb 74>; [50.00%]
  else
    goto <bb 75>; [50.00%]

  <bb 74> [2.01%]:
  accum_397 = accum_396 | 32768;

  <bb 75> [4.02%]:
  # accum_398 = PHI <accum_396(73), accum_397(74)>
  MEM[(short unsigned int *)z_52(D) + 10B] = accum_398;
  if (_395 != 0)
    goto <bb 68>; [50.00%]
  else
    goto <bb 82>; [50.00%]

  <bb 76> [14.77%]:
  if (prephitmp_309 != 0)
    goto <bb 77>; [45.88%]
  else
    goto <bb 81>; [54.12%]

  <bb 77> [6.78%]:
  pretmp_490 = MEM[(short unsigned int *)z_52(D) + 10B];

  <bb 78> [10.80%]:
  # prephitmp_489 = PHI <pretmp_490(77), prephitmp_424(82)>
  _248 = prephitmp_489 & 65528;
  z_52(D)->mantissa[3] = _248;

  <bb 79> [81.50%]:
  extra_bits ={v} {CLOBBER};
  locx ={v} {CLOBBER};
  return;

  <bb 80> [20.00%]:
  # prephitmp_309 = PHI <pretmp_347(66), _170(65)>
  _341 = z_52(D)->exp;
  _344 = (int) _341;
  _345 = _344 + 32767;
  exponent_difference_348 = (long int) _345;
  if (_341 == -32768)
    goto <bb 67>; [13.12%]
  else
    goto <bb 76>; [86.88%]

  <bb 81> [70.70%]:
  goto <bb 79>; [100.00%]

  <bb 82> [4.02%]:
  # prephitmp_424 = PHI <accum_398(75), _292(68)>
  goto <bb 78>; [100.00%]

}



;; Function AddSubInternalFPF (AddSubInternalFPF, funcdef_no=49, decl_uid=2819, cgraph_uid=49, symbol_order=49)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
operation = &NONLOCAL
x = &NONLOCAL
y = &NONLOCAL
z = &NONLOCAL
_1 = *x
_2 = _1
_3 = _2
_3 = &NONLOCAL
_4 = *y
_5 = _4
_6 = _3
_6 = _5
doubledereftmp(18) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(18)
_7 = *x + 8
_8 = *y + 8
_9 = _7
_9 = _8
derefaddrtmp(22) = &NULL
*z + 8 = derefaddrtmp(22)
doubledereftmp(23) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(23)
doubledereftmp(24) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(24)
doubledereftmp(25) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(25)
_10 = *z + 8
_11 = _10
_11 = operation
*z + 8 = _11
locx = *x + UNKNOWN
locy = *y + UNKNOWN
_12 = locx
_13 = _12
_14 = locy
_15 = _14
exponent_difference_62 = _13
exponent_difference_62 = _15
_298 = _548
_298 = _555
cstore_254 = &NONLOCAL
cstore_254 = &NONLOCAL
*z = cstore_254
_17 = locx
*z + 8 = _17
*z + 16 = _12
locy__lsm.61_395 = locy
locy__lsm.62_408 = &NULL
locy__lsm.63_421 = locy
locy__lsm.64_423 = &NULL
locy__lsm.65_434 = locy
locy__lsm.66_436 = &NULL
locy__lsm.59_447 = locy
locy__lsm.60_449 = &NULL
locy = &NULL
locy = &NULL
locy = &NULL
locy = &NONLOCAL
_191 = accum_538
_191 = &NONLOCAL
locy__lsm.59_348 = _191
locy__lsm.60_354 = &NONLOCAL
locy__lsm.59_374 = locy__lsm.59_366
locy__lsm.59_374 = locy__lsm.59_348
locy__lsm.60_476 = locy__lsm.60_344
locy__lsm.60_476 = locy__lsm.60_354
i_193 = i_307
i_193 = &NONLOCAL
i_307 = i_193
i_307 = &NULL
locy__lsm.59_475 = locy__lsm.59_374
locy__lsm.59_475 = locy__lsm.59_447
locy__lsm.61_338 = locy__lsm.61_305
locy__lsm.61_338 = locy__lsm.61_395
locy__lsm.63_572 = locy__lsm.63_260
locy__lsm.63_572 = locy__lsm.63_421
locy__lsm.65_130 = locy__lsm.65_258
locy__lsm.65_130 = locy__lsm.65_434
accum_495 = locy__lsm.61_338
_496 = accum_495 + UNKNOWN
accum_497 = accum_495
accum_497 = &NONLOCAL
locy__lsm.61_305 = accum_497
locy__lsm.62_261 = &NONLOCAL
accum_508 = locy__lsm.63_572
_509 = accum_508 + UNKNOWN
accum_510 = accum_508
accum_510 = &NONLOCAL
accum_511 = accum_510
accum_511 = &NONLOCAL
accum_512 = accum_510
accum_512 = accum_511
locy__lsm.63_260 = accum_512
locy__lsm.64_259 = &NONLOCAL
accum_521 = locy__lsm.65_130
_522 = accum_521 + UNKNOWN
accum_523 = accum_521
accum_523 = &NONLOCAL
accum_524 = accum_523
accum_524 = &NONLOCAL
accum_525 = accum_523
accum_525 = accum_524
locy__lsm.65_258 = accum_525
locy__lsm.66_491 = &NONLOCAL
accum_534 = locy__lsm.59_475
_535 = accum_534 + UNKNOWN
accum_536 = accum_534
accum_536 = &NONLOCAL
accum_537 = accum_536
accum_537 = &NONLOCAL
accum_538 = accum_536
accum_538 = accum_537
locy__lsm.59_366 = accum_538
locy__lsm.60_344 = &NONLOCAL
locy__lsm.65_559 = locy__lsm.65_258
locy__lsm.64_479 = locy__lsm.64_259
locy__lsm.63_580 = locy__lsm.63_260
locy__lsm.62_558 = locy__lsm.62_261
locy__lsm.61_478 = locy__lsm.61_305
locy__lsm.59_474 = locy__lsm.59_374
locy__lsm.60_477 = locy__lsm.60_476
locy__lsm.66_472 = locy__lsm.66_491
locy = locy__lsm.59_474
locy = locy__lsm.61_478
locy = locy__lsm.63_580
locy = locy__lsm.65_559
*z = _1
_19 = locx
*z + 8 = _19
*z + 16 = _12
_21 = exponent_difference_62
locx__lsm.69_164 = locx
locx__lsm.70_359 = &NULL
locx__lsm.71_346 = locx
locx__lsm.72_345 = &NULL
locx__lsm.73_310 = locx
locx__lsm.74_144 = &NULL
locx__lsm.67_55 = locx
locx__lsm.68_242 = &NULL
locx = &NULL
locx = &NULL
locx = &NULL
locx = &NONLOCAL
_214 = accum_611
_214 = &NONLOCAL
locx__lsm.67_92 = _214
locx__lsm.68_83 = &NONLOCAL
locx__lsm.67_350 = locx__lsm.67_94
locx__lsm.67_350 = locx__lsm.67_92
locx__lsm.68_311 = locx__lsm.68_93
locx__lsm.68_311 = locx__lsm.68_83
i_216 = i_68
i_216 = &NONLOCAL
i_68 = i_216
i_68 = &NULL
locx__lsm.67_349 = locx__lsm.67_350
locx__lsm.67_349 = locx__lsm.67_55
locx__lsm.69_549 = locx__lsm.69_53
locx__lsm.69_549 = locx__lsm.69_164
locx__lsm.71_196 = locx__lsm.71_564
locx__lsm.71_196 = locx__lsm.71_346
locx__lsm.73_342 = locx__lsm.73_296
locx__lsm.73_342 = locx__lsm.73_310
accum_568 = locx__lsm.69_549
_569 = accum_568 + UNKNOWN
accum_570 = accum_568
accum_570 = &NONLOCAL
locx__lsm.69_53 = accum_570
locx__lsm.70_52 = &NONLOCAL
accum_581 = locx__lsm.71_196
_582 = accum_581 + UNKNOWN
accum_583 = accum_581
accum_583 = &NONLOCAL
accum_584 = accum_583
accum_584 = &NONLOCAL
accum_585 = accum_583
accum_585 = accum_584
locx__lsm.71_564 = accum_585
locx__lsm.72_542 = &NONLOCAL
accum_594 = locx__lsm.73_342
_595 = accum_594 + UNKNOWN
accum_596 = accum_594
accum_596 = &NONLOCAL
accum_597 = accum_596
accum_597 = &NONLOCAL
accum_598 = accum_596
accum_598 = accum_597
locx__lsm.73_296 = accum_598
locx__lsm.74_469 = &NONLOCAL
accum_607 = locx__lsm.67_349
_608 = accum_607 + UNKNOWN
accum_609 = accum_607
accum_609 = &NONLOCAL
accum_610 = accum_609
accum_610 = &NONLOCAL
accum_611 = accum_609
accum_611 = accum_610
locx__lsm.67_94 = accum_611
locx__lsm.68_93 = &NONLOCAL
locx__lsm.70_213 = locx__lsm.70_52
locx__lsm.69_18 = locx__lsm.69_53
locx__lsm.73_567 = locx__lsm.73_296
locx__lsm.68_557 = locx__lsm.68_311
locx__lsm.67_486 = locx__lsm.67_350
locx__lsm.74_485 = locx__lsm.74_469
locx__lsm.72_550 = locx__lsm.72_542
locx__lsm.71_547 = locx__lsm.71_564
locx = locx__lsm.67_486
locx = locx__lsm.69_18
locx = locx__lsm.71_547
locx = locx__lsm.73_567
*z = _4
_23 = locy
_24 = _23
_24 = operation
*z + 8 = _24
*z + 16 = _14
_26 = locx
_27 = locy
_28 = _26
_28 = _27
i_189 = i_87
i_189 = &NONLOCAL
borrow_288 = _102
borrow_288 = &NULL
_29 = locy
_30 = locx
accum_95 = _30
_96 = _29
accum_97 = accum_95
accum_97 = _96
_98 = borrow_288
accum_99 = accum_97
accum_99 = _98
_100 = accum_99
_100 = &NONLOCAL
_101 = _100
_102 = _101 + UNKNOWN
_103 = accum_99
*z + UNKNOWN = _103
i_87 = i_189
i_87 = &NONLOCAL
_25 = _102
_31 = _27
_31 = operation
*z + 8 = _31
i_504 = i_82
i_504 = &NONLOCAL
borrow_379 = _110
borrow_379 = &NULL
_32 = *z + UNKNOWN
_104 = _32
_106 = borrow_379
_118 = _104
_118 = _106
accum_107 = _118
_108 = accum_107
_108 = &NONLOCAL
_109 = _108
_110 = _109 + UNKNOWN
_111 = accum_107
*z + UNKNOWN = _111
i_82 = i_504
i_82 = &NONLOCAL
_33 = z + UNKNOWN
i_483 = i_120
i_483 = &NULL
n_482 = n_119
n_482 = &NULL
_113 = i_483
_114 = _113
_114 = &NONLOCAL
_115 = _33 + UNKNOWN
_116 = *_115
_117 = _116
n_119 = _117
n_119 = n_482
i_120 = i_483
i_120 = &NONLOCAL
n_22 = n_119
derefaddrtmp(192) = &NULL
*z = derefaddrtmp(192)
derefaddrtmp(193) = &NULL
*z + 8 = derefaddrtmp(193)
_34 = locx
_35 = locy
_556 = *z + 32
_128 = _556
z__lsm.51_331 = *z + 80
z__lsm.52_332 = &NULL
z__lsm.53_240 = *z + 64
z__lsm.54_63 = &NULL
z__lsm.55_337 = *z + 48
z__lsm.56_341 = &NULL
z__exp_lsm.57_468 = *z + 16
z__exp_lsm.58_461 = &NULL
_621 = _233
_621 = _556
z__lsm.51_50 = z__lsm.51_155
z__lsm.51_50 = z__lsm.51_331
z__lsm.53_363 = z__lsm.53_190
z__lsm.53_363 = z__lsm.53_240
z__lsm.55_625 = z__lsm.55_217
z__lsm.55_625 = z__lsm.55_337
z__exp_lsm.57_291 = z__exp_lsm.57_520
z__exp_lsm.57_291 = z__exp_lsm.57_468
accum_422 = z__lsm.51_50
accum_424 = accum_422
accum_424 = &NONLOCAL
z__lsm.51_155 = accum_424
z__lsm.52_460 = &NONLOCAL
accum_435 = z__lsm.53_363
accum_437 = accum_435
accum_437 = &NONLOCAL
_212 = accum_422
accum_438 = accum_437
accum_438 = &NONLOCAL
accum_439 = accum_437
accum_439 = accum_438
z__lsm.53_190 = accum_439
z__lsm.54_533 = &NONLOCAL
accum_448 = z__lsm.55_625
accum_450 = accum_448
accum_450 = &NONLOCAL
_577 = accum_435
accum_451 = accum_450
accum_451 = &NONLOCAL
accum_452 = accum_450
accum_452 = accum_451
z__lsm.55_217 = accum_452
z__lsm.56_153 = &NONLOCAL
accum_463 = _621
accum_463 = &NONLOCAL
_576 = accum_448
accum_464 = accum_463
accum_464 = &NONLOCAL
accum_465 = accum_463
accum_465 = accum_464
*z + 32 = accum_465
_229 = z__exp_lsm.57_291
_230 = _229
_231 = _230
_231 = &NONLOCAL
_232 = _231
z__exp_lsm.57_520 = _232
z__exp_lsm.58_507 = &NONLOCAL
_233 = *z + 32
_234 = _233
z__lsm.56_481 = z__lsm.56_153
z__lsm.51_561 = z__lsm.51_155
z__lsm.53_593 = z__lsm.53_190
z__lsm.55_470 = z__lsm.55_217
z__lsm.52_554 = z__lsm.52_460
z__exp_lsm.58_471 = z__exp_lsm.58_507
z__exp_lsm.57_552 = z__exp_lsm.57_520
z__lsm.54_551 = z__lsm.54_533
*z + 80 = z__lsm.51_561
*z + 64 = z__lsm.53_593
*z + 48 = z__lsm.55_470
*z + 16 = z__exp_lsm.57_552
i_503 = i_80
i_503 = &NONLOCAL
carry_378 = _127
carry_378 = &NULL
_36 = locy
_37 = locx
accum_121 = _37
_122 = _36
accum_123 = accum_121
accum_123 = _122
_124 = carry_378
accum_125 = accum_123
accum_125 = _124
_126 = accum_125
_126 = &NONLOCAL
_127 = _126
_129 = accum_125
*z + UNKNOWN = _129
i_80 = i_503
i_80 = &NONLOCAL
_484 = _127
_38 = *z + 16
_39 = _38
_40 = _39
_40 = &NONLOCAL
_41 = _40
*z + 16 = _41
_42 = z + UNKNOWN
accum_112 = *z + 32
_353 = accum_112 + UNKNOWN
accum_352 = accum_112
accum_352 = &NONLOCAL
_131 = i_139
_132 = _131
_132 = &NONLOCAL
_133 = _42 + UNKNOWN
accum_134 = *_133
_135 = accum_134 + UNKNOWN
accum_136 = accum_134
accum_136 = &NONLOCAL
accum_137 = accum_136
accum_137 = &NONLOCAL
accum_166 = accum_136
accum_166 = accum_137
accum_138 = accum_166
accum_138 = accum_352
_360 = _133
_360 = _42
_356 = _135
_356 = _353
i_192 = i_139
i_192 = &NULL
*_360 = accum_138
i_139 = i_192
i_139 = &NONLOCAL
_43 = *z + 32
_44 = _43
_44 = &NONLOCAL
*z + 32 = _44
derefaddrtmp(286) = &NONLOCAL
*z = derefaddrtmp(286)
_45 = *z + 32
_46 = _45
derefaddrtmp(289) = &NONLOCAL
*z = derefaddrtmp(289)
derefaddrtmp(290) = &NONLOCAL
*z = derefaddrtmp(290)
derefaddrtmp(291) = &NONLOCAL
*z + 16 = derefaddrtmp(291)
derefaddrtmp(292) = &NONLOCAL
*z + 8 = derefaddrtmp(292)
derefaddrtmp(293) = &NONLOCAL
*z + 32 = derefaddrtmp(293)
derefaddrtmp(294) = &NULL
*z + 48 = derefaddrtmp(294)
derefaddrtmp(295) = &NULL
*z + 64 = derefaddrtmp(295)
derefaddrtmp(296) = &NULL
*z + 80 = derefaddrtmp(296)
i_272 = i_239
i_272 = &NULL
_236 = *x + UNKNOWN
_237 = *y + UNKNOWN
doubledereftmp(301) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(301)
doubledereftmp(302) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(302)
i_239 = i_272
i_239 = &NONLOCAL
doubledereftmp(303) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(303)
_142 = *z
_143 = _142
_143 = &NONLOCAL
_247 = z + UNKNOWN
i_358 = i_256
i_358 = &NULL
n_357 = n_255
n_357 = &NULL
_249 = i_358
_250 = _249
_250 = &NONLOCAL
_251 = _247 + UNKNOWN
_252 = *_251
_253 = _252
n_255 = _253
n_255 = n_357
i_256 = i_358
i_256 = &NONLOCAL
n_488 = n_255
ESCAPED = &STRING
_265 = _270
_267 = _265
_267 = &NONLOCAL
_268 = _267
*z + 16 = _268
_271 = *z
_290 = accum_413
_290 = &NONLOCAL
*z + 80 = _290
accum_370 = *z + 32
_371 = accum_370 + UNKNOWN
accum_372 = accum_370
accum_372 = &NONLOCAL
*z + 32 = accum_372
accum_383 = *z + 48
_384 = accum_383 + UNKNOWN
accum_385 = accum_383
accum_385 = &NONLOCAL
accum_386 = accum_385
accum_386 = &NONLOCAL
accum_387 = accum_385
accum_387 = accum_386
*z + 48 = accum_387
accum_396 = *z + 64
_397 = accum_396 + UNKNOWN
accum_398 = accum_396
accum_398 = &NONLOCAL
accum_399 = accum_398
accum_399 = &NONLOCAL
accum_400 = accum_398
accum_400 = accum_399
*z + 64 = accum_400
accum_409 = *z + 80
_410 = accum_409 + UNKNOWN
accum_411 = accum_409
accum_411 = &NONLOCAL
accum_412 = accum_411
accum_412 = &NONLOCAL
accum_413 = accum_411
accum_413 = accum_412
*z + 80 = accum_413
_244 = *z
_245 = *z + 80
_246 = _245 + UNKNOWN
*z + 80 = _246
_270 = *z + 16
_369 = _270
_289 = _369
_289 = &NONLOCAL
exponent_difference_343 = _289

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"operation"[label="operation = { 5 }"];
"x"[label="x = { 5 }"];
"y"[label="y = { 5 }"];
"z"[label="z = { 5 }"];
"_1";
"_2";
"_3"[label="_3 = { 5 }"];
"_4";
"_5";
"_6";
"doubledereftmp(18)";
"_7";
"_8";
"_9";
"derefaddrtmp(22)"[label="derefaddrtmp(22) = { 1 }"];
"doubledereftmp(23)";
"doubledereftmp(24)";
"doubledereftmp(25)";
"_10";
"_11";
"locx"[label="locx = { 1 5 }"];
"locy"[label="locy = { 1 5 }"];
"_12";
"_13";
"_14";
"_15";
"exponent_difference_62";
"_548";
"_555";
"_298";
"cstore_254"[label="cstore_254 = { 5 }"];
"_17";
"locy__lsm.62_408"[label="locy__lsm.62_408 = { 1 }"];
"locy__lsm.64_423"[label="locy__lsm.64_423 = { 1 }"];
"locy__lsm.66_436"[label="locy__lsm.66_436 = { 1 }"];
"locy__lsm.60_449"[label="locy__lsm.60_449 = { 1 }"];
"locy__lsm.60_354"[label="locy__lsm.60_354 = { 5 }"];
"locy__lsm.60_476";
"locy__lsm.60_344"[label="locy__lsm.60_344 = { 5 }"];
"i_193"[label="i_193 = { 1 5 }"];
"_496";
"locy__lsm.62_261"[label="locy__lsm.62_261 = { 5 }"];
"_509";
"locy__lsm.64_259"[label="locy__lsm.64_259 = { 5 }"];
"_522";
"locy__lsm.66_491"[label="locy__lsm.66_491 = { 5 }"];
"_535";
"locy__lsm.64_479";
"locy__lsm.62_558";
"locy__lsm.60_477";
"locy__lsm.66_472";
"_19";
"_21";
"locx__lsm.70_359"[label="locx__lsm.70_359 = { 1 }"];
"locx__lsm.72_345"[label="locx__lsm.72_345 = { 1 }"];
"locx__lsm.74_144"[label="locx__lsm.74_144 = { 1 }"];
"locx__lsm.68_242"[label="locx__lsm.68_242 = { 1 }"];
"locx__lsm.68_83"[label="locx__lsm.68_83 = { 5 }"];
"locx__lsm.68_311";
"locx__lsm.68_93"[label="locx__lsm.68_93 = { 5 }"];
"i_216"[label="i_216 = { 1 5 }"];
"_569";
"locx__lsm.70_52"[label="locx__lsm.70_52 = { 5 }"];
"_582";
"locx__lsm.72_542"[label="locx__lsm.72_542 = { 5 }"];
"_595";
"locx__lsm.74_469"[label="locx__lsm.74_469 = { 5 }"];
"_608";
"locx__lsm.70_213";
"locx__lsm.68_557";
"locx__lsm.74_485";
"locx__lsm.72_550";
"_23";
"_24";
"_26";
"_27";
"_28";
"i_189"[label="i_189 = { 5 }"];
"borrow_288"[label="borrow_288 = { 1 }"];
"_102";
"_29";
"_30";
"accum_95";
"_96";
"accum_97";
"_98";
"accum_99";
"_100"[label="_100 = { 5 }"];
"_101";
"_103";
"_25";
"_31";
"i_504"[label="i_504 = { 5 }"];
"borrow_379"[label="borrow_379 = { 1 }"];
"_110";
"_32";
"_104";
"_106";
"_118";
"accum_107";
"_108"[label="_108 = { 5 }"];
"_109";
"_111";
"_33";
"i_483"[label="i_483 = { 1 5 }"];
"n_482"[label="n_482 = { 1 }"];
"_113";
"_114"[label="_114 = { 5 }"];
"_115";
"_116";
"_117";
"n_22";
"derefaddrtmp(192)"[label="derefaddrtmp(192) = { 1 }"];
"derefaddrtmp(193)"[label="derefaddrtmp(193) = { 1 }"];
"_34";
"_35";
"_556";
"_128";
"z__lsm.51_331";
"z__lsm.52_332"[label="z__lsm.52_332 = { 1 }"];
"z__lsm.53_240";
"z__lsm.54_63"[label="z__lsm.54_63 = { 1 }"];
"z__lsm.55_337";
"z__lsm.56_341"[label="z__lsm.56_341 = { 1 }"];
"z__exp_lsm.57_468";
"z__exp_lsm.58_461"[label="z__exp_lsm.58_461 = { 1 }"];
"_621";
"_233";
"z__lsm.51_50"[label="z__lsm.51_50 = { 5 }"];
"z__lsm.53_363"[label="z__lsm.53_363 = { 5 }"];
"z__lsm.55_625"[label="z__lsm.55_625 = { 5 }"];
"z__exp_lsm.57_291"[label="z__exp_lsm.57_291 = { 5 }"];
"z__lsm.52_460"[label="z__lsm.52_460 = { 5 }"];
"_212";
"z__lsm.54_533"[label="z__lsm.54_533 = { 5 }"];
"_577";
"z__lsm.56_153"[label="z__lsm.56_153 = { 5 }"];
"accum_463"[label="accum_463 = { 5 }"];
"_576";
"accum_464"[label="accum_464 = { 5 }"];
"accum_465";
"z__exp_lsm.58_507"[label="z__exp_lsm.58_507 = { 5 }"];
"_234";
"z__lsm.56_481";
"z__lsm.51_561";
"z__lsm.53_593";
"z__lsm.55_470";
"z__lsm.52_554";
"z__exp_lsm.58_471";
"z__exp_lsm.57_552";
"z__lsm.54_551";
"i_503"[label="i_503 = { 5 }"];
"carry_378"[label="carry_378 = { 1 5 }"];
"_36";
"_37";
"accum_121";
"_122";
"accum_123";
"_129";
"_484";
"_38";
"_39";
"_40"[label="_40 = { 5 }"];
"_41";
"_42";
"accum_112";
"_353";
"accum_352"[label="accum_352 = { 5 }"];
"_131";
"i_139"[label="i_139 = { 1 5 }"];
"_132"[label="_132 = { 5 }"];
"_133";
"accum_134";
"_135";
"accum_136"[label="accum_136 = { 5 }"];
"accum_137"[label="accum_137 = { 5 }"];
"accum_166";
"accum_138";
"_360";
"_356";
"_43";
"_44"[label="_44 = { 5 }"];
"derefaddrtmp(286)"[label="derefaddrtmp(286) = { 5 }"];
"_45";
"_46";
"derefaddrtmp(289)"[label="derefaddrtmp(289) = { 5 }"];
"derefaddrtmp(290)"[label="derefaddrtmp(290) = { 5 }"];
"derefaddrtmp(291)"[label="derefaddrtmp(291) = { 5 }"];
"derefaddrtmp(292)"[label="derefaddrtmp(292) = { 5 }"];
"derefaddrtmp(293)"[label="derefaddrtmp(293) = { 5 }"];
"derefaddrtmp(294)"[label="derefaddrtmp(294) = { 1 }"];
"derefaddrtmp(295)"[label="derefaddrtmp(295) = { 1 }"];
"derefaddrtmp(296)"[label="derefaddrtmp(296) = { 1 }"];
"i_272"[label="i_272 = { 1 5 }"];
"_236";
"_237";
"doubledereftmp(301)";
"doubledereftmp(302)";
"doubledereftmp(303)";
"_142";
"_143"[label="_143 = { 5 }"];
"_247";
"i_358"[label="i_358 = { 1 5 }"];
"n_357"[label="n_357 = { 1 }"];
"_249";
"_250"[label="_250 = { 5 }"];
"_251";
"_252";
"_253";
"n_488";
"puts";
"_265";
"_270";
"_267"[label="_267 = { 5 }"];
"_268";
"_271";
"_290"[label="_290 = { 5 }"];
"accum_413";
"accum_370";
"_371";
"accum_372"[label="accum_372 = { 5 }"];
"accum_383";
"_384";
"accum_385"[label="accum_385 = { 5 }"];
"accum_386"[label="accum_386 = { 5 }"];
"accum_387";
"accum_396";
"_397";
"accum_398"[label="accum_398 = { 5 }"];
"accum_399"[label="accum_399 = { 5 }"];
"accum_400";
"accum_409";
"_410";
"accum_411"[label="accum_411 = { 5 }"];
"accum_412"[label="accum_412 = { 5 }"];
"_244";
"_245";
"_246";
"_369";
"_289"[label="_289 = { 5 }"];
"exponent_difference_343";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*operation";
"*x";
"*y";
"*z";
"*_1";
"*_2";
"*_3";
"*_4";
"*_5";
"*_6";
"*doubledereftmp(18)";
"*_7";
"*_8";
"*_9";
"*derefaddrtmp(22)";
"*doubledereftmp(23)";
"*doubledereftmp(24)";
"*doubledereftmp(25)";
"*_10";
"*_11";
"*locx";
"*locy";
"*_12";
"*_13";
"*_14";
"*_15";
"*exponent_difference_62";
"*_548";
"*_555";
"*_298";
"*cstore_254";
"*_17";
"*locy__lsm.61_395";
"*locy__lsm.62_408";
"*locy__lsm.63_421";
"*locy__lsm.64_423";
"*locy__lsm.65_434";
"*locy__lsm.66_436";
"*locy__lsm.59_447";
"*locy__lsm.60_449";
"*_191";
"*accum_538";
"*locy__lsm.59_348";
"*locy__lsm.60_354";
"*locy__lsm.59_374";
"*locy__lsm.59_366";
"*locy__lsm.60_476";
"*locy__lsm.60_344";
"*i_193";
"*i_307";
"*locy__lsm.59_475";
"*locy__lsm.61_338";
"*locy__lsm.61_305";
"*locy__lsm.63_572";
"*locy__lsm.63_260";
"*locy__lsm.65_130";
"*locy__lsm.65_258";
"*accum_495";
"*_496";
"*accum_497";
"*locy__lsm.62_261";
"*accum_508";
"*_509";
"*accum_510";
"*accum_511";
"*accum_512";
"*locy__lsm.64_259";
"*accum_521";
"*_522";
"*accum_523";
"*accum_524";
"*accum_525";
"*locy__lsm.66_491";
"*accum_534";
"*_535";
"*accum_536";
"*accum_537";
"*locy__lsm.65_559";
"*locy__lsm.64_479";
"*locy__lsm.63_580";
"*locy__lsm.62_558";
"*locy__lsm.61_478";
"*locy__lsm.59_474";
"*locy__lsm.60_477";
"*locy__lsm.66_472";
"*_19";
"*_21";
"*locx__lsm.69_164";
"*locx__lsm.70_359";
"*locx__lsm.71_346";
"*locx__lsm.72_345";
"*locx__lsm.73_310";
"*locx__lsm.74_144";
"*locx__lsm.67_55";
"*locx__lsm.68_242";
"*_214";
"*accum_611";
"*locx__lsm.67_92";
"*locx__lsm.68_83";
"*locx__lsm.67_350";
"*locx__lsm.67_94";
"*locx__lsm.68_311";
"*locx__lsm.68_93";
"*i_216";
"*i_68";
"*locx__lsm.67_349";
"*locx__lsm.69_549";
"*locx__lsm.69_53";
"*locx__lsm.71_196";
"*locx__lsm.71_564";
"*locx__lsm.73_342";
"*locx__lsm.73_296";
"*accum_568";
"*_569";
"*accum_570";
"*locx__lsm.70_52";
"*accum_581";
"*_582";
"*accum_583";
"*accum_584";
"*accum_585";
"*locx__lsm.72_542";
"*accum_594";
"*_595";
"*accum_596";
"*accum_597";
"*accum_598";
"*locx__lsm.74_469";
"*accum_607";
"*_608";
"*accum_609";
"*accum_610";
"*locx__lsm.70_213";
"*locx__lsm.69_18";
"*locx__lsm.73_567";
"*locx__lsm.68_557";
"*locx__lsm.67_486";
"*locx__lsm.74_485";
"*locx__lsm.72_550";
"*locx__lsm.71_547";
"*_23";
"*_24";
"*_26";
"*_27";
"*_28";
"*i_189";
"*i_87";
"*borrow_288";
"*_102";
"*_29";
"*_30";
"*accum_95";
"*_96";
"*accum_97";
"*_98";
"*accum_99";
"*_100";
"*_101";
"*_103";
"*_25";
"*_31";
"*i_504";
"*i_82";
"*borrow_379";
"*_110";
"*_32";
"*_104";
"*_106";
"*_118";
"*accum_107";
"*_108";
"*_109";
"*_111";
"*_33";
"*i_483";
"*i_120";
"*n_482";
"*n_119";
"*_113";
"*_114";
"*_115";
"*_116";
"*_117";
"*n_22";
"*derefaddrtmp(192)";
"*derefaddrtmp(193)";
"*_34";
"*_35";
"*_556";
"*_128";
"*z__lsm.51_331";
"*z__lsm.52_332";
"*z__lsm.53_240";
"*z__lsm.54_63";
"*z__lsm.55_337";
"*z__lsm.56_341";
"*z__exp_lsm.57_468";
"*z__exp_lsm.58_461";
"*_621";
"*_233";
"*z__lsm.51_50";
"*z__lsm.51_155";
"*z__lsm.53_363";
"*z__lsm.53_190";
"*z__lsm.55_625";
"*z__lsm.55_217";
"*z__exp_lsm.57_291";
"*z__exp_lsm.57_520";
"*accum_422";
"*accum_424";
"*z__lsm.52_460";
"*accum_435";
"*accum_437";
"*_212";
"*accum_438";
"*accum_439";
"*z__lsm.54_533";
"*accum_448";
"*accum_450";
"*_577";
"*accum_451";
"*accum_452";
"*z__lsm.56_153";
"*accum_463";
"*_576";
"*accum_464";
"*accum_465";
"*_229";
"*_230";
"*_231";
"*_232";
"*z__exp_lsm.58_507";
"*_234";
"*z__lsm.56_481";
"*z__lsm.51_561";
"*z__lsm.53_593";
"*z__lsm.55_470";
"*z__lsm.52_554";
"*z__exp_lsm.58_471";
"*z__exp_lsm.57_552";
"*z__lsm.54_551";
"*i_503";
"*i_80";
"*carry_378";
"*_127";
"*_36";
"*_37";
"*accum_121";
"*_122";
"*accum_123";
"*_124";
"*accum_125";
"*_126";
"*_129";
"*_484";
"*_38";
"*_39";
"*_40";
"*_41";
"*_42";
"*accum_112";
"*_353";
"*accum_352";
"*_131";
"*i_139";
"*_132";
"*_133";
"*accum_134";
"*_135";
"*accum_136";
"*accum_137";
"*accum_166";
"*accum_138";
"*_360";
"*_356";
"*i_192";
"*_43";
"*_44";
"*derefaddrtmp(286)";
"*_45";
"*_46";
"*derefaddrtmp(289)";
"*derefaddrtmp(290)";
"*derefaddrtmp(291)";
"*derefaddrtmp(292)";
"*derefaddrtmp(293)";
"*derefaddrtmp(294)";
"*derefaddrtmp(295)";
"*derefaddrtmp(296)";
"*i_272";
"*i_239";
"*_236";
"*_237";
"*doubledereftmp(301)";
"*doubledereftmp(302)";
"*doubledereftmp(303)";
"*_142";
"*_143";
"*_247";
"*i_358";
"*i_256";
"*n_357";
"*n_255";
"*_249";
"*_250";
"*_251";
"*_252";
"*_253";
"*n_488";
"*puts";
"*_265";
"*_270";
"*_267";
"*_268";
"*_271";
"*_290";
"*accum_413";
"*accum_370";
"*_371";
"*accum_372";
"*accum_383";
"*_384";
"*accum_385";
"*accum_386";
"*accum_387";
"*accum_396";
"*_397";
"*accum_398";
"*accum_399";
"*accum_400";
"*accum_409";
"*_410";
"*accum_411";
"*accum_412";
"*_244";
"*_245";
"*_246";
"*_369";
"*_289";
"*exponent_difference_343";

  // Edges in the constraint graph:
"*ESCAPED" -> "ESCAPED";
"*x" -> "_1";
"_1" -> "_2";
"_2" -> "_3";
"*y" -> "_4";
"_4" -> "_5";
"_3" -> "_6";
"_5" -> "_6";
"_7" -> "_9";
"_8" -> "_9";
"operation" -> "_11";
"_10" -> "_11";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locx" -> "_12";
"_12" -> "_13";
"locy" -> "_14";
"_14" -> "_15";
"_13" -> "exponent_difference_62";
"_15" -> "exponent_difference_62";
"_548" -> "_298";
"_555" -> "_298";
"locx" -> "_17";
"locy__lsm.60_354" -> "locy__lsm.60_476";
"locy__lsm.60_344" -> "locy__lsm.60_476";
"i_193" -> "i_193";
"i_193" -> "i_193";
"locy__lsm.64_259" -> "locy__lsm.64_479";
"locy__lsm.62_261" -> "locy__lsm.62_558";
"locy__lsm.60_476" -> "locy__lsm.60_477";
"locy__lsm.66_491" -> "locy__lsm.66_472";
"locx" -> "_19";
"exponent_difference_62" -> "_21";
"locx__lsm.68_83" -> "locx__lsm.68_311";
"locx__lsm.68_93" -> "locx__lsm.68_311";
"i_216" -> "i_216";
"i_216" -> "i_216";
"locx__lsm.70_52" -> "locx__lsm.70_213";
"locx__lsm.68_311" -> "locx__lsm.68_557";
"locx__lsm.74_469" -> "locx__lsm.74_485";
"locx__lsm.72_542" -> "locx__lsm.72_550";
"locy" -> "_23";
"operation" -> "_24";
"_23" -> "_24";
"locx" -> "_26";
"locy" -> "_27";
"_26" -> "_28";
"_27" -> "_28";
"i_189" -> "i_189";
"i_189" -> "i_189";
"_102" -> "borrow_288";
"locy" -> "_29";
"locx" -> "_30";
"_30" -> "accum_95";
"_29" -> "_96";
"accum_95" -> "accum_97";
"_96" -> "accum_97";
"borrow_288" -> "_98";
"accum_97" -> "accum_99";
"_98" -> "accum_99";
"accum_99" -> "_100";
"_100" -> "_101";
"accum_99" -> "_103";
"_102" -> "_25";
"operation" -> "_31";
"_27" -> "_31";
"i_504" -> "i_504";
"i_504" -> "i_504";
"_110" -> "borrow_379";
"_32" -> "_104";
"borrow_379" -> "_106";
"_104" -> "_118";
"_106" -> "_118";
"_118" -> "accum_107";
"accum_107" -> "_108";
"_108" -> "_109";
"accum_107" -> "_111";
"i_483" -> "i_483";
"i_483" -> "i_483";
"n_482" -> "n_482";
"n_482" -> "n_482";
"_117" -> "n_482";
"i_483" -> "_113";
"_113" -> "_114";
"*_115" -> "_116";
"_116" -> "_117";
"n_482" -> "n_22";
"locx" -> "_34";
"locy" -> "_35";
"_556" -> "_128";
"_556" -> "_621";
"_233" -> "_621";
"z__lsm.51_331" -> "z__lsm.51_50";
"z__lsm.51_50" -> "z__lsm.51_50";
"z__lsm.51_50" -> "z__lsm.51_50";
"z__lsm.51_50" -> "z__lsm.51_50";
"z__lsm.51_50" -> "z__lsm.51_50";
"z__lsm.53_240" -> "z__lsm.53_363";
"z__lsm.53_363" -> "z__lsm.53_363";
"z__lsm.53_363" -> "z__lsm.53_363";
"z__lsm.53_363" -> "z__lsm.53_363";
"z__lsm.53_363" -> "z__lsm.53_363";
"z__lsm.53_363" -> "z__lsm.53_363";
"z__lsm.53_363" -> "z__lsm.53_363";
"z__lsm.55_337" -> "z__lsm.55_625";
"z__lsm.55_625" -> "z__lsm.55_625";
"z__lsm.55_625" -> "z__lsm.55_625";
"z__lsm.55_625" -> "z__lsm.55_625";
"z__lsm.55_625" -> "z__lsm.55_625";
"z__lsm.55_625" -> "z__lsm.55_625";
"z__lsm.55_625" -> "z__lsm.55_625";
"z__exp_lsm.57_468" -> "z__exp_lsm.57_291";
"z__exp_lsm.57_291" -> "z__exp_lsm.57_291";
"z__exp_lsm.57_291" -> "z__exp_lsm.57_291";
"z__exp_lsm.57_291" -> "z__exp_lsm.57_291";
"z__exp_lsm.57_291" -> "z__exp_lsm.57_291";
"z__exp_lsm.57_291" -> "z__exp_lsm.57_291";
"z__exp_lsm.57_291" -> "z__exp_lsm.57_291";
"z__lsm.51_50" -> "_212";
"z__lsm.53_363" -> "_577";
"_621" -> "accum_463";
"z__lsm.55_625" -> "_576";
"accum_463" -> "accum_464";
"accum_463" -> "accum_465";
"accum_464" -> "accum_465";
"_233" -> "_234";
"z__lsm.56_153" -> "z__lsm.56_481";
"z__lsm.51_50" -> "z__lsm.51_561";
"z__lsm.53_363" -> "z__lsm.53_593";
"z__lsm.55_625" -> "z__lsm.55_470";
"z__lsm.52_460" -> "z__lsm.52_554";
"z__exp_lsm.58_507" -> "z__exp_lsm.58_471";
"z__exp_lsm.57_291" -> "z__exp_lsm.57_552";
"z__lsm.54_533" -> "z__lsm.54_551";
"i_503" -> "i_503";
"i_503" -> "i_503";
"carry_378" -> "carry_378";
"carry_378" -> "carry_378";
"accum_123" -> "carry_378";
"carry_378" -> "carry_378";
"carry_378" -> "carry_378";
"carry_378" -> "carry_378";
"locy" -> "_36";
"locx" -> "_37";
"_37" -> "accum_121";
"_36" -> "_122";
"accum_121" -> "accum_123";
"_122" -> "accum_123";
"carry_378" -> "_129";
"carry_378" -> "_484";
"_38" -> "_39";
"_39" -> "_40";
"_40" -> "_41";
"accum_112" -> "accum_352";
"i_139" -> "_131";
"i_139" -> "i_139";
"i_139" -> "i_139";
"_131" -> "_132";
"*_133" -> "accum_134";
"accum_134" -> "accum_136";
"accum_136" -> "accum_137";
"accum_136" -> "accum_166";
"accum_137" -> "accum_166";
"accum_352" -> "accum_138";
"accum_166" -> "accum_138";
"_42" -> "_360";
"_133" -> "_360";
"_353" -> "_356";
"_135" -> "_356";
"_43" -> "_44";
"_45" -> "_46";
"i_272" -> "i_272";
"i_272" -> "i_272";
"*z" -> "_142";
"_142" -> "_143";
"i_358" -> "i_358";
"i_358" -> "i_358";
"n_357" -> "n_357";
"n_357" -> "n_357";
"_253" -> "n_357";
"i_358" -> "_249";
"_249" -> "_250";
"*_251" -> "_252";
"_252" -> "_253";
"n_357" -> "n_488";
"_270" -> "_265";
"_265" -> "_267";
"_267" -> "_268";
"*z" -> "_271";
"accum_413" -> "_290";
"accum_411" -> "accum_413";
"accum_412" -> "accum_413";
"accum_370" -> "accum_372";
"accum_383" -> "accum_385";
"accum_385" -> "accum_386";
"accum_385" -> "accum_387";
"accum_386" -> "accum_387";
"accum_396" -> "accum_398";
"accum_398" -> "accum_399";
"accum_398" -> "accum_400";
"accum_399" -> "accum_400";
"accum_409" -> "accum_411";
"accum_411" -> "accum_412";
"*z" -> "_244";
"_270" -> "_369";
"_369" -> "_289";
"_289" -> "exponent_difference_343";
"NONLOCAL" -> "*ESCAPED";
"_1" -> "*z";
"_4" -> "*z";
"cstore_254" -> "*z";
"derefaddrtmp(192)" -> "*z";
"derefaddrtmp(286)" -> "*z";
"derefaddrtmp(289)" -> "*z";
"derefaddrtmp(290)" -> "*z";
"accum_138" -> "*_360";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"operation" [label="\N\n_1 = *operation\l_4 = *operation\ldoubledereftmp(18) = *operation + UNKNOWN\l_7 = *operation + 8\l_8 = *operation + 8\ldoubledereftmp(23) = *operation + UNKNOWN\ldoubledereftmp(24) = *operation + UNKNOWN\ldoubledereftmp(25) = *operation + UNKNOWN\l_10 = *operation + 8\llocx = *operation + UNKNOWN\llocy = *operation + UNKNOWN\l_32 = *operation + UNKNOWN\l_33 = operation + UNKNOWN\l_556 = *operation + 32\lz__lsm.51_331 = *operation + 80\lz__lsm.53_240 = *operation + 64\lz__lsm.55_337 = *operation + 48\lz__exp_lsm.57_468 = *operation + 16\l_233 = *operation + 32\l_38 = *operation + 16\l_42 = operation + UNKNOWN\laccum_112 = *operation + 32\l_43 = *operation + 32\l_45 = *operation + 32\l_236 = *operation + UNKNOWN\l_237 = *operation + UNKNOWN\ldoubledereftmp(301) = *operation + UNKNOWN\ldoubledereftmp(302) = *operation + UNKNOWN\ldoubledereftmp(303) = *operation + UNKNOWN\l_142 = *operation\l_247 = operation + UNKNOWN\l_265 = *operation + 16\laccum_370 = *operation + 32\laccum_383 = *operation + 48\laccum_396 = *operation + 64\laccum_409 = *operation + 80\l_245 = *operation + 80\l*operation + UNKNOWN = doubledereftmp(18)\l*operation + UNKNOWN = doubledereftmp(23)\l*operation + UNKNOWN = doubledereftmp(24)\l*operation + UNKNOWN = doubledereftmp(25)\l*operation + UNKNOWN = exponent_difference_62\l*operation + UNKNOWN = accum_99\l*operation + UNKNOWN = _118\l*operation + UNKNOWN = doubledereftmp(301)\l*operation + UNKNOWN = doubledereftmp(302)\l*operation + UNKNOWN = doubledereftmp(303)\l*operation = operation\l*operation = _1\l*operation = _4\l*operation = derefaddrtmp(22)\l*operation + 8 = operation\l*operation + 8 = derefaddrtmp(22)\l*operation + 8 = _11\l*operation + 8 = locx\l*operation + 8 = locy\l*operation + 16 = operation\l*operation + 16 = locx\l*operation + 16 = locy\l*operation + 16 = z__exp_lsm.57_291\l*operation + 16 = _40\l*operation + 16 = _267\l*operation + 32 = operation\l*operation + 32 = accum_463\l*operation + 32 = _44\l*operation + 32 = accum_372\l*operation + 48 = derefaddrtmp(22)\l*operation + 48 = z__lsm.55_625\l*operation + 48 = accum_385\l*operation + 64 = derefaddrtmp(22)\l*operation + 64 = z__lsm.53_363\l*operation + 64 = accum_398\l*operation + 80 = derefaddrtmp(22)\l*operation + 80 = z__lsm.51_50\l*operation + 80 = _290\l*operation + 80 = _246\l"];
"_1";
"_3";
"_6";
"doubledereftmp(18)";
"_7";
"_8";
"_9";
"derefaddrtmp(22)";
"doubledereftmp(23)";
"doubledereftmp(24)";
"doubledereftmp(25)";
"_10";
"_11";
"locx" [label="\N\n_569 = locx + UNKNOWN\l_582 = locx + UNKNOWN\l_595 = locx + UNKNOWN\l_608 = locx + UNKNOWN\l"];
"locy" [label="\N\n_496 = locy + UNKNOWN\l_509 = locy + UNKNOWN\l_522 = locy + UNKNOWN\l_535 = locy + UNKNOWN\l"];
"exponent_difference_62";
"_548";
"_555";
"_298";
"i_193";
"_496";
"_509";
"_522";
"_535";
"_569";
"_582";
"_595";
"_608";
"borrow_288";
"_102";
"accum_99" [label="\N\n_102 = accum_99 + UNKNOWN\l"];
"borrow_379";
"_110";
"_32";
"_118";
"_108" [label="\N\n_110 = _108 + UNKNOWN\l"];
"_33" [label="\N\n_115 = _33 + UNKNOWN\l"];
"n_482";
"_115" [label="\N\n_116 = *_115\l"];
"_116";
"_556";
"z__lsm.51_331";
"z__lsm.53_240";
"z__lsm.55_337";
"z__exp_lsm.57_468";
"_621";
"_233";
"z__lsm.51_50";
"z__lsm.53_363";
"z__lsm.55_625";
"z__exp_lsm.57_291";
"accum_463";
"_38";
"_40";
"_42" [label="\N\n_133 = _42 + UNKNOWN\l"];
"accum_112" [label="\N\n_353 = accum_112 + UNKNOWN\l"];
"_353";
"accum_352";
"_133" [label="\N\naccum_134 = *_133\l"];
"accum_134" [label="\N\n_135 = accum_134 + UNKNOWN\l"];
"_135";
"accum_136";
"accum_138";
"_360" [label="\N\n*_360 = accum_138\l"];
"_356";
"_43";
"_44";
"_45";
"_236";
"_237";
"doubledereftmp(301)";
"doubledereftmp(302)";
"doubledereftmp(303)";
"_142";
"_247" [label="\N\n_251 = _247 + UNKNOWN\l"];
"n_357";
"_251" [label="\N\n_252 = *_251\l"];
"_252";
"puts";
"_265";
"_267";
"_290";
"accum_370" [label="\N\n_371 = accum_370 + UNKNOWN\l"];
"_371";
"accum_372";
"accum_383" [label="\N\n_384 = accum_383 + UNKNOWN\l"];
"_384";
"accum_385";
"accum_396" [label="\N\n_397 = accum_396 + UNKNOWN\l"];
"_397";
"accum_398";
"accum_409" [label="\N\n_410 = accum_409 + UNKNOWN\l"];
"_410";
"_245" [label="\N\n_246 = _245 + UNKNOWN\l"];
"_246";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "doubledereftmp(18)";
"STOREDANYTHING" -> "_7";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "doubledereftmp(23)";
"STOREDANYTHING" -> "doubledereftmp(24)";
"STOREDANYTHING" -> "doubledereftmp(25)";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "locx";
"STOREDANYTHING" -> "locy";
"STOREDANYTHING" -> "_496";
"STOREDANYTHING" -> "_509";
"STOREDANYTHING" -> "_522";
"STOREDANYTHING" -> "_535";
"STOREDANYTHING" -> "_569";
"STOREDANYTHING" -> "_582";
"STOREDANYTHING" -> "_595";
"STOREDANYTHING" -> "_608";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_110";
"STOREDANYTHING" -> "_32";
"STOREDANYTHING" -> "_33";
"STOREDANYTHING" -> "_115";
"STOREDANYTHING" -> "_556";
"STOREDANYTHING" -> "z__lsm.51_331";
"STOREDANYTHING" -> "z__lsm.53_240";
"STOREDANYTHING" -> "z__lsm.55_337";
"STOREDANYTHING" -> "z__exp_lsm.57_468";
"STOREDANYTHING" -> "_233";
"STOREDANYTHING" -> "_38";
"STOREDANYTHING" -> "_42";
"STOREDANYTHING" -> "accum_112";
"STOREDANYTHING" -> "_353";
"STOREDANYTHING" -> "_133";
"STOREDANYTHING" -> "_135";
"STOREDANYTHING" -> "_43";
"STOREDANYTHING" -> "_45";
"STOREDANYTHING" -> "_236";
"STOREDANYTHING" -> "_237";
"STOREDANYTHING" -> "doubledereftmp(301)";
"STOREDANYTHING" -> "doubledereftmp(302)";
"STOREDANYTHING" -> "doubledereftmp(303)";
"STOREDANYTHING" -> "_247";
"STOREDANYTHING" -> "_251";
"STOREDANYTHING" -> "_265";
"STOREDANYTHING" -> "accum_370";
"STOREDANYTHING" -> "_371";
"STOREDANYTHING" -> "accum_383";
"STOREDANYTHING" -> "_384";
"STOREDANYTHING" -> "accum_396";
"STOREDANYTHING" -> "_397";
"STOREDANYTHING" -> "accum_409";
"STOREDANYTHING" -> "_410";
"STOREDANYTHING" -> "_245";
"STOREDANYTHING" -> "_246";
"operation" -> "_11";
"operation" -> "locy";
"_1" -> "_3";
"_1" -> "_6";
"_3" -> "_6";
"_7" -> "_9";
"_8" -> "_9";
"_10" -> "_11";
"locx" -> "exponent_difference_62";
"locy" -> "exponent_difference_62";
"exponent_difference_62" -> "accum_99";
"borrow_288" -> "accum_99";
"_102" -> "borrow_288";
"borrow_379" -> "_118";
"_110" -> "borrow_379";
"_32" -> "_118";
"_118" -> "_108";
"_116" -> "n_482";
"_556" -> "_621";
"z__lsm.51_331" -> "z__lsm.51_50";
"z__lsm.53_240" -> "z__lsm.53_363";
"z__lsm.55_337" -> "z__lsm.55_625";
"z__exp_lsm.57_468" -> "z__exp_lsm.57_291";
"_621" -> "accum_463";
"_233" -> "_621";
"_38" -> "_40";
"_42" -> "_360";
"accum_112" -> "accum_352";
"_353" -> "_356";
"accum_352" -> "accum_138";
"_133" -> "_360";
"accum_134" -> "accum_136";
"_135" -> "_356";
"accum_136" -> "accum_138";
"_43" -> "_44";
"_252" -> "n_357";
"_265" -> "_267";
"accum_370" -> "accum_372";
"accum_383" -> "accum_385";
"accum_396" -> "accum_398";
"accum_409" -> "_290";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _1\l"];
"STOREDANYTHING";
"INTEGER";
"operation" [label="\N\n_1 = *operation\l_1 = *operation\ldoubledereftmp(18) = *operation + UNKNOWN\l_7 = *operation + 8\l_8 = *operation + 8\ldoubledereftmp(23) = *operation + UNKNOWN\ldoubledereftmp(24) = *operation + UNKNOWN\ldoubledereftmp(25) = *operation + UNKNOWN\l_10 = *operation + 8\llocx = *operation + UNKNOWN\llocy = *operation + UNKNOWN\l_32 = *operation + UNKNOWN\l_33 = operation + UNKNOWN\l_556 = *operation + 32\lz__lsm.51_331 = *operation + 80\lz__lsm.53_240 = *operation + 64\lz__lsm.55_337 = *operation + 48\lz__exp_lsm.57_468 = *operation + 16\l_233 = *operation + 32\l_38 = *operation + 16\l_42 = operation + UNKNOWN\laccum_112 = *operation + 32\l_43 = *operation + 32\l_45 = *operation + 32\l_236 = *operation + UNKNOWN\l_237 = *operation + UNKNOWN\ldoubledereftmp(301) = *operation + UNKNOWN\ldoubledereftmp(302) = *operation + UNKNOWN\ldoubledereftmp(303) = *operation + UNKNOWN\l_142 = *operation\l_247 = operation + UNKNOWN\l_265 = *operation + 16\laccum_370 = *operation + 32\laccum_383 = *operation + 48\laccum_396 = *operation + 64\laccum_409 = *operation + 80\l_245 = *operation + 80\l*operation + UNKNOWN = doubledereftmp(18)\l*operation + UNKNOWN = doubledereftmp(23)\l*operation + UNKNOWN = doubledereftmp(24)\l*operation + UNKNOWN = doubledereftmp(25)\l*operation + UNKNOWN = exponent_difference_62\l*operation + UNKNOWN = accum_99\l*operation + UNKNOWN = _118\l*operation + UNKNOWN = doubledereftmp(301)\l*operation + UNKNOWN = doubledereftmp(302)\l*operation + UNKNOWN = doubledereftmp(303)\l*operation = operation\l*operation = _1\l*operation = _1\l*operation = derefaddrtmp(22)\l*operation + 8 = operation\l*operation + 8 = derefaddrtmp(22)\l*operation + 8 = _11\l*operation + 8 = locx\l*operation + 8 = locy\l*operation + 16 = operation\l*operation + 16 = locx\l*operation + 16 = locy\l*operation + 16 = z__exp_lsm.57_291\l*operation + 16 = _40\l*operation + 16 = _267\l*operation + 32 = operation\l*operation + 32 = accum_463\l*operation + 32 = _44\l*operation + 32 = accum_372\l*operation + 48 = derefaddrtmp(22)\l*operation + 48 = z__lsm.55_625\l*operation + 48 = accum_385\l*operation + 64 = derefaddrtmp(22)\l*operation + 64 = z__lsm.53_363\l*operation + 64 = accum_398\l*operation + 80 = derefaddrtmp(22)\l*operation + 80 = z__lsm.51_50\l*operation + 80 = _290\l*operation + 80 = _246\l"];
"_1";
"_3";
"_6";
"doubledereftmp(18)";
"_7";
"_8";
"_9";
"derefaddrtmp(22)";
"doubledereftmp(23)";
"doubledereftmp(24)";
"doubledereftmp(25)";
"_10";
"_11";
"locx" [label="\N\n_569 = locx + UNKNOWN\l_582 = locx + UNKNOWN\l_595 = locx + UNKNOWN\l_608 = locx + UNKNOWN\l"];
"locy" [label="\N\n_496 = locy + UNKNOWN\l_509 = locy + UNKNOWN\l_522 = locy + UNKNOWN\l_535 = locy + UNKNOWN\l"];
"exponent_difference_62";
"_548";
"_555";
"_298";
"i_193";
"_496";
"_509";
"_522";
"_535";
"_569";
"_582";
"_595";
"_608";
"borrow_288";
"_102";
"accum_99" [label="\N\n_102 = accum_99 + UNKNOWN\l"];
"borrow_379";
"_110";
"_32";
"_118";
"_108" [label="\N\n_110 = _108 + UNKNOWN\l"];
"_33" [label="\N\n_115 = _33 + UNKNOWN\l"];
"n_482";
"_115" [label="\N\n_116 = *_115\l"];
"_116";
"_556";
"z__lsm.51_331";
"z__lsm.53_240";
"z__lsm.55_337";
"z__exp_lsm.57_468";
"_621";
"_233";
"z__lsm.51_50";
"z__lsm.53_363";
"z__lsm.55_625";
"z__exp_lsm.57_291";
"accum_463";
"_38";
"_40";
"_42" [label="\N\n_133 = _42 + UNKNOWN\l"];
"accum_112" [label="\N\n_353 = accum_112 + UNKNOWN\l"];
"_353";
"accum_352";
"_133" [label="\N\naccum_134 = *_133\l"];
"accum_134" [label="\N\n_135 = accum_134 + UNKNOWN\l"];
"_135";
"accum_136";
"accum_138";
"_360" [label="\N\n*_360 = accum_138\l"];
"_356";
"_43";
"_44";
"_45";
"_236";
"_237";
"doubledereftmp(301)";
"doubledereftmp(302)";
"doubledereftmp(303)";
"_142";
"_247" [label="\N\n_251 = _247 + UNKNOWN\l"];
"n_357";
"_251" [label="\N\n_252 = *_251\l"];
"_252";
"puts";
"_265";
"_267";
"_290";
"accum_370" [label="\N\n_371 = accum_370 + UNKNOWN\l"];
"_371";
"accum_372";
"accum_383" [label="\N\n_384 = accum_383 + UNKNOWN\l"];
"_384";
"accum_385";
"accum_396" [label="\N\n_397 = accum_396 + UNKNOWN\l"];
"_397";
"accum_398";
"accum_409" [label="\N\n_410 = accum_409 + UNKNOWN\l"];
"_410";
"_245" [label="\N\n_246 = _245 + UNKNOWN\l"];
"_246";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "doubledereftmp(18)";
"STOREDANYTHING" -> "_7";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "doubledereftmp(23)";
"STOREDANYTHING" -> "doubledereftmp(24)";
"STOREDANYTHING" -> "doubledereftmp(25)";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "locx";
"STOREDANYTHING" -> "locy";
"STOREDANYTHING" -> "_496";
"STOREDANYTHING" -> "_509";
"STOREDANYTHING" -> "_522";
"STOREDANYTHING" -> "_535";
"STOREDANYTHING" -> "_569";
"STOREDANYTHING" -> "_582";
"STOREDANYTHING" -> "_595";
"STOREDANYTHING" -> "_608";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_110";
"STOREDANYTHING" -> "_32";
"STOREDANYTHING" -> "_33";
"STOREDANYTHING" -> "_115";
"STOREDANYTHING" -> "_556";
"STOREDANYTHING" -> "z__lsm.51_331";
"STOREDANYTHING" -> "z__lsm.53_240";
"STOREDANYTHING" -> "z__lsm.55_337";
"STOREDANYTHING" -> "z__exp_lsm.57_468";
"STOREDANYTHING" -> "_233";
"STOREDANYTHING" -> "_38";
"STOREDANYTHING" -> "_42";
"STOREDANYTHING" -> "accum_112";
"STOREDANYTHING" -> "_353";
"STOREDANYTHING" -> "_133";
"STOREDANYTHING" -> "_135";
"STOREDANYTHING" -> "_43";
"STOREDANYTHING" -> "_45";
"STOREDANYTHING" -> "_236";
"STOREDANYTHING" -> "_237";
"STOREDANYTHING" -> "doubledereftmp(301)";
"STOREDANYTHING" -> "doubledereftmp(302)";
"STOREDANYTHING" -> "doubledereftmp(303)";
"STOREDANYTHING" -> "_247";
"STOREDANYTHING" -> "_251";
"STOREDANYTHING" -> "_265";
"STOREDANYTHING" -> "accum_370";
"STOREDANYTHING" -> "_371";
"STOREDANYTHING" -> "accum_383";
"STOREDANYTHING" -> "_384";
"STOREDANYTHING" -> "accum_396";
"STOREDANYTHING" -> "_397";
"STOREDANYTHING" -> "accum_409";
"STOREDANYTHING" -> "_410";
"STOREDANYTHING" -> "_245";
"STOREDANYTHING" -> "_246";
"operation" -> "ESCAPED";
"operation" -> "_11";
"operation" -> "locy";
"_1" -> "ESCAPED";
"_1" -> "_3";
"_1" -> "_6";
"_1" -> "doubledereftmp(18)";
"_1" -> "_7";
"_1" -> "_8";
"_1" -> "doubledereftmp(23)";
"_1" -> "doubledereftmp(24)";
"_1" -> "doubledereftmp(25)";
"_1" -> "_10";
"_1" -> "locx";
"_1" -> "locy";
"_1" -> "_32";
"_1" -> "_116";
"_1" -> "_556";
"_1" -> "z__lsm.51_331";
"_1" -> "z__lsm.53_240";
"_1" -> "z__lsm.55_337";
"_1" -> "z__exp_lsm.57_468";
"_1" -> "_233";
"_1" -> "_38";
"_1" -> "accum_112";
"_1" -> "accum_134";
"_1" -> "_43";
"_1" -> "_45";
"_1" -> "_236";
"_1" -> "_237";
"_1" -> "doubledereftmp(301)";
"_1" -> "doubledereftmp(302)";
"_1" -> "doubledereftmp(303)";
"_1" -> "_142";
"_1" -> "_252";
"_1" -> "_265";
"_1" -> "accum_370";
"_1" -> "accum_383";
"_1" -> "accum_396";
"_1" -> "accum_409";
"_1" -> "_245";
"_3" -> "_6";
"doubledereftmp(18)" -> "ESCAPED";
"_7" -> "_9";
"_8" -> "_9";
"derefaddrtmp(22)" -> "ESCAPED";
"doubledereftmp(23)" -> "ESCAPED";
"doubledereftmp(24)" -> "ESCAPED";
"doubledereftmp(25)" -> "ESCAPED";
"_10" -> "_11";
"_11" -> "ESCAPED";
"locx" -> "ESCAPED";
"locx" -> "exponent_difference_62";
"locy" -> "ESCAPED";
"locy" -> "exponent_difference_62";
"exponent_difference_62" -> "ESCAPED";
"exponent_difference_62" -> "accum_99";
"borrow_288" -> "accum_99";
"_102" -> "borrow_288";
"accum_99" -> "ESCAPED";
"borrow_379" -> "_118";
"_110" -> "borrow_379";
"_32" -> "_118";
"_118" -> "ESCAPED";
"_118" -> "_108";
"_116" -> "n_482";
"_556" -> "_621";
"z__lsm.51_331" -> "z__lsm.51_50";
"z__lsm.53_240" -> "z__lsm.53_363";
"z__lsm.55_337" -> "z__lsm.55_625";
"z__exp_lsm.57_468" -> "z__exp_lsm.57_291";
"_621" -> "accum_463";
"_233" -> "_621";
"z__lsm.51_50" -> "ESCAPED";
"z__lsm.53_363" -> "ESCAPED";
"z__lsm.55_625" -> "ESCAPED";
"z__exp_lsm.57_291" -> "ESCAPED";
"accum_463" -> "ESCAPED";
"_38" -> "_40";
"_40" -> "ESCAPED";
"_42" -> "_360";
"accum_112" -> "accum_352";
"_353" -> "_356";
"accum_352" -> "accum_138";
"_133" -> "_360";
"accum_134" -> "accum_136";
"_135" -> "_356";
"accum_136" -> "accum_138";
"accum_138" -> "ESCAPED";
"_43" -> "_44";
"_44" -> "ESCAPED";
"doubledereftmp(301)" -> "ESCAPED";
"doubledereftmp(302)" -> "ESCAPED";
"doubledereftmp(303)" -> "ESCAPED";
"_252" -> "n_357";
"_265" -> "_267";
"_267" -> "ESCAPED";
"_290" -> "ESCAPED";
"accum_370" -> "accum_372";
"accum_372" -> "ESCAPED";
"accum_383" -> "accum_385";
"accum_385" -> "ESCAPED";
"accum_396" -> "accum_398";
"accum_398" -> "ESCAPED";
"accum_409" -> "_290";
"_246" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as _1
STOREDANYTHING = { }
INTEGER = { ANYTHING }
operation = { NONLOCAL }
x = { NONLOCAL } same as operation
y = { NONLOCAL } same as operation
z = { NONLOCAL } same as operation
_1 = { ESCAPED NONLOCAL }
_2 = { ESCAPED NONLOCAL } same as _1
_3 = { ESCAPED NONLOCAL }
_4 = { ESCAPED NONLOCAL } same as _1
_5 = { ESCAPED NONLOCAL } same as _1
_6 = { ESCAPED NONLOCAL }
doubledereftmp(18) = { ESCAPED NONLOCAL }
_7 = { ESCAPED NONLOCAL }
_8 = { ESCAPED NONLOCAL }
_9 = { ESCAPED NONLOCAL }
derefaddrtmp(22) = { NULL }
doubledereftmp(23) = { ESCAPED NONLOCAL }
doubledereftmp(24) = { ESCAPED NONLOCAL }
doubledereftmp(25) = { ESCAPED NONLOCAL }
_10 = { ESCAPED NONLOCAL }
_11 = { ESCAPED NONLOCAL }
locx = { NULL ESCAPED NONLOCAL }
locy = { NULL ESCAPED NONLOCAL }
_12 = { NULL ESCAPED NONLOCAL } same as locx
_13 = { NULL ESCAPED NONLOCAL } same as locx
_14 = { NULL ESCAPED NONLOCAL } same as locy
_15 = { NULL ESCAPED NONLOCAL } same as locy
exponent_difference_62 = { NULL ESCAPED NONLOCAL }
_548 = { }
_555 = { }
_298 = { }
cstore_254 = { NONLOCAL } same as operation
_17 = { NULL ESCAPED NONLOCAL } same as locx
locy__lsm.61_395 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.62_408 = { NULL } same as derefaddrtmp(22)
locy__lsm.63_421 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.64_423 = { NULL } same as derefaddrtmp(22)
locy__lsm.65_434 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.66_436 = { NULL } same as derefaddrtmp(22)
locy__lsm.59_447 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.60_449 = { NULL } same as derefaddrtmp(22)
_191 = { NULL ESCAPED NONLOCAL } same as locy
accum_538 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.59_348 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.60_354 = { NONLOCAL } same as operation
locy__lsm.59_374 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.59_366 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.60_476 = { NONLOCAL } same as operation
locy__lsm.60_344 = { NONLOCAL } same as operation
i_193 = { NULL NONLOCAL }
i_307 = { NULL NONLOCAL } same as i_193
locy__lsm.59_475 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.61_338 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.61_305 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.63_572 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.63_260 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.65_130 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.65_258 = { NULL ESCAPED NONLOCAL } same as locy
accum_495 = { NULL ESCAPED NONLOCAL } same as locy
_496 = { NULL ESCAPED NONLOCAL }
accum_497 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.62_261 = { NONLOCAL } same as operation
accum_508 = { NULL ESCAPED NONLOCAL } same as locy
_509 = { NULL ESCAPED NONLOCAL }
accum_510 = { NULL ESCAPED NONLOCAL } same as locy
accum_511 = { NULL ESCAPED NONLOCAL } same as locy
accum_512 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.64_259 = { NONLOCAL } same as operation
accum_521 = { NULL ESCAPED NONLOCAL } same as locy
_522 = { NULL ESCAPED NONLOCAL }
accum_523 = { NULL ESCAPED NONLOCAL } same as locy
accum_524 = { NULL ESCAPED NONLOCAL } same as locy
accum_525 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.66_491 = { NONLOCAL } same as operation
accum_534 = { NULL ESCAPED NONLOCAL } same as locy
_535 = { NULL ESCAPED NONLOCAL }
accum_536 = { NULL ESCAPED NONLOCAL } same as locy
accum_537 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.65_559 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.64_479 = { NONLOCAL } same as operation
locy__lsm.63_580 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.62_558 = { NONLOCAL } same as operation
locy__lsm.61_478 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.59_474 = { NULL ESCAPED NONLOCAL } same as locy
locy__lsm.60_477 = { NONLOCAL } same as operation
locy__lsm.66_472 = { NONLOCAL } same as operation
_19 = { NULL ESCAPED NONLOCAL } same as locx
_21 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
locx__lsm.69_164 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.70_359 = { NULL } same as derefaddrtmp(22)
locx__lsm.71_346 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.72_345 = { NULL } same as derefaddrtmp(22)
locx__lsm.73_310 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.74_144 = { NULL } same as derefaddrtmp(22)
locx__lsm.67_55 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.68_242 = { NULL } same as derefaddrtmp(22)
_214 = { NULL ESCAPED NONLOCAL } same as locx
accum_611 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.67_92 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.68_83 = { NONLOCAL } same as operation
locx__lsm.67_350 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.67_94 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.68_311 = { NONLOCAL } same as operation
locx__lsm.68_93 = { NONLOCAL } same as operation
i_216 = { NULL NONLOCAL } same as i_193
i_68 = { NULL NONLOCAL } same as i_193
locx__lsm.67_349 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.69_549 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.69_53 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.71_196 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.71_564 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.73_342 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.73_296 = { NULL ESCAPED NONLOCAL } same as locx
accum_568 = { NULL ESCAPED NONLOCAL } same as locx
_569 = { NULL ESCAPED NONLOCAL }
accum_570 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.70_52 = { NONLOCAL } same as operation
accum_581 = { NULL ESCAPED NONLOCAL } same as locx
_582 = { NULL ESCAPED NONLOCAL }
accum_583 = { NULL ESCAPED NONLOCAL } same as locx
accum_584 = { NULL ESCAPED NONLOCAL } same as locx
accum_585 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.72_542 = { NONLOCAL } same as operation
accum_594 = { NULL ESCAPED NONLOCAL } same as locx
_595 = { NULL ESCAPED NONLOCAL }
accum_596 = { NULL ESCAPED NONLOCAL } same as locx
accum_597 = { NULL ESCAPED NONLOCAL } same as locx
accum_598 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.74_469 = { NONLOCAL } same as operation
accum_607 = { NULL ESCAPED NONLOCAL } same as locx
_608 = { NULL ESCAPED NONLOCAL }
accum_609 = { NULL ESCAPED NONLOCAL } same as locx
accum_610 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.70_213 = { NONLOCAL } same as operation
locx__lsm.69_18 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.73_567 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.68_557 = { NONLOCAL } same as operation
locx__lsm.67_486 = { NULL ESCAPED NONLOCAL } same as locx
locx__lsm.74_485 = { NONLOCAL } same as operation
locx__lsm.72_550 = { NONLOCAL } same as operation
locx__lsm.71_547 = { NULL ESCAPED NONLOCAL } same as locx
_23 = { NULL ESCAPED NONLOCAL } same as locy
_24 = { NULL ESCAPED NONLOCAL } same as locy
_26 = { NULL ESCAPED NONLOCAL } same as locx
_27 = { NULL ESCAPED NONLOCAL } same as locy
_28 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
i_189 = { NONLOCAL } same as operation
i_87 = { NONLOCAL } same as operation
borrow_288 = { NULL ESCAPED NONLOCAL }
_102 = { NULL ESCAPED NONLOCAL }
_29 = { NULL ESCAPED NONLOCAL } same as locy
_30 = { NULL ESCAPED NONLOCAL } same as locx
accum_95 = { NULL ESCAPED NONLOCAL } same as locx
_96 = { NULL ESCAPED NONLOCAL } same as locy
accum_97 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_98 = { NULL ESCAPED NONLOCAL } same as borrow_288
accum_99 = { NULL ESCAPED NONLOCAL }
_100 = { NULL ESCAPED NONLOCAL } same as accum_99
_101 = { NULL ESCAPED NONLOCAL } same as accum_99
_103 = { NULL ESCAPED NONLOCAL } same as accum_99
_25 = { NULL ESCAPED NONLOCAL } same as _102
_31 = { NULL ESCAPED NONLOCAL } same as locy
i_504 = { NONLOCAL } same as operation
i_82 = { NONLOCAL } same as operation
borrow_379 = { NULL ESCAPED NONLOCAL }
_110 = { NULL ESCAPED NONLOCAL }
_32 = { ESCAPED NONLOCAL }
_104 = { ESCAPED NONLOCAL } same as _32
_106 = { NULL ESCAPED NONLOCAL } same as borrow_379
_118 = { NULL ESCAPED NONLOCAL }
accum_107 = { NULL ESCAPED NONLOCAL } same as _118
_108 = { NULL ESCAPED NONLOCAL }
_109 = { NULL ESCAPED NONLOCAL } same as _108
_111 = { NULL ESCAPED NONLOCAL } same as _118
_33 = { NONLOCAL }
i_483 = { NULL NONLOCAL } same as i_193
i_120 = { NULL NONLOCAL } same as i_193
n_482 = { NULL ESCAPED NONLOCAL }
n_119 = { NULL ESCAPED NONLOCAL } same as n_482
_113 = { NULL NONLOCAL } same as i_193
_114 = { NULL NONLOCAL } same as i_193
_115 = { NONLOCAL }
_116 = { ESCAPED NONLOCAL }
_117 = { ESCAPED NONLOCAL } same as _116
n_22 = { NULL ESCAPED NONLOCAL } same as n_482
derefaddrtmp(192) = { NULL } same as derefaddrtmp(22)
derefaddrtmp(193) = { NULL } same as derefaddrtmp(22)
_34 = { NULL ESCAPED NONLOCAL } same as locx
_35 = { NULL ESCAPED NONLOCAL } same as locy
_556 = { ESCAPED NONLOCAL }
_128 = { ESCAPED NONLOCAL } same as _556
z__lsm.51_331 = { ESCAPED NONLOCAL }
z__lsm.52_332 = { NULL } same as derefaddrtmp(22)
z__lsm.53_240 = { ESCAPED NONLOCAL }
z__lsm.54_63 = { NULL } same as derefaddrtmp(22)
z__lsm.55_337 = { ESCAPED NONLOCAL }
z__lsm.56_341 = { NULL } same as derefaddrtmp(22)
z__exp_lsm.57_468 = { ESCAPED NONLOCAL }
z__exp_lsm.58_461 = { NULL } same as derefaddrtmp(22)
_621 = { ESCAPED NONLOCAL }
_233 = { ESCAPED NONLOCAL }
z__lsm.51_50 = { ESCAPED NONLOCAL }
z__lsm.51_155 = { ESCAPED NONLOCAL } same as z__lsm.51_50
z__lsm.53_363 = { ESCAPED NONLOCAL }
z__lsm.53_190 = { ESCAPED NONLOCAL } same as z__lsm.53_363
z__lsm.55_625 = { ESCAPED NONLOCAL }
z__lsm.55_217 = { ESCAPED NONLOCAL } same as z__lsm.55_625
z__exp_lsm.57_291 = { ESCAPED NONLOCAL }
z__exp_lsm.57_520 = { ESCAPED NONLOCAL } same as z__exp_lsm.57_291
accum_422 = { ESCAPED NONLOCAL } same as z__lsm.51_50
accum_424 = { ESCAPED NONLOCAL } same as z__lsm.51_50
z__lsm.52_460 = { NONLOCAL } same as operation
accum_435 = { ESCAPED NONLOCAL } same as z__lsm.53_363
accum_437 = { ESCAPED NONLOCAL } same as z__lsm.53_363
_212 = { ESCAPED NONLOCAL } same as z__lsm.51_50
accum_438 = { ESCAPED NONLOCAL } same as z__lsm.53_363
accum_439 = { ESCAPED NONLOCAL } same as z__lsm.53_363
z__lsm.54_533 = { NONLOCAL } same as operation
accum_448 = { ESCAPED NONLOCAL } same as z__lsm.55_625
accum_450 = { ESCAPED NONLOCAL } same as z__lsm.55_625
_577 = { ESCAPED NONLOCAL } same as z__lsm.53_363
accum_451 = { ESCAPED NONLOCAL } same as z__lsm.55_625
accum_452 = { ESCAPED NONLOCAL } same as z__lsm.55_625
z__lsm.56_153 = { NONLOCAL } same as operation
accum_463 = { ESCAPED NONLOCAL }
_576 = { ESCAPED NONLOCAL } same as z__lsm.55_625
accum_464 = { ESCAPED NONLOCAL } same as accum_463
accum_465 = { ESCAPED NONLOCAL } same as accum_463
_229 = { ESCAPED NONLOCAL } same as z__exp_lsm.57_291
_230 = { ESCAPED NONLOCAL } same as z__exp_lsm.57_291
_231 = { ESCAPED NONLOCAL } same as z__exp_lsm.57_291
_232 = { ESCAPED NONLOCAL } same as z__exp_lsm.57_291
z__exp_lsm.58_507 = { NONLOCAL } same as operation
_234 = { ESCAPED NONLOCAL } same as _233
z__lsm.56_481 = { NONLOCAL } same as operation
z__lsm.51_561 = { ESCAPED NONLOCAL } same as z__lsm.51_50
z__lsm.53_593 = { ESCAPED NONLOCAL } same as z__lsm.53_363
z__lsm.55_470 = { ESCAPED NONLOCAL } same as z__lsm.55_625
z__lsm.52_554 = { NONLOCAL } same as operation
z__exp_lsm.58_471 = { NONLOCAL } same as operation
z__exp_lsm.57_552 = { ESCAPED NONLOCAL } same as z__exp_lsm.57_291
z__lsm.54_551 = { NONLOCAL } same as operation
i_503 = { NONLOCAL } same as operation
i_80 = { NONLOCAL } same as operation
carry_378 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_127 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_36 = { NULL ESCAPED NONLOCAL } same as locy
_37 = { NULL ESCAPED NONLOCAL } same as locx
accum_121 = { NULL ESCAPED NONLOCAL } same as locx
_122 = { NULL ESCAPED NONLOCAL } same as locy
accum_123 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_124 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
accum_125 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_126 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_129 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_484 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_38 = { ESCAPED NONLOCAL }
_39 = { ESCAPED NONLOCAL } same as _38
_40 = { ESCAPED NONLOCAL }
_41 = { ESCAPED NONLOCAL } same as _40
_42 = { NONLOCAL }
accum_112 = { ESCAPED NONLOCAL }
_353 = { ESCAPED NONLOCAL }
accum_352 = { ESCAPED NONLOCAL }
_131 = { NULL NONLOCAL } same as i_193
i_139 = { NULL NONLOCAL } same as i_193
_132 = { NULL NONLOCAL } same as i_193
_133 = { NONLOCAL }
accum_134 = { ESCAPED NONLOCAL }
_135 = { ESCAPED NONLOCAL }
accum_136 = { ESCAPED NONLOCAL }
accum_137 = { ESCAPED NONLOCAL } same as accum_136
accum_166 = { ESCAPED NONLOCAL } same as accum_136
accum_138 = { ESCAPED NONLOCAL }
_360 = { NONLOCAL }
_356 = { ESCAPED NONLOCAL }
i_192 = { NULL NONLOCAL } same as i_193
_43 = { ESCAPED NONLOCAL }
_44 = { ESCAPED NONLOCAL }
derefaddrtmp(286) = { NONLOCAL } same as operation
_45 = { ESCAPED NONLOCAL }
_46 = { ESCAPED NONLOCAL } same as _45
derefaddrtmp(289) = { NONLOCAL } same as operation
derefaddrtmp(290) = { NONLOCAL } same as operation
derefaddrtmp(291) = { NONLOCAL } same as operation
derefaddrtmp(292) = { NONLOCAL } same as operation
derefaddrtmp(293) = { NONLOCAL } same as operation
derefaddrtmp(294) = { NULL } same as derefaddrtmp(22)
derefaddrtmp(295) = { NULL } same as derefaddrtmp(22)
derefaddrtmp(296) = { NULL } same as derefaddrtmp(22)
i_272 = { NULL NONLOCAL } same as i_193
i_239 = { NULL NONLOCAL } same as i_193
_236 = { ESCAPED NONLOCAL }
_237 = { ESCAPED NONLOCAL }
doubledereftmp(301) = { ESCAPED NONLOCAL }
doubledereftmp(302) = { ESCAPED NONLOCAL }
doubledereftmp(303) = { ESCAPED NONLOCAL }
_142 = { ESCAPED NONLOCAL }
_143 = { ESCAPED NONLOCAL } same as _142
_247 = { NONLOCAL }
i_358 = { NULL NONLOCAL } same as i_193
i_256 = { NULL NONLOCAL } same as i_193
n_357 = { NULL ESCAPED NONLOCAL }
n_255 = { NULL ESCAPED NONLOCAL } same as n_357
_249 = { NULL NONLOCAL } same as i_193
_250 = { NULL NONLOCAL } same as i_193
_251 = { NONLOCAL }
_252 = { ESCAPED NONLOCAL }
_253 = { ESCAPED NONLOCAL } same as _252
n_488 = { NULL ESCAPED NONLOCAL } same as n_357
puts = { }
_265 = { ESCAPED NONLOCAL }
_270 = { ESCAPED NONLOCAL } same as _265
_267 = { ESCAPED NONLOCAL }
_268 = { ESCAPED NONLOCAL } same as _267
_271 = { ESCAPED NONLOCAL } same as _142
_290 = { ESCAPED NONLOCAL }
accum_413 = { ESCAPED NONLOCAL } same as _290
accum_370 = { ESCAPED NONLOCAL }
_371 = { ESCAPED NONLOCAL }
accum_372 = { ESCAPED NONLOCAL }
accum_383 = { ESCAPED NONLOCAL }
_384 = { ESCAPED NONLOCAL }
accum_385 = { ESCAPED NONLOCAL }
accum_386 = { ESCAPED NONLOCAL } same as accum_385
accum_387 = { ESCAPED NONLOCAL } same as accum_385
accum_396 = { ESCAPED NONLOCAL }
_397 = { ESCAPED NONLOCAL }
accum_398 = { ESCAPED NONLOCAL }
accum_399 = { ESCAPED NONLOCAL } same as accum_398
accum_400 = { ESCAPED NONLOCAL } same as accum_398
accum_409 = { ESCAPED NONLOCAL }
_410 = { ESCAPED NONLOCAL }
accum_411 = { ESCAPED NONLOCAL } same as _290
accum_412 = { ESCAPED NONLOCAL } same as _290
_244 = { ESCAPED NONLOCAL } same as _142
_245 = { ESCAPED NONLOCAL }
_246 = { ESCAPED NONLOCAL }
_369 = { ESCAPED NONLOCAL } same as _265
_289 = { ESCAPED NONLOCAL } same as _267
exponent_difference_343 = { ESCAPED NONLOCAL } same as _267


Alias information for AddSubInternalFPF

Aliased symbols

locy, UID D.2986, struct InternalFPF, is addressable
locx, UID D.2985, struct InternalFPF, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_33, points-to non-local, points-to NULL, points-to vars: { }
_42, points-to non-local, points-to vars: { }
x_58(D), points-to non-local, points-to NULL, points-to vars: { }
y_59(D), points-to non-local, points-to NULL, points-to vars: { }
z_60(D), points-to non-local, points-to NULL, points-to vars: { }
_115, points-to non-local, points-to NULL, points-to vars: { }
_133, points-to non-local, points-to NULL, points-to vars: { }
_247, points-to non-local, points-to vars: { }
_251, points-to non-local, points-to NULL, points-to vars: { }
_360, points-to non-local, points-to NULL, points-to vars: { }

;; 21 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 136 3 137 4 5 6 7 8 9 138 10 11 12 13 139 14 100 15 16 17 109 18 141 19 20 142 21 22 143 23 24 144 140 120 145 121 122 146 123 124 147 125 126 148 127 25 26 149 27 28 150 101 29 30 31 110 32 152 33 34 153 35 36 154 37 38 155 151 128 156 129 130 157 131 132 158 133 134 159 135 39 40 98 41 107 160 42 43 44 162 106 161 45 46 105 163 47 48 49 164 50 166 165 51 167 97 52 168 53 54 169 55 56 170 57 58 171 112 172 113 114 173 115 116 174 117 118 175 119 104 99 59 108 176 60 61 62 177 63 64 65 66 67 178 68 69 102 70 71 72 73 74 111 75 76 180 179 77 78 103 181 79 80 81 183 82 83 184 84 85 185 86 87 186 88 89 90 189 188 91 92 182 93 94 95 187 96
;;
;; Loop 17
;;  header 78, latch 103
;;  depth 1, outer 0
;;  nodes: 78 103
;;
;; Loop 13
;;  header 52, latch 104
;;  depth 1, outer 0
;;  nodes: 52 104 58 170 57 56 169 55 54 168 53
;;
;; Loop 4
;;  header 46, latch 105
;;  depth 1, outer 0
;;  nodes: 46 105
;;
;; Loop 3
;;  header 44, latch 106
;;  depth 1, outer 0
;;  nodes: 44 106
;;
;; Loop 2
;;  header 41, latch 107
;;  depth 1, outer 0
;;  nodes: 41 107
;;
;; Loop 5
;;  header 65, latch 64
;;  depth 1, outer 0
;;  nodes: 65 64 177 63 62
;;
;; Loop 1
;;  header 59, latch 108
;;  depth 1, outer 0
;;  nodes: 59 108
;;
;; Loop 8
;;  header 18, latch 109
;;  depth 1, outer 0
;;  nodes: 18 109 17 144 16 24 143 23 22 142 21 20 141 19
;;
;; Loop 11
;;  header 32, latch 110
;;  depth 1, outer 0
;;  nodes: 32 110 31 155 30 38 154 37 36 153 35 34 152 33
;;
;; Loop 15
;;  header 70, latch 111
;;  depth 1, outer 0
;;  nodes: 70 111 74 72
;; 2 succs { 136 3 7 6 5 8 69 102 }
;; 136 succs { 76 }
;; 3 succs { 4 137 }
;; 137 succs { 76 }
;; 4 succs { 76 }
;; 5 succs { 76 }
;; 6 succs { 76 }
;; 7 succs { 76 }
;; 8 succs { 9 12 }
;; 9 succs { 138 10 }
;; 138 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 40 }
;; 12 succs { 13 26 }
;; 13 succs { 14 139 }
;; 139 succs { 25 }
;; 14 succs { 15 100 }
;; 100 succs { 18 }
;; 15 succs { 25 }
;; 16 succs { 17 }
;; 17 succs { 109 140 }
;; 109 succs { 18 }
;; 18 succs { 19 141 }
;; 141 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 21 142 }
;; 142 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 143 }
;; 143 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 16 144 }
;; 144 succs { 17 }
;; 140 succs { 120 }
;; 120 succs { 145 121 }
;; 145 succs { 122 }
;; 121 succs { 122 }
;; 122 succs { 146 123 }
;; 146 succs { 124 }
;; 123 succs { 124 }
;; 124 succs { 147 125 }
;; 147 succs { 126 }
;; 125 succs { 126 }
;; 126 succs { 148 127 }
;; 148 succs { 25 }
;; 127 succs { 25 }
;; 25 succs { 40 }
;; 26 succs { 27 149 }
;; 149 succs { 39 }
;; 27 succs { 29 28 }
;; 28 succs { 101 150 }
;; 150 succs { 39 }
;; 101 succs { 32 }
;; 29 succs { 39 }
;; 30 succs { 31 }
;; 31 succs { 110 151 }
;; 110 succs { 32 }
;; 32 succs { 33 152 }
;; 152 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 35 153 }
;; 153 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 37 154 }
;; 154 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 30 155 }
;; 155 succs { 31 }
;; 151 succs { 128 }
;; 128 succs { 156 129 }
;; 156 succs { 130 }
;; 129 succs { 130 }
;; 130 succs { 157 131 }
;; 157 succs { 132 }
;; 131 succs { 132 }
;; 132 succs { 158 133 }
;; 158 succs { 134 }
;; 133 succs { 134 }
;; 134 succs { 159 135 }
;; 159 succs { 39 }
;; 135 succs { 39 }
;; 39 succs { 40 }
;; 40 succs { 98 99 }
;; 98 succs { 41 }
;; 41 succs { 107 160 }
;; 107 succs { 41 }
;; 160 succs { 42 }
;; 42 succs { 43 161 }
;; 43 succs { 44 }
;; 44 succs { 106 162 }
;; 162 succs { 45 }
;; 106 succs { 44 }
;; 161 succs { 45 }
;; 45 succs { 46 }
;; 46 succs { 105 163 }
;; 105 succs { 46 }
;; 163 succs { 47 }
;; 47 succs { 48 49 }
;; 48 succs { 94 }
;; 49 succs { 164 50 }
;; 164 succs { 51 }
;; 50 succs { 165 166 }
;; 166 succs { 76 }
;; 165 succs { 51 }
;; 51 succs { 97 167 }
;; 167 succs { 76 }
;; 97 succs { 52 }
;; 52 succs { 53 168 }
;; 168 succs { 54 }
;; 53 succs { 54 }
;; 54 succs { 55 169 }
;; 169 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 57 170 }
;; 170 succs { 58 }
;; 57 succs { 58 }
;; 58 succs { 104 171 }
;; 171 succs { 112 }
;; 112 succs { 172 113 }
;; 172 succs { 114 }
;; 113 succs { 114 }
;; 114 succs { 173 115 }
;; 173 succs { 116 }
;; 115 succs { 116 }
;; 116 succs { 174 117 }
;; 174 succs { 118 }
;; 117 succs { 118 }
;; 118 succs { 175 119 }
;; 175 succs { 76 }
;; 119 succs { 76 }
;; 104 succs { 52 }
;; 99 succs { 59 }
;; 59 succs { 108 176 }
;; 108 succs { 59 }
;; 176 succs { 60 }
;; 60 succs { 61 67 }
;; 61 succs { 65 }
;; 62 succs { 63 177 }
;; 177 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 }
;; 65 succs { 62 66 }
;; 66 succs { 95 }
;; 67 succs { 68 178 }
;; 178 succs { 76 }
;; 68 succs { 95 }
;; 69 succs { 94 }
;; 102 succs { 70 }
;; 70 succs { 71 72 }
;; 71 succs { 76 }
;; 72 succs { 73 74 }
;; 73 succs { 76 }
;; 74 succs { 111 75 }
;; 111 succs { 70 }
;; 75 succs { 76 }
;; 76 succs { 179 180 }
;; 180 succs { 92 }
;; 179 succs { 77 }
;; 77 succs { 78 }
;; 78 succs { 103 181 }
;; 103 succs { 78 }
;; 181 succs { 79 }
;; 79 succs { 80 182 }
;; 80 succs { 93 }
;; 81 succs { 83 183 }
;; 183 succs { 92 }
;; 82 succs { 96 }
;; 83 succs { 84 184 }
;; 184 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 185 }
;; 185 succs { 87 }
;; 86 succs { 87 }
;; 87 succs { 88 186 }
;; 186 succs { 89 }
;; 88 succs { 89 }
;; 89 succs { 82 187 }
;; 90 succs { 188 189 }
;; 189 succs { 92 }
;; 188 succs { 91 }
;; 91 succs { 92 }
;; 92 succs { 1 }
;; 182 succs { 93 }
;; 93 succs { 81 90 }
;; 94 succs { 92 }
;; 95 succs { 77 }
;; 187 succs { 96 }
;; 96 succs { 91 }
find_duplicates: <bb 94> duplicate of <bb 180>
find_duplicates: <bb 94> duplicate of <bb 183>
find_duplicates: <bb 94> duplicate of <bb 189>
find_duplicates: <bb 73> duplicate of <bb 75>
find_duplicates: <bb 164> duplicate of <bb 165>
find_duplicates: <bb 137> duplicate of <bb 166>
find_duplicates: <bb 137> duplicate of <bb 167>
find_duplicates: <bb 137> duplicate of <bb 178>
find_duplicates: <bb 161> duplicate of <bb 162>
Removing basic block 180
Removing basic block 183
Removing basic block 189
Removing basic block 75
Removing basic block 165
Removing basic block 166
Removing basic block 167
Removing basic block 178
Removing basic block 162

Symbols to be put in SSA form
{ D.3271 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 190
Number of blocks to update: 180 ( 95%)


Removing basic block 172
Removing basic block 173
Removing basic block 174
Removing basic block 175
Removing basic block 145
Removing basic block 146
Removing basic block 147
Removing basic block 148
Removing basic block 156
Removing basic block 157
Removing basic block 158
Removing basic block 159
Removing basic block 10
Removing basic block 98
Removing basic block 99
Removing basic block 102
Removing basic block 104
Removing basic block 105
Removing basic block 106
Removing basic block 109
Removing basic block 110
Removing basic block 111
Removing basic block 112
Removing basic block 120
Removing basic block 128
Removing basic block 136
Removing basic block 140
Removing basic block 141
Removing basic block 142
Removing basic block 143
Removing basic block 144
Removing basic block 151
Removing basic block 152
Removing basic block 153
Removing basic block 154
Removing basic block 155
Removing basic block 160
Merging blocks 161 and 45
Removing basic block 163
Removing basic block 164
Removing basic block 168
Removing basic block 169
Removing basic block 170
Removing basic block 171
Removing basic block 176
Removing basic block 177
Removing basic block 181
Removing basic block 182
Removing basic block 184
Removing basic block 185
Removing basic block 186
Removing basic block 187
Merging blocks 113 and 114
Merging blocks 113 and 115
Merging blocks 113 and 116
Merging blocks 113 and 117
Merging blocks 113 and 118
Merging blocks 113 and 119
Merging blocks 121 and 122
Merging blocks 121 and 123
Merging blocks 121 and 124
Merging blocks 121 and 125
Merging blocks 121 and 126
Merging blocks 121 and 127
Merging blocks 129 and 130
Merging blocks 129 and 131
Merging blocks 129 and 132
Merging blocks 129 and 133
Merging blocks 129 and 134
Merging blocks 129 and 135
AddSubInternalFPF (unsigned char operation, struct InternalFPF * x, struct InternalFPF * y, struct InternalFPF * z)
{
  _Bool locx__lsm.74;
  short unsigned int locx__lsm.73;
  _Bool locx__lsm.72;
  short unsigned int locx__lsm.71;
  _Bool locx__lsm.70;
  short unsigned int locx__lsm.69;
  _Bool locx__lsm.68;
  short unsigned int locx__lsm.67;
  _Bool locy__lsm.66;
  short unsigned int locy__lsm.65;
  _Bool locy__lsm.64;
  short unsigned int locy__lsm.63;
  _Bool locy__lsm.62;
  short unsigned int locy__lsm.61;
  _Bool locy__lsm.60;
  short unsigned int locy__lsm.59;
  _Bool z__exp_lsm.58;
  short int z__exp_lsm.57;
  _Bool z__lsm.56;
  short unsigned int z__lsm.55;
  _Bool z__lsm.54;
  short unsigned int z__lsm.53;
  _Bool z__lsm.52;
  short unsigned int z__lsm.51;
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  int n;
  long int exponent_difference;
  int i;
  short unsigned int carry;
  short unsigned int accum;
  int i;
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  short unsigned int accum;
  unsigned int accum;
  int i;
  int n;
  unsigned int accum;
  unsigned int accum;
  struct InternalFPF locy;
  struct InternalFPF locx;
  int i;
  short unsigned int carry;
  short unsigned int borrow;
  int exponent_difference;
  unsigned char _1;
  int _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;
  unsigned char _11;
  short int _12;
  int _13;
  short int _14;
  int _15;
  unsigned char _17;
  unsigned char _19;
  int _21;
  unsigned char _23;
  unsigned char _24;
  unsigned char _28;
  short unsigned int _29;
  short unsigned int _30;
  unsigned char _31;
  short unsigned int _32;
  short unsigned int[4] * _33;
  unsigned char _34;
  unsigned char _35;
  short unsigned int _36;
  short unsigned int _37;
  short int _38;
  unsigned short _39;
  unsigned short _40;
  short int _41;
  short unsigned int[4] * _42;
  short unsigned int _43;
  short unsigned int _44;
  signed short _46;
  unsigned int _96;
  unsigned int _98;
  unsigned int _100;
  short unsigned int _101;
  short unsigned int _102;
  short unsigned int _103;
  unsigned int _104;
  unsigned int _106;
  unsigned int _108;
  short unsigned int _109;
  short unsigned int _110;
  short unsigned int _111;
  long unsigned int _113;
  long unsigned int _114;
  short unsigned int * _115;
  short unsigned int _116;
  int _117;
  unsigned int _118;
  unsigned int _122;
  unsigned int _124;
  unsigned int _126;
  short unsigned int _127;
  signed short _128;
  short unsigned int _129;
  long unsigned int _131;
  long unsigned int _132;
  short unsigned int * _133;
  short unsigned int _135;
  unsigned char _142;
  unsigned char _143;
  short unsigned int pretmp_176;
  short unsigned int[4] * prephitmp_177;
  short unsigned int[4] * pretmp_178;
  short unsigned int _191;
  unsigned int _201;
  unsigned char pretmp_204;
  unsigned char prephitmp_205;
  unsigned char pretmp_206;
  unsigned char pretmp_207;
  unsigned char prephitmp_210;
  signed short _212;
  short unsigned int _214;
  short unsigned int prephitmp_226;
  unsigned short _230;
  unsigned short _231;
  short int _232;
  signed short _234;
  short unsigned int _236;
  short unsigned int _237;
  short unsigned int _246;
  long unsigned int _249;
  long unsigned int _250;
  short unsigned int * _251;
  short unsigned int _252;
  int _253;
  unsigned char cstore_254;
  unsigned short _265;
  unsigned short _267;
  short int _268;
  short int _270;
  long unsigned int _273;
  short unsigned int[4] * _274;
  short unsigned int prephitmp_277;
  long unsigned int _285;
  int _289;
  short unsigned int _290;
  _Bool _298;
  short unsigned int[4] * pretmp_322;
  unsigned char pretmp_324;
  short unsigned int _353;
  short unsigned int _356;
  short unsigned int * _360;
  int _369;
  short unsigned int _371;
  short unsigned int _384;
  short unsigned int _397;
  short unsigned int _410;
  unsigned int _416;
  unsigned int _417;
  short unsigned int prephitmp_419;
  short unsigned int pretmp_428;
  unsigned int _489;
  unsigned int _492;
  unsigned int _493;
  short unsigned int _496;
  short unsigned int prephitmp_501;
  short unsigned int pretmp_502;
  short unsigned int pretmp_505;
  short unsigned int prephitmp_506;
  short unsigned int _509;
  short unsigned int pretmp_514;
  short unsigned int pretmp_515;
  short unsigned int prephitmp_518;
  short unsigned int pretmp_519;
  short unsigned int _522;
  short unsigned int pretmp_528;
  short unsigned int prephitmp_531;
  short unsigned int pretmp_532;
  short unsigned int _535;
  short unsigned int[4] * prephitmp_540;
  _Bool _548;
  _Bool _555;
  short unsigned int _556;
  short unsigned int _569;
  unsigned int prephitmp_574;
  signed short _576;
  signed short _577;
  unsigned int _578;
  unsigned int _579;
  short unsigned int _582;
  short unsigned int prephitmp_587;
  short unsigned int pretmp_588;
  short unsigned int _595;
  short unsigned int pretmp_604;
  unsigned int prephitmp_605;
  short unsigned int _608;
  short unsigned int _621;
  unsigned int _626;
  short unsigned int pretmp_628;
  short unsigned int pretmp_630;
  short unsigned int pretmp_634;
  short unsigned int pretmp_636;

  <bb 2> [81.50%]:
  _1 = x_58(D)->type;
  _2 = (int) _1;
  _3 = _2 * 5;
  _4 = y_59(D)->type;
  _5 = (int) _4;
  _6 = _3 + _5;
  switch (_6) <default: <L63> [12.50%], case 0: <L67> [12.50%], case 1 ... 3: <L70> [12.50%], case 4: <L69> [12.50%], case 5: <L68> [12.50%], case 6 ... 7: <L71> [12.50%], case 8: <L70> [12.50%], case 9: <L69> [12.50%], case 10: <L68> [12.50%], case 11 ... 12: <L71> [12.50%], case 13: <L70> [12.50%], case 14: <L69> [12.50%], case 15 ... 17: <L68> [12.50%], case 18: <L72> [12.50%], case 19: <L69> [12.50%], case 20 ... 23: <L68> [12.50%], case 24: <L78> [12.50%]>

<L67> [10.19%]:
  __builtin_memmove (x_58(D), z_60(D), 12);
  _7 = x_58(D)->sign;
  _8 = y_59(D)->sign;
  _9 = _7 ^ _8;
  if (_9 != operation_65(D))
    goto <bb 5>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 4> [6.58%]:
  goto <bb 87> (<L63>); [100.00%]

  <bb 5> [6.72%]:
  z_60(D)->sign = 0;
  goto <bb 87> (<L63>); [100.00%]

<L68> [10.19%]:
  __builtin_memmove (x_58(D), z_60(D), 12);
  goto <bb 87> (<L63>); [100.00%]

<L69> [10.19%]:
  __builtin_memmove (y_59(D), z_60(D), 12);
  goto <bb 87> (<L63>); [100.00%]

<L70> [10.19%]:
  __builtin_memmove (y_59(D), z_60(D), 12);
  _10 = z_60(D)->sign;
  _11 = _10 ^ operation_65(D);
  z_60(D)->sign = _11;
  goto <bb 87> (<L63>); [100.00%]

<L71> [10.19%]:
  __builtin_memcpy (&locx, x_58(D), 12);
  __builtin_memcpy (&locy, y_59(D), 12);
  _12 = locx.exp;
  _13 = (int) _12;
  _14 = locy.exp;
  _15 = (int) _14;
  exponent_difference_62 = _13 - _15;
  if (exponent_difference_62 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 10> [5.09%]:
  _548 = _4 == 1;
  _555 = _1 == 1;
  _298 = _548 | _555;
  if (_298 != 0)
    goto <bb 11>; [56.44%]
  else
    goto <bb 12>; [43.56%]

  <bb 11> [2.87%]:

  <bb 12> [5.09%]:
  # cstore_254 = PHI <1(11), 2(10)>
  z_60(D)->type = cstore_254;
  _17 = locx.sign;
  z_60(D)->sign = _17;
  z_60(D)->exp = _12;
  pretmp_206 = locy.sign;
  pretmp_515 = MEM[(short unsigned int *)&locy + 10B];
  pretmp_505 = MEM[(short unsigned int *)&locx + 10B];
  _493 = (unsigned int) pretmp_505;
  _489 = (unsigned int) pretmp_515;
  goto <bb 48>; [100.00%]

  <bb 13> [5.09%]:
  if (exponent_difference_62 > 0)
    goto <bb 14>; [64.00%]
  else
    goto <bb 30>; [36.00%]

  <bb 14> [3.26%]:
  if (_4 != 0)
    goto <bb 16>; [54.00%]
  else
    goto <bb 15>; [46.00%]

  <bb 15> [1.50%]:
  pretmp_588 = MEM[(short unsigned int *)&locy + 10B];
  _579 = (unsigned int) pretmp_588;
  goto <bb 29>; [100.00%]

  <bb 16> [1.76%]:
  if (exponent_difference_62 > 63)
    goto <bb 18>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 17> [0.88%]:
  locy__lsm.61_395 = MEM[(short unsigned int *)&locy + 4B];
  locy__lsm.63_421 = MEM[(short unsigned int *)&locy + 6B];
  locy__lsm.65_434 = MEM[(short unsigned int *)&locy + 8B];
  locy__lsm.59_447 = MEM[(short unsigned int *)&locy + 10B];
  goto <bb 21>; [100.00%]

  <bb 18> [0.88%]:
  MEM[(short unsigned int *)&locy + 4B] = 0;
  MEM[(short unsigned int *)&locy + 6B] = 0;
  MEM[(short unsigned int *)&locy + 8B] = 0;
  MEM[(short unsigned int *)&locy + 10B] = 1;
  goto <bb 29>; [100.00%]

  <bb 19> [2.49%]:
  _191 = accum_538 | 1;

  <bb 20> [4.99%]:
  # locy__lsm.59_374 = PHI <accum_538(27), _191(19)>
  i_193 = i_307 + 1;
  if (exponent_difference_62 > i_193)
    goto <bb 21>; [82.35%]
  else
    goto <bb 28>; [17.65%]

  <bb 21> [4.99%]:
  # i_307 = PHI <i_193(20), 0(17)>
  # locy__lsm.59_475 = PHI <locy__lsm.59_374(20), locy__lsm.59_447(17)>
  # locy__lsm.61_338 = PHI <accum_497(20), locy__lsm.61_395(17)>
  # locy__lsm.63_572 = PHI <accum_512(20), locy__lsm.63_421(17)>
  # locy__lsm.65_130 = PHI <accum_525(20), locy__lsm.65_434(17)>
  _496 = locy__lsm.61_338 & 1;
  accum_497 = locy__lsm.61_338 >> 1;
  _509 = locy__lsm.63_572 & 1;
  accum_510 = locy__lsm.63_572 >> 1;
  if (_496 != 0)
    goto <bb 22>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 22> [2.50%]:
  accum_511 = accum_510 | 32768;

  <bb 23> [4.99%]:
  # accum_512 = PHI <accum_510(21), accum_511(22)>
  _522 = locy__lsm.65_130 & 1;
  accum_523 = locy__lsm.65_130 >> 1;
  if (_509 != 0)
    goto <bb 24>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 24> [2.50%]:
  accum_524 = accum_523 | 32768;

  <bb 25> [4.99%]:
  # accum_525 = PHI <accum_523(23), accum_524(24)>
  _535 = locy__lsm.59_475 & 1;
  accum_536 = locy__lsm.59_475 >> 1;
  if (_522 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 26> [2.50%]:
  accum_537 = accum_536 | 32768;

  <bb 27> [4.99%]:
  # accum_538 = PHI <accum_536(25), accum_537(26)>
  if (_535 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 28> [0.00%]:
  MEM[(short unsigned int *)&locy + 10B] = locy__lsm.59_374;
  MEM[(short unsigned int *)&locy + 4B] = accum_497;
  MEM[(short unsigned int *)&locy + 6B] = accum_512;
  MEM[(short unsigned int *)&locy + 8B] = accum_525;
  _578 = (unsigned int) locy__lsm.59_374;

  <bb 29> [3.26%]:
  # prephitmp_587 = PHI <1(18), pretmp_588(15), locy__lsm.59_374(28)>
  # prephitmp_574 = PHI <1(18), _579(15), _578(28)>
  z_60(D)->type = _1;
  _19 = locx.sign;
  z_60(D)->sign = _19;
  z_60(D)->exp = _12;
  pretmp_207 = locy.sign;
  pretmp_502 = MEM[(short unsigned int *)&locx + 10B];
  _492 = (unsigned int) pretmp_502;
  goto <bb 48>; [100.00%]

  <bb 30> [1.83%]:
  _21 = -exponent_difference_62;
  if (_1 != 0)
    goto <bb 32>; [54.00%]
  else
    goto <bb 31>; [46.00%]

  <bb 31> [0.84%]:
  pretmp_428 = MEM[(short unsigned int *)&locx + 10B];
  _417 = (unsigned int) pretmp_428;
  goto <bb 47>; [100.00%]

  <bb 32> [0.99%]:
  if (exponent_difference_62 < -63)
    goto <bb 36>; [50.00%]
  else
    goto <bb 33>; [50.00%]

  <bb 33> [0.50%]:
  pretmp_604 = MEM[(short unsigned int *)&locx + 10B];
  if (exponent_difference_62 < 0)
    goto <bb 35>; [85.00%]
  else
    goto <bb 34>; [15.00%]

  <bb 34> [0.08%]:
  _201 = (unsigned int) pretmp_604;
  goto <bb 47>; [100.00%]

  <bb 35> [0.43%]:
  locx__lsm.69_164 = MEM[(short unsigned int *)&locx + 4B];
  locx__lsm.71_346 = MEM[(short unsigned int *)&locx + 6B];
  locx__lsm.73_310 = MEM[(short unsigned int *)&locx + 8B];
  goto <bb 39>; [100.00%]

  <bb 36> [0.50%]:
  MEM[(short unsigned int *)&locx + 4B] = 0;
  MEM[(short unsigned int *)&locx + 6B] = 0;
  MEM[(short unsigned int *)&locx + 8B] = 0;
  MEM[(short unsigned int *)&locx + 10B] = 1;
  goto <bb 47>; [100.00%]

  <bb 37> [1.40%]:
  _214 = accum_611 | 1;

  <bb 38> [2.81%]:
  # locx__lsm.67_350 = PHI <accum_611(45), _214(37)>
  i_216 = i_68 + 1;
  if (_21 > i_216)
    goto <bb 39>; [85.00%]
  else
    goto <bb 46>; [15.00%]

  <bb 39> [2.81%]:
  # i_68 = PHI <i_216(38), 0(35)>
  # locx__lsm.67_349 = PHI <locx__lsm.67_350(38), pretmp_604(35)>
  # locx__lsm.69_549 = PHI <accum_570(38), locx__lsm.69_164(35)>
  # locx__lsm.71_196 = PHI <accum_585(38), locx__lsm.71_346(35)>
  # locx__lsm.73_342 = PHI <accum_598(38), locx__lsm.73_310(35)>
  _569 = locx__lsm.69_549 & 1;
  accum_570 = locx__lsm.69_549 >> 1;
  _582 = locx__lsm.71_196 & 1;
  accum_583 = locx__lsm.71_196 >> 1;
  if (_569 != 0)
    goto <bb 40>; [50.00%]
  else
    goto <bb 41>; [50.00%]

  <bb 40> [1.40%]:
  accum_584 = accum_583 | 32768;

  <bb 41> [2.81%]:
  # accum_585 = PHI <accum_583(39), accum_584(40)>
  _595 = locx__lsm.73_342 & 1;
  accum_596 = locx__lsm.73_342 >> 1;
  if (_582 != 0)
    goto <bb 42>; [50.00%]
  else
    goto <bb 43>; [50.00%]

  <bb 42> [1.40%]:
  accum_597 = accum_596 | 32768;

  <bb 43> [2.81%]:
  # accum_598 = PHI <accum_596(41), accum_597(42)>
  _608 = locx__lsm.67_349 & 1;
  accum_609 = locx__lsm.67_349 >> 1;
  if (_595 != 0)
    goto <bb 44>; [50.00%]
  else
    goto <bb 45>; [50.00%]

  <bb 44> [1.40%]:
  accum_610 = accum_609 | 32768;

  <bb 45> [2.81%]:
  # accum_611 = PHI <accum_609(43), accum_610(44)>
  if (_608 != 0)
    goto <bb 37>; [50.00%]
  else
    goto <bb 38>; [50.00%]

  <bb 46> [0.00%]:
  MEM[(short unsigned int *)&locx + 10B] = locx__lsm.67_350;
  MEM[(short unsigned int *)&locx + 4B] = accum_570;
  MEM[(short unsigned int *)&locx + 6B] = accum_585;
  MEM[(short unsigned int *)&locx + 8B] = accum_598;
  _416 = (unsigned int) locx__lsm.67_350;

  <bb 47> [1.83%]:
  # prephitmp_419 = PHI <1(36), pretmp_428(31), locx__lsm.67_350(46), pretmp_604(34)>
  # prephitmp_605 = PHI <1(36), _417(31), _416(46), _201(34)>
  z_60(D)->type = _4;
  _23 = locy.sign;
  _24 = _23 ^ operation_65(D);
  z_60(D)->sign = _24;
  z_60(D)->exp = _14;
  pretmp_204 = locx.sign;
  pretmp_514 = MEM[(short unsigned int *)&locy + 10B];
  _626 = (unsigned int) pretmp_514;

  <bb 48> [10.19%]:
  # prephitmp_205 = PHI <_17(12), _19(29), pretmp_204(47)>
  # prephitmp_210 = PHI <pretmp_206(12), pretmp_207(29), _23(47)>
  # prephitmp_506 = PHI <pretmp_515(12), prephitmp_587(29), pretmp_514(47)>
  # prephitmp_501 = PHI <pretmp_505(12), pretmp_502(29), prephitmp_419(47)>
  _28 = prephitmp_205 ^ prephitmp_210;
  if (_28 != operation_65(D))
    goto <bb 49>; [66.00%]
  else
    goto <bb 70>; [34.00%]

  <bb 49> [26.89%]:
  # i_189 = PHI <i_87(50), 3(48)>
  # borrow_288 = PHI <_102(50), 0(48)>
  _29 = locy.mantissa[i_189];
  _30 = locx.mantissa[i_189];
  accum_95 = (unsigned int) _30;
  _96 = (unsigned int) _29;
  accum_97 = accum_95 - _96;
  _98 = (unsigned int) borrow_288;
  accum_99 = accum_97 - _98;
  _100 = accum_99 >> 16;
  _101 = (short unsigned int) _100;
  _102 = _101 & 1;
  _103 = (short unsigned int) accum_99;
  MEM[(short unsigned int *)z_60(D)].mantissa[i_189] = _103;
  i_87 = i_189 + -1;
  if (i_87 != -1)
    goto <bb 50>; [74.99%]
  else
    goto <bb 51>; [25.01%]

  <bb 50> [20.16%]:
  pretmp_634 = locy.mantissa[i_87];
  pretmp_636 = locx.mantissa[i_87];
  goto <bb 49>; [100.00%]

  <bb 51> [6.72%]:
  if (_102 != 0)
    goto <bb 52>; [50.00%]
  else
    goto <bb 54>; [50.00%]

  <bb 52> [3.36%]:
  _31 = operation_65(D) ^ prephitmp_210;
  z_60(D)->sign = _31;

  <bb 53> [13.45%]:
  # i_504 = PHI <i_82(53), 3(52)>
  # borrow_379 = PHI <_110(53), 0(52)>
  _32 = z_60(D)->mantissa[i_504];
  _104 = (unsigned int) _32;
  _106 = (unsigned int) borrow_379;
  _118 = _104 + _106;
  accum_107 = -_118;
  _108 = accum_107 >> 16;
  _109 = (short unsigned int) _108;
  _110 = _109 & 1;
  _111 = (short unsigned int) accum_107;
  MEM[(short unsigned int *)z_60(D)].mantissa[i_504] = _111;
  i_82 = i_504 + -1;
  if (i_82 != -1)
    goto <bb 53>; [75.00%]
  else
    goto <bb 54>; [25.00%]

  <bb 54> [6.72%]:
  _33 = &z_60(D)->mantissa;

  <bb 55> [26.90%]:
  # i_483 = PHI <i_120(55), 0(54)>
  # n_482 = PHI <n_119(55), 0(54)>
  _113 = (long unsigned int) i_483;
  _114 = _113 * 2;
  _115 = _33 + _114;
  _116 = *_115;
  _117 = (int) _116;
  n_119 = _117 | n_482;
  i_120 = i_483 + 1;
  if (i_120 != 4)
    goto <bb 55>; [75.00%]
  else
    goto <bb 56>; [25.00%]

  <bb 56> [6.72%]:
  if (n_119 == 0)
    goto <bb 57>; [50.00%]
  else
    goto <bb 58>; [50.00%]

  <bb 57> [3.36%]:
  z_60(D)->type = 0;
  z_60(D)->sign = 0;
  goto <bb 108>; [100.00%]

  <bb 58> [3.36%]:
  _34 = locx.type;
  if (_34 == 2)
    goto <bb 60>; [20.24%]
  else
    goto <bb 59>; [79.76%]

  <bb 59> [2.68%]:
  _35 = locy.type;
  if (_35 == 2)
    goto <bb 60>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 60> [1.59%]:
  _556 = z_60(D)->mantissa[0];
  _128 = (signed short) _556;
  if (_128 >= 0)
    goto <bb 61>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 61> [1.35%]:
  z__lsm.51_331 = MEM[(short unsigned int *)z_60(D) + 10B];
  z__lsm.53_240 = MEM[(short unsigned int *)z_60(D) + 8B];
  z__lsm.55_337 = MEM[(short unsigned int *)z_60(D) + 6B];
  z__exp_lsm.57_468 = z_60(D)->exp;

  <bb 62> [9.02%]:
  # _621 = PHI <accum_465(68), _556(61)>
  # z__lsm.51_50 = PHI <accum_424(68), z__lsm.51_331(61)>
  # z__lsm.53_363 = PHI <accum_439(68), z__lsm.53_240(61)>
  # z__lsm.55_625 = PHI <accum_452(68), z__lsm.55_337(61)>
  # z__exp_lsm.57_291 = PHI <_232(68), z__exp_lsm.57_468(61)>
  accum_424 = z__lsm.51_50 << 1;
  accum_437 = z__lsm.53_363 << 1;
  _212 = (signed short) z__lsm.51_50;
  if (_212 < 0)
    goto <bb 63>; [50.00%]
  else
    goto <bb 64>; [50.00%]

  <bb 63> [4.51%]:
  accum_438 = accum_437 | 1;

  <bb 64> [9.02%]:
  # accum_439 = PHI <accum_437(62), accum_438(63)>
  accum_450 = z__lsm.55_625 << 1;
  _577 = (signed short) z__lsm.53_363;
  if (_577 < 0)
    goto <bb 65>; [50.00%]
  else
    goto <bb 66>; [50.00%]

  <bb 65> [4.51%]:
  accum_451 = accum_450 | 1;

  <bb 66> [9.02%]:
  # accum_452 = PHI <accum_450(64), accum_451(65)>
  accum_463 = _621 << 1;
  _576 = (signed short) z__lsm.55_625;
  if (_576 < 0)
    goto <bb 67>; [50.00%]
  else
    goto <bb 68>; [50.00%]

  <bb 67> [4.51%]:
  accum_464 = accum_463 | 1;

  <bb 68> [9.02%]:
  # accum_465 = PHI <accum_463(66), accum_464(67)>
  MEM[(short unsigned int *)z_60(D) + 4B] = accum_465;
  _230 = (unsigned short) z__exp_lsm.57_291;
  _231 = _230 + 65535;
  _232 = (short int) _231;
  _234 = (signed short) accum_465;
  if (_234 >= 0)
    goto <bb 62>; [85.00%]
  else
    goto <bb 69>; [15.00%]

  <bb 69> [0.00%]:
  MEM[(short unsigned int *)z_60(D) + 10B] = accum_424;
  MEM[(short unsigned int *)z_60(D) + 8B] = accum_439;
  MEM[(short unsigned int *)z_60(D) + 6B] = accum_452;
  z_60(D)->exp = _232;
  goto <bb 87> (<L63>); [0.00%]

  <bb 70> [13.86%]:
  # i_503 = PHI <i_80(71), 3(48)>
  # carry_378 = PHI <_127(71), 0(48)>
  _36 = locy.mantissa[i_503];
  _37 = locx.mantissa[i_503];
  accum_121 = (unsigned int) _37;
  _122 = (unsigned int) _36;
  accum_123 = accum_121 + _122;
  _124 = (unsigned int) carry_378;
  accum_125 = accum_123 + _124;
  _126 = accum_125 >> 16;
  _127 = (short unsigned int) _126;
  _129 = (short unsigned int) accum_125;
  MEM[(short unsigned int *)z_60(D)].mantissa[i_503] = _129;
  i_80 = i_503 + -1;
  if (i_80 != -1)
    goto <bb 71>; [75.01%]
  else
    goto <bb 72>; [24.99%]

  <bb 71> [10.40%]:
  pretmp_628 = locy.mantissa[i_80];
  pretmp_630 = locx.mantissa[i_80];
  goto <bb 70>; [100.00%]

  <bb 72> [3.46%]:
  pretmp_176 = z_60(D)->mantissa[0];
  if (_127 != 0)
    goto <bb 73>; [50.00%]
  else
    goto <bb 79>; [50.00%]

  <bb 73> [1.73%]:
  _38 = z_60(D)->exp;
  _39 = (unsigned short) _38;
  _40 = _39 + 1;
  _41 = (short int) _40;
  z_60(D)->exp = _41;
  _42 = &z_60(D)->mantissa;
  _353 = pretmp_176 & 1;
  accum_352 = pretmp_176 >> 1;
  goto <bb 77>; [100.00%]

  <bb 74> [5.20%]:
  _131 = (long unsigned int) i_139;
  _132 = _131 * 2;
  _133 = _42 + _132;
  accum_134 = *_133;
  _135 = accum_134 & 1;
  accum_136 = accum_134 >> 1;
  if (_356 != 0)
    goto <bb 75>; [66.63%]
  else
    goto <bb 76>; [33.37%]

  <bb 75> [3.46%]:
  accum_137 = accum_136 | 32768;

  <bb 76> [5.20%]:
  # accum_166 = PHI <accum_136(74), accum_137(75)>

  <bb 77> [6.93%]:
  # accum_138 = PHI <accum_166(76), accum_352(73)>
  # _360 = PHI <_133(76), _42(73)>
  # _356 = PHI <_135(76), _353(73)>
  # i_192 = PHI <i_139(76), 0(73)>
  *_360 = accum_138;
  i_139 = i_192 + 1;
  if (i_139 != 4)
    goto <bb 74>; [75.01%]
  else
    goto <bb 78>; [24.99%]

  <bb 78> [1.73%]:
  _43 = z_60(D)->mantissa[0];
  _44 = _43 | 32768;
  z_60(D)->mantissa[0] = _44;
  z_60(D)->type = 2;
  goto <bb 109>; [100.00%]

  <bb 79> [1.73%]:
  _46 = (signed short) pretmp_176;
  if (_46 < 0)
    goto <bb 80>; [36.00%]
  else
    goto <bb 4>; [64.00%]

  <bb 80> [0.62%]:
  z_60(D)->type = 2;
  pretmp_322 = &z_60(D)->mantissa;
  goto <bb 109>; [100.00%]

<L72> [10.19%]:
  z_60(D)->type = 4;
  z_60(D)->exp = 32767;
  z_60(D)->sign = 1;
  z_60(D)->mantissa[0] = 16384;
  z_60(D)->mantissa[1] = 0;
  z_60(D)->mantissa[2] = 0;
  z_60(D)->mantissa[3] = 0;
  goto <bb 108>; [100.00%]

  # i_272 = PHI <i_239(86), 0(2)>
<L78> [29.32%]:
  _236 = x_58(D)->mantissa[i_272];
  _237 = y_59(D)->mantissa[i_272];
  if (_236 > _237)
    goto <bb 83>; [5.00%]
  else
    goto <bb 84>; [95.00%]

  <bb 83> [1.47%]:
  __builtin_memmove (x_58(D), z_60(D), 12);
  goto <bb 87> (<L63>); [100.00%]

  <bb 84> [27.85%]:
  if (_236 < _237)
    goto <bb 85>; [5.00%]
  else
    goto <bb 86>; [95.00%]

  <bb 85> [8.72%]:
  __builtin_memmove (y_59(D), z_60(D), 12);
  goto <bb 87> (<L63>); [100.00%]

  <bb 86> [26.46%]:
  i_239 = i_272 + 1;
  if (i_239 != 4)
    goto <bb 82> (<L78>); [72.30%]
  else
    goto <bb 85>; [27.70%]

<L63> [65.60%]:
  _142 = z_60(D)->type;
  _143 = _142 + 255;
  if (_143 <= 1)
    goto <bb 88>; [26.91%]
  else
    goto <bb 108>; [73.09%]

  <bb 88> [17.65%]:
  pretmp_178 = &z_60(D)->mantissa;
  pretmp_532 = MEM[(short unsigned int *)z_60(D) + 4B];

  <bb 89> [20.00%]:
  # prephitmp_540 = PHI <pretmp_178(88), prephitmp_177(109)>
  # prephitmp_531 = PHI <pretmp_532(88), prephitmp_277(109)>

  <bb 90> [80.00%]:
  # i_358 = PHI <i_256(91), 0(89)>
  # n_357 = PHI <n_255(91), 0(89)>
  _249 = (long unsigned int) i_358;
  _250 = _249 * 2;
  _251 = prephitmp_540 + _250;
  _252 = *_251;
  _253 = (int) _252;
  n_255 = _253 | n_357;
  i_256 = i_358 + 1;
  if (i_256 != 4)
    goto <bb 91>; [75.00%]
  else
    goto <bb 92>; [25.00%]

  <bb 91> [60.00%]:
  _285 = (long unsigned int) i_256;
  _273 = _285 * 2;
  _274 = prephitmp_540 + _273;
  pretmp_528 = MEM[(short unsigned int *)_274];
  goto <bb 90>; [100.00%]

  <bb 92> [20.00%]:
  if (n_255 == 0)
    goto <bb 93>; [33.00%]
  else
    goto <bb 107>; [67.00%]

  <bb 93> [6.60%]:
  __builtin_puts (&"Error:  zero significand in denormalize"[0]);
  goto <bb 107>; [100.00%]

  <bb 94> [2.62%]:
  _265 = (unsigned short) _270;
  _267 = _265 + 1;
  _268 = (short int) _267;
  z_60(D)->exp = _268;
  if (pretmp_324 != 0)
    goto <bb 96>; [54.00%]
  else
    goto <bb 108>; [46.00%]

  <bb 95> [2.01%]:
  _290 = accum_413 | 1;
  MEM[(short unsigned int *)z_60(D) + 10B] = _290;
  goto <bb 110>; [100.00%]

  <bb 96> [4.02%]:
  accum_370 = MEM[(short unsigned int *)z_60(D) + 4B];
  _371 = accum_370 & 1;
  accum_372 = accum_370 >> 1;
  MEM[(short unsigned int *)z_60(D) + 4B] = accum_372;
  accum_383 = MEM[(short unsigned int *)z_60(D) + 6B];
  _384 = accum_383 & 1;
  accum_385 = accum_383 >> 1;
  if (_371 != 0)
    goto <bb 97>; [50.00%]
  else
    goto <bb 98>; [50.00%]

  <bb 97> [2.01%]:
  accum_386 = accum_385 | 32768;

  <bb 98> [4.02%]:
  # accum_387 = PHI <accum_385(96), accum_386(97)>
  MEM[(short unsigned int *)z_60(D) + 6B] = accum_387;
  accum_396 = MEM[(short unsigned int *)z_60(D) + 8B];
  _397 = accum_396 & 1;
  accum_398 = accum_396 >> 1;
  if (_384 != 0)
    goto <bb 99>; [50.00%]
  else
    goto <bb 100>; [50.00%]

  <bb 99> [2.01%]:
  accum_399 = accum_398 | 32768;

  <bb 100> [4.02%]:
  # accum_400 = PHI <accum_398(98), accum_399(99)>
  MEM[(short unsigned int *)z_60(D) + 8B] = accum_400;
  accum_409 = MEM[(short unsigned int *)z_60(D) + 10B];
  _410 = accum_409 & 1;
  accum_411 = accum_409 >> 1;
  if (_397 != 0)
    goto <bb 101>; [50.00%]
  else
    goto <bb 102>; [50.00%]

  <bb 101> [2.01%]:
  accum_412 = accum_411 | 32768;

  <bb 102> [4.02%]:
  # accum_413 = PHI <accum_411(100), accum_412(101)>
  MEM[(short unsigned int *)z_60(D) + 10B] = accum_413;
  if (_410 != 0)
    goto <bb 95>; [50.00%]
  else
    goto <bb 110>; [50.00%]

  <bb 103> [14.77%]:
  if (pretmp_324 != 0)
    goto <bb 104>; [45.89%]
  else
    goto <bb 108>; [54.11%]

  <bb 104> [6.78%]:
  pretmp_519 = MEM[(short unsigned int *)z_60(D) + 10B];

  <bb 105> [10.80%]:
  # prephitmp_518 = PHI <pretmp_519(104), prephitmp_226(110)>
  _246 = prephitmp_518 & 65528;
  z_60(D)->mantissa[3] = _246;

  <bb 106> [81.50%]:
  locx ={v} {CLOBBER};
  locy ={v} {CLOBBER};
  return;

  <bb 107> [20.00%]:
  _270 = z_60(D)->exp;
  _369 = (int) _270;
  _289 = _369 + 32767;
  exponent_difference_343 = (long int) _289;
  pretmp_324 = z_60(D)->type;
  if (_270 == -32768)
    goto <bb 94>; [13.12%]
  else
    goto <bb 103>; [86.88%]

  <bb 108> [70.70%]:
  goto <bb 106>; [100.00%]

  <bb 109> [2.35%]:
  # prephitmp_177 = PHI <pretmp_322(80), _42(78)>
  # prephitmp_277 = PHI <pretmp_176(80), _44(78)>
  goto <bb 89>; [100.00%]

  <bb 110> [4.02%]:
  # prephitmp_226 = PHI <accum_413(102), _290(95)>
  goto <bb 105>; [100.00%]

}



;; Function SetupCPUEmFloatArrays (SetupCPUEmFloatArrays, funcdef_no=34, decl_uid=2767, cgraph_uid=34, symbol_order=34)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
abase = &NONLOCAL
bbase = &NONLOCAL
cbase = &NONLOCAL
arraysize = &NONLOCAL
ESCAPED = &NONLOCAL
i_232 = i_26
i_232 = &NULL
ESCAPED = &NONLOCAL
_1 = NONLOCAL
locFPF1 = &NONLOCAL
mylong_41 = _1
locFPF1 = &NONLOCAL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NONLOCAL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NULL
mylong_277 = _1
mylong_277 = mylong_41
locFPF1 = &NONLOCAL
_45 = mylong_277
_45 = &NONLOCAL
myword_46 = _45
locFPF1 = myword_46
myword_47 = mylong_277
locFPF1 = myword_47
_219 = _45
locFPF1__lsm.110_56 = locFPF1
locFPF1__lsm.111_321 = &NULL
locFPF1__lsm.112_320 = locFPF1
locFPF1__lsm.113_308 = &NULL
locFPF1__lsm.114_307 = locFPF1
locFPF1__lsm.115_109 = &NULL
locFPF1__lsm.116_74 = locFPF1
locFPF1__lsm.117_253 = &NULL
locFPF1_exp_lsm.118_252 = locFPF1
locFPF1_exp_lsm.119_240 = &NULL
_164 = accum_329
_164 = myword_46
locFPF1__lsm.110_345 = locFPF1__lsm.110_239
locFPF1__lsm.110_345 = locFPF1__lsm.110_56
locFPF1__lsm.112_341 = locFPF1__lsm.112_92
locFPF1__lsm.112_341 = locFPF1__lsm.112_320
locFPF1__lsm.114_337 = locFPF1__lsm.114_184
locFPF1__lsm.114_337 = locFPF1__lsm.114_307
locFPF1_exp_lsm.118_104 = locFPF1_exp_lsm.118_265
locFPF1_exp_lsm.118_104 = locFPF1_exp_lsm.118_252
accum_286 = locFPF1__lsm.110_345
accum_288 = accum_286
accum_288 = &NONLOCAL
locFPF1__lsm.110_239 = accum_288
locFPF1__lsm.111_114 = &NONLOCAL
accum_299 = locFPF1__lsm.112_341
accum_301 = accum_299
accum_301 = &NONLOCAL
_295 = accum_286
accum_302 = accum_301
accum_302 = &NONLOCAL
accum_303 = accum_301
accum_303 = accum_302
locFPF1__lsm.112_92 = accum_303
locFPF1__lsm.113_185 = &NONLOCAL
accum_312 = locFPF1__lsm.114_337
accum_314 = accum_312
accum_314 = &NONLOCAL
_294 = accum_299
accum_315 = accum_314
accum_315 = &NONLOCAL
accum_316 = accum_314
accum_316 = accum_315
locFPF1__lsm.114_184 = accum_316
locFPF1__lsm.115_172 = &NONLOCAL
accum_327 = _164
accum_327 = &NONLOCAL
_290 = accum_312
accum_328 = accum_327
accum_328 = &NONLOCAL
accum_329 = accum_327
accum_329 = accum_328
locFPF1__lsm.116_171 = accum_329
locFPF1__lsm.117_197 = &NONLOCAL
_60 = locFPF1_exp_lsm.118_104
_61 = _60
_62 = _61
_62 = &NONLOCAL
_63 = _62
locFPF1_exp_lsm.118_265 = _63
locFPF1_exp_lsm.119_333 = &NONLOCAL
_65 = accum_329
locFPF1__lsm.112_199 = locFPF1__lsm.112_92
locFPF1__lsm.111_196 = locFPF1__lsm.111_114
locFPF1__lsm.116_251 = locFPF1__lsm.116_171
locFPF1__lsm.115_250 = locFPF1__lsm.115_172
locFPF1__lsm.114_229 = locFPF1__lsm.114_184
locFPF1__lsm.113_228 = locFPF1__lsm.113_185
locFPF1__lsm.117_215 = locFPF1__lsm.117_197
locFPF1__lsm.110_213 = locFPF1__lsm.110_239
locFPF1_exp_lsm.118_212 = locFPF1_exp_lsm.118_265
locFPF1_exp_lsm.119_35 = locFPF1_exp_lsm.119_333
locFPF1 = locFPF1__lsm.110_213
locFPF1 = locFPF1__lsm.112_199
locFPF1 = locFPF1__lsm.114_229
locFPF1 = locFPF1__lsm.116_251
locFPF1 = locFPF1_exp_lsm.118_212
ESCAPED = &NONLOCAL
_2 = NONLOCAL
_3 = _2
_3 = &NONLOCAL
mylong_34 = _2
mylong_37 = mylong_34
mylong_37 = _3
cstore_188 = &NONLOCAL
cstore_188 = &NULL
locFPF2 = cstore_188
locFPF2 = &NONLOCAL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NONLOCAL
_38 = mylong_37
_38 = &NONLOCAL
myword_39 = _38
locFPF2 = myword_39
myword_40 = mylong_37
locFPF2 = myword_40
_287 = _38
accum_218 = locFPF2__lsm.100_9
accum_220 = accum_218
accum_220 = &NONLOCAL
locFPF2__lsm.100_51 = accum_220
locFPF2__lsm.101_52 = &NONLOCAL
accum_231 = locFPF2__lsm.102_68
accum_233 = accum_231
accum_233 = &NONLOCAL
_227 = accum_218
accum_234 = accum_233
accum_234 = &NONLOCAL
accum_285 = accum_233
accum_285 = accum_234
accum_235 = accum_285
accum_235 = accum_257
_190 = accum_261
_190 = myword_39
accum_103 = accum_231
accum_103 = accum_23
locFPF2__lsm.100_9 = locFPF2__lsm.100_51
locFPF2__lsm.100_9 = locFPF2__lsm.100_95
locFPF2__lsm.101_10 = locFPF2__lsm.101_52
locFPF2__lsm.101_10 = locFPF2__lsm.101_93
locFPF2__lsm.104_112 = locFPF2__lsm.104_70
locFPF2__lsm.104_112 = locFPF2__lsm.104_88
locFPF2_exp_lsm.108_107 = locFPF2_exp_lsm.108_76
locFPF2_exp_lsm.108_107 = locFPF2_exp_lsm.108_94
locFPF2__lsm.102_68 = accum_235
locFPF2__lsm.103_69 = &NONLOCAL
accum_244 = locFPF2__lsm.104_112
accum_246 = accum_244
accum_246 = &NONLOCAL
_226 = accum_103
accum_247 = accum_246
accum_247 = &NONLOCAL
accum_248 = accum_246
accum_248 = accum_247
locFPF2__lsm.104_70 = accum_248
locFPF2__lsm.105_71 = &NONLOCAL
accum_259 = _190
accum_259 = &NONLOCAL
_222 = accum_244
accum_260 = accum_259
accum_260 = &NONLOCAL
accum_261 = accum_259
accum_261 = accum_260
locFPF2__lsm.106_72 = accum_261
locFPF2__lsm.107_73 = &NONLOCAL
_78 = locFPF2_exp_lsm.108_107
_79 = _78
_80 = _79
_80 = &NONLOCAL
_81 = _80
locFPF2_exp_lsm.108_76 = _81
locFPF2_exp_lsm.109_134 = &NONLOCAL
_83 = accum_261
locFPF2__lsm.100_66 = locFPF2__lsm.100_9
locFPF2__lsm.101_48 = locFPF2__lsm.101_10
locFPF2__lsm.102_28 = locFPF2__lsm.102_68
locFPF2__lsm.103_211 = locFPF2__lsm.103_69
locFPF2__lsm.104_208 = locFPF2__lsm.104_70
locFPF2__lsm.105_207 = locFPF2__lsm.105_71
locFPF2__lsm.106_204 = locFPF2__lsm.106_72
locFPF2__lsm.107_203 = locFPF2__lsm.107_73
locFPF2_exp_lsm.108_200 = locFPF2_exp_lsm.108_76
locFPF2_exp_lsm.109_263 = locFPF2_exp_lsm.109_134
locFPF2 = locFPF2__lsm.100_66
locFPF2 = locFPF2__lsm.102_28
locFPF2 = locFPF2__lsm.104_208
locFPF2 = locFPF2__lsm.106_204
locFPF2 = locFPF2_exp_lsm.108_200
_4 = i_232
_4 = &NONLOCAL
_5 = abase + UNKNOWN
ESCAPED = &locFPF1
ESCAPED = &locFPF2
ESCAPED = _5
ESCAPED = &NONLOCAL
_6 = NONLOCAL
_7 = _6
_7 = &NONLOCAL
mylong_27 = _6
mylong_30 = mylong_27
mylong_30 = _7
cstore_44 = &NONLOCAL
cstore_44 = &NULL
locFPF2 = cstore_44
locFPF2 = &NONLOCAL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NONLOCAL
_31 = mylong_30
_31 = &NONLOCAL
myword_32 = _31
locFPF2 = myword_32
myword_33 = mylong_30
locFPF2 = myword_33
_214 = _31
accum_150 = locFPF2__lsm.90_162
accum_152 = accum_150
accum_152 = &NONLOCAL
locFPF2__lsm.90_19 = accum_152
locFPF2__lsm.91_17 = &NONLOCAL
accum_163 = locFPF2__lsm.92_195
accum_165 = accum_163
accum_165 = &NONLOCAL
_159 = accum_150
accum_166 = accum_165
accum_166 = &NONLOCAL
accum_128 = accum_165
accum_128 = accum_166
accum_167 = accum_128
accum_167 = accum_105
accum_326 = accum_163
accum_326 = accum_282
_258 = accum_193
_258 = myword_32
locFPF2__lsm.90_162 = locFPF2__lsm.90_19
locFPF2__lsm.90_162 = locFPF2__lsm.90_57
locFPF2__lsm.91_127 = locFPF2__lsm.91_17
locFPF2__lsm.91_127 = locFPF2__lsm.91_149
locFPF2__lsm.94_325 = locFPF2__lsm.94_186
locFPF2__lsm.94_325 = locFPF2__lsm.94_53
locFPF2_exp_lsm.98_175 = locFPF2_exp_lsm.98_173
locFPF2_exp_lsm.98_175 = locFPF2_exp_lsm.98_124
locFPF2__lsm.92_195 = accum_167
locFPF2__lsm.93_187 = &NONLOCAL
accum_176 = locFPF2__lsm.94_325
accum_178 = accum_176
accum_178 = &NONLOCAL
_158 = accum_326
accum_179 = accum_178
accum_179 = &NONLOCAL
accum_180 = accum_178
accum_180 = accum_179
locFPF2__lsm.94_186 = accum_180
locFPF2__lsm.95_183 = &NONLOCAL
accum_191 = _258
accum_191 = &NONLOCAL
_154 = accum_176
accum_192 = accum_191
accum_192 = &NONLOCAL
accum_193 = accum_191
accum_193 = accum_192
locFPF2__lsm.96_182 = accum_193
locFPF2__lsm.97_174 = &NONLOCAL
_96 = locFPF2_exp_lsm.98_175
_97 = _96
_98 = _97
_98 = &NONLOCAL
_99 = _98
locFPF2_exp_lsm.98_173 = _99
locFPF2_exp_lsm.99_170 = &NONLOCAL
_101 = accum_193
locFPF2__lsm.91_67 = locFPF2__lsm.91_127
locFPF2__lsm.90_255 = locFPF2__lsm.90_162
locFPF2_exp_lsm.99_254 = locFPF2_exp_lsm.99_170
locFPF2_exp_lsm.98_242 = locFPF2_exp_lsm.98_173
locFPF2__lsm.97_241 = locFPF2__lsm.97_174
locFPF2__lsm.96_238 = locFPF2__lsm.96_182
locFPF2__lsm.95_237 = locFPF2__lsm.95_183
locFPF2__lsm.94_225 = locFPF2__lsm.94_186
locFPF2__lsm.93_224 = locFPF2__lsm.93_187
locFPF2__lsm.92_216 = locFPF2__lsm.92_195
locFPF2 = locFPF2__lsm.90_255
locFPF2 = locFPF2__lsm.92_216
locFPF2 = locFPF2__lsm.94_225
locFPF2 = locFPF2__lsm.96_238
locFPF2 = locFPF2_exp_lsm.98_242
_8 = bbase + UNKNOWN
ESCAPED = &locFPF1
ESCAPED = &locFPF2
ESCAPED = _8
i_26 = i_232
i_26 = &NONLOCAL
accum_115 = locFPF2
accum_137 = accum_115
accum_137 = &NONLOCAL
locFPF2 = accum_137
accum_282 = locFPF2
accum_105 = accum_282
accum_105 = &NONLOCAL
locFPF2__lsm.94_53 = locFPF2
locFPF2__lsm.95_54 = &NULL
locFPF2__lsm.96_55 = locFPF2
locFPF2__lsm.97_58 = &NULL
locFPF2_exp_lsm.98_124 = locFPF2
locFPF2_exp_lsm.99_59 = &NULL
locFPF2__lsm.90_57 = locFPF2
locFPF2__lsm.91_149 = &NULL
locFPF2__lsm.92_43 = locFPF2
locFPF2__lsm.93_85 = &NULL
accum_256 = locFPF2
accum_324 = accum_256
accum_324 = &NONLOCAL
locFPF2 = accum_324
accum_23 = locFPF2
accum_257 = accum_23
accum_257 = &NONLOCAL
locFPF2__lsm.104_88 = locFPF2
locFPF2__lsm.105_89 = &NULL
locFPF2__lsm.106_90 = locFPF2
locFPF2__lsm.107_91 = &NULL
locFPF2_exp_lsm.108_94 = locFPF2
locFPF2_exp_lsm.109_144 = &NULL
locFPF2__lsm.100_95 = locFPF2
locFPF2__lsm.101_93 = &NULL
locFPF2__lsm.102_147 = locFPF2
locFPF2__lsm.103_29 = &NULL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 5 17 85 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"abase"[label="abase = { 5 }"];
"bbase"[label="bbase = { 5 }"];
"cbase"[label="cbase = { 5 }"];
"arraysize"[label="arraysize = { 5 }"];
"randnum";
"i_232"[label="i_232 = { 1 5 }"];
"randwc";
"_1";
"locFPF1"[label="locFPF1 = { 1 5 }"];
"mylong_41";
"mylong_277";
"_45"[label="_45 = { 5 }"];
"myword_46";
"myword_47";
"_219";
"locFPF1__lsm.111_321"[label="locFPF1__lsm.111_321 = { 1 }"];
"locFPF1__lsm.113_308"[label="locFPF1__lsm.113_308 = { 1 }"];
"locFPF1__lsm.115_109"[label="locFPF1__lsm.115_109 = { 1 }"];
"locFPF1__lsm.116_74";
"locFPF1__lsm.117_253"[label="locFPF1__lsm.117_253 = { 1 }"];
"locFPF1_exp_lsm.119_240"[label="locFPF1_exp_lsm.119_240 = { 1 }"];
"accum_329"[label="accum_329 = { 5 }"];
"locFPF1__lsm.111_114"[label="locFPF1__lsm.111_114 = { 5 }"];
"_295";
"locFPF1__lsm.113_185"[label="locFPF1__lsm.113_185 = { 5 }"];
"_294";
"locFPF1__lsm.115_172"[label="locFPF1__lsm.115_172 = { 5 }"];
"_290";
"locFPF1__lsm.116_171";
"locFPF1__lsm.117_197"[label="locFPF1__lsm.117_197 = { 5 }"];
"locFPF1_exp_lsm.119_333"[label="locFPF1_exp_lsm.119_333 = { 5 }"];
"_65";
"locFPF1__lsm.111_196";
"locFPF1__lsm.116_251";
"locFPF1__lsm.115_250";
"locFPF1__lsm.113_228";
"locFPF1__lsm.117_215";
"locFPF1_exp_lsm.119_35";
"_2";
"_3"[label="_3 = { 5 }"];
"mylong_34";
"mylong_37";
"cstore_188"[label="cstore_188 = { 1 5 }"];
"locFPF2"[label="locFPF2 = { 1 5 }"];
"_38"[label="_38 = { 5 }"];
"myword_39";
"myword_40";
"_287";
"locFPF2__lsm.101_52"[label="locFPF2__lsm.101_52 = { 5 }"];
"_227";
"accum_261"[label="accum_261 = { 5 }"];
"accum_103";
"locFPF2__lsm.101_10";
"locFPF2__lsm.101_93"[label="locFPF2__lsm.101_93 = { 1 }"];
"locFPF2__lsm.103_69"[label="locFPF2__lsm.103_69 = { 5 }"];
"_226";
"locFPF2__lsm.105_71"[label="locFPF2__lsm.105_71 = { 5 }"];
"_222";
"locFPF2__lsm.106_72";
"locFPF2__lsm.107_73"[label="locFPF2__lsm.107_73 = { 5 }"];
"locFPF2_exp_lsm.109_134"[label="locFPF2_exp_lsm.109_134 = { 5 }"];
"_83";
"locFPF2__lsm.101_48";
"locFPF2__lsm.103_211";
"locFPF2__lsm.105_207";
"locFPF2__lsm.106_204";
"locFPF2__lsm.107_203";
"locFPF2_exp_lsm.109_263";
"_4"[label="_4 = { 5 }"];
"_5";
"DivideInternalFPF";
"_6";
"_7"[label="_7 = { 5 }"];
"mylong_27";
"mylong_30";
"cstore_44"[label="cstore_44 = { 1 5 }"];
"_31"[label="_31 = { 5 }"];
"myword_32";
"myword_33";
"_214";
"locFPF2__lsm.91_17"[label="locFPF2__lsm.91_17 = { 5 }"];
"_159";
"accum_326";
"accum_193"[label="accum_193 = { 5 }"];
"locFPF2__lsm.91_127";
"locFPF2__lsm.91_149"[label="locFPF2__lsm.91_149 = { 1 }"];
"locFPF2__lsm.93_187"[label="locFPF2__lsm.93_187 = { 5 }"];
"_158";
"locFPF2__lsm.95_183"[label="locFPF2__lsm.95_183 = { 5 }"];
"_154";
"locFPF2__lsm.96_182";
"locFPF2__lsm.97_174"[label="locFPF2__lsm.97_174 = { 5 }"];
"locFPF2_exp_lsm.99_170"[label="locFPF2_exp_lsm.99_170 = { 5 }"];
"_101";
"locFPF2__lsm.91_67";
"locFPF2_exp_lsm.99_254";
"locFPF2__lsm.97_241";
"locFPF2__lsm.96_238";
"locFPF2__lsm.95_237";
"locFPF2__lsm.93_224";
"_8";
"locFPF2__lsm.95_54"[label="locFPF2__lsm.95_54 = { 1 }"];
"locFPF2__lsm.96_55";
"locFPF2__lsm.97_58"[label="locFPF2__lsm.97_58 = { 1 }"];
"locFPF2_exp_lsm.99_59"[label="locFPF2_exp_lsm.99_59 = { 1 }"];
"locFPF2__lsm.92_43";
"locFPF2__lsm.93_85"[label="locFPF2__lsm.93_85 = { 1 }"];
"locFPF2__lsm.105_89"[label="locFPF2__lsm.105_89 = { 1 }"];
"locFPF2__lsm.106_90";
"locFPF2__lsm.107_91"[label="locFPF2__lsm.107_91 = { 1 }"];
"locFPF2_exp_lsm.109_144"[label="locFPF2_exp_lsm.109_144 = { 1 }"];
"locFPF2__lsm.102_147";
"locFPF2__lsm.103_29"[label="locFPF2__lsm.103_29 = { 1 }"];
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*abase";
"*bbase";
"*cbase";
"*arraysize";
"*randnum";
"*i_232";
"*i_26";
"*randwc";
"*_1";
"*locFPF1";
"*mylong_41";
"*mylong_277";
"*_45";
"*myword_46";
"*myword_47";
"*_219";
"*locFPF1__lsm.110_56";
"*locFPF1__lsm.111_321";
"*locFPF1__lsm.112_320";
"*locFPF1__lsm.113_308";
"*locFPF1__lsm.114_307";
"*locFPF1__lsm.115_109";
"*locFPF1__lsm.116_74";
"*locFPF1__lsm.117_253";
"*locFPF1_exp_lsm.118_252";
"*locFPF1_exp_lsm.119_240";
"*_164";
"*accum_329";
"*locFPF1__lsm.110_345";
"*locFPF1__lsm.110_239";
"*locFPF1__lsm.112_341";
"*locFPF1__lsm.112_92";
"*locFPF1__lsm.114_337";
"*locFPF1__lsm.114_184";
"*locFPF1_exp_lsm.118_104";
"*locFPF1_exp_lsm.118_265";
"*accum_286";
"*accum_288";
"*locFPF1__lsm.111_114";
"*accum_299";
"*accum_301";
"*_295";
"*accum_302";
"*accum_303";
"*locFPF1__lsm.113_185";
"*accum_312";
"*accum_314";
"*_294";
"*accum_315";
"*accum_316";
"*locFPF1__lsm.115_172";
"*accum_327";
"*_290";
"*accum_328";
"*locFPF1__lsm.116_171";
"*locFPF1__lsm.117_197";
"*_60";
"*_61";
"*_62";
"*_63";
"*locFPF1_exp_lsm.119_333";
"*_65";
"*locFPF1__lsm.112_199";
"*locFPF1__lsm.111_196";
"*locFPF1__lsm.116_251";
"*locFPF1__lsm.115_250";
"*locFPF1__lsm.114_229";
"*locFPF1__lsm.113_228";
"*locFPF1__lsm.117_215";
"*locFPF1__lsm.110_213";
"*locFPF1_exp_lsm.118_212";
"*locFPF1_exp_lsm.119_35";
"*_2";
"*_3";
"*mylong_34";
"*mylong_37";
"*cstore_188";
"*locFPF2";
"*_38";
"*myword_39";
"*myword_40";
"*_287";
"*accum_218";
"*locFPF2__lsm.100_9";
"*accum_220";
"*locFPF2__lsm.100_51";
"*locFPF2__lsm.101_52";
"*accum_231";
"*locFPF2__lsm.102_68";
"*accum_233";
"*_227";
"*accum_234";
"*accum_285";
"*accum_235";
"*accum_257";
"*_190";
"*accum_261";
"*accum_103";
"*accum_23";
"*locFPF2__lsm.100_95";
"*locFPF2__lsm.101_10";
"*locFPF2__lsm.101_93";
"*locFPF2__lsm.104_112";
"*locFPF2__lsm.104_70";
"*locFPF2__lsm.104_88";
"*locFPF2_exp_lsm.108_107";
"*locFPF2_exp_lsm.108_76";
"*locFPF2_exp_lsm.108_94";
"*locFPF2__lsm.103_69";
"*accum_244";
"*accum_246";
"*_226";
"*accum_247";
"*accum_248";
"*locFPF2__lsm.105_71";
"*accum_259";
"*_222";
"*accum_260";
"*locFPF2__lsm.106_72";
"*locFPF2__lsm.107_73";
"*_78";
"*_79";
"*_80";
"*_81";
"*locFPF2_exp_lsm.109_134";
"*_83";
"*locFPF2__lsm.100_66";
"*locFPF2__lsm.101_48";
"*locFPF2__lsm.102_28";
"*locFPF2__lsm.103_211";
"*locFPF2__lsm.104_208";
"*locFPF2__lsm.105_207";
"*locFPF2__lsm.106_204";
"*locFPF2__lsm.107_203";
"*locFPF2_exp_lsm.108_200";
"*locFPF2_exp_lsm.109_263";
"*_4";
"*_5";
"*DivideInternalFPF";
"*_6";
"*_7";
"*mylong_27";
"*mylong_30";
"*cstore_44";
"*_31";
"*myword_32";
"*myword_33";
"*_214";
"*accum_150";
"*locFPF2__lsm.90_162";
"*accum_152";
"*locFPF2__lsm.90_19";
"*locFPF2__lsm.91_17";
"*accum_163";
"*locFPF2__lsm.92_195";
"*accum_165";
"*_159";
"*accum_166";
"*accum_128";
"*accum_167";
"*accum_105";
"*accum_326";
"*accum_282";
"*_258";
"*accum_193";
"*locFPF2__lsm.90_57";
"*locFPF2__lsm.91_127";
"*locFPF2__lsm.91_149";
"*locFPF2__lsm.94_325";
"*locFPF2__lsm.94_186";
"*locFPF2__lsm.94_53";
"*locFPF2_exp_lsm.98_175";
"*locFPF2_exp_lsm.98_173";
"*locFPF2_exp_lsm.98_124";
"*locFPF2__lsm.93_187";
"*accum_176";
"*accum_178";
"*_158";
"*accum_179";
"*accum_180";
"*locFPF2__lsm.95_183";
"*accum_191";
"*_154";
"*accum_192";
"*locFPF2__lsm.96_182";
"*locFPF2__lsm.97_174";
"*_96";
"*_97";
"*_98";
"*_99";
"*locFPF2_exp_lsm.99_170";
"*_101";
"*locFPF2__lsm.91_67";
"*locFPF2__lsm.90_255";
"*locFPF2_exp_lsm.99_254";
"*locFPF2_exp_lsm.98_242";
"*locFPF2__lsm.97_241";
"*locFPF2__lsm.96_238";
"*locFPF2__lsm.95_237";
"*locFPF2__lsm.94_225";
"*locFPF2__lsm.93_224";
"*locFPF2__lsm.92_216";
"*_8";
"*accum_115";
"*accum_137";
"*locFPF2__lsm.95_54";
"*locFPF2__lsm.96_55";
"*locFPF2__lsm.97_58";
"*locFPF2_exp_lsm.99_59";
"*locFPF2__lsm.92_43";
"*locFPF2__lsm.93_85";
"*accum_256";
"*accum_324";
"*locFPF2__lsm.105_89";
"*locFPF2__lsm.106_90";
"*locFPF2__lsm.107_91";
"*locFPF2_exp_lsm.109_144";
"*locFPF2__lsm.102_147";
"*locFPF2__lsm.103_29";

  // Edges in the constraint graph:
"_5" -> "ESCAPED";
"_8" -> "ESCAPED";
"*ESCAPED" -> "ESCAPED";
"i_232" -> "i_232";
"i_232" -> "i_232";
"NONLOCAL" -> "_1";
"locFPF1" -> "locFPF1";
"myword_46" -> "locFPF1";
"myword_47" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1__lsm.116_251" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"_1" -> "mylong_41";
"_1" -> "mylong_277";
"mylong_41" -> "mylong_277";
"mylong_277" -> "_45";
"_45" -> "myword_46";
"mylong_277" -> "myword_47";
"_45" -> "_219";
"locFPF1" -> "locFPF1__lsm.116_74";
"myword_46" -> "accum_329";
"accum_329" -> "accum_329";
"accum_329" -> "accum_329";
"accum_329" -> "accum_329";
"accum_329" -> "accum_329";
"locFPF1" -> "_295";
"locFPF1" -> "_294";
"locFPF1" -> "_290";
"accum_329" -> "locFPF1__lsm.116_171";
"accum_329" -> "_65";
"locFPF1__lsm.111_114" -> "locFPF1__lsm.111_196";
"locFPF1__lsm.116_171" -> "locFPF1__lsm.116_251";
"locFPF1__lsm.115_172" -> "locFPF1__lsm.115_250";
"locFPF1__lsm.113_185" -> "locFPF1__lsm.113_228";
"locFPF1__lsm.117_197" -> "locFPF1__lsm.117_215";
"locFPF1_exp_lsm.119_333" -> "locFPF1_exp_lsm.119_35";
"NONLOCAL" -> "_2";
"_2" -> "_3";
"_2" -> "mylong_34";
"_3" -> "mylong_37";
"mylong_34" -> "mylong_37";
"cstore_188" -> "locFPF2";
"locFPF2" -> "locFPF2";
"myword_39" -> "locFPF2";
"myword_40" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2__lsm.106_204" -> "locFPF2";
"locFPF2" -> "locFPF2";
"cstore_44" -> "locFPF2";
"myword_32" -> "locFPF2";
"myword_33" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2__lsm.96_238" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"mylong_37" -> "_38";
"_38" -> "myword_39";
"mylong_37" -> "myword_40";
"_38" -> "_287";
"locFPF2" -> "_227";
"myword_39" -> "accum_261";
"accum_261" -> "accum_261";
"accum_261" -> "accum_261";
"accum_261" -> "accum_261";
"accum_261" -> "accum_261";
"locFPF2" -> "accum_103";
"locFPF2" -> "accum_103";
"locFPF2__lsm.101_52" -> "locFPF2__lsm.101_10";
"locFPF2__lsm.101_93" -> "locFPF2__lsm.101_10";
"accum_103" -> "_226";
"locFPF2" -> "_222";
"accum_261" -> "locFPF2__lsm.106_72";
"accum_261" -> "_83";
"locFPF2__lsm.101_10" -> "locFPF2__lsm.101_48";
"locFPF2__lsm.103_69" -> "locFPF2__lsm.103_211";
"locFPF2__lsm.105_71" -> "locFPF2__lsm.105_207";
"locFPF2__lsm.106_72" -> "locFPF2__lsm.106_204";
"locFPF2__lsm.107_73" -> "locFPF2__lsm.107_203";
"locFPF2_exp_lsm.109_134" -> "locFPF2_exp_lsm.109_263";
"i_232" -> "_4";
"NONLOCAL" -> "_6";
"_6" -> "_7";
"_6" -> "mylong_27";
"_7" -> "mylong_30";
"mylong_27" -> "mylong_30";
"mylong_30" -> "_31";
"_31" -> "myword_32";
"mylong_30" -> "myword_33";
"_31" -> "_214";
"locFPF2" -> "_159";
"locFPF2" -> "accum_326";
"locFPF2" -> "accum_326";
"myword_32" -> "accum_193";
"accum_193" -> "accum_193";
"accum_193" -> "accum_193";
"accum_193" -> "accum_193";
"accum_193" -> "accum_193";
"locFPF2__lsm.91_17" -> "locFPF2__lsm.91_127";
"locFPF2__lsm.91_149" -> "locFPF2__lsm.91_127";
"accum_326" -> "_158";
"locFPF2" -> "_154";
"accum_193" -> "locFPF2__lsm.96_182";
"accum_193" -> "_101";
"locFPF2__lsm.91_127" -> "locFPF2__lsm.91_67";
"locFPF2_exp_lsm.99_170" -> "locFPF2_exp_lsm.99_254";
"locFPF2__lsm.97_174" -> "locFPF2__lsm.97_241";
"locFPF2__lsm.96_182" -> "locFPF2__lsm.96_238";
"locFPF2__lsm.95_183" -> "locFPF2__lsm.95_237";
"locFPF2__lsm.93_187" -> "locFPF2__lsm.93_224";
"locFPF2" -> "locFPF2__lsm.96_55";
"locFPF2" -> "locFPF2__lsm.92_43";
"locFPF2" -> "locFPF2__lsm.106_90";
"locFPF2" -> "locFPF2__lsm.102_147";
"NONLOCAL" -> "*ESCAPED";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_5 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l"];
"randnum";
"i_232";
"randwc";
"_1";
"locFPF1__lsm.110_56";
"locFPF1__lsm.111_321";
"accum_218";
"_5";
"DivideInternalFPF";
"_8";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "locFPF1__lsm.110_56";
"STOREDANYTHING" -> "accum_218";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_8";
"abase" -> "i_232";
"i_232" -> "accum_218";
"_1" -> "locFPF1__lsm.110_56";
"_1" -> "accum_218";
"locFPF1__lsm.111_321" -> "i_232";
"_5" -> "ESCAPED";
"_8" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _1\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_5 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l"];
"randnum";
"i_232";
"randwc";
"_1";
"locFPF1__lsm.110_56";
"locFPF1__lsm.111_321";
"accum_218";
"_5";
"DivideInternalFPF";
"_8";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "locFPF1__lsm.110_56";
"STOREDANYTHING" -> "accum_218";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_8";
"abase" -> "i_232";
"i_232" -> "accum_218";
"_1" -> "ESCAPED";
"_1" -> "locFPF1__lsm.110_56";
"_1" -> "locFPF1__lsm.110_56";
"_1" -> "accum_218";
"_1" -> "accum_218";
"locFPF1__lsm.110_56" -> "ESCAPED";
"locFPF1__lsm.111_321" -> "i_232";
"accum_218" -> "ESCAPED";
"_5" -> "ESCAPED";
"_8" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL locFPF1 locFPF2 }
NONLOCAL = { ESCAPED NONLOCAL } same as _1
STOREDANYTHING = { }
INTEGER = { ANYTHING }
abase = { NONLOCAL }
bbase = { NONLOCAL } same as abase
cbase = { NONLOCAL } same as abase
arraysize = { NONLOCAL } same as abase
randnum = { }
i_232 = { NULL NONLOCAL }
i_26 = { NULL NONLOCAL } same as i_232
randwc = { }
_1 = { ESCAPED NONLOCAL }
locFPF1 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
mylong_41 = { ESCAPED NONLOCAL } same as _1
mylong_277 = { ESCAPED NONLOCAL } same as _1
_45 = { ESCAPED NONLOCAL } same as _1
myword_46 = { ESCAPED NONLOCAL } same as _1
myword_47 = { ESCAPED NONLOCAL } same as _1
_219 = { ESCAPED NONLOCAL } same as _1
locFPF1__lsm.110_56 = { NULL ESCAPED NONLOCAL }
locFPF1__lsm.111_321 = { NULL }
locFPF1__lsm.112_320 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.113_308 = { NULL } same as locFPF1__lsm.111_321
locFPF1__lsm.114_307 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.115_109 = { NULL } same as locFPF1__lsm.111_321
locFPF1__lsm.116_74 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.117_253 = { NULL } same as locFPF1__lsm.111_321
locFPF1_exp_lsm.118_252 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1_exp_lsm.119_240 = { NULL } same as locFPF1__lsm.111_321
_164 = { ESCAPED NONLOCAL } same as _1
accum_329 = { ESCAPED NONLOCAL } same as _1
locFPF1__lsm.110_345 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.110_239 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.112_341 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.112_92 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.114_337 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.114_184 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1_exp_lsm.118_104 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1_exp_lsm.118_265 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
accum_286 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
accum_288 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.111_114 = { NONLOCAL } same as abase
accum_299 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
accum_301 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
_295 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
accum_302 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
accum_303 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.113_185 = { NONLOCAL } same as abase
accum_312 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
accum_314 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
_294 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
accum_315 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
accum_316 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.115_172 = { NONLOCAL } same as abase
accum_327 = { ESCAPED NONLOCAL } same as _1
_290 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
accum_328 = { ESCAPED NONLOCAL } same as _1
locFPF1__lsm.116_171 = { ESCAPED NONLOCAL } same as _1
locFPF1__lsm.117_197 = { NONLOCAL } same as abase
_60 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
_61 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
_62 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
_63 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1_exp_lsm.119_333 = { NONLOCAL } same as abase
_65 = { ESCAPED NONLOCAL } same as _1
locFPF1__lsm.112_199 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.111_196 = { NONLOCAL } same as abase
locFPF1__lsm.116_251 = { ESCAPED NONLOCAL } same as _1
locFPF1__lsm.115_250 = { NONLOCAL } same as abase
locFPF1__lsm.114_229 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1__lsm.113_228 = { NONLOCAL } same as abase
locFPF1__lsm.117_215 = { NONLOCAL } same as abase
locFPF1__lsm.110_213 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1_exp_lsm.118_212 = { NULL ESCAPED NONLOCAL } same as locFPF1__lsm.110_56
locFPF1_exp_lsm.119_35 = { NONLOCAL } same as abase
_2 = { ESCAPED NONLOCAL } same as _1
_3 = { ESCAPED NONLOCAL } same as _1
mylong_34 = { ESCAPED NONLOCAL } same as _1
mylong_37 = { ESCAPED NONLOCAL } same as _1
cstore_188 = { NULL NONLOCAL } same as i_232
locFPF2 = { NULL ESCAPED NONLOCAL } same as accum_218
_38 = { ESCAPED NONLOCAL } same as _1
myword_39 = { ESCAPED NONLOCAL } same as _1
myword_40 = { ESCAPED NONLOCAL } same as _1
_287 = { ESCAPED NONLOCAL } same as _1
accum_218 = { NULL ESCAPED NONLOCAL }
locFPF2__lsm.100_9 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_220 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.100_51 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.101_52 = { NONLOCAL } same as abase
accum_231 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.102_68 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_233 = { NULL ESCAPED NONLOCAL } same as accum_218
_227 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_234 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_285 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_235 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_257 = { NULL ESCAPED NONLOCAL } same as accum_218
_190 = { ESCAPED NONLOCAL } same as _1
accum_261 = { ESCAPED NONLOCAL } same as _1
accum_103 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_23 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.100_95 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.101_10 = { NULL NONLOCAL } same as i_232
locFPF2__lsm.101_93 = { NULL } same as locFPF1__lsm.111_321
locFPF2__lsm.104_112 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.104_70 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.104_88 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.108_107 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.108_76 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.108_94 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.103_69 = { NONLOCAL } same as abase
accum_244 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_246 = { NULL ESCAPED NONLOCAL } same as accum_218
_226 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_247 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_248 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.105_71 = { NONLOCAL } same as abase
accum_259 = { ESCAPED NONLOCAL } same as _1
_222 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_260 = { ESCAPED NONLOCAL } same as _1
locFPF2__lsm.106_72 = { ESCAPED NONLOCAL } same as _1
locFPF2__lsm.107_73 = { NONLOCAL } same as abase
_78 = { NULL ESCAPED NONLOCAL } same as accum_218
_79 = { NULL ESCAPED NONLOCAL } same as accum_218
_80 = { NULL ESCAPED NONLOCAL } same as accum_218
_81 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.109_134 = { NONLOCAL } same as abase
_83 = { ESCAPED NONLOCAL } same as _1
locFPF2__lsm.100_66 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.101_48 = { NULL NONLOCAL } same as i_232
locFPF2__lsm.102_28 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.103_211 = { NONLOCAL } same as abase
locFPF2__lsm.104_208 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.105_207 = { NONLOCAL } same as abase
locFPF2__lsm.106_204 = { ESCAPED NONLOCAL } same as _1
locFPF2__lsm.107_203 = { NONLOCAL } same as abase
locFPF2_exp_lsm.108_200 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.109_263 = { NONLOCAL } same as abase
_4 = { NULL NONLOCAL } same as i_232
_5 = { NONLOCAL }
DivideInternalFPF = { }
_6 = { ESCAPED NONLOCAL } same as _1
_7 = { ESCAPED NONLOCAL } same as _1
mylong_27 = { ESCAPED NONLOCAL } same as _1
mylong_30 = { ESCAPED NONLOCAL } same as _1
cstore_44 = { NULL NONLOCAL } same as i_232
_31 = { ESCAPED NONLOCAL } same as _1
myword_32 = { ESCAPED NONLOCAL } same as _1
myword_33 = { ESCAPED NONLOCAL } same as _1
_214 = { ESCAPED NONLOCAL } same as _1
accum_150 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.90_162 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_152 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.90_19 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.91_17 = { NONLOCAL } same as abase
accum_163 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.92_195 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_165 = { NULL ESCAPED NONLOCAL } same as accum_218
_159 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_166 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_128 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_167 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_105 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_326 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_282 = { NULL ESCAPED NONLOCAL } same as accum_218
_258 = { ESCAPED NONLOCAL } same as _1
accum_193 = { ESCAPED NONLOCAL } same as _1
locFPF2__lsm.90_57 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.91_127 = { NULL NONLOCAL } same as i_232
locFPF2__lsm.91_149 = { NULL } same as locFPF1__lsm.111_321
locFPF2__lsm.94_325 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.94_186 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.94_53 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.98_175 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.98_173 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.98_124 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.93_187 = { NONLOCAL } same as abase
accum_176 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_178 = { NULL ESCAPED NONLOCAL } same as accum_218
_158 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_179 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_180 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.95_183 = { NONLOCAL } same as abase
accum_191 = { ESCAPED NONLOCAL } same as _1
_154 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_192 = { ESCAPED NONLOCAL } same as _1
locFPF2__lsm.96_182 = { ESCAPED NONLOCAL } same as _1
locFPF2__lsm.97_174 = { NONLOCAL } same as abase
_96 = { NULL ESCAPED NONLOCAL } same as accum_218
_97 = { NULL ESCAPED NONLOCAL } same as accum_218
_98 = { NULL ESCAPED NONLOCAL } same as accum_218
_99 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.99_170 = { NONLOCAL } same as abase
_101 = { ESCAPED NONLOCAL } same as _1
locFPF2__lsm.91_67 = { NULL NONLOCAL } same as i_232
locFPF2__lsm.90_255 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2_exp_lsm.99_254 = { NONLOCAL } same as abase
locFPF2_exp_lsm.98_242 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.97_241 = { NONLOCAL } same as abase
locFPF2__lsm.96_238 = { ESCAPED NONLOCAL } same as _1
locFPF2__lsm.95_237 = { NONLOCAL } same as abase
locFPF2__lsm.94_225 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.93_224 = { NONLOCAL } same as abase
locFPF2__lsm.92_216 = { NULL ESCAPED NONLOCAL } same as accum_218
_8 = { NONLOCAL }
accum_115 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_137 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.95_54 = { NULL } same as locFPF1__lsm.111_321
locFPF2__lsm.96_55 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.97_58 = { NULL } same as locFPF1__lsm.111_321
locFPF2_exp_lsm.99_59 = { NULL } same as locFPF1__lsm.111_321
locFPF2__lsm.92_43 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.93_85 = { NULL } same as locFPF1__lsm.111_321
accum_256 = { NULL ESCAPED NONLOCAL } same as accum_218
accum_324 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.105_89 = { NULL } same as locFPF1__lsm.111_321
locFPF2__lsm.106_90 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.107_91 = { NULL } same as locFPF1__lsm.111_321
locFPF2_exp_lsm.109_144 = { NULL } same as locFPF1__lsm.111_321
locFPF2__lsm.102_147 = { NULL ESCAPED NONLOCAL } same as accum_218
locFPF2__lsm.103_29 = { NULL } same as locFPF1__lsm.111_321


Alias information for SetupCPUEmFloatArrays

Aliased symbols

locFPF2, UID D.2844, struct InternalFPF, is addressable
locFPF1, UID D.2843, struct InternalFPF, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.2843 D.2844 } (escaped)

Flow-insensitive points-to information

_5, points-to non-local, points-to NULL, points-to vars: { }
_8, points-to non-local, points-to NULL, points-to vars: { }
abase_20(D), points-to non-local, points-to NULL, points-to vars: { }
bbase_24(D), points-to non-local, points-to NULL, points-to vars: { }

;; 11 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 45 3 4 5 6 80 7 81 46 8 82 9 10 83 11 12 84 13 14 48 85 69 86 70 71 87 72 73 88 74 75 89 76 77 90 78 15 91 16 17 18 19 92 20 93 21 22 23 94 24 25 95 26 27 96 59 97 60 61 98 62 63 99 64 65 100 66 67 101 68 28 102 29 30 31 32 103 33 104 34 35 36 105 37 38 106 39 40 107 49 108 50 51 109 52 53 110 54 55 111 56 57 112 58 41 113 47 79 42 43 44
;;
;; Loop 1
;;  header 3, latch 47
;;  depth 1, outer 0
;;  nodes: 3 47 41 112 31 103 58 57 56 111 55 54 110 53 52 109 51 50 108 49 107 40 106 39 38 105 37 36 35 43 32 30 29 102 28 101 18 92 68 67 66 100 65 64 99 63 62 98 61 60 97 59 96 27 95 26 25 94 24 23 22 44 19 17 16 91 15 90 6 81 78 77 76 89 75 74 88 73 72 87 71 70 86 69 85 14 84 13 12 83 11 10 82 9 8 48 46 7 80 4 5 93 21 20 104 34 33
;;
;; Loop 9
;;  header 36, latch 35
;;  depth 2, outer 1
;;  nodes: 36 35 104 34 33 40 106 39 38 105 37
;;
;; Loop 7
;;  header 23, latch 22
;;  depth 2, outer 1
;;  nodes: 23 22 93 21 20 27 95 26 25 94 24
;;
;; Loop 5
;;  header 8, latch 48
;;  depth 2, outer 1
;;  nodes: 8 48 14 84 13 12 83 11 10 82 9
;; 2 succs { 45 79 }
;; 45 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 80 }
;; 6 succs { 15 }
;; 80 succs { 7 }
;; 7 succs { 46 81 }
;; 81 succs { 15 }
;; 46 succs { 8 }
;; 8 succs { 9 82 }
;; 82 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 83 }
;; 83 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 84 }
;; 84 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 48 85 }
;; 48 succs { 8 }
;; 85 succs { 69 }
;; 69 succs { 86 70 }
;; 86 succs { 71 }
;; 70 succs { 71 }
;; 71 succs { 87 72 }
;; 87 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 88 74 }
;; 88 succs { 75 }
;; 74 succs { 75 }
;; 75 succs { 89 76 }
;; 89 succs { 77 }
;; 76 succs { 77 }
;; 77 succs { 90 78 }
;; 90 succs { 15 }
;; 78 succs { 15 }
;; 15 succs { 16 91 }
;; 91 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 28 }
;; 19 succs { 44 92 }
;; 92 succs { 28 }
;; 20 succs { 21 93 }
;; 93 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 94 }
;; 94 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 26 95 }
;; 95 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 20 96 }
;; 96 succs { 59 }
;; 59 succs { 97 60 }
;; 97 succs { 61 }
;; 60 succs { 61 }
;; 61 succs { 98 62 }
;; 98 succs { 63 }
;; 62 succs { 63 }
;; 63 succs { 99 64 }
;; 99 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 100 66 }
;; 100 succs { 67 }
;; 66 succs { 67 }
;; 67 succs { 101 68 }
;; 101 succs { 28 }
;; 68 succs { 28 }
;; 28 succs { 29 102 }
;; 102 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 41 }
;; 32 succs { 43 103 }
;; 103 succs { 41 }
;; 33 succs { 34 104 }
;; 104 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 }
;; 36 succs { 37 105 }
;; 105 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 39 106 }
;; 106 succs { 40 }
;; 39 succs { 40 }
;; 40 succs { 33 107 }
;; 107 succs { 49 }
;; 49 succs { 108 50 }
;; 108 succs { 51 }
;; 50 succs { 51 }
;; 51 succs { 109 52 }
;; 109 succs { 53 }
;; 52 succs { 53 }
;; 53 succs { 110 54 }
;; 110 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 111 56 }
;; 111 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 112 58 }
;; 112 succs { 41 }
;; 58 succs { 41 }
;; 41 succs { 47 113 }
;; 113 succs { 42 }
;; 47 succs { 3 }
;; 79 succs { 42 }
;; 42 succs { 1 }
;; 43 succs { 36 }
;; 44 succs { 23 }
find_duplicates: <bb 79> duplicate of <bb 113>
find_duplicates: <bb 50> duplicate of <bb 108>
find_duplicates: <bb 60> duplicate of <bb 97>
Removing basic block 113
Removing basic block 108
Removing basic block 97

Symbols to be put in SSA form
{ D.3270 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 114
Number of blocks to update: 110 ( 96%)


Removing basic block 21
Removing basic block 34
Removing basic block 109
Removing basic block 110
Removing basic block 111
Removing basic block 112
Removing basic block 98
Removing basic block 99
Removing basic block 100
Removing basic block 101
Removing basic block 86
Removing basic block 87
Removing basic block 88
Removing basic block 89
Removing basic block 90
Merging blocks 20 and 93
Merging blocks 33 and 104
Removing basic block 43
Removing basic block 44
Removing basic block 45
Removing basic block 46
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
Removing basic block 59
Removing basic block 60
Removing basic block 69
Merging blocks 79 and 42
Removing basic block 80
Removing basic block 81
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 91
Removing basic block 92
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 102
Removing basic block 103
Removing basic block 105
Removing basic block 106
Removing basic block 107
Merging blocks 20 and 22
Merging blocks 33 and 35
Merging blocks 51 and 52
Merging blocks 51 and 53
Merging blocks 51 and 54
Merging blocks 51 and 55
Merging blocks 51 and 56
Merging blocks 51 and 57
Merging blocks 51 and 58
Merging blocks 61 and 62
Merging blocks 61 and 63
Merging blocks 61 and 64
Merging blocks 61 and 65
Merging blocks 61 and 66
Merging blocks 61 and 67
Merging blocks 61 and 68
Merging blocks 70 and 71
Merging blocks 70 and 72
Merging blocks 70 and 73
Merging blocks 70 and 74
Merging blocks 70 and 75
Merging blocks 70 and 76
Merging blocks 70 and 77
Merging blocks 70 and 78
SetupCPUEmFloatArrays (struct InternalFPF * abase, struct InternalFPF * bbase, struct InternalFPF * cbase, long unsigned int arraysize)
{
  _Bool locFPF1_exp_lsm.119;
  short int locFPF1_exp_lsm.118;
  _Bool locFPF1__lsm.117;
  short unsigned int locFPF1__lsm.116;
  _Bool locFPF1__lsm.115;
  short unsigned int locFPF1__lsm.114;
  _Bool locFPF1__lsm.113;
  short unsigned int locFPF1__lsm.112;
  _Bool locFPF1__lsm.111;
  short unsigned int locFPF1__lsm.110;
  _Bool locFPF2_exp_lsm.109;
  short int locFPF2_exp_lsm.108;
  _Bool locFPF2__lsm.107;
  short unsigned int locFPF2__lsm.106;
  _Bool locFPF2__lsm.105;
  short unsigned int locFPF2__lsm.104;
  _Bool locFPF2__lsm.103;
  short unsigned int locFPF2__lsm.102;
  _Bool locFPF2__lsm.101;
  short unsigned int locFPF2__lsm.100;
  _Bool locFPF2_exp_lsm.99;
  short int locFPF2_exp_lsm.98;
  _Bool locFPF2__lsm.97;
  short unsigned int locFPF2__lsm.96;
  _Bool locFPF2__lsm.95;
  short unsigned int locFPF2__lsm.94;
  _Bool locFPF2__lsm.93;
  short unsigned int locFPF2__lsm.92;
  _Bool locFPF2__lsm.91;
  short unsigned int locFPF2__lsm.90;
  short unsigned int carry;
  short unsigned int accum;
  int i;
  short unsigned int carry;
  short unsigned int accum;
  int i;
  short unsigned int carry;
  short unsigned int accum;
  int i;
  int i;
  short unsigned int myword;
  int32 mylong;
  int i;
  short unsigned int myword;
  int32 mylong;
  int i;
  short unsigned int myword;
  int32 mylong;
  struct InternalFPF locFPF2;
  struct InternalFPF locFPF1;
  long unsigned int i;
  int _1;
  int _2;
  int _3;
  long unsigned int _4;
  struct InternalFPF * _5;
  int _6;
  int _7;
  struct InternalFPF * _8;
  int _31;
  int _38;
  unsigned char cstore_44;
  int _45;
  unsigned short _61;
  unsigned short _62;
  short int _63;
  signed short _65;
  unsigned short _79;
  unsigned short _80;
  short int _81;
  signed short _83;
  unsigned short _97;
  unsigned short _98;
  short int _99;
  signed short _101;
  signed short _154;
  signed short _158;
  short unsigned int _164;
  unsigned char cstore_188;
  short unsigned int _190;
  signed short _214;
  signed short _219;
  signed short _222;
  signed short _226;
  short unsigned int _258;
  signed short _287;
  signed short _290;
  signed short _294;
  signed short _295;
  short unsigned int prephitmp_305;
  short unsigned int prephitmp_306;

  <bb 2> [1.70%]:
  randnum (13);
  if (arraysize_13(D) != 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 41>; [15.00%]

  <bb 3> [9.63%]:
  # i_232 = PHI <i_26(40), 0(2)>
  _1 = randwc (50000);
  if (_1 < 0)
    goto <bb 4>; [36.00%]
  else
    goto <bb 5>; [64.00%]

  <bb 4> [3.47%]:
  locFPF1.sign = 1;
  mylong_41 = -_1;
  locFPF1.type = 2;
  locFPF1.mantissa[2] = 0;
  locFPF1.mantissa[3] = 0;
  goto <bb 7>; [100.00%]

  <bb 5> [6.16%]:
  locFPF1.sign = 0;
  locFPF1.type = 2;
  locFPF1.mantissa[0] = 0;
  locFPF1.mantissa[1] = 0;
  locFPF1.mantissa[2] = 0;
  locFPF1.mantissa[3] = 0;
  if (_1 == 0)
    goto <bb 6>; [99.05%]
  else
    goto <bb 7>; [0.95%]

  <bb 6> [6.10%]:
  locFPF1.type = 0;
  locFPF1.exp = 0;
  goto <bb 16>; [100.00%]

  <bb 7> [3.53%]:
  # mylong_277 = PHI <_1(5), mylong_41(4)>
  # prephitmp_306 = PHI <0(5), 0(4)>
  # prephitmp_305 = PHI <0(5), 0(4)>
  locFPF1.exp = 32;
  _45 = mylong_277 >> 16;
  myword_46 = (short unsigned int) _45;
  locFPF1.mantissa[0] = myword_46;
  myword_47 = (short unsigned int) mylong_277;
  locFPF1.mantissa[1] = myword_47;
  _219 = (signed short) _45;
  if (_219 >= 0)
    goto <bb 8>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 8> [20.00%]:
  # _164 = PHI <accum_329(14), myword_46(7)>
  # locFPF1__lsm.110_345 = PHI <accum_288(14), prephitmp_306(7)>
  # locFPF1__lsm.112_341 = PHI <accum_303(14), prephitmp_305(7)>
  # locFPF1__lsm.114_337 = PHI <accum_316(14), myword_47(7)>
  # locFPF1_exp_lsm.118_104 = PHI <_63(14), 32(7)>
  accum_288 = locFPF1__lsm.110_345 << 1;
  accum_301 = locFPF1__lsm.112_341 << 1;
  _295 = (signed short) locFPF1__lsm.110_345;
  if (_295 < 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [10.00%]:
  accum_302 = accum_301 | 1;

  <bb 10> [20.00%]:
  # accum_303 = PHI <accum_301(8), accum_302(9)>
  accum_314 = locFPF1__lsm.114_337 << 1;
  _294 = (signed short) locFPF1__lsm.112_341;
  if (_294 < 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [10.00%]:
  accum_315 = accum_314 | 1;

  <bb 12> [20.00%]:
  # accum_316 = PHI <accum_314(10), accum_315(11)>
  accum_327 = _164 << 1;
  _290 = (signed short) locFPF1__lsm.114_337;
  if (_290 < 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [10.00%]:
  accum_328 = accum_327 | 1;

  <bb 14> [20.00%]:
  # accum_329 = PHI <accum_327(12), accum_328(13)>
  _61 = (unsigned short) locFPF1_exp_lsm.118_104;
  _62 = _61 + 65535;
  _63 = (short int) _62;
  _65 = (signed short) accum_329;
  if (_65 >= 0)
    goto <bb 8>; [85.00%]
  else
    goto <bb 15>; [15.00%]

  <bb 15> [0.00%]:
  MEM[(short unsigned int *)&locFPF1 + 10B] = accum_288;
  MEM[(short unsigned int *)&locFPF1 + 8B] = accum_303;
  MEM[(short unsigned int *)&locFPF1 + 6B] = accum_316;
  MEM[(short unsigned int *)&locFPF1 + 4B] = accum_329;
  locFPF1.exp = _63;

  <bb 16> [9.63%]:
  _2 = randwc (50000);
  _3 = _2 + 1;
  if (_3 < 0)
    goto <bb 17>; [36.00%]
  else
    goto <bb 18>; [64.00%]

  <bb 17> [3.47%]:
  mylong_34 = ~_2;

  <bb 18> [9.63%]:
  # mylong_37 = PHI <mylong_34(17), _3(16)>
  # cstore_188 = PHI <1(17), 0(16)>
  locFPF2.sign = cstore_188;
  locFPF2.type = 2;
  locFPF2.mantissa[0] = 0;
  locFPF2.mantissa[1] = 0;
  locFPF2.mantissa[2] = 0;
  locFPF2.mantissa[3] = 0;
  if (mylong_37 == 0)
    goto <bb 19>; [63.36%]
  else
    goto <bb 20>; [36.64%]

  <bb 19> [6.10%]:
  locFPF2.type = 0;
  locFPF2.exp = 0;
  goto <bb 28>; [100.00%]

  <bb 20> [3.53%]:
  locFPF2.exp = 32;
  _38 = mylong_37 >> 16;
  myword_39 = (short unsigned int) _38;
  locFPF2.mantissa[0] = myword_39;
  myword_40 = (short unsigned int) mylong_37;
  locFPF2.mantissa[1] = myword_40;
  _287 = (signed short) _38;
  if (_287 >= 0)
    goto <bb 22>; [85.00%]
  else
    goto <bb 28>; [15.00%]

  <bb 21> [17.00%]:
  accum_233 = accum_235 << 1;

  <bb 22> [20.00%]:
  # accum_235 = PHI <accum_233(21), 0(20)>
  # _190 = PHI <accum_261(21), myword_39(20)>
  # accum_103 = PHI <accum_235(21), 0(20)>
  # locFPF2__lsm.101_10 = PHI <1(21), 0(20)>
  # locFPF2__lsm.104_112 = PHI <accum_248(21), myword_40(20)>
  # locFPF2_exp_lsm.108_107 = PHI <_81(21), 32(20)>
  accum_246 = locFPF2__lsm.104_112 << 1;
  _226 = (signed short) accum_103;
  if (_226 < 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 23> [10.00%]:
  accum_247 = accum_246 | 1;

  <bb 24> [20.00%]:
  # accum_248 = PHI <accum_246(22), accum_247(23)>
  accum_259 = _190 << 1;
  _222 = (signed short) locFPF2__lsm.104_112;
  if (_222 < 0)
    goto <bb 25>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 25> [10.00%]:
  accum_260 = accum_259 | 1;

  <bb 26> [20.00%]:
  # accum_261 = PHI <accum_259(24), accum_260(25)>
  _79 = (unsigned short) locFPF2_exp_lsm.108_107;
  _80 = _79 + 65535;
  _81 = (short int) _80;
  _83 = (signed short) accum_261;
  if (_83 >= 0)
    goto <bb 21>; [85.00%]
  else
    goto <bb 27>; [15.00%]

  <bb 27> [0.00%]:
  MEM[(short unsigned int *)&locFPF2 + 8B] = accum_235;
  MEM[(short unsigned int *)&locFPF2 + 6B] = accum_248;
  MEM[(short unsigned int *)&locFPF2 + 4B] = accum_261;
  locFPF2.exp = _81;

  <bb 28> [9.63%]:
  _4 = i_232 * 12;
  _5 = abase_20(D) + _4;
  DivideInternalFPF (&locFPF1, &locFPF2, _5);
  _6 = randwc (50000);
  _7 = _6 + 1;
  if (_7 < 0)
    goto <bb 29>; [36.00%]
  else
    goto <bb 30>; [64.00%]

  <bb 29> [3.47%]:
  mylong_27 = ~_6;

  <bb 30> [9.63%]:
  # mylong_30 = PHI <mylong_27(29), _7(28)>
  # cstore_44 = PHI <1(29), 0(28)>
  locFPF2.sign = cstore_44;
  locFPF2.type = 2;
  locFPF2.mantissa[0] = 0;
  locFPF2.mantissa[1] = 0;
  locFPF2.mantissa[2] = 0;
  locFPF2.mantissa[3] = 0;
  if (mylong_30 == 0)
    goto <bb 31>; [63.36%]
  else
    goto <bb 32>; [36.64%]

  <bb 31> [6.10%]:
  locFPF2.type = 0;
  locFPF2.exp = 0;
  goto <bb 40>; [100.00%]

  <bb 32> [3.53%]:
  locFPF2.exp = 32;
  _31 = mylong_30 >> 16;
  myword_32 = (short unsigned int) _31;
  locFPF2.mantissa[0] = myword_32;
  myword_33 = (short unsigned int) mylong_30;
  locFPF2.mantissa[1] = myword_33;
  _214 = (signed short) _31;
  if (_214 >= 0)
    goto <bb 34>; [85.00%]
  else
    goto <bb 40>; [15.00%]

  <bb 33> [17.00%]:
  accum_165 = accum_167 << 1;

  <bb 34> [20.00%]:
  # accum_167 = PHI <accum_165(33), 0(32)>
  # accum_326 = PHI <accum_167(33), 0(32)>
  # _258 = PHI <accum_193(33), myword_32(32)>
  # locFPF2__lsm.91_127 = PHI <1(33), 0(32)>
  # locFPF2__lsm.94_325 = PHI <accum_180(33), myword_33(32)>
  # locFPF2_exp_lsm.98_175 = PHI <_99(33), 32(32)>
  accum_178 = locFPF2__lsm.94_325 << 1;
  _158 = (signed short) accum_326;
  if (_158 < 0)
    goto <bb 35>; [50.00%]
  else
    goto <bb 36>; [50.00%]

  <bb 35> [10.00%]:
  accum_179 = accum_178 | 1;

  <bb 36> [20.00%]:
  # accum_180 = PHI <accum_178(34), accum_179(35)>
  accum_191 = _258 << 1;
  _154 = (signed short) locFPF2__lsm.94_325;
  if (_154 < 0)
    goto <bb 37>; [50.00%]
  else
    goto <bb 38>; [50.00%]

  <bb 37> [10.00%]:
  accum_192 = accum_191 | 1;

  <bb 38> [20.00%]:
  # accum_193 = PHI <accum_191(36), accum_192(37)>
  _97 = (unsigned short) locFPF2_exp_lsm.98_175;
  _98 = _97 + 65535;
  _99 = (short int) _98;
  _101 = (signed short) accum_193;
  if (_101 >= 0)
    goto <bb 33>; [85.00%]
  else
    goto <bb 39>; [15.00%]

  <bb 39> [0.00%]:
  MEM[(short unsigned int *)&locFPF2 + 8B] = accum_167;
  MEM[(short unsigned int *)&locFPF2 + 6B] = accum_180;
  MEM[(short unsigned int *)&locFPF2 + 4B] = accum_193;
  locFPF2.exp = _99;

  <bb 40> [9.63%]:
  _8 = bbase_24(D) + _4;
  DivideInternalFPF (&locFPF1, &locFPF2, _8);
  i_26 = i_232 + 1;
  if (arraysize_13(D) > i_26)
    goto <bb 3>; [85.00%]
  else
    goto <bb 41>; [15.00%]

  <bb 41> [1.70%]:
  locFPF1 ={v} {CLOBBER};
  locFPF2 ={v} {CLOBBER};
  return;

}



;; Function DoEmFloatIteration (DoEmFloatIteration, funcdef_no=35, decl_uid=2773, cgraph_uid=35, symbol_order=35)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
abase = &NONLOCAL
bbase = &NONLOCAL
cbase = &NONLOCAL
arraysize = &NONLOCAL
loops = &NONLOCAL
elapsed_26 = NONLOCAL
i_281 = i_39
i_281 = &NULL
_1 = i_281 + UNKNOWN
jtable.2859 = NONLOCAL
_2 = jtable.2859
_3 = i_281
_3 = &NONLOCAL
_4 = cbase + UNKNOWN
_5 = bbase + UNKNOWN
_6 = abase + UNKNOWN
ESCAPED = &NULL
ESCAPED = _6
ESCAPED = _5
ESCAPED = _4
_7 = i_281
_7 = &NONLOCAL
_8 = cbase + UNKNOWN
_9 = bbase + UNKNOWN
_10 = abase + UNKNOWN
ESCAPED = &NONLOCAL
ESCAPED = _10
ESCAPED = _9
ESCAPED = _8
_11 = i_281
_11 = &NONLOCAL
_12 = cbase + UNKNOWN
_13 = bbase + UNKNOWN
_14 = abase + UNKNOWN
_40 = *_14
_41 = _40
_42 = _41
_42 = &NONLOCAL
_43 = *_13
_44 = _43
_45 = _42
_45 = _44
_920 = *_14 + 32
_921 = *_13 + 32
_924 = *_14 + 48
_925 = *_13 + 48
_928 = *_14 + 64
_929 = *_13 + 64
_932 = *_14 + 80
_933 = *_13 + 80
doubledereftmp(47) = *_12 + UNKNOWN
*_14 + UNKNOWN = doubledereftmp(47)
_47 = *_12 + 8
_48 = *_13 + 8
_49 = _47
_49 = _48
*_12 + 8 = _49
doubledereftmp(51) = *_12 + UNKNOWN
*_13 + UNKNOWN = doubledereftmp(51)
_51 = *_12 + 8
_52 = *_14 + 8
_53 = _51
_53 = _52
*_12 + 8 = _53
derefaddrtmp(55) = &NONLOCAL
*_12 = derefaddrtmp(55)
derefaddrtmp(56) = &NONLOCAL
*_12 + 16 = derefaddrtmp(56)
derefaddrtmp(57) = &NONLOCAL
*_12 + 8 = derefaddrtmp(57)
derefaddrtmp(58) = &NONLOCAL
*_12 + 32 = derefaddrtmp(58)
derefaddrtmp(59) = &NULL
*_12 + 48 = derefaddrtmp(59)
derefaddrtmp(60) = &NULL
*_12 + 64 = derefaddrtmp(60)
derefaddrtmp(61) = &NULL
*_12 + 80 = derefaddrtmp(61)
doubledereftmp(62) = *_12 + UNKNOWN
*_14 + UNKNOWN = doubledereftmp(62)
doubledereftmp(63) = *_12 + UNKNOWN
*_13 + UNKNOWN = doubledereftmp(63)
locy = *_13 + UNKNOWN
_888 = *_14 + 32
_897 = *_14 + 48
_106 = _888
_106 = _897
_906 = *_14 + 64
_774 = _106
_774 = _906
_915 = *_14 + 80
_773 = _774
_773 = _915
_852 = *_13 + 32
_861 = *_13 + 48
_769 = _852
_769 = _861
_870 = *_13 + 64
_255 = _769
_255 = _870
_879 = *_13 + 80
_113 = _255
_113 = _879
derefaddrtmp(79) = &NONLOCAL
*_12 = derefaddrtmp(79)
derefaddrtmp(80) = &NULL
*_12 + 8 = derefaddrtmp(80)
derefaddrtmp(81) = &NONLOCAL
*_12 + 16 = derefaddrtmp(81)
_82 = *_14
_83 = *_13
cstore_247 = &NONLOCAL
cstore_247 = &NONLOCAL
cstore_247 = &NONLOCAL
*_12 = cstore_247
_84 = *_14 + 8
_85 = *_13 + 8
_86 = _84
_86 = _85
*_12 + 8 = _86
_87 = *_14 + 16
_88 = _87
_89 = *_13 + 16
_90 = _89
_91 = _88
_91 = _90
_92 = _91
*_12 + 16 = _92
derefaddrtmp(94) = &NULL
*_12 + 32 = derefaddrtmp(94)
derefaddrtmp(95) = &NULL
*_12 + 48 = derefaddrtmp(95)
derefaddrtmp(96) = &NULL
*_12 + 64 = derefaddrtmp(96)
derefaddrtmp(97) = &NULL
*_12 + 80 = derefaddrtmp(97)
locy__lsm.165_545 = locy
locy__lsm.166_418 = &NULL
locy__lsm.167_558 = locy
locy__lsm.168_456 = &NULL
locy__lsm.169_465 = locy
locy__lsm.170_474 = &NULL
locy__lsm.171_483 = locy
locy__lsm.172_419 = &NULL
_698 = *_14 + 80
_699 = *_12 + 80
accum_700 = _699
_701 = _698
accum_702 = accum_700
accum_702 = _701
_705 = accum_702
_705 = &NONLOCAL
_706 = _705
_708 = _698
_708 = _699
*_12 + 80 = _708
_714 = *_14 + 64
_715 = *_12 + 64
accum_716 = _715
_717 = _714
accum_718 = accum_716
accum_718 = _717
_719 = _705
accum_720 = _705
accum_720 = accum_718
_721 = accum_720
_721 = &NONLOCAL
_722 = _721
_724 = accum_720
*_12 + 64 = _724
_730 = *_14 + 48
_731 = *_12 + 48
accum_732 = _731
_733 = _730
accum_734 = accum_732
accum_734 = _733
_735 = _721
accum_736 = _721
accum_736 = accum_734
_737 = accum_736
_737 = &NONLOCAL
_738 = _737
_740 = accum_736
*_12 + 48 = _740
_746 = *_14 + 32
_747 = *_12 + 32
accum_748 = _747
_749 = _746
accum_750 = accum_748
accum_750 = _749
_751 = _737
accum_752 = _737
accum_752 = accum_750
_753 = accum_752
_753 = &NONLOCAL
_754 = _753
_756 = accum_752
*_12 + 32 = _756
accum_649 = *_12 + 32
_650 = accum_649 + UNKNOWN
accum_651 = accum_649
accum_651 = &NONLOCAL
accum_652 = accum_651
accum_652 = &NONLOCAL
accum_653 = accum_651
accum_653 = accum_652
accum_653 = accum_570
_531 = _650
_531 = _650
_531 = _557
*_12 + 32 = accum_653
accum_662 = *_12 + 48
_663 = accum_662 + UNKNOWN
accum_664 = accum_662
accum_664 = &NONLOCAL
accum_665 = accum_664
accum_665 = &NONLOCAL
accum_666 = accum_664
accum_666 = accum_665
*_12 + 48 = accum_666
accum_675 = *_12 + 64
_676 = accum_675 + UNKNOWN
accum_677 = accum_675
accum_677 = &NONLOCAL
accum_678 = accum_677
accum_678 = &NONLOCAL
accum_679 = accum_677
accum_679 = accum_678
*_12 + 64 = accum_679
accum_688 = *_12 + 80
_689 = accum_688 + UNKNOWN
accum_690 = accum_688
accum_690 = &NONLOCAL
accum_691 = accum_690
accum_691 = &NONLOCAL
accum_692 = accum_690
accum_692 = accum_691
*_12 + 80 = accum_692
_598 = extra_bits$0_22 + UNKNOWN
accum_599 = extra_bits$0_22
accum_599 = &NONLOCAL
accum_600 = accum_599
accum_600 = &NONLOCAL
accum_601 = accum_599
accum_601 = accum_600
_611 = extra_bits$1_269 + UNKNOWN
accum_612 = extra_bits$1_269
accum_612 = &NONLOCAL
accum_613 = accum_612
accum_613 = &NONLOCAL
accum_614 = accum_612
accum_614 = accum_613
_624 = extra_bits$2_259 + UNKNOWN
accum_625 = extra_bits$2_259
accum_625 = &NONLOCAL
accum_626 = accum_625
accum_626 = &NONLOCAL
accum_627 = accum_625
accum_627 = accum_626
accum_638 = extra_bits$3_898
accum_638 = &NONLOCAL
accum_639 = accum_638
accum_639 = &NONLOCAL
accum_640 = accum_638
accum_640 = accum_639
i_145 = i_319
i_145 = &NONLOCAL
locy__lsm.166_369 = locy__lsm.166_427
locy__lsm.168_382 = locy__lsm.168_428
locy__lsm.165_196 = locy__lsm.165_571
locy__lsm.167_687 = locy__lsm.167_584
accum_546 = accum_601
accum_559 = accum_614
accum_457 = accum_627
accum_466 = accum_640
locy__lsm.169_467 = locy__lsm.169_833
locy__lsm.170_475 = locy__lsm.170_837
locy__lsm.171_476 = locy__lsm.171_841
locy__lsm.172_484 = locy__lsm.172_845
locy = locy__lsm.165_196
locy = locy__lsm.167_687
locy = locy__lsm.169_467
locy = locy__lsm.171_476
_739 = *_12 + 32
_755 = _739
D__lsm.157_628 = *_12 + 80
D__lsm.158_270 = &NULL
D__lsm.159_707 = *_12 + 64
D__lsm.160_268 = &NULL
D__lsm.161_829 = *_12 + 48
D__lsm.162_824 = &NULL
D__exp_lsm.163_819 = *_12 + 16
D__exp_lsm.164_814 = &NULL
i_319 = i_145
i_319 = &NULL
extra_bits$0_22 = accum_601
extra_bits$0_22 = &NULL
extra_bits$1_269 = accum_614
extra_bits$1_269 = &NULL
extra_bits$2_259 = accum_627
extra_bits$2_259 = &NULL
extra_bits$3_898 = accum_640
extra_bits$3_898 = &NULL
locy__lsm.165_623 = locy__lsm.165_571
locy__lsm.165_623 = locy__lsm.165_545
locy__lsm.167_46 = locy__lsm.167_584
locy__lsm.167_46 = locy__lsm.167_558
locy__lsm.169_636 = locy__lsm.169_833
locy__lsm.169_636 = locy__lsm.169_465
locy__lsm.171_409 = locy__lsm.171_841
locy__lsm.171_409 = locy__lsm.171_483
accum_765 = locy__lsm.165_623
_766 = accum_765 + UNKNOWN
accum_767 = accum_765
accum_767 = &NONLOCAL
locy__lsm.165_571 = accum_767
locy__lsm.166_427 = &NONLOCAL
accum_778 = locy__lsm.167_46
_779 = accum_778 + UNKNOWN
accum_780 = accum_778
accum_780 = &NONLOCAL
accum_781 = accum_780
accum_781 = &NONLOCAL
accum_782 = accum_780
accum_782 = accum_781
locy__lsm.167_584 = accum_782
locy__lsm.168_428 = &NONLOCAL
accum_791 = locy__lsm.169_636
_792 = accum_791 + UNKNOWN
accum_793 = accum_791
accum_793 = &NONLOCAL
accum_794 = accum_793
accum_794 = &NONLOCAL
accum_795 = accum_793
accum_795 = accum_794
locy__lsm.169_833 = accum_795
locy__lsm.170_837 = &NONLOCAL
accum_804 = locy__lsm.171_409
_805 = accum_804 + UNKNOWN
accum_806 = accum_804
accum_806 = &NONLOCAL
accum_807 = accum_806
accum_807 = &NONLOCAL
accum_808 = accum_806
accum_808 = accum_807
locy__lsm.171_841 = accum_808
locy__lsm.172_845 = &NONLOCAL
accum_544 = *_12 + 32
_557 = accum_544 + UNKNOWN
accum_570 = accum_544
accum_570 = &NONLOCAL
accum_496 = accum_495
accum_496 = &NONLOCAL
accum_497 = accum_495
accum_497 = accum_496
D__lsm.157_436 = accum_497
D__lsm.158_437 = &NONLOCAL
accum_506 = D__lsm.159_56
accum_508 = accum_506
accum_508 = &NONLOCAL
_592 = accum_493
accum_509 = accum_508
accum_509 = &NONLOCAL
accum_510 = accum_508
accum_510 = accum_509
D__lsm.159_853 = accum_510
D__lsm.160_862 = &NONLOCAL
accum_519 = D__lsm.161_610
accum_521 = accum_519
accum_521 = &NONLOCAL
_489 = accum_506
accum_522 = accum_521
accum_522 = &NONLOCAL
accum_523 = accum_521
accum_523 = accum_522
D__lsm.161_863 = accum_523
D__lsm.162_871 = &NONLOCAL
accum_534 = _323
accum_534 = &NONLOCAL
_488 = accum_519
accum_535 = accum_534
accum_535 = &NONLOCAL
accum_536 = accum_534
accum_536 = accum_535
*_12 + 32 = accum_536
_169 = D__exp_lsm.163_50
_170 = _169
_171 = _170
_171 = &NONLOCAL
_172 = _171
D__exp_lsm.163_872 = _172
D__exp_lsm.164_880 = &NONLOCAL
_173 = *_12 + 32
_174 = _173
_323 = _173
_323 = _739
extra_bits$0_20 = accum_588
extra_bits$0_20 = accum_546
extra_bits$1_541 = accum_575
extra_bits$1_541 = accum_559
extra_bits$2_697 = accum_562
extra_bits$2_697 = accum_457
extra_bits$3_899 = accum_547
extra_bits$3_899 = accum_466
D__lsm.157_597 = D__lsm.157_436
D__lsm.157_597 = D__lsm.157_628
D__lsm.159_56 = D__lsm.159_853
D__lsm.159_56 = D__lsm.159_707
D__lsm.161_610 = D__lsm.161_863
D__lsm.161_610 = D__lsm.161_829
D__exp_lsm.163_50 = D__exp_lsm.163_872
D__exp_lsm.163_50 = D__exp_lsm.163_819
accum_547 = extra_bits$3_899
accum_547 = &NONLOCAL
accum_560 = extra_bits$2_697
accum_560 = &NONLOCAL
_728 = extra_bits$3_899
accum_561 = accum_560
accum_561 = &NONLOCAL
accum_562 = accum_560
accum_562 = accum_561
accum_573 = extra_bits$1_541
accum_573 = &NONLOCAL
_713 = extra_bits$2_697
accum_574 = accum_573
accum_574 = &NONLOCAL
accum_575 = accum_573
accum_575 = accum_574
accum_586 = extra_bits$0_20
accum_586 = &NONLOCAL
_712 = extra_bits$1_541
accum_587 = accum_586
accum_587 = &NONLOCAL
accum_588 = accum_586
accum_588 = accum_587
accum_493 = D__lsm.157_597
accum_495 = accum_493
accum_495 = &NONLOCAL
_593 = extra_bits$0_20
D__lsm.157_395 = D__lsm.157_436
D__lsm.158_458 = D__lsm.158_437
accum_661 = accum_547
accum_121 = accum_562
accum_674 = accum_575
accum_637 = accum_588
D__lsm.159_485 = D__lsm.159_853
D__lsm.160_572 = D__lsm.160_862
D__lsm.161_585 = D__lsm.161_863
D__lsm.162_157 = D__lsm.162_871
D__exp_lsm.163_492 = D__exp_lsm.163_872
D__exp_lsm.164_494 = D__exp_lsm.164_880
*_12 + 80 = D__lsm.157_395
*_12 + 64 = D__lsm.159_485
*_12 + 48 = D__lsm.161_585
*_12 + 16 = D__exp_lsm.163_492
extra_bits$0_262 = accum_637
extra_bits$0_262 = accum_546
extra_bits$1_854 = accum_674
extra_bits$1_854 = accum_559
extra_bits$2_889 = accum_121
extra_bits$2_889 = accum_457
extra_bits$3_907 = accum_661
extra_bits$3_907 = accum_466
_745 = extra_bits$0_262
_745 = extra_bits$1_854
_744 = _745
_744 = extra_bits$2_889
_729 = _744
_729 = extra_bits$3_907
_185 = *_12 + 80
_186 = _185
_186 = &NONLOCAL
*_12 + 80 = _186
doubledereftmp(317) = *_12 + UNKNOWN
*_14 + UNKNOWN = doubledereftmp(317)
doubledereftmp(318) = *_12 + UNKNOWN
*_13 + UNKNOWN = doubledereftmp(318)
doubledereftmp(319) = *_12 + UNKNOWN
*_14 + UNKNOWN = doubledereftmp(319)
_187 = *_12
_188 = _187
_188 = &NONLOCAL
_408 = *_12 + 32
_417 = *_12 + 48
_190 = _408
_190 = _417
_426 = *_12 + 64
_554 = _190
_554 = _426
_435 = *_12 + 80
_553 = _435
_553 = _554
ESCAPED = &STRING
_221 = _365
_223 = _221
_223 = &NONLOCAL
_224 = _223
*_12 + 16 = _224
_227 = *_12
_246 = accum_400
_246 = &NONLOCAL
*_12 + 80 = _246
accum_357 = *_12 + 32
_358 = accum_357 + UNKNOWN
accum_359 = accum_357
accum_359 = &NONLOCAL
*_12 + 32 = accum_359
accum_370 = *_12 + 48
_371 = accum_370 + UNKNOWN
accum_372 = accum_370
accum_372 = &NONLOCAL
accum_373 = accum_372
accum_373 = &NONLOCAL
accum_374 = accum_372
accum_374 = accum_373
*_12 + 48 = accum_374
accum_383 = *_12 + 64
_384 = accum_383 + UNKNOWN
accum_385 = accum_383
accum_385 = &NONLOCAL
accum_386 = accum_385
accum_386 = &NONLOCAL
accum_387 = accum_385
accum_387 = accum_386
*_12 + 64 = accum_387
accum_396 = *_12 + 80
_397 = accum_396 + UNKNOWN
accum_398 = accum_396
accum_398 = &NONLOCAL
accum_399 = accum_398
accum_399 = &NONLOCAL
accum_400 = accum_398
accum_400 = accum_399
*_12 + 80 = accum_400
_200 = *_12
_201 = *_12 + 80
_202 = _201 + UNKNOWN
*_12 + 80 = _202
_15 = i_281
_15 = &NONLOCAL
_16 = cbase + UNKNOWN
_17 = bbase + UNKNOWN
_18 = abase + UNKNOWN
ESCAPED = _18
ESCAPED = _17
ESCAPED = _16
i_39 = i_281
i_39 = &NONLOCAL
loops_19 = loops
loops_19 = loops_28
loops_28 = loops_19
loops_28 = &NONLOCAL
ESCAPED = elapsed_26
_30 = NONLOCAL
ESCAPED = _30
_365 = *_12 + 16
_361 = _365
_266 = _361
_266 = &NONLOCAL
exponent_difference_345 = _266

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 1 3 5 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"abase"[label="abase = { 5 }"];
"bbase"[label="bbase = { 5 }"];
"cbase"[label="cbase = { 5 }"];
"arraysize"[label="arraysize = { 5 }"];
"loops"[label="loops = { 5 }"];
"StartStopwatch";
"elapsed_26";
"i_281"[label="i_281 = { 1 5 }"];
"_1";
"_2";
"jtable.2859";
"_3"[label="_3 = { 5 }"];
"_4";
"_5";
"_6";
"AddSubInternalFPF";
"_7"[label="_7 = { 5 }"];
"_8";
"_9";
"_10";
"_11"[label="_11 = { 5 }"];
"_12";
"_13";
"_14";
"_40";
"_41";
"_42"[label="_42 = { 5 }"];
"_43";
"_44";
"_45";
"_920";
"_921";
"_924";
"_925";
"_928";
"_929";
"_932";
"_933";
"doubledereftmp(47)";
"_47";
"_48";
"_49";
"doubledereftmp(51)";
"_51";
"_52";
"_53";
"derefaddrtmp(55)"[label="derefaddrtmp(55) = { 5 }"];
"derefaddrtmp(56)"[label="derefaddrtmp(56) = { 5 }"];
"derefaddrtmp(57)"[label="derefaddrtmp(57) = { 5 }"];
"derefaddrtmp(58)"[label="derefaddrtmp(58) = { 5 }"];
"derefaddrtmp(59)"[label="derefaddrtmp(59) = { 1 }"];
"derefaddrtmp(60)"[label="derefaddrtmp(60) = { 1 }"];
"derefaddrtmp(61)"[label="derefaddrtmp(61) = { 1 }"];
"doubledereftmp(62)";
"doubledereftmp(63)";
"locy"[label="locy = { 5 }"];
"_888";
"_897";
"_106";
"_906";
"_774";
"_915";
"_773";
"_852";
"_861";
"_769";
"_870";
"_255";
"_879";
"_113";
"derefaddrtmp(79)"[label="derefaddrtmp(79) = { 5 }"];
"derefaddrtmp(80)"[label="derefaddrtmp(80) = { 1 }"];
"derefaddrtmp(81)"[label="derefaddrtmp(81) = { 5 }"];
"_82";
"_83";
"cstore_247"[label="cstore_247 = { 5 }"];
"_84";
"_85";
"_86";
"_87";
"_88";
"_89";
"_90";
"_91";
"_92";
"derefaddrtmp(94)"[label="derefaddrtmp(94) = { 1 }"];
"derefaddrtmp(95)"[label="derefaddrtmp(95) = { 1 }"];
"derefaddrtmp(96)"[label="derefaddrtmp(96) = { 1 }"];
"derefaddrtmp(97)"[label="derefaddrtmp(97) = { 1 }"];
"locy__lsm.166_418"[label="locy__lsm.166_418 = { 1 }"];
"locy__lsm.168_456"[label="locy__lsm.168_456 = { 1 }"];
"locy__lsm.170_474"[label="locy__lsm.170_474 = { 1 }"];
"locy__lsm.172_419"[label="locy__lsm.172_419 = { 1 }"];
"_698";
"_699";
"accum_700";
"_701";
"accum_702";
"_705"[label="_705 = { 5 }"];
"_706";
"_708";
"_714";
"_715";
"accum_716";
"_717";
"accum_718";
"_719";
"accum_720";
"_721"[label="_721 = { 5 }"];
"_722";
"_724";
"_730";
"_731";
"accum_732";
"_733";
"accum_734";
"_735";
"accum_736";
"_737"[label="_737 = { 5 }"];
"_738";
"_740";
"_746";
"_747";
"accum_748";
"_749";
"accum_750";
"_751";
"accum_752";
"_753"[label="_753 = { 5 }"];
"_754";
"_756";
"accum_649";
"_650";
"accum_651"[label="accum_651 = { 5 }"];
"accum_652"[label="accum_652 = { 5 }"];
"accum_653";
"accum_570"[label="accum_570 = { 5 }"];
"_531";
"_557";
"accum_662";
"_663";
"accum_664"[label="accum_664 = { 5 }"];
"accum_665"[label="accum_665 = { 5 }"];
"accum_666";
"accum_675";
"_676";
"accum_677"[label="accum_677 = { 5 }"];
"accum_678"[label="accum_678 = { 5 }"];
"accum_679";
"accum_688";
"_689";
"accum_690"[label="accum_690 = { 5 }"];
"accum_691"[label="accum_691 = { 5 }"];
"accum_692";
"_598";
"extra_bits$0_22"[label="extra_bits$0_22 = { 1 5 }"];
"_611";
"extra_bits$1_269"[label="extra_bits$1_269 = { 1 5 }"];
"_624";
"extra_bits$2_259"[label="extra_bits$2_259 = { 1 5 }"];
"accum_638"[label="accum_638 = { 1 5 }"];
"i_145"[label="i_145 = { 1 5 }"];
"locy__lsm.166_369";
"locy__lsm.166_427"[label="locy__lsm.166_427 = { 5 }"];
"locy__lsm.168_382";
"locy__lsm.168_428"[label="locy__lsm.168_428 = { 5 }"];
"accum_546";
"accum_559";
"accum_457";
"accum_466";
"locy__lsm.170_475";
"locy__lsm.170_837"[label="locy__lsm.170_837 = { 5 }"];
"locy__lsm.172_484";
"locy__lsm.172_845"[label="locy__lsm.172_845 = { 5 }"];
"_739";
"_755";
"D__lsm.157_628";
"D__lsm.158_270"[label="D__lsm.158_270 = { 1 }"];
"D__lsm.159_707";
"D__lsm.160_268"[label="D__lsm.160_268 = { 1 }"];
"D__lsm.161_829";
"D__lsm.162_824"[label="D__lsm.162_824 = { 1 }"];
"D__exp_lsm.163_819";
"D__exp_lsm.164_814"[label="D__exp_lsm.164_814 = { 1 }"];
"_766";
"_779";
"_792";
"_805";
"accum_544";
"accum_496"[label="accum_496 = { 5 }"];
"D__lsm.158_437"[label="D__lsm.158_437 = { 5 }"];
"accum_506"[label="accum_506 = { 5 }"];
"_592";
"D__lsm.160_862"[label="D__lsm.160_862 = { 5 }"];
"accum_519"[label="accum_519 = { 5 }"];
"_489";
"D__lsm.162_871"[label="D__lsm.162_871 = { 5 }"];
"accum_534"[label="accum_534 = { 5 }"];
"_323";
"_488";
"accum_535"[label="accum_535 = { 5 }"];
"accum_536";
"_169"[label="_169 = { 5 }"];
"D__exp_lsm.164_880"[label="D__exp_lsm.164_880 = { 5 }"];
"_173";
"_174";
"extra_bits$0_20"[label="extra_bits$0_20 = { 5 }"];
"extra_bits$1_541"[label="extra_bits$1_541 = { 5 }"];
"extra_bits$2_697"[label="extra_bits$2_697 = { 5 }"];
"extra_bits$3_899"[label="extra_bits$3_899 = { 5 }"];
"_728";
"_713";
"_712";
"_593";
"D__lsm.157_395";
"D__lsm.158_458";
"accum_661";
"accum_121";
"accum_674";
"accum_637";
"D__lsm.159_485";
"D__lsm.160_572";
"D__lsm.161_585";
"D__lsm.162_157";
"D__exp_lsm.163_492";
"D__exp_lsm.164_494";
"extra_bits$0_262";
"extra_bits$1_854";
"extra_bits$2_889";
"extra_bits$3_907";
"_745";
"_744";
"_729";
"_185";
"_186"[label="_186 = { 5 }"];
"doubledereftmp(317)";
"doubledereftmp(318)";
"doubledereftmp(319)";
"_187";
"_188"[label="_188 = { 5 }"];
"_408";
"_417";
"_190";
"_426";
"_554";
"_435";
"_553";
"puts";
"_221";
"_365";
"_223"[label="_223 = { 5 }"];
"_224";
"_227";
"_246"[label="_246 = { 5 }"];
"accum_400";
"accum_357";
"_358";
"accum_359"[label="accum_359 = { 5 }"];
"accum_370";
"_371";
"accum_372"[label="accum_372 = { 5 }"];
"accum_373"[label="accum_373 = { 5 }"];
"accum_374";
"accum_383";
"_384";
"accum_385"[label="accum_385 = { 5 }"];
"accum_386"[label="accum_386 = { 5 }"];
"accum_387";
"accum_396";
"_397";
"accum_398"[label="accum_398 = { 5 }"];
"accum_399"[label="accum_399 = { 5 }"];
"_200";
"_201";
"_202";
"extra_bits";
"_15"[label="_15 = { 5 }"];
"_16";
"_17";
"_18";
"DivideInternalFPF";
"loops_19"[label="loops_19 = { 5 }"];
"StopStopwatch";
"_30";
"_361";
"_266"[label="_266 = { 5 }"];
"exponent_difference_345";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*abase";
"*bbase";
"*cbase";
"*arraysize";
"*loops";
"*StartStopwatch";
"*i_281";
"*i_39";
"*_1";
"*_2";
"*jtable.2859";
"*_3";
"*_4";
"*_5";
"*_6";
"*AddSubInternalFPF";
"*_7";
"*_8";
"*_9";
"*_10";
"*_11";
"*_12";
"*_13";
"*_14";
"*_40";
"*_41";
"*_42";
"*_43";
"*_44";
"*_45";
"*_920";
"*_921";
"*_924";
"*_925";
"*_928";
"*_929";
"*_932";
"*_933";
"*doubledereftmp(47)";
"*_47";
"*_48";
"*_49";
"*doubledereftmp(51)";
"*_51";
"*_52";
"*_53";
"*derefaddrtmp(55)";
"*derefaddrtmp(56)";
"*derefaddrtmp(57)";
"*derefaddrtmp(58)";
"*derefaddrtmp(59)";
"*derefaddrtmp(60)";
"*derefaddrtmp(61)";
"*doubledereftmp(62)";
"*doubledereftmp(63)";
"*locy";
"*_888";
"*_897";
"*_106";
"*_906";
"*_774";
"*_915";
"*_773";
"*_852";
"*_861";
"*_769";
"*_870";
"*_255";
"*_879";
"*_113";
"*derefaddrtmp(79)";
"*derefaddrtmp(80)";
"*derefaddrtmp(81)";
"*_82";
"*_83";
"*cstore_247";
"*_84";
"*_85";
"*_86";
"*_87";
"*_88";
"*_89";
"*_90";
"*_91";
"*_92";
"*derefaddrtmp(94)";
"*derefaddrtmp(95)";
"*derefaddrtmp(96)";
"*derefaddrtmp(97)";
"*locy__lsm.165_545";
"*locy__lsm.166_418";
"*locy__lsm.167_558";
"*locy__lsm.168_456";
"*locy__lsm.169_465";
"*locy__lsm.170_474";
"*locy__lsm.171_483";
"*locy__lsm.172_419";
"*_698";
"*_699";
"*accum_700";
"*_701";
"*accum_702";
"*_705";
"*_706";
"*_708";
"*_714";
"*_715";
"*accum_716";
"*_717";
"*accum_718";
"*_719";
"*accum_720";
"*_721";
"*_722";
"*_724";
"*_730";
"*_731";
"*accum_732";
"*_733";
"*accum_734";
"*_735";
"*accum_736";
"*_737";
"*_738";
"*_740";
"*_746";
"*_747";
"*accum_748";
"*_749";
"*accum_750";
"*_751";
"*accum_752";
"*_753";
"*_754";
"*_756";
"*accum_649";
"*_650";
"*accum_651";
"*accum_652";
"*accum_653";
"*accum_570";
"*_531";
"*_557";
"*accum_662";
"*_663";
"*accum_664";
"*accum_665";
"*accum_666";
"*accum_675";
"*_676";
"*accum_677";
"*accum_678";
"*accum_679";
"*accum_688";
"*_689";
"*accum_690";
"*accum_691";
"*accum_692";
"*_598";
"*extra_bits$0_22";
"*accum_599";
"*accum_600";
"*accum_601";
"*_611";
"*extra_bits$1_269";
"*accum_612";
"*accum_613";
"*accum_614";
"*_624";
"*extra_bits$2_259";
"*accum_625";
"*accum_626";
"*accum_627";
"*accum_638";
"*extra_bits$3_898";
"*accum_639";
"*accum_640";
"*i_145";
"*i_319";
"*locy__lsm.166_369";
"*locy__lsm.166_427";
"*locy__lsm.168_382";
"*locy__lsm.168_428";
"*locy__lsm.165_196";
"*locy__lsm.165_571";
"*locy__lsm.167_687";
"*locy__lsm.167_584";
"*accum_546";
"*accum_559";
"*accum_457";
"*accum_466";
"*locy__lsm.169_467";
"*locy__lsm.169_833";
"*locy__lsm.170_475";
"*locy__lsm.170_837";
"*locy__lsm.171_476";
"*locy__lsm.171_841";
"*locy__lsm.172_484";
"*locy__lsm.172_845";
"*_739";
"*_755";
"*D__lsm.157_628";
"*D__lsm.158_270";
"*D__lsm.159_707";
"*D__lsm.160_268";
"*D__lsm.161_829";
"*D__lsm.162_824";
"*D__exp_lsm.163_819";
"*D__exp_lsm.164_814";
"*locy__lsm.165_623";
"*locy__lsm.167_46";
"*locy__lsm.169_636";
"*locy__lsm.171_409";
"*accum_765";
"*_766";
"*accum_767";
"*accum_778";
"*_779";
"*accum_780";
"*accum_781";
"*accum_782";
"*accum_791";
"*_792";
"*accum_793";
"*accum_794";
"*accum_795";
"*accum_804";
"*_805";
"*accum_806";
"*accum_807";
"*accum_808";
"*accum_544";
"*accum_496";
"*accum_495";
"*accum_497";
"*D__lsm.157_436";
"*D__lsm.158_437";
"*accum_506";
"*D__lsm.159_56";
"*accum_508";
"*_592";
"*accum_493";
"*accum_509";
"*accum_510";
"*D__lsm.159_853";
"*D__lsm.160_862";
"*accum_519";
"*D__lsm.161_610";
"*accum_521";
"*_489";
"*accum_522";
"*accum_523";
"*D__lsm.161_863";
"*D__lsm.162_871";
"*accum_534";
"*_323";
"*_488";
"*accum_535";
"*accum_536";
"*_169";
"*D__exp_lsm.163_50";
"*_170";
"*_171";
"*_172";
"*D__exp_lsm.163_872";
"*D__exp_lsm.164_880";
"*_173";
"*_174";
"*extra_bits$0_20";
"*accum_588";
"*extra_bits$1_541";
"*accum_575";
"*extra_bits$2_697";
"*accum_562";
"*extra_bits$3_899";
"*accum_547";
"*D__lsm.157_597";
"*accum_560";
"*_728";
"*accum_561";
"*accum_573";
"*_713";
"*accum_574";
"*accum_586";
"*_712";
"*accum_587";
"*_593";
"*D__lsm.157_395";
"*D__lsm.158_458";
"*accum_661";
"*accum_121";
"*accum_674";
"*accum_637";
"*D__lsm.159_485";
"*D__lsm.160_572";
"*D__lsm.161_585";
"*D__lsm.162_157";
"*D__exp_lsm.163_492";
"*D__exp_lsm.164_494";
"*extra_bits$0_262";
"*extra_bits$1_854";
"*extra_bits$2_889";
"*extra_bits$3_907";
"*_745";
"*_744";
"*_729";
"*_185";
"*_186";
"*doubledereftmp(317)";
"*doubledereftmp(318)";
"*doubledereftmp(319)";
"*_187";
"*_188";
"*_408";
"*_417";
"*_190";
"*_426";
"*_554";
"*_435";
"*_553";
"*puts";
"*_221";
"*_365";
"*_223";
"*_224";
"*_227";
"*_246";
"*accum_400";
"*accum_357";
"*_358";
"*accum_359";
"*accum_370";
"*_371";
"*accum_372";
"*accum_373";
"*accum_374";
"*accum_383";
"*_384";
"*accum_385";
"*accum_386";
"*accum_387";
"*accum_396";
"*_397";
"*accum_398";
"*accum_399";
"*_200";
"*_201";
"*_202";
"*extra_bits";
"*_15";
"*_16";
"*_17";
"*_18";
"*DivideInternalFPF";
"*loops_19";
"*loops_28";
"*StopStopwatch";
"*_361";
"*_266";
"*exponent_difference_345";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"elapsed_26" -> "ESCAPED";
"_4" -> "ESCAPED";
"_5" -> "ESCAPED";
"_6" -> "ESCAPED";
"_8" -> "ESCAPED";
"_9" -> "ESCAPED";
"_10" -> "ESCAPED";
"_16" -> "ESCAPED";
"_17" -> "ESCAPED";
"_18" -> "ESCAPED";
"_30" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"NONLOCAL" -> "elapsed_26";
"i_281" -> "i_281";
"i_281" -> "i_281";
"jtable.2859" -> "_2";
"NONLOCAL" -> "jtable.2859";
"i_281" -> "_3";
"i_281" -> "_7";
"i_281" -> "_11";
"*_14" -> "_40";
"_40" -> "_41";
"_41" -> "_42";
"*_13" -> "_43";
"_43" -> "_44";
"_42" -> "_45";
"_44" -> "_45";
"_47" -> "_49";
"_48" -> "_49";
"_51" -> "_53";
"_52" -> "_53";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"_888" -> "_106";
"_897" -> "_106";
"_106" -> "_774";
"_906" -> "_774";
"_774" -> "_773";
"_915" -> "_773";
"_852" -> "_769";
"_861" -> "_769";
"_769" -> "_255";
"_870" -> "_255";
"_255" -> "_113";
"_879" -> "_113";
"*_14" -> "_82";
"*_13" -> "_83";
"_84" -> "_86";
"_85" -> "_86";
"_87" -> "_88";
"_89" -> "_90";
"_88" -> "_91";
"_90" -> "_91";
"_91" -> "_92";
"_699" -> "accum_700";
"_698" -> "_701";
"accum_700" -> "accum_702";
"_701" -> "accum_702";
"accum_702" -> "_705";
"_705" -> "_706";
"_698" -> "_708";
"_699" -> "_708";
"_715" -> "accum_716";
"_714" -> "_717";
"accum_716" -> "accum_718";
"_717" -> "accum_718";
"_705" -> "_719";
"_705" -> "accum_720";
"accum_718" -> "accum_720";
"accum_720" -> "_721";
"_721" -> "_722";
"accum_720" -> "_724";
"_731" -> "accum_732";
"_730" -> "_733";
"accum_732" -> "accum_734";
"_733" -> "accum_734";
"_721" -> "_735";
"_721" -> "accum_736";
"accum_734" -> "accum_736";
"accum_736" -> "_737";
"_737" -> "_738";
"accum_736" -> "_740";
"_747" -> "accum_748";
"_746" -> "_749";
"accum_748" -> "accum_750";
"_749" -> "accum_750";
"_737" -> "_751";
"_737" -> "accum_752";
"accum_750" -> "accum_752";
"accum_752" -> "_753";
"_753" -> "_754";
"accum_752" -> "_756";
"accum_649" -> "accum_651";
"accum_651" -> "accum_652";
"accum_651" -> "accum_653";
"accum_652" -> "accum_653";
"accum_570" -> "accum_653";
"accum_544" -> "accum_570";
"_650" -> "_531";
"_557" -> "_531";
"accum_662" -> "accum_664";
"accum_664" -> "accum_665";
"accum_664" -> "accum_666";
"accum_665" -> "accum_666";
"accum_675" -> "accum_677";
"accum_677" -> "accum_678";
"accum_677" -> "accum_679";
"accum_678" -> "accum_679";
"accum_688" -> "accum_690";
"accum_690" -> "accum_691";
"accum_690" -> "accum_692";
"accum_691" -> "accum_692";
"extra_bits$0_22" -> "extra_bits$0_22";
"extra_bits$0_22" -> "extra_bits$0_22";
"extra_bits$0_22" -> "extra_bits$0_22";
"extra_bits$0_22" -> "extra_bits$0_22";
"extra_bits$1_269" -> "extra_bits$1_269";
"extra_bits$1_269" -> "extra_bits$1_269";
"extra_bits$1_269" -> "extra_bits$1_269";
"extra_bits$1_269" -> "extra_bits$1_269";
"extra_bits$2_259" -> "extra_bits$2_259";
"extra_bits$2_259" -> "extra_bits$2_259";
"extra_bits$2_259" -> "extra_bits$2_259";
"extra_bits$2_259" -> "extra_bits$2_259";
"accum_638" -> "accum_638";
"accum_638" -> "accum_638";
"accum_638" -> "accum_638";
"accum_638" -> "accum_638";
"i_145" -> "i_145";
"i_145" -> "i_145";
"locy__lsm.166_427" -> "locy__lsm.166_369";
"locy__lsm.168_428" -> "locy__lsm.168_382";
"extra_bits$0_22" -> "accum_546";
"extra_bits$1_269" -> "accum_559";
"extra_bits$2_259" -> "accum_457";
"accum_638" -> "accum_466";
"locy__lsm.170_837" -> "locy__lsm.170_475";
"locy__lsm.172_845" -> "locy__lsm.172_484";
"_739" -> "_755";
"D__lsm.157_628" -> "accum_496";
"accum_496" -> "accum_496";
"accum_496" -> "accum_496";
"accum_496" -> "accum_496";
"accum_496" -> "accum_496";
"accum_496" -> "accum_496";
"accum_496" -> "accum_496";
"D__lsm.159_707" -> "accum_506";
"accum_506" -> "accum_506";
"accum_506" -> "accum_506";
"accum_506" -> "accum_506";
"accum_506" -> "accum_506";
"accum_506" -> "accum_506";
"accum_506" -> "accum_506";
"accum_496" -> "_592";
"D__lsm.161_829" -> "accum_519";
"accum_519" -> "accum_519";
"accum_519" -> "accum_519";
"accum_519" -> "accum_519";
"accum_519" -> "accum_519";
"accum_519" -> "accum_519";
"accum_519" -> "accum_519";
"accum_506" -> "_489";
"_323" -> "accum_534";
"_739" -> "_323";
"_173" -> "_323";
"accum_519" -> "_488";
"accum_534" -> "accum_535";
"accum_534" -> "accum_536";
"accum_535" -> "accum_536";
"D__exp_lsm.163_819" -> "_169";
"_169" -> "_169";
"_169" -> "_169";
"_169" -> "_169";
"_169" -> "_169";
"_169" -> "_169";
"_169" -> "_169";
"_173" -> "_174";
"accum_546" -> "extra_bits$0_20";
"extra_bits$0_20" -> "extra_bits$0_20";
"extra_bits$0_20" -> "extra_bits$0_20";
"extra_bits$0_20" -> "extra_bits$0_20";
"extra_bits$0_20" -> "extra_bits$0_20";
"accum_559" -> "extra_bits$1_541";
"extra_bits$1_541" -> "extra_bits$1_541";
"extra_bits$1_541" -> "extra_bits$1_541";
"extra_bits$1_541" -> "extra_bits$1_541";
"extra_bits$1_541" -> "extra_bits$1_541";
"accum_457" -> "extra_bits$2_697";
"extra_bits$2_697" -> "extra_bits$2_697";
"extra_bits$2_697" -> "extra_bits$2_697";
"extra_bits$2_697" -> "extra_bits$2_697";
"extra_bits$2_697" -> "extra_bits$2_697";
"accum_466" -> "extra_bits$3_899";
"extra_bits$3_899" -> "extra_bits$3_899";
"extra_bits$3_899" -> "extra_bits$3_899";
"extra_bits$3_899" -> "_728";
"extra_bits$2_697" -> "_713";
"extra_bits$1_541" -> "_712";
"extra_bits$0_20" -> "_593";
"accum_496" -> "D__lsm.157_395";
"D__lsm.158_437" -> "D__lsm.158_458";
"extra_bits$3_899" -> "accum_661";
"extra_bits$2_697" -> "accum_121";
"extra_bits$1_541" -> "accum_674";
"extra_bits$0_20" -> "accum_637";
"accum_506" -> "D__lsm.159_485";
"D__lsm.160_862" -> "D__lsm.160_572";
"accum_519" -> "D__lsm.161_585";
"D__lsm.162_871" -> "D__lsm.162_157";
"_169" -> "D__exp_lsm.163_492";
"D__exp_lsm.164_880" -> "D__exp_lsm.164_494";
"accum_546" -> "extra_bits$0_262";
"accum_637" -> "extra_bits$0_262";
"accum_559" -> "extra_bits$1_854";
"accum_674" -> "extra_bits$1_854";
"accum_457" -> "extra_bits$2_889";
"accum_121" -> "extra_bits$2_889";
"accum_466" -> "extra_bits$3_907";
"accum_661" -> "extra_bits$3_907";
"extra_bits$0_262" -> "_745";
"extra_bits$1_854" -> "_745";
"extra_bits$2_889" -> "_744";
"_745" -> "_744";
"extra_bits$3_907" -> "_729";
"_744" -> "_729";
"_185" -> "_186";
"*_12" -> "_187";
"_187" -> "_188";
"_408" -> "_190";
"_417" -> "_190";
"_190" -> "_554";
"_426" -> "_554";
"_554" -> "_553";
"_435" -> "_553";
"_365" -> "_221";
"_221" -> "_223";
"_223" -> "_224";
"*_12" -> "_227";
"accum_400" -> "_246";
"accum_398" -> "accum_400";
"accum_399" -> "accum_400";
"accum_357" -> "accum_359";
"accum_370" -> "accum_372";
"accum_372" -> "accum_373";
"accum_372" -> "accum_374";
"accum_373" -> "accum_374";
"accum_383" -> "accum_385";
"accum_385" -> "accum_386";
"accum_385" -> "accum_387";
"accum_386" -> "accum_387";
"accum_396" -> "accum_398";
"accum_398" -> "accum_399";
"*_12" -> "_200";
"i_281" -> "_15";
"loops" -> "loops_19";
"loops_19" -> "loops_19";
"loops_19" -> "loops_19";
"NONLOCAL" -> "_30";
"_365" -> "_361";
"_361" -> "_266";
"_266" -> "exponent_difference_345";
"derefaddrtmp(55)" -> "*_12";
"derefaddrtmp(79)" -> "*_12";
"cstore_247" -> "*_12";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_4 = abase + UNKNOWN\l_5 = abase + UNKNOWN\l_6 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l_9 = abase + UNKNOWN\l_10 = abase + UNKNOWN\l_12 = abase + UNKNOWN\l_13 = abase + UNKNOWN\l_14 = abase + UNKNOWN\l_16 = abase + UNKNOWN\l_17 = abase + UNKNOWN\l_18 = abase + UNKNOWN\l"];
"StartStopwatch";
"elapsed_26";
"i_281" [label="\N\n_1 = i_281 + UNKNOWN\l_598 = i_281 + UNKNOWN\l_611 = i_281 + UNKNOWN\l_624 = i_281 + UNKNOWN\l"];
"_1";
"_4";
"_5";
"_6";
"AddSubInternalFPF";
"_8";
"_9";
"_10";
"_12" [label="\N\ndoubledereftmp(47) = *_12 + UNKNOWN\l_47 = *_12 + 8\ldoubledereftmp(51) = *_12 + UNKNOWN\l_51 = *_12 + 8\ldoubledereftmp(62) = *_12 + UNKNOWN\ldoubledereftmp(63) = *_12 + UNKNOWN\l_699 = *_12 + 80\l_715 = *_12 + 64\l_731 = *_12 + 48\l_747 = *_12 + 32\laccum_649 = *_12 + 32\laccum_662 = *_12 + 48\laccum_675 = *_12 + 64\laccum_688 = *_12 + 80\l_739 = *_12 + 32\lD__lsm.157_628 = *_12 + 80\lD__lsm.159_707 = *_12 + 64\lD__lsm.161_829 = *_12 + 48\lD__exp_lsm.163_819 = *_12 + 16\laccum_544 = *_12 + 32\l_173 = *_12 + 32\l_185 = *_12 + 80\ldoubledereftmp(317) = *_12 + UNKNOWN\ldoubledereftmp(318) = *_12 + UNKNOWN\ldoubledereftmp(319) = *_12 + UNKNOWN\l_187 = *_12\l_408 = *_12 + 32\l_417 = *_12 + 48\l_426 = *_12 + 64\l_435 = *_12 + 80\l_221 = *_12 + 16\laccum_357 = *_12 + 32\laccum_370 = *_12 + 48\laccum_383 = *_12 + 64\laccum_396 = *_12 + 80\l_201 = *_12 + 80\l*_12 = abase\l*_12 + 8 = abase\l*_12 + 8 = _49\l*_12 + 8 = _53\l*_12 + 8 = derefaddrtmp(59)\l*_12 + 8 = _86\l*_12 + 16 = abase\l*_12 + 16 = _91\l*_12 + 16 = _169\l*_12 + 16 = _223\l*_12 + 32 = abase\l*_12 + 32 = derefaddrtmp(59)\l*_12 + 32 = accum_752\l*_12 + 32 = accum_653\l*_12 + 32 = accum_534\l*_12 + 32 = accum_359\l*_12 + 48 = derefaddrtmp(59)\l*_12 + 48 = accum_736\l*_12 + 48 = accum_664\l*_12 + 48 = accum_519\l*_12 + 48 = accum_372\l*_12 + 64 = derefaddrtmp(59)\l*_12 + 64 = accum_720\l*_12 + 64 = accum_677\l*_12 + 64 = accum_506\l*_12 + 64 = accum_385\l*_12 + 80 = derefaddrtmp(59)\l*_12 + 80 = accum_702\l*_12 + 80 = accum_690\l*_12 + 80 = accum_496\l*_12 + 80 = _186\l*_12 + 80 = _246\l*_12 + 80 = _202\l"];
"_13" [label="\N\n_43 = *_13\l_921 = *_13 + 32\l_925 = *_13 + 48\l_929 = *_13 + 64\l_933 = *_13 + 80\l_48 = *_13 + 8\llocy = *_13 + UNKNOWN\l_852 = *_13 + 32\l_861 = *_13 + 48\l_870 = *_13 + 64\l_879 = *_13 + 80\l_85 = *_13 + 8\l_89 = *_13 + 16\l*_13 + UNKNOWN = doubledereftmp(51)\l*_13 + UNKNOWN = doubledereftmp(63)\l*_13 + UNKNOWN = doubledereftmp(318)\l"];
"_14" [label="\N\n_40 = *_14\l_920 = *_14 + 32\l_924 = *_14 + 48\l_928 = *_14 + 64\l_932 = *_14 + 80\l_52 = *_14 + 8\l_888 = *_14 + 32\l_897 = *_14 + 48\l_906 = *_14 + 64\l_915 = *_14 + 80\l_84 = *_14 + 8\l_87 = *_14 + 16\l_698 = *_14 + 80\l_714 = *_14 + 64\l_730 = *_14 + 48\l_746 = *_14 + 32\l*_14 + UNKNOWN = doubledereftmp(47)\l*_14 + UNKNOWN = doubledereftmp(62)\l*_14 + UNKNOWN = doubledereftmp(317)\l*_14 + UNKNOWN = doubledereftmp(319)\l"];
"_40";
"_42";
"_43";
"_45";
"_920";
"_921";
"_924";
"_925";
"_928";
"_929";
"_932";
"_933";
"doubledereftmp(47)";
"_47";
"_48";
"_49";
"doubledereftmp(51)";
"_51";
"_52";
"_53";
"derefaddrtmp(59)";
"doubledereftmp(62)";
"doubledereftmp(63)";
"locy" [label="\N\n_766 = locy + UNKNOWN\l_779 = locy + UNKNOWN\l_792 = locy + UNKNOWN\l_805 = locy + UNKNOWN\l"];
"_888";
"_897";
"_106";
"_906";
"_774";
"_915";
"_773";
"_852";
"_861";
"_769";
"_870";
"_255";
"_879";
"_113";
"_84";
"_85";
"_86";
"_87";
"_89";
"_91";
"_698";
"_699";
"accum_702";
"_705";
"_714";
"_715";
"accum_718";
"accum_720";
"_730";
"_731";
"accum_734";
"accum_736";
"_746";
"_747";
"accum_750";
"accum_752";
"accum_649" [label="\N\n_650 = accum_649 + UNKNOWN\l"];
"_650";
"accum_651";
"accum_653";
"accum_570";
"_531";
"_557";
"accum_662" [label="\N\n_663 = accum_662 + UNKNOWN\l"];
"_663";
"accum_664";
"accum_675" [label="\N\n_676 = accum_675 + UNKNOWN\l"];
"_676";
"accum_677";
"accum_688" [label="\N\n_689 = accum_688 + UNKNOWN\l"];
"_689";
"accum_690";
"_598";
"_611";
"_624";
"_739";
"D__lsm.157_628";
"D__lsm.159_707";
"D__lsm.161_829";
"D__exp_lsm.163_819";
"_766";
"_779";
"_792";
"_805";
"accum_544" [label="\N\n_557 = accum_544 + UNKNOWN\l"];
"accum_496";
"accum_506";
"accum_519";
"accum_534";
"_323";
"_169";
"_173";
"_185";
"_186";
"doubledereftmp(317)";
"doubledereftmp(318)";
"doubledereftmp(319)";
"_187";
"_408";
"_417";
"_190";
"_426";
"_554";
"_435";
"_553";
"puts";
"_221";
"_223";
"_246";
"accum_357" [label="\N\n_358 = accum_357 + UNKNOWN\l"];
"_358";
"accum_359";
"accum_370" [label="\N\n_371 = accum_370 + UNKNOWN\l"];
"_371";
"accum_372";
"accum_383" [label="\N\n_384 = accum_383 + UNKNOWN\l"];
"_384";
"accum_385";
"accum_396" [label="\N\n_397 = accum_396 + UNKNOWN\l"];
"_397";
"_201" [label="\N\n_202 = _201 + UNKNOWN\l"];
"_202";
"extra_bits";
"_16";
"_17";
"_18";
"DivideInternalFPF";
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_1";
"STOREDANYTHING" -> "_4";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_6";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_13";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_920";
"STOREDANYTHING" -> "_921";
"STOREDANYTHING" -> "_924";
"STOREDANYTHING" -> "_925";
"STOREDANYTHING" -> "_928";
"STOREDANYTHING" -> "_929";
"STOREDANYTHING" -> "_932";
"STOREDANYTHING" -> "_933";
"STOREDANYTHING" -> "doubledereftmp(47)";
"STOREDANYTHING" -> "_47";
"STOREDANYTHING" -> "_48";
"STOREDANYTHING" -> "doubledereftmp(51)";
"STOREDANYTHING" -> "_51";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "doubledereftmp(62)";
"STOREDANYTHING" -> "doubledereftmp(63)";
"STOREDANYTHING" -> "locy";
"STOREDANYTHING" -> "_888";
"STOREDANYTHING" -> "_897";
"STOREDANYTHING" -> "_906";
"STOREDANYTHING" -> "_915";
"STOREDANYTHING" -> "_852";
"STOREDANYTHING" -> "_861";
"STOREDANYTHING" -> "_870";
"STOREDANYTHING" -> "_879";
"STOREDANYTHING" -> "_84";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "_87";
"STOREDANYTHING" -> "_89";
"STOREDANYTHING" -> "_698";
"STOREDANYTHING" -> "_699";
"STOREDANYTHING" -> "_714";
"STOREDANYTHING" -> "_715";
"STOREDANYTHING" -> "_730";
"STOREDANYTHING" -> "_731";
"STOREDANYTHING" -> "_746";
"STOREDANYTHING" -> "_747";
"STOREDANYTHING" -> "accum_649";
"STOREDANYTHING" -> "_650";
"STOREDANYTHING" -> "_557";
"STOREDANYTHING" -> "accum_662";
"STOREDANYTHING" -> "_663";
"STOREDANYTHING" -> "accum_675";
"STOREDANYTHING" -> "_676";
"STOREDANYTHING" -> "accum_688";
"STOREDANYTHING" -> "_689";
"STOREDANYTHING" -> "_598";
"STOREDANYTHING" -> "_611";
"STOREDANYTHING" -> "_624";
"STOREDANYTHING" -> "_739";
"STOREDANYTHING" -> "D__lsm.157_628";
"STOREDANYTHING" -> "D__lsm.159_707";
"STOREDANYTHING" -> "D__lsm.161_829";
"STOREDANYTHING" -> "D__exp_lsm.163_819";
"STOREDANYTHING" -> "_766";
"STOREDANYTHING" -> "_779";
"STOREDANYTHING" -> "_792";
"STOREDANYTHING" -> "_805";
"STOREDANYTHING" -> "accum_544";
"STOREDANYTHING" -> "_173";
"STOREDANYTHING" -> "_185";
"STOREDANYTHING" -> "doubledereftmp(317)";
"STOREDANYTHING" -> "doubledereftmp(318)";
"STOREDANYTHING" -> "doubledereftmp(319)";
"STOREDANYTHING" -> "_408";
"STOREDANYTHING" -> "_417";
"STOREDANYTHING" -> "_426";
"STOREDANYTHING" -> "_435";
"STOREDANYTHING" -> "_221";
"STOREDANYTHING" -> "accum_357";
"STOREDANYTHING" -> "_358";
"STOREDANYTHING" -> "accum_370";
"STOREDANYTHING" -> "_371";
"STOREDANYTHING" -> "accum_383";
"STOREDANYTHING" -> "_384";
"STOREDANYTHING" -> "accum_396";
"STOREDANYTHING" -> "_397";
"STOREDANYTHING" -> "_201";
"STOREDANYTHING" -> "_202";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_17";
"STOREDANYTHING" -> "_18";
"elapsed_26" -> "ESCAPED";
"_4" -> "ESCAPED";
"_5" -> "ESCAPED";
"_6" -> "ESCAPED";
"_8" -> "ESCAPED";
"_9" -> "ESCAPED";
"_10" -> "ESCAPED";
"_40" -> "_42";
"_42" -> "_45";
"_43" -> "_45";
"_47" -> "_49";
"_48" -> "_49";
"_51" -> "_53";
"_52" -> "_53";
"_888" -> "_106";
"_897" -> "_106";
"_106" -> "_774";
"_906" -> "_774";
"_774" -> "_773";
"_915" -> "_773";
"_852" -> "_769";
"_861" -> "_769";
"_769" -> "_255";
"_870" -> "_255";
"_255" -> "_113";
"_879" -> "_113";
"_84" -> "_86";
"_85" -> "_86";
"_87" -> "_91";
"_89" -> "_91";
"_698" -> "accum_702";
"_699" -> "accum_702";
"accum_702" -> "_705";
"_705" -> "accum_720";
"_714" -> "accum_718";
"_715" -> "accum_718";
"accum_718" -> "accum_720";
"accum_720" -> "accum_736";
"_730" -> "accum_734";
"_731" -> "accum_734";
"accum_734" -> "accum_736";
"accum_736" -> "accum_752";
"_746" -> "accum_750";
"_747" -> "accum_750";
"accum_750" -> "accum_752";
"accum_649" -> "accum_651";
"_650" -> "_531";
"accum_651" -> "accum_653";
"accum_570" -> "accum_653";
"_557" -> "_531";
"accum_662" -> "accum_664";
"accum_675" -> "accum_677";
"accum_688" -> "accum_690";
"_739" -> "_323";
"D__lsm.157_628" -> "accum_496";
"D__lsm.159_707" -> "accum_506";
"D__lsm.161_829" -> "accum_519";
"D__exp_lsm.163_819" -> "_169";
"accum_544" -> "accum_570";
"_323" -> "accum_534";
"_173" -> "_323";
"_185" -> "_186";
"_408" -> "_190";
"_417" -> "_190";
"_190" -> "_554";
"_426" -> "_554";
"_554" -> "_553";
"_435" -> "_553";
"_221" -> "_223";
"accum_357" -> "accum_359";
"accum_370" -> "accum_372";
"accum_383" -> "accum_385";
"accum_396" -> "_246";
"_16" -> "ESCAPED";
"_17" -> "ESCAPED";
"_18" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = elapsed_26\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_4 = abase + UNKNOWN\l_5 = abase + UNKNOWN\l_6 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l_9 = abase + UNKNOWN\l_10 = abase + UNKNOWN\l_12 = abase + UNKNOWN\l_13 = abase + UNKNOWN\l_14 = abase + UNKNOWN\l_16 = abase + UNKNOWN\l_17 = abase + UNKNOWN\l_18 = abase + UNKNOWN\l"];
"StartStopwatch";
"elapsed_26";
"i_281" [label="\N\n_1 = i_281 + UNKNOWN\l_598 = i_281 + UNKNOWN\l_611 = i_281 + UNKNOWN\l_624 = i_281 + UNKNOWN\l"];
"_1";
"_4";
"_5";
"_6";
"AddSubInternalFPF";
"_8";
"_9";
"_10";
"_12" [label="\N\ndoubledereftmp(47) = *_12 + UNKNOWN\l_47 = *_12 + 8\ldoubledereftmp(51) = *_12 + UNKNOWN\l_51 = *_12 + 8\ldoubledereftmp(62) = *_12 + UNKNOWN\ldoubledereftmp(63) = *_12 + UNKNOWN\l_699 = *_12 + 80\l_715 = *_12 + 64\l_731 = *_12 + 48\l_747 = *_12 + 32\laccum_649 = *_12 + 32\laccum_662 = *_12 + 48\laccum_675 = *_12 + 64\laccum_688 = *_12 + 80\l_739 = *_12 + 32\lD__lsm.157_628 = *_12 + 80\lD__lsm.159_707 = *_12 + 64\lD__lsm.161_829 = *_12 + 48\lD__exp_lsm.163_819 = *_12 + 16\laccum_544 = *_12 + 32\l_173 = *_12 + 32\l_185 = *_12 + 80\ldoubledereftmp(317) = *_12 + UNKNOWN\ldoubledereftmp(318) = *_12 + UNKNOWN\ldoubledereftmp(319) = *_12 + UNKNOWN\l_187 = *_12\l_408 = *_12 + 32\l_417 = *_12 + 48\l_426 = *_12 + 64\l_435 = *_12 + 80\l_221 = *_12 + 16\laccum_357 = *_12 + 32\laccum_370 = *_12 + 48\laccum_383 = *_12 + 64\laccum_396 = *_12 + 80\l_201 = *_12 + 80\l*_12 = abase\l*_12 + 8 = abase\l*_12 + 8 = _49\l*_12 + 8 = _53\l*_12 + 8 = derefaddrtmp(59)\l*_12 + 8 = _86\l*_12 + 16 = abase\l*_12 + 16 = _91\l*_12 + 16 = _169\l*_12 + 16 = _223\l*_12 + 32 = abase\l*_12 + 32 = derefaddrtmp(59)\l*_12 + 32 = accum_752\l*_12 + 32 = accum_653\l*_12 + 32 = accum_534\l*_12 + 32 = accum_359\l*_12 + 48 = derefaddrtmp(59)\l*_12 + 48 = accum_736\l*_12 + 48 = accum_664\l*_12 + 48 = accum_519\l*_12 + 48 = accum_372\l*_12 + 64 = derefaddrtmp(59)\l*_12 + 64 = accum_720\l*_12 + 64 = accum_677\l*_12 + 64 = accum_506\l*_12 + 64 = accum_385\l*_12 + 80 = derefaddrtmp(59)\l*_12 + 80 = accum_702\l*_12 + 80 = accum_690\l*_12 + 80 = accum_496\l*_12 + 80 = _186\l*_12 + 80 = _246\l*_12 + 80 = _202\l"];
"_13" [label="\N\n_43 = *_13\l_921 = *_13 + 32\l_925 = *_13 + 48\l_929 = *_13 + 64\l_933 = *_13 + 80\l_48 = *_13 + 8\llocy = *_13 + UNKNOWN\l_852 = *_13 + 32\l_861 = *_13 + 48\l_870 = *_13 + 64\l_879 = *_13 + 80\l_85 = *_13 + 8\l_89 = *_13 + 16\l*_13 + UNKNOWN = doubledereftmp(51)\l*_13 + UNKNOWN = doubledereftmp(63)\l*_13 + UNKNOWN = doubledereftmp(318)\l"];
"_14" [label="\N\n_40 = *_14\l_920 = *_14 + 32\l_924 = *_14 + 48\l_928 = *_14 + 64\l_932 = *_14 + 80\l_52 = *_14 + 8\l_888 = *_14 + 32\l_897 = *_14 + 48\l_906 = *_14 + 64\l_915 = *_14 + 80\l_84 = *_14 + 8\l_87 = *_14 + 16\l_698 = *_14 + 80\l_714 = *_14 + 64\l_730 = *_14 + 48\l_746 = *_14 + 32\l*_14 + UNKNOWN = doubledereftmp(47)\l*_14 + UNKNOWN = doubledereftmp(62)\l*_14 + UNKNOWN = doubledereftmp(317)\l*_14 + UNKNOWN = doubledereftmp(319)\l"];
"_40";
"_42";
"_43";
"_45";
"_920";
"_921";
"_924";
"_925";
"_928";
"_929";
"_932";
"_933";
"doubledereftmp(47)";
"_47";
"_48";
"_49";
"doubledereftmp(51)";
"_51";
"_52";
"_53";
"derefaddrtmp(59)";
"doubledereftmp(62)";
"doubledereftmp(63)";
"locy" [label="\N\n_766 = locy + UNKNOWN\l_779 = locy + UNKNOWN\l_792 = locy + UNKNOWN\l_805 = locy + UNKNOWN\l"];
"_888";
"_897";
"_106";
"_906";
"_774";
"_915";
"_773";
"_852";
"_861";
"_769";
"_870";
"_255";
"_879";
"_113";
"_84";
"_85";
"_86";
"_87";
"_89";
"_91";
"_698";
"_699";
"accum_702";
"_705";
"_714";
"_715";
"accum_718";
"accum_720";
"_730";
"_731";
"accum_734";
"accum_736";
"_746";
"_747";
"accum_750";
"accum_752";
"accum_649" [label="\N\n_650 = accum_649 + UNKNOWN\l"];
"_650";
"accum_651";
"accum_653";
"accum_570";
"_531";
"_557";
"accum_662" [label="\N\n_663 = accum_662 + UNKNOWN\l"];
"_663";
"accum_664";
"accum_675" [label="\N\n_676 = accum_675 + UNKNOWN\l"];
"_676";
"accum_677";
"accum_688" [label="\N\n_689 = accum_688 + UNKNOWN\l"];
"_689";
"accum_690";
"_598";
"_611";
"_624";
"_739";
"D__lsm.157_628";
"D__lsm.159_707";
"D__lsm.161_829";
"D__exp_lsm.163_819";
"_766";
"_779";
"_792";
"_805";
"accum_544" [label="\N\n_557 = accum_544 + UNKNOWN\l"];
"accum_496";
"accum_506";
"accum_519";
"accum_534";
"_323";
"_169";
"_173";
"_185";
"_186";
"doubledereftmp(317)";
"doubledereftmp(318)";
"doubledereftmp(319)";
"_187";
"_408";
"_417";
"_190";
"_426";
"_554";
"_435";
"_553";
"puts";
"_221";
"_223";
"_246";
"accum_357" [label="\N\n_358 = accum_357 + UNKNOWN\l"];
"_358";
"accum_359";
"accum_370" [label="\N\n_371 = accum_370 + UNKNOWN\l"];
"_371";
"accum_372";
"accum_383" [label="\N\n_384 = accum_383 + UNKNOWN\l"];
"_384";
"accum_385";
"accum_396" [label="\N\n_397 = accum_396 + UNKNOWN\l"];
"_397";
"_201" [label="\N\n_202 = _201 + UNKNOWN\l"];
"_202";
"extra_bits";
"_16";
"_17";
"_18";
"DivideInternalFPF";
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_1";
"STOREDANYTHING" -> "_4";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_6";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_13";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_920";
"STOREDANYTHING" -> "_921";
"STOREDANYTHING" -> "_924";
"STOREDANYTHING" -> "_925";
"STOREDANYTHING" -> "_928";
"STOREDANYTHING" -> "_929";
"STOREDANYTHING" -> "_932";
"STOREDANYTHING" -> "_933";
"STOREDANYTHING" -> "doubledereftmp(47)";
"STOREDANYTHING" -> "_47";
"STOREDANYTHING" -> "_48";
"STOREDANYTHING" -> "doubledereftmp(51)";
"STOREDANYTHING" -> "_51";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "doubledereftmp(62)";
"STOREDANYTHING" -> "doubledereftmp(63)";
"STOREDANYTHING" -> "locy";
"STOREDANYTHING" -> "_888";
"STOREDANYTHING" -> "_897";
"STOREDANYTHING" -> "_906";
"STOREDANYTHING" -> "_915";
"STOREDANYTHING" -> "_852";
"STOREDANYTHING" -> "_861";
"STOREDANYTHING" -> "_870";
"STOREDANYTHING" -> "_879";
"STOREDANYTHING" -> "_84";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "_87";
"STOREDANYTHING" -> "_89";
"STOREDANYTHING" -> "_698";
"STOREDANYTHING" -> "_699";
"STOREDANYTHING" -> "_714";
"STOREDANYTHING" -> "_715";
"STOREDANYTHING" -> "_730";
"STOREDANYTHING" -> "_731";
"STOREDANYTHING" -> "_746";
"STOREDANYTHING" -> "_747";
"STOREDANYTHING" -> "accum_649";
"STOREDANYTHING" -> "_650";
"STOREDANYTHING" -> "_557";
"STOREDANYTHING" -> "accum_662";
"STOREDANYTHING" -> "_663";
"STOREDANYTHING" -> "accum_675";
"STOREDANYTHING" -> "_676";
"STOREDANYTHING" -> "accum_688";
"STOREDANYTHING" -> "_689";
"STOREDANYTHING" -> "_598";
"STOREDANYTHING" -> "_611";
"STOREDANYTHING" -> "_624";
"STOREDANYTHING" -> "_739";
"STOREDANYTHING" -> "D__lsm.157_628";
"STOREDANYTHING" -> "D__lsm.159_707";
"STOREDANYTHING" -> "D__lsm.161_829";
"STOREDANYTHING" -> "D__exp_lsm.163_819";
"STOREDANYTHING" -> "_766";
"STOREDANYTHING" -> "_779";
"STOREDANYTHING" -> "_792";
"STOREDANYTHING" -> "_805";
"STOREDANYTHING" -> "accum_544";
"STOREDANYTHING" -> "_173";
"STOREDANYTHING" -> "_185";
"STOREDANYTHING" -> "doubledereftmp(317)";
"STOREDANYTHING" -> "doubledereftmp(318)";
"STOREDANYTHING" -> "doubledereftmp(319)";
"STOREDANYTHING" -> "_408";
"STOREDANYTHING" -> "_417";
"STOREDANYTHING" -> "_426";
"STOREDANYTHING" -> "_435";
"STOREDANYTHING" -> "_221";
"STOREDANYTHING" -> "accum_357";
"STOREDANYTHING" -> "_358";
"STOREDANYTHING" -> "accum_370";
"STOREDANYTHING" -> "_371";
"STOREDANYTHING" -> "accum_383";
"STOREDANYTHING" -> "_384";
"STOREDANYTHING" -> "accum_396";
"STOREDANYTHING" -> "_397";
"STOREDANYTHING" -> "_201";
"STOREDANYTHING" -> "_202";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_17";
"STOREDANYTHING" -> "_18";
"abase" -> "ESCAPED";
"elapsed_26" -> "ESCAPED";
"elapsed_26" -> "_40";
"elapsed_26" -> "_43";
"elapsed_26" -> "_920";
"elapsed_26" -> "_921";
"elapsed_26" -> "_924";
"elapsed_26" -> "_925";
"elapsed_26" -> "_928";
"elapsed_26" -> "_929";
"elapsed_26" -> "_932";
"elapsed_26" -> "_933";
"elapsed_26" -> "doubledereftmp(47)";
"elapsed_26" -> "_47";
"elapsed_26" -> "_48";
"elapsed_26" -> "doubledereftmp(51)";
"elapsed_26" -> "_51";
"elapsed_26" -> "_52";
"elapsed_26" -> "doubledereftmp(62)";
"elapsed_26" -> "doubledereftmp(63)";
"elapsed_26" -> "locy";
"elapsed_26" -> "_888";
"elapsed_26" -> "_897";
"elapsed_26" -> "_906";
"elapsed_26" -> "_915";
"elapsed_26" -> "_852";
"elapsed_26" -> "_861";
"elapsed_26" -> "_870";
"elapsed_26" -> "_879";
"elapsed_26" -> "_84";
"elapsed_26" -> "_85";
"elapsed_26" -> "_87";
"elapsed_26" -> "_89";
"elapsed_26" -> "_698";
"elapsed_26" -> "_699";
"elapsed_26" -> "_714";
"elapsed_26" -> "_715";
"elapsed_26" -> "_730";
"elapsed_26" -> "_731";
"elapsed_26" -> "_746";
"elapsed_26" -> "_747";
"elapsed_26" -> "accum_649";
"elapsed_26" -> "accum_662";
"elapsed_26" -> "accum_675";
"elapsed_26" -> "accum_688";
"elapsed_26" -> "_739";
"elapsed_26" -> "D__lsm.157_628";
"elapsed_26" -> "D__lsm.159_707";
"elapsed_26" -> "D__lsm.161_829";
"elapsed_26" -> "D__exp_lsm.163_819";
"elapsed_26" -> "accum_544";
"elapsed_26" -> "_173";
"elapsed_26" -> "_185";
"elapsed_26" -> "doubledereftmp(317)";
"elapsed_26" -> "doubledereftmp(318)";
"elapsed_26" -> "doubledereftmp(319)";
"elapsed_26" -> "_187";
"elapsed_26" -> "_408";
"elapsed_26" -> "_417";
"elapsed_26" -> "_426";
"elapsed_26" -> "_435";
"elapsed_26" -> "_221";
"elapsed_26" -> "accum_357";
"elapsed_26" -> "accum_370";
"elapsed_26" -> "accum_383";
"elapsed_26" -> "accum_396";
"elapsed_26" -> "_201";
"_4" -> "ESCAPED";
"_5" -> "ESCAPED";
"_6" -> "ESCAPED";
"_8" -> "ESCAPED";
"_9" -> "ESCAPED";
"_10" -> "ESCAPED";
"_40" -> "_42";
"_42" -> "_45";
"_43" -> "_45";
"doubledereftmp(47)" -> "ESCAPED";
"_47" -> "_49";
"_48" -> "_49";
"_49" -> "ESCAPED";
"doubledereftmp(51)" -> "ESCAPED";
"_51" -> "_53";
"_52" -> "_53";
"_53" -> "ESCAPED";
"derefaddrtmp(59)" -> "ESCAPED";
"doubledereftmp(62)" -> "ESCAPED";
"doubledereftmp(63)" -> "ESCAPED";
"_888" -> "_106";
"_897" -> "_106";
"_106" -> "_774";
"_906" -> "_774";
"_774" -> "_773";
"_915" -> "_773";
"_852" -> "_769";
"_861" -> "_769";
"_769" -> "_255";
"_870" -> "_255";
"_255" -> "_113";
"_879" -> "_113";
"_84" -> "_86";
"_85" -> "_86";
"_86" -> "ESCAPED";
"_87" -> "_91";
"_89" -> "_91";
"_91" -> "ESCAPED";
"_698" -> "accum_702";
"_699" -> "accum_702";
"accum_702" -> "ESCAPED";
"accum_702" -> "_705";
"_705" -> "accum_720";
"_714" -> "accum_718";
"_715" -> "accum_718";
"accum_718" -> "accum_720";
"accum_720" -> "ESCAPED";
"accum_720" -> "accum_736";
"_730" -> "accum_734";
"_731" -> "accum_734";
"accum_734" -> "accum_736";
"accum_736" -> "ESCAPED";
"accum_736" -> "accum_752";
"_746" -> "accum_750";
"_747" -> "accum_750";
"accum_750" -> "accum_752";
"accum_752" -> "ESCAPED";
"accum_649" -> "accum_651";
"_650" -> "_531";
"accum_651" -> "accum_653";
"accum_653" -> "ESCAPED";
"accum_570" -> "accum_653";
"_557" -> "_531";
"accum_662" -> "accum_664";
"accum_664" -> "ESCAPED";
"accum_675" -> "accum_677";
"accum_677" -> "ESCAPED";
"accum_688" -> "accum_690";
"accum_690" -> "ESCAPED";
"_739" -> "_323";
"D__lsm.157_628" -> "accum_496";
"D__lsm.159_707" -> "accum_506";
"D__lsm.161_829" -> "accum_519";
"D__exp_lsm.163_819" -> "_169";
"accum_544" -> "accum_570";
"accum_496" -> "ESCAPED";
"accum_506" -> "ESCAPED";
"accum_519" -> "ESCAPED";
"accum_534" -> "ESCAPED";
"_323" -> "accum_534";
"_169" -> "ESCAPED";
"_173" -> "_323";
"_185" -> "_186";
"_186" -> "ESCAPED";
"doubledereftmp(317)" -> "ESCAPED";
"doubledereftmp(318)" -> "ESCAPED";
"doubledereftmp(319)" -> "ESCAPED";
"_408" -> "_190";
"_417" -> "_190";
"_190" -> "_554";
"_426" -> "_554";
"_554" -> "_553";
"_435" -> "_553";
"_221" -> "_223";
"_223" -> "ESCAPED";
"_246" -> "ESCAPED";
"accum_357" -> "accum_359";
"accum_359" -> "ESCAPED";
"accum_370" -> "accum_372";
"accum_372" -> "ESCAPED";
"accum_383" -> "accum_385";
"accum_385" -> "ESCAPED";
"accum_396" -> "_246";
"_202" -> "ESCAPED";
"_16" -> "ESCAPED";
"_17" -> "ESCAPED";
"_18" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as elapsed_26
STOREDANYTHING = { }
INTEGER = { ANYTHING }
abase = { NONLOCAL }
bbase = { NONLOCAL } same as abase
cbase = { NONLOCAL } same as abase
arraysize = { NONLOCAL } same as abase
loops = { NONLOCAL } same as abase
StartStopwatch = { }
elapsed_26 = { ESCAPED NONLOCAL }
i_281 = { NULL NONLOCAL }
i_39 = { NULL NONLOCAL } same as i_281
_1 = { NULL NONLOCAL }
_2 = { ESCAPED NONLOCAL } same as elapsed_26
jtable.2859 = { ESCAPED NONLOCAL } same as elapsed_26
_3 = { NULL NONLOCAL } same as i_281
_4 = { NONLOCAL }
_5 = { NONLOCAL }
_6 = { NONLOCAL }
AddSubInternalFPF = { }
_7 = { NULL NONLOCAL } same as i_281
_8 = { NONLOCAL }
_9 = { NONLOCAL }
_10 = { NONLOCAL }
_11 = { NULL NONLOCAL } same as i_281
_12 = { NONLOCAL }
_13 = { NONLOCAL }
_14 = { NONLOCAL }
_40 = { ESCAPED NONLOCAL }
_41 = { ESCAPED NONLOCAL } same as _40
_42 = { ESCAPED NONLOCAL }
_43 = { ESCAPED NONLOCAL }
_44 = { ESCAPED NONLOCAL } same as _43
_45 = { ESCAPED NONLOCAL }
_920 = { ESCAPED NONLOCAL }
_921 = { ESCAPED NONLOCAL }
_924 = { ESCAPED NONLOCAL }
_925 = { ESCAPED NONLOCAL }
_928 = { ESCAPED NONLOCAL }
_929 = { ESCAPED NONLOCAL }
_932 = { ESCAPED NONLOCAL }
_933 = { ESCAPED NONLOCAL }
doubledereftmp(47) = { ESCAPED NONLOCAL }
_47 = { ESCAPED NONLOCAL }
_48 = { ESCAPED NONLOCAL }
_49 = { ESCAPED NONLOCAL }
doubledereftmp(51) = { ESCAPED NONLOCAL }
_51 = { ESCAPED NONLOCAL }
_52 = { ESCAPED NONLOCAL }
_53 = { ESCAPED NONLOCAL }
derefaddrtmp(55) = { NONLOCAL } same as abase
derefaddrtmp(56) = { NONLOCAL } same as abase
derefaddrtmp(57) = { NONLOCAL } same as abase
derefaddrtmp(58) = { NONLOCAL } same as abase
derefaddrtmp(59) = { NULL }
derefaddrtmp(60) = { NULL } same as derefaddrtmp(59)
derefaddrtmp(61) = { NULL } same as derefaddrtmp(59)
doubledereftmp(62) = { ESCAPED NONLOCAL }
doubledereftmp(63) = { ESCAPED NONLOCAL }
locy = { ESCAPED NONLOCAL }
_888 = { ESCAPED NONLOCAL }
_897 = { ESCAPED NONLOCAL }
_106 = { ESCAPED NONLOCAL }
_906 = { ESCAPED NONLOCAL }
_774 = { ESCAPED NONLOCAL }
_915 = { ESCAPED NONLOCAL }
_773 = { ESCAPED NONLOCAL }
_852 = { ESCAPED NONLOCAL }
_861 = { ESCAPED NONLOCAL }
_769 = { ESCAPED NONLOCAL }
_870 = { ESCAPED NONLOCAL }
_255 = { ESCAPED NONLOCAL }
_879 = { ESCAPED NONLOCAL }
_113 = { ESCAPED NONLOCAL }
derefaddrtmp(79) = { NONLOCAL } same as abase
derefaddrtmp(80) = { NULL } same as derefaddrtmp(59)
derefaddrtmp(81) = { NONLOCAL } same as abase
_82 = { ESCAPED NONLOCAL } same as _40
_83 = { ESCAPED NONLOCAL } same as _43
cstore_247 = { NONLOCAL } same as abase
_84 = { ESCAPED NONLOCAL }
_85 = { ESCAPED NONLOCAL }
_86 = { ESCAPED NONLOCAL }
_87 = { ESCAPED NONLOCAL }
_88 = { ESCAPED NONLOCAL } same as _87
_89 = { ESCAPED NONLOCAL }
_90 = { ESCAPED NONLOCAL } same as _89
_91 = { ESCAPED NONLOCAL }
_92 = { ESCAPED NONLOCAL } same as _91
derefaddrtmp(94) = { NULL } same as derefaddrtmp(59)
derefaddrtmp(95) = { NULL } same as derefaddrtmp(59)
derefaddrtmp(96) = { NULL } same as derefaddrtmp(59)
derefaddrtmp(97) = { NULL } same as derefaddrtmp(59)
locy__lsm.165_545 = { ESCAPED NONLOCAL } same as locy
locy__lsm.166_418 = { NULL } same as derefaddrtmp(59)
locy__lsm.167_558 = { ESCAPED NONLOCAL } same as locy
locy__lsm.168_456 = { NULL } same as derefaddrtmp(59)
locy__lsm.169_465 = { ESCAPED NONLOCAL } same as locy
locy__lsm.170_474 = { NULL } same as derefaddrtmp(59)
locy__lsm.171_483 = { ESCAPED NONLOCAL } same as locy
locy__lsm.172_419 = { NULL } same as derefaddrtmp(59)
_698 = { ESCAPED NONLOCAL }
_699 = { ESCAPED NONLOCAL }
accum_700 = { ESCAPED NONLOCAL } same as _699
_701 = { ESCAPED NONLOCAL } same as _698
accum_702 = { ESCAPED NONLOCAL }
_705 = { ESCAPED NONLOCAL }
_706 = { ESCAPED NONLOCAL } same as _705
_708 = { ESCAPED NONLOCAL } same as accum_702
_714 = { ESCAPED NONLOCAL }
_715 = { ESCAPED NONLOCAL }
accum_716 = { ESCAPED NONLOCAL } same as _715
_717 = { ESCAPED NONLOCAL } same as _714
accum_718 = { ESCAPED NONLOCAL }
_719 = { ESCAPED NONLOCAL } same as _705
accum_720 = { ESCAPED NONLOCAL }
_721 = { ESCAPED NONLOCAL } same as accum_720
_722 = { ESCAPED NONLOCAL } same as accum_720
_724 = { ESCAPED NONLOCAL } same as accum_720
_730 = { ESCAPED NONLOCAL }
_731 = { ESCAPED NONLOCAL }
accum_732 = { ESCAPED NONLOCAL } same as _731
_733 = { ESCAPED NONLOCAL } same as _730
accum_734 = { ESCAPED NONLOCAL }
_735 = { ESCAPED NONLOCAL } same as accum_720
accum_736 = { ESCAPED NONLOCAL }
_737 = { ESCAPED NONLOCAL } same as accum_736
_738 = { ESCAPED NONLOCAL } same as accum_736
_740 = { ESCAPED NONLOCAL } same as accum_736
_746 = { ESCAPED NONLOCAL }
_747 = { ESCAPED NONLOCAL }
accum_748 = { ESCAPED NONLOCAL } same as _747
_749 = { ESCAPED NONLOCAL } same as _746
accum_750 = { ESCAPED NONLOCAL }
_751 = { ESCAPED NONLOCAL } same as accum_736
accum_752 = { ESCAPED NONLOCAL }
_753 = { ESCAPED NONLOCAL } same as accum_752
_754 = { ESCAPED NONLOCAL } same as accum_752
_756 = { ESCAPED NONLOCAL } same as accum_752
accum_649 = { ESCAPED NONLOCAL }
_650 = { ESCAPED NONLOCAL }
accum_651 = { ESCAPED NONLOCAL }
accum_652 = { ESCAPED NONLOCAL } same as accum_651
accum_653 = { ESCAPED NONLOCAL }
accum_570 = { ESCAPED NONLOCAL }
_531 = { ESCAPED NONLOCAL }
_557 = { ESCAPED NONLOCAL }
accum_662 = { ESCAPED NONLOCAL }
_663 = { ESCAPED NONLOCAL }
accum_664 = { ESCAPED NONLOCAL }
accum_665 = { ESCAPED NONLOCAL } same as accum_664
accum_666 = { ESCAPED NONLOCAL } same as accum_664
accum_675 = { ESCAPED NONLOCAL }
_676 = { ESCAPED NONLOCAL }
accum_677 = { ESCAPED NONLOCAL }
accum_678 = { ESCAPED NONLOCAL } same as accum_677
accum_679 = { ESCAPED NONLOCAL } same as accum_677
accum_688 = { ESCAPED NONLOCAL }
_689 = { ESCAPED NONLOCAL }
accum_690 = { ESCAPED NONLOCAL }
accum_691 = { ESCAPED NONLOCAL } same as accum_690
accum_692 = { ESCAPED NONLOCAL } same as accum_690
_598 = { NULL NONLOCAL }
extra_bits$0_22 = { NULL NONLOCAL } same as i_281
accum_599 = { NULL NONLOCAL } same as i_281
accum_600 = { NULL NONLOCAL } same as i_281
accum_601 = { NULL NONLOCAL } same as i_281
_611 = { NULL NONLOCAL }
extra_bits$1_269 = { NULL NONLOCAL } same as i_281
accum_612 = { NULL NONLOCAL } same as i_281
accum_613 = { NULL NONLOCAL } same as i_281
accum_614 = { NULL NONLOCAL } same as i_281
_624 = { NULL NONLOCAL }
extra_bits$2_259 = { NULL NONLOCAL } same as i_281
accum_625 = { NULL NONLOCAL } same as i_281
accum_626 = { NULL NONLOCAL } same as i_281
accum_627 = { NULL NONLOCAL } same as i_281
accum_638 = { NULL NONLOCAL } same as i_281
extra_bits$3_898 = { NULL NONLOCAL } same as i_281
accum_639 = { NULL NONLOCAL } same as i_281
accum_640 = { NULL NONLOCAL } same as i_281
i_145 = { NULL NONLOCAL } same as i_281
i_319 = { NULL NONLOCAL } same as i_281
locy__lsm.166_369 = { NONLOCAL } same as abase
locy__lsm.166_427 = { NONLOCAL } same as abase
locy__lsm.168_382 = { NONLOCAL } same as abase
locy__lsm.168_428 = { NONLOCAL } same as abase
locy__lsm.165_196 = { ESCAPED NONLOCAL } same as locy
locy__lsm.165_571 = { ESCAPED NONLOCAL } same as locy
locy__lsm.167_687 = { ESCAPED NONLOCAL } same as locy
locy__lsm.167_584 = { ESCAPED NONLOCAL } same as locy
accum_546 = { NULL NONLOCAL } same as i_281
accum_559 = { NULL NONLOCAL } same as i_281
accum_457 = { NULL NONLOCAL } same as i_281
accum_466 = { NULL NONLOCAL } same as i_281
locy__lsm.169_467 = { ESCAPED NONLOCAL } same as locy
locy__lsm.169_833 = { ESCAPED NONLOCAL } same as locy
locy__lsm.170_475 = { NONLOCAL } same as abase
locy__lsm.170_837 = { NONLOCAL } same as abase
locy__lsm.171_476 = { ESCAPED NONLOCAL } same as locy
locy__lsm.171_841 = { ESCAPED NONLOCAL } same as locy
locy__lsm.172_484 = { NONLOCAL } same as abase
locy__lsm.172_845 = { NONLOCAL } same as abase
_739 = { ESCAPED NONLOCAL }
_755 = { ESCAPED NONLOCAL } same as _739
D__lsm.157_628 = { ESCAPED NONLOCAL }
D__lsm.158_270 = { NULL } same as derefaddrtmp(59)
D__lsm.159_707 = { ESCAPED NONLOCAL }
D__lsm.160_268 = { NULL } same as derefaddrtmp(59)
D__lsm.161_829 = { ESCAPED NONLOCAL }
D__lsm.162_824 = { NULL } same as derefaddrtmp(59)
D__exp_lsm.163_819 = { ESCAPED NONLOCAL }
D__exp_lsm.164_814 = { NULL } same as derefaddrtmp(59)
locy__lsm.165_623 = { ESCAPED NONLOCAL } same as locy
locy__lsm.167_46 = { ESCAPED NONLOCAL } same as locy
locy__lsm.169_636 = { ESCAPED NONLOCAL } same as locy
locy__lsm.171_409 = { ESCAPED NONLOCAL } same as locy
accum_765 = { ESCAPED NONLOCAL } same as locy
_766 = { ESCAPED NONLOCAL }
accum_767 = { ESCAPED NONLOCAL } same as locy
accum_778 = { ESCAPED NONLOCAL } same as locy
_779 = { ESCAPED NONLOCAL }
accum_780 = { ESCAPED NONLOCAL } same as locy
accum_781 = { ESCAPED NONLOCAL } same as locy
accum_782 = { ESCAPED NONLOCAL } same as locy
accum_791 = { ESCAPED NONLOCAL } same as locy
_792 = { ESCAPED NONLOCAL }
accum_793 = { ESCAPED NONLOCAL } same as locy
accum_794 = { ESCAPED NONLOCAL } same as locy
accum_795 = { ESCAPED NONLOCAL } same as locy
accum_804 = { ESCAPED NONLOCAL } same as locy
_805 = { ESCAPED NONLOCAL }
accum_806 = { ESCAPED NONLOCAL } same as locy
accum_807 = { ESCAPED NONLOCAL } same as locy
accum_808 = { ESCAPED NONLOCAL } same as locy
accum_544 = { ESCAPED NONLOCAL }
accum_496 = { ESCAPED NONLOCAL }
accum_495 = { ESCAPED NONLOCAL } same as accum_496
accum_497 = { ESCAPED NONLOCAL } same as accum_496
D__lsm.157_436 = { ESCAPED NONLOCAL } same as accum_496
D__lsm.158_437 = { NONLOCAL } same as abase
accum_506 = { ESCAPED NONLOCAL }
D__lsm.159_56 = { ESCAPED NONLOCAL } same as accum_506
accum_508 = { ESCAPED NONLOCAL } same as accum_506
_592 = { ESCAPED NONLOCAL } same as accum_496
accum_493 = { ESCAPED NONLOCAL } same as accum_496
accum_509 = { ESCAPED NONLOCAL } same as accum_506
accum_510 = { ESCAPED NONLOCAL } same as accum_506
D__lsm.159_853 = { ESCAPED NONLOCAL } same as accum_506
D__lsm.160_862 = { NONLOCAL } same as abase
accum_519 = { ESCAPED NONLOCAL }
D__lsm.161_610 = { ESCAPED NONLOCAL } same as accum_519
accum_521 = { ESCAPED NONLOCAL } same as accum_519
_489 = { ESCAPED NONLOCAL } same as accum_506
accum_522 = { ESCAPED NONLOCAL } same as accum_519
accum_523 = { ESCAPED NONLOCAL } same as accum_519
D__lsm.161_863 = { ESCAPED NONLOCAL } same as accum_519
D__lsm.162_871 = { NONLOCAL } same as abase
accum_534 = { ESCAPED NONLOCAL }
_323 = { ESCAPED NONLOCAL }
_488 = { ESCAPED NONLOCAL } same as accum_519
accum_535 = { ESCAPED NONLOCAL } same as accum_534
accum_536 = { ESCAPED NONLOCAL } same as accum_534
_169 = { ESCAPED NONLOCAL }
D__exp_lsm.163_50 = { ESCAPED NONLOCAL } same as _169
_170 = { ESCAPED NONLOCAL } same as _169
_171 = { ESCAPED NONLOCAL } same as _169
_172 = { ESCAPED NONLOCAL } same as _169
D__exp_lsm.163_872 = { ESCAPED NONLOCAL } same as _169
D__exp_lsm.164_880 = { NONLOCAL } same as abase
_173 = { ESCAPED NONLOCAL }
_174 = { ESCAPED NONLOCAL } same as _173
extra_bits$0_20 = { NULL NONLOCAL } same as i_281
accum_588 = { NULL NONLOCAL } same as i_281
extra_bits$1_541 = { NULL NONLOCAL } same as i_281
accum_575 = { NULL NONLOCAL } same as i_281
extra_bits$2_697 = { NULL NONLOCAL } same as i_281
accum_562 = { NULL NONLOCAL } same as i_281
extra_bits$3_899 = { NULL NONLOCAL } same as i_281
accum_547 = { NULL NONLOCAL } same as i_281
D__lsm.157_597 = { ESCAPED NONLOCAL } same as accum_496
accum_560 = { NULL NONLOCAL } same as i_281
_728 = { NULL NONLOCAL } same as i_281
accum_561 = { NULL NONLOCAL } same as i_281
accum_573 = { NULL NONLOCAL } same as i_281
_713 = { NULL NONLOCAL } same as i_281
accum_574 = { NULL NONLOCAL } same as i_281
accum_586 = { NULL NONLOCAL } same as i_281
_712 = { NULL NONLOCAL } same as i_281
accum_587 = { NULL NONLOCAL } same as i_281
_593 = { NULL NONLOCAL } same as i_281
D__lsm.157_395 = { ESCAPED NONLOCAL } same as accum_496
D__lsm.158_458 = { NONLOCAL } same as abase
accum_661 = { NULL NONLOCAL } same as i_281
accum_121 = { NULL NONLOCAL } same as i_281
accum_674 = { NULL NONLOCAL } same as i_281
accum_637 = { NULL NONLOCAL } same as i_281
D__lsm.159_485 = { ESCAPED NONLOCAL } same as accum_506
D__lsm.160_572 = { NONLOCAL } same as abase
D__lsm.161_585 = { ESCAPED NONLOCAL } same as accum_519
D__lsm.162_157 = { NONLOCAL } same as abase
D__exp_lsm.163_492 = { ESCAPED NONLOCAL } same as _169
D__exp_lsm.164_494 = { NONLOCAL } same as abase
extra_bits$0_262 = { NULL NONLOCAL } same as i_281
extra_bits$1_854 = { NULL NONLOCAL } same as i_281
extra_bits$2_889 = { NULL NONLOCAL } same as i_281
extra_bits$3_907 = { NULL NONLOCAL } same as i_281
_745 = { NULL NONLOCAL } same as i_281
_744 = { NULL NONLOCAL } same as i_281
_729 = { NULL NONLOCAL } same as i_281
_185 = { ESCAPED NONLOCAL }
_186 = { ESCAPED NONLOCAL }
doubledereftmp(317) = { ESCAPED NONLOCAL }
doubledereftmp(318) = { ESCAPED NONLOCAL }
doubledereftmp(319) = { ESCAPED NONLOCAL }
_187 = { ESCAPED NONLOCAL }
_188 = { ESCAPED NONLOCAL } same as _187
_408 = { ESCAPED NONLOCAL }
_417 = { ESCAPED NONLOCAL }
_190 = { ESCAPED NONLOCAL }
_426 = { ESCAPED NONLOCAL }
_554 = { ESCAPED NONLOCAL }
_435 = { ESCAPED NONLOCAL }
_553 = { ESCAPED NONLOCAL }
puts = { }
_221 = { ESCAPED NONLOCAL }
_365 = { ESCAPED NONLOCAL } same as _221
_223 = { ESCAPED NONLOCAL }
_224 = { ESCAPED NONLOCAL } same as _223
_227 = { ESCAPED NONLOCAL } same as _187
_246 = { ESCAPED NONLOCAL }
accum_400 = { ESCAPED NONLOCAL } same as _246
accum_357 = { ESCAPED NONLOCAL }
_358 = { ESCAPED NONLOCAL }
accum_359 = { ESCAPED NONLOCAL }
accum_370 = { ESCAPED NONLOCAL }
_371 = { ESCAPED NONLOCAL }
accum_372 = { ESCAPED NONLOCAL }
accum_373 = { ESCAPED NONLOCAL } same as accum_372
accum_374 = { ESCAPED NONLOCAL } same as accum_372
accum_383 = { ESCAPED NONLOCAL }
_384 = { ESCAPED NONLOCAL }
accum_385 = { ESCAPED NONLOCAL }
accum_386 = { ESCAPED NONLOCAL } same as accum_385
accum_387 = { ESCAPED NONLOCAL } same as accum_385
accum_396 = { ESCAPED NONLOCAL }
_397 = { ESCAPED NONLOCAL }
accum_398 = { ESCAPED NONLOCAL } same as _246
accum_399 = { ESCAPED NONLOCAL } same as _246
_200 = { ESCAPED NONLOCAL } same as _187
_201 = { ESCAPED NONLOCAL }
_202 = { ESCAPED NONLOCAL }
extra_bits = { }
_15 = { NULL NONLOCAL } same as i_281
_16 = { NONLOCAL }
_17 = { NONLOCAL }
_18 = { NONLOCAL }
DivideInternalFPF = { }
loops_19 = { NONLOCAL } same as abase
loops_28 = { NONLOCAL } same as abase
StopStopwatch = { }
_30 = { ESCAPED NONLOCAL } same as elapsed_26
_361 = { ESCAPED NONLOCAL } same as _221
_266 = { ESCAPED NONLOCAL } same as _223
exponent_difference_345 = { ESCAPED NONLOCAL } same as _223


Alias information for DoEmFloatIteration

Aliased symbols

locy, UID D.3829, struct InternalFPF, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_4, points-to non-local, points-to NULL, points-to vars: { }
_5, points-to non-local, points-to NULL, points-to vars: { }
_6, points-to non-local, points-to NULL, points-to vars: { }
_8, points-to non-local, points-to NULL, points-to vars: { }
_9, points-to non-local, points-to NULL, points-to vars: { }
_10, points-to non-local, points-to NULL, points-to vars: { }
_12, points-to non-local, points-to NULL, points-to vars: { }
_13, points-to non-local, points-to NULL, points-to vars: { }
_14, points-to non-local, points-to NULL, points-to vars: { }
_16, points-to non-local, points-to NULL, points-to vars: { }
_17, points-to non-local, points-to NULL, points-to vars: { }
_18, points-to non-local, points-to NULL, points-to vars: { }
cbase_32(D), points-to non-local, points-to NULL, points-to vars: { }
bbase_33(D), points-to non-local, points-to NULL, points-to vars: { }
abase_34(D), points-to non-local, points-to NULL, points-to vars: { }

;; 23 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 91, latch 90
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 3, latch 98
;;  depth 2, outer 1
;;  nodes
;;
;; Loop 5
;;  header 61, latch 99
;;  depth 3, outer 2
;;  nodes: 61 99 60 153 59 58 152 57 56 151 55 54 158 53 67 157 66 65 156 64 63 155 62
;;
;; Loop 8
;;  header 45, latch 100
;;  depth 3, outer 2
;;  nodes: 45 100 43 141 42 41 140 40 39 139 38 37 138 36 35 137 34 33 136 32 31 135 30 29 134 28 52 51 150 50 49 149 48 47 148 46 27
;; 2 succs { 91 }
;; 96 succs { 3 }
;; 3 succs { 119 4 5 6 88 }
;; 119 succs { 89 }
;; 4 succs { 89 }
;; 5 succs { 89 }
;; 6 succs { 120 15 17 19 16 20 18 7 }
;; 120 succs { 73 }
;; 7 succs { 121 8 }
;; 8 succs { 122 9 }
;; 9 succs { 123 10 }
;; 123 succs { 70 }
;; 10 succs { 124 11 }
;; 124 succs { 71 }
;; 11 succs { 125 12 }
;; 125 succs { 70 }
;; 12 succs { 126 13 }
;; 126 succs { 71 }
;; 13 succs { 127 14 }
;; 127 succs { 70 }
;; 14 succs { 128 72 }
;; 128 succs { 71 }
;; 15 succs { 73 }
;; 16 succs { 73 }
;; 17 succs { 87 }
;; 18 succs { 73 }
;; 19 succs { 73 }
;; 20 succs { 129 21 }
;; 129 succs { 22 }
;; 21 succs { 130 131 }
;; 131 succs { 23 }
;; 130 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 132 24 }
;; 132 succs { 26 }
;; 24 succs { 133 25 }
;; 133 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 45 }
;; 27 succs { 28 134 }
;; 134 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 30 135 }
;; 135 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 136 }
;; 136 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 137 }
;; 137 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 138 }
;; 138 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 38 139 }
;; 139 succs { 39 }
;; 38 succs { 39 }
;; 39 succs { 40 140 }
;; 140 succs { 41 }
;; 40 succs { 41 }
;; 41 succs { 42 141 }
;; 141 succs { 43 }
;; 42 succs { 43 }
;; 43 succs { 100 142 }
;; 142 succs { 44 }
;; 44 succs { 111 }
;; 111 succs { 143 112 }
;; 143 succs { 113 }
;; 112 succs { 113 }
;; 113 succs { 144 114 }
;; 144 succs { 115 }
;; 114 succs { 115 }
;; 115 succs { 145 116 }
;; 145 succs { 117 }
;; 116 succs { 117 }
;; 117 succs { 146 118 }
;; 146 succs { 110 }
;; 118 succs { 110 }
;; 110 succs { 97 147 }
;; 147 succs { 68 }
;; 97 succs { 61 }
;; 100 succs { 45 }
;; 45 succs { 46 148 }
;; 148 succs { 47 }
;; 46 succs { 47 }
;; 47 succs { 48 149 }
;; 149 succs { 49 }
;; 48 succs { 49 }
;; 49 succs { 50 150 }
;; 150 succs { 51 }
;; 50 succs { 51 }
;; 51 succs { 27 52 }
;; 52 succs { 29 }
;; 53 succs { 54 }
;; 54 succs { 55 151 }
;; 151 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 57 152 }
;; 152 succs { 58 }
;; 57 succs { 58 }
;; 58 succs { 59 153 }
;; 153 succs { 60 }
;; 59 succs { 60 }
;; 60 succs { 99 154 }
;; 99 succs { 61 }
;; 61 succs { 62 155 }
;; 155 succs { 63 }
;; 62 succs { 63 }
;; 63 succs { 64 156 }
;; 156 succs { 65 }
;; 64 succs { 65 }
;; 65 succs { 66 157 }
;; 157 succs { 67 }
;; 66 succs { 67 }
;; 67 succs { 53 158 }
;; 158 succs { 54 }
;; 154 succs { 102 }
;; 102 succs { 159 103 }
;; 159 succs { 104 }
;; 103 succs { 104 }
;; 104 succs { 160 105 }
;; 160 succs { 106 }
;; 105 succs { 106 }
;; 106 succs { 161 107 }
;; 161 succs { 108 }
;; 107 succs { 108 }
;; 108 succs { 162 109 }
;; 162 succs { 101 }
;; 109 succs { 101 }
;; 101 succs { 68 }
;; 68 succs { 69 163 }
;; 163 succs { 73 }
;; 69 succs { 73 }
;; 121 succs { 70 }
;; 70 succs { 73 }
;; 122 succs { 71 }
;; 71 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 74 164 }
;; 164 succs { 87 }
;; 74 succs { 75 165 }
;; 75 succs { 94 }
;; 76 succs { 78 166 }
;; 166 succs { 87 }
;; 77 succs { 95 }
;; 78 succs { 79 167 }
;; 167 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 81 168 }
;; 168 succs { 82 }
;; 81 succs { 82 }
;; 82 succs { 83 169 }
;; 169 succs { 84 }
;; 83 succs { 84 }
;; 84 succs { 77 170 }
;; 85 succs { 171 172 }
;; 172 succs { 87 }
;; 171 succs { 86 }
;; 86 succs { 87 }
;; 87 succs { 89 }
;; 88 succs { 89 }
;; 89 succs { 98 173 }
;; 98 succs { 3 }
;; 173 succs { 90 }
;; 90 succs { 91 }
;; 91 succs { 92 93 }
;; 92 succs { 96 174 }
;; 174 succs { 90 }
;; 93 succs { 1 }
;; 165 succs { 94 }
;; 94 succs { 76 85 }
;; 170 succs { 95 }
;; 95 succs { 86 }
find_duplicates: <bb 173> duplicate of <bb 174>
find_duplicates: <bb 164> duplicate of <bb 166>
find_duplicates: <bb 164> duplicate of <bb 172>
find_duplicates: <bb 132> duplicate of <bb 133>
find_duplicates: <bb 129> duplicate of <bb 130>
find_duplicates: <bb 122> duplicate of <bb 124>
find_duplicates: <bb 122> duplicate of <bb 126>
find_duplicates: <bb 122> duplicate of <bb 128>
find_duplicates: <bb 121> duplicate of <bb 123>
find_duplicates: <bb 121> duplicate of <bb 125>
find_duplicates: <bb 121> duplicate of <bb 127>
Removing basic block 174
Removing basic block 166
Removing basic block 172
Removing basic block 133
Removing basic block 130
Removing basic block 124
Removing basic block 126
Removing basic block 128
Removing basic block 123
Removing basic block 125
Removing basic block 127

Symbols to be put in SSA form
{ D.3273 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 175
Number of blocks to update: 163 ( 93%)


Removing basic block 159
Removing basic block 160
Removing basic block 161
Removing basic block 162
Removing basic block 143
Removing basic block 144
Removing basic block 145
Removing basic block 146
Removing basic block 25
Removing basic block 44
Removing basic block 96
Removing basic block 97
Removing basic block 99
Removing basic block 100
Removing basic block 102
Removing basic block 111
Removing basic block 119
Removing basic block 121
Removing basic block 122
Removing basic block 129
Removing basic block 131
Removing basic block 134
Removing basic block 135
Removing basic block 136
Removing basic block 137
Removing basic block 138
Removing basic block 139
Removing basic block 140
Removing basic block 141
Removing basic block 142
Removing basic block 147
Removing basic block 148
Removing basic block 149
Removing basic block 150
Removing basic block 151
Removing basic block 152
Removing basic block 153
Removing basic block 154
Removing basic block 155
Removing basic block 156
Removing basic block 157
Removing basic block 158
Removing basic block 163
Removing basic block 165
Removing basic block 167
Removing basic block 168
Removing basic block 169
Removing basic block 170
Merging blocks 173 and 90
Merging blocks 103 and 104
Merging blocks 103 and 105
Merging blocks 103 and 106
Merging blocks 103 and 107
Merging blocks 103 and 108
Merging blocks 103 and 109
Merging blocks 103 and 101
Merging blocks 112 and 113
Merging blocks 112 and 114
Merging blocks 112 and 115
Merging blocks 112 and 116
Merging blocks 112 and 117
Merging blocks 112 and 118
Merging blocks 112 and 110
DoEmFloatIteration (struct InternalFPF * abase, struct InternalFPF * bbase, struct InternalFPF * cbase, long unsigned int arraysize, long unsigned int loops)
{
  _Bool locy__lsm.172;
  short unsigned int locy__lsm.171;
  _Bool locy__lsm.170;
  short unsigned int locy__lsm.169;
  _Bool locy__lsm.168;
  short unsigned int locy__lsm.167;
  _Bool locy__lsm.166;
  short unsigned int locy__lsm.165;
  _Bool D__exp_lsm.164;
  short int D__exp_lsm.163;
  _Bool D__lsm.162;
  short unsigned int D__lsm.161;
  _Bool D__lsm.160;
  short unsigned int D__lsm.159;
  _Bool D__lsm.158;
  short unsigned int D__lsm.157;
  short unsigned int extra_bits$3;
  short unsigned int extra_bits$2;
  short unsigned int extra_bits$1;
  short unsigned int extra_bits$0;
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  int n;
  long int exponent_difference;
  int i;
  int i;
  int j;
  short unsigned int carry;
  short unsigned int extra_bits[4];
  struct InternalFPF locy;
  int i;
  int n;
  int i;
  int n;
  int i;
  int i;
  short unsigned int accum;
  int i;
  unsigned int accum;
  short unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  int n;
  int i;
  long unsigned int i;
  static unsigned char jtable[16] = {0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
  long unsigned int elapsed;
  long unsigned int _1;
  long unsigned int _3;
  struct InternalFPF * _4;
  struct InternalFPF * _5;
  struct InternalFPF * _6;
  long unsigned int _7;
  struct InternalFPF * _8;
  struct InternalFPF * _9;
  struct InternalFPF * _10;
  long unsigned int _11;
  struct InternalFPF * _12;
  struct InternalFPF * _13;
  struct InternalFPF * _14;
  long unsigned int _15;
  struct InternalFPF * _16;
  struct InternalFPF * _17;
  struct InternalFPF * _18;
  long unsigned int _30;
  unsigned char _40;
  int _41;
  int _42;
  unsigned char _43;
  int _44;
  int _45;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  long unsigned int _58;
  short unsigned int prephitmp_76;
  unsigned char _83;
  unsigned char _84;
  unsigned char _85;
  unsigned char _86;
  short int _87;
  unsigned short _88;
  short int _89;
  unsigned short _90;
  unsigned short _91;
  short int _92;
  short unsigned int _106;
  short unsigned int _113;
  unsigned char _140;
  unsigned short _170;
  unsigned short _171;
  short int _172;
  signed short _174;
  unsigned char pretmp_181;
  unsigned char pretmp_184;
  short unsigned int _185;
  short unsigned int _186;
  short unsigned int _190;
  short unsigned int _202;
  unsigned char prephitmp_203;
  unsigned short _221;
  unsigned char pretmp_222;
  unsigned short _223;
  short int _224;
  unsigned char prephitmp_225;
  unsigned char pretmp_244;
  short unsigned int _246;
  unsigned char cstore_247;
  short unsigned int prephitmp_250;
  short unsigned int prephitmp_254;
  short unsigned int _255;
  unsigned char _258;
  int _266;
  short unsigned int _323;
  short unsigned int _358;
  int _361;
  short int _365;
  short unsigned int _371;
  short unsigned int _384;
  short unsigned int _397;
  unsigned char pretmp_407;
  short unsigned int _408;
  short unsigned int _417;
  short unsigned int _426;
  short unsigned int _435;
  unsigned char pretmp_470;
  unsigned char pretmp_479;
  signed short _488;
  signed short _489;
  short unsigned int _531;
  unsigned char pretmp_532;
  unsigned char pretmp_549;
  short unsigned int _553;
  short unsigned int _554;
  short unsigned int _557;
  signed short _592;
  signed short _593;
  short unsigned int _598;
  short unsigned int _611;
  short unsigned int prephitmp_619;
  short unsigned int _624;
  short unsigned int pretmp_631;
  unsigned char prephitmp_632;
  short unsigned int _650;
  unsigned char _657;
  unsigned char _658;
  short unsigned int _663;
  unsigned char _670;
  unsigned char _671;
  short unsigned int _676;
  unsigned char _683;
  unsigned char _684;
  short unsigned int _689;
  short unsigned int _698;
  short unsigned int _699;
  unsigned int _701;
  unsigned int _705;
  short unsigned int _706;
  short unsigned int _708;
  signed short _712;
  signed short _713;
  short unsigned int _714;
  short unsigned int _715;
  unsigned int _717;
  unsigned int _721;
  short unsigned int _722;
  short unsigned int _724;
  signed short _728;
  short unsigned int _729;
  short unsigned int _730;
  unsigned int _733;
  unsigned int _737;
  short unsigned int _738;
  short unsigned int _740;
  short unsigned int _744;
  short unsigned int _745;
  short unsigned int _746;
  unsigned int _749;
  unsigned int _753;
  short unsigned int _754;
  signed short _755;
  short unsigned int _756;
  unsigned char pretmp_764;
  short unsigned int _766;
  short unsigned int _769;
  short unsigned int _773;
  short unsigned int _774;
  short unsigned int _779;
  short unsigned int _792;
  short unsigned int _805;
  unsigned char prephitmp_836;
  unsigned char prephitmp_840;
  unsigned char pretmp_844;
  short unsigned int _852;
  short unsigned int _861;
  short unsigned int _870;
  short unsigned int _879;
  short unsigned int _888;
  short unsigned int prephitmp_893;
  short unsigned int _897;
  short unsigned int _906;
  unsigned char prephitmp_914;
  short unsigned int _915;
  short unsigned int _920;
  short unsigned int _921;
  short unsigned int _924;
  short unsigned int _925;
  short unsigned int _928;
  short unsigned int _929;
  short unsigned int _932;
  short unsigned int _933;

  <bb 2> [0.39%]:
  elapsed_26 = StartStopwatch ();
  goto <bb 96>; [100.00%]

  <bb 3> [12.51%]:
  # i_281 = PHI <i_39(94), 0(97)>
  # prephitmp_203 = PHI <pretmp_407(94), 0(97)>
  _1 = i_281 & 15;
  switch (prephitmp_203) <default: <L6> [20.00%], case 0: <L2> [20.00%], case 1: <L3> [20.00%], case 2: <L4> [20.00%], case 3: <L5> [20.00%]>

<L2> [2.50%]:
  _3 = i_281 * 12;
  _4 = cbase_32(D) + _3;
  _5 = bbase_33(D) + _3;
  _6 = abase_34(D) + _3;
  AddSubInternalFPF (0, _6, _5, _4);
  goto <bb 93> (<L6>); [100.00%]

<L3> [2.50%]:
  _7 = i_281 * 12;
  _8 = cbase_32(D) + _7;
  _9 = bbase_33(D) + _7;
  _10 = abase_34(D) + _7;
  AddSubInternalFPF (1, _10, _9, _8);
  goto <bb 93> (<L6>); [100.00%]

<L4> [2.50%]:
  _11 = i_281 * 12;
  _12 = cbase_32(D) + _11;
  _13 = bbase_33(D) + _11;
  _14 = abase_34(D) + _11;
  _40 = _14->type;
  _41 = (int) _40;
  _42 = _41 * 5;
  _43 = _13->type;
  _44 = (int) _43;
  _45 = _42 + _44;
  switch (_45) <default: <L27> [12.50%], case 0 ... 2: <L13> [12.50%], case 3: <L15> [12.50%], case 4: <L17> [12.50%], case 5: <L14> [12.50%], case 6 ... 7: <L18> [12.50%], case 8: <L14> [12.50%], case 9: <L17> [12.50%], case 10: <L14> [12.50%], case 11 ... 12: <L18> [12.50%], case 13: <L14> [12.50%], case 14: <L17> [12.50%], case 15: <L15> [12.50%], case 16 ... 18: <L13> [12.50%], case 19: <L17> [12.50%], case 20 ... 23: <L16> [12.50%], case 24: <L25> [12.50%]>

<L27> [0.31%]:
  pretmp_764 = _12->type;
  _684 = pretmp_764 + 255;
  goto <bb 75> (<L20>); [100.00%]

<L25> [0.31%]:
  _920 = _14->mantissa[0];
  _921 = _13->mantissa[0];
  if (_920 > _921)
    goto <bb 72>; [5.00%]
  else
    goto <bb 9>; [95.00%]

  <bb 9> [0.30%]:
  if (_920 < _921)
    goto <bb 73>; [5.00%]
  else
    goto <bb 10>; [95.00%]

  <bb 10> [0.29%]:
  _924 = _14->mantissa[1];
  _925 = _13->mantissa[1];
  if (_924 > _925)
    goto <bb 72>; [5.00%]
  else
    goto <bb 11>; [95.00%]

  <bb 11> [0.27%]:
  if (_924 < _925)
    goto <bb 73>; [5.00%]
  else
    goto <bb 12>; [95.00%]

  <bb 12> [0.26%]:
  _928 = _14->mantissa[2];
  _929 = _13->mantissa[2];
  if (_928 > _929)
    goto <bb 72>; [5.00%]
  else
    goto <bb 13>; [95.00%]

  <bb 13> [0.25%]:
  if (_928 < _929)
    goto <bb 73>; [5.00%]
  else
    goto <bb 14>; [95.00%]

  <bb 14> [0.24%]:
  _932 = _14->mantissa[3];
  _933 = _13->mantissa[3];
  if (_932 > _933)
    goto <bb 72>; [5.00%]
  else
    goto <bb 15>; [95.00%]

  <bb 15> [0.23%]:
  if (_932 < _933)
    goto <bb 73>; [5.00%]
  else
    goto <bb 74>; [95.00%]

<L13> [0.31%]:
  __builtin_memmove (_14, _12, 12);
  _47 = _12->sign;
  _48 = _13->sign;
  _49 = _47 ^ _48;
  _12->sign = _49;
  pretmp_532 = _12->type;
  _683 = pretmp_532 + 255;
  goto <bb 75> (<L20>); [100.00%]

<L14> [0.31%]:
  __builtin_memmove (_13, _12, 12);
  _51 = _12->sign;
  _52 = _14->sign;
  _53 = _51 ^ _52;
  _12->sign = _53;
  pretmp_244 = _12->type;
  _671 = pretmp_244 + 255;
  goto <bb 75> (<L20>); [100.00%]

<L15> [0.31%]:
  _12->type = 4;
  _12->exp = 32767;
  _12->sign = 1;
  _12->mantissa[0] = 16384;
  _12->mantissa[1] = 0;
  _12->mantissa[2] = 0;
  _12->mantissa[3] = 0;
  goto <bb 91>; [100.00%]

<L16> [0.31%]:
  __builtin_memmove (_14, _12, 12);
  pretmp_479 = _12->type;
  _658 = pretmp_479 + 255;
  goto <bb 75> (<L20>); [100.00%]

<L17> [0.31%]:
  __builtin_memmove (_13, _12, 12);
  pretmp_181 = _12->type;
  _657 = pretmp_181 + 255;
  goto <bb 75> (<L20>); [100.00%]

<L18> [0.31%]:
  __builtin_memcpy (&locy, _13, 12);
  _888 = MEM[(short unsigned int *)_14 + 4B];
  _897 = MEM[(short unsigned int *)_14 + 6B];
  _106 = _888 | _897;
  _906 = MEM[(short unsigned int *)_14 + 8B];
  _774 = _106 | _906;
  _915 = MEM[(short unsigned int *)_14 + 10B];
  _773 = _774 | _915;
  if (_773 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 22> [0.16%]:
  _852 = MEM[(short unsigned int *)_13 + 4B];
  _861 = MEM[(short unsigned int *)_13 + 6B];
  _769 = _852 | _861;
  _870 = MEM[(short unsigned int *)_13 + 8B];
  _255 = _769 | _870;
  _879 = MEM[(short unsigned int *)_13 + 10B];
  _113 = _255 | _879;
  if (_113 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 23> [0.23%]:
  _12->type = 3;
  _12->sign = 0;
  _12->exp = -32767;
  pretmp_844 = _14->type;

  <bb 24> [0.31%]:
  # prephitmp_840 = PHI <_40(22), pretmp_844(23)>
  if (prephitmp_840 == 1)
    goto <bb 25>; [34.00%]
  else
    goto <bb 26>; [66.00%]

  <bb 25> [0.18%]:
  goto <bb 27>; [100.00%]

  <bb 26> [0.21%]:
  _83 = _13->type;
  if (_83 == 1)
    goto <bb 25>; [34.00%]
  else
    goto <bb 27>; [66.00%]

  <bb 27> [0.31%]:
  # cstore_247 = PHI <1(25), 2(26)>
  # prephitmp_836 = PHI <0(25), 1(26)>
  _12->type = cstore_247;
  _84 = _14->sign;
  _85 = _13->sign;
  _86 = _84 ^ _85;
  _12->sign = _86;
  _87 = _14->exp;
  _88 = (unsigned short) _87;
  _89 = _13->exp;
  _90 = (unsigned short) _89;
  _91 = _88 + _90;
  _92 = (short int) _91;
  _12->exp = _92;
  _12->mantissa[0] = 0;
  _12->mantissa[1] = 0;
  _12->mantissa[2] = 0;
  _12->mantissa[3] = 0;
  locy__lsm.165_545 = MEM[(short unsigned int *)&locy + 4B];
  locy__lsm.167_558 = MEM[(short unsigned int *)&locy + 6B];
  locy__lsm.169_465 = MEM[(short unsigned int *)&locy + 8B];
  locy__lsm.171_483 = MEM[(short unsigned int *)&locy + 10B];
  goto <bb 46>; [100.00%]

  <bb 28> [6.80%]:
  _698 = _14->mantissa[3];
  _699 = _12->mantissa[3];
  accum_700 = (unsigned int) _699;
  _701 = (unsigned int) _698;
  accum_702 = accum_700 + _701;
  _705 = accum_702 >> 16;
  _706 = (short unsigned int) _705;
  _708 = _698 + _699;
  MEM[(short unsigned int *)_12].mantissa[3] = _708;
  _714 = _14->mantissa[2];
  _715 = _12->mantissa[2];
  accum_716 = (unsigned int) _715;
  _717 = (unsigned int) _714;
  accum_718 = accum_716 + _717;
  accum_720 = _705 + accum_718;
  _721 = accum_720 >> 16;
  _722 = (short unsigned int) _721;
  _724 = (short unsigned int) accum_720;
  MEM[(short unsigned int *)_12].mantissa[2] = _724;
  _730 = _14->mantissa[1];
  accum_732 = (unsigned int) prephitmp_893;
  _733 = (unsigned int) _730;
  accum_734 = accum_732 + _733;
  accum_736 = _721 + accum_734;
  _737 = accum_736 >> 16;
  _738 = (short unsigned int) _737;
  _740 = (short unsigned int) accum_736;
  MEM[(short unsigned int *)_12].mantissa[1] = _740;
  _746 = _14->mantissa[0];
  accum_748 = (unsigned int) prephitmp_76;
  _749 = (unsigned int) _746;
  accum_750 = accum_748 + _749;
  accum_752 = _737 + accum_750;
  _753 = accum_752 >> 16;
  _754 = (short unsigned int) _753;
  _756 = (short unsigned int) accum_752;
  MEM[(short unsigned int *)_12].mantissa[0] = _756;
  _650 = _756 & 1;
  accum_651 = _756 >> 1;
  if (_754 != 0)
    goto <bb 29>; [80.00%]
  else
    goto <bb 30>; [20.00%]

  <bb 29> [10.00%]:
  accum_652 = accum_651 | 32768;

  <bb 30> [20.00%]:
  # accum_653 = PHI <accum_651(28), accum_652(29), accum_570(53)>
  # _531 = PHI <_650(28), _650(29), _557(53)>
  # prephitmp_254 = PHI <_740(28), _740(29), prephitmp_893(53)>
  MEM[(short unsigned int *)_12 + 4B] = accum_653;
  _663 = prephitmp_254 & 1;
  accum_664 = prephitmp_254 >> 1;
  if (_531 != 0)
    goto <bb 31>; [50.00%]
  else
    goto <bb 32>; [50.00%]

  <bb 31> [10.00%]:
  accum_665 = accum_664 | 32768;

  <bb 32> [20.00%]:
  # accum_666 = PHI <accum_664(30), accum_665(31)>
  MEM[(short unsigned int *)_12 + 6B] = accum_666;
  accum_675 = MEM[(short unsigned int *)_12 + 8B];
  _676 = accum_675 & 1;
  accum_677 = accum_675 >> 1;
  if (_663 != 0)
    goto <bb 33>; [50.00%]
  else
    goto <bb 34>; [50.00%]

  <bb 33> [10.00%]:
  accum_678 = accum_677 | 32768;

  <bb 34> [20.00%]:
  # accum_679 = PHI <accum_677(32), accum_678(33)>
  MEM[(short unsigned int *)_12 + 8B] = accum_679;
  accum_688 = MEM[(short unsigned int *)_12 + 10B];
  _689 = accum_688 & 1;
  accum_690 = accum_688 >> 1;
  if (_676 != 0)
    goto <bb 35>; [50.00%]
  else
    goto <bb 36>; [50.00%]

  <bb 35> [10.00%]:
  accum_691 = accum_690 | 32768;

  <bb 36> [20.00%]:
  # accum_692 = PHI <accum_690(34), accum_691(35)>
  MEM[(short unsigned int *)_12 + 10B] = accum_692;
  _598 = extra_bits$0_22 & 1;
  accum_599 = extra_bits$0_22 >> 1;
  if (_689 != 0)
    goto <bb 37>; [50.00%]
  else
    goto <bb 38>; [50.00%]

  <bb 37> [10.00%]:
  accum_600 = accum_599 | 32768;

  <bb 38> [20.00%]:
  # accum_601 = PHI <accum_599(36), accum_600(37)>
  _611 = extra_bits$1_269 & 1;
  accum_612 = extra_bits$1_269 >> 1;
  if (_598 != 0)
    goto <bb 39>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 39> [10.00%]:
  accum_613 = accum_612 | 32768;

  <bb 40> [20.00%]:
  # accum_614 = PHI <accum_612(38), accum_613(39)>
  _624 = extra_bits$2_259 & 1;
  accum_625 = extra_bits$2_259 >> 1;
  if (_611 != 0)
    goto <bb 41>; [50.00%]
  else
    goto <bb 42>; [50.00%]

  <bb 41> [10.00%]:
  accum_626 = accum_625 | 32768;

  <bb 42> [20.00%]:
  # accum_627 = PHI <accum_625(40), accum_626(41)>
  accum_638 = extra_bits$3_898 >> 1;
  if (_624 != 0)
    goto <bb 43>; [50.00%]
  else
    goto <bb 44>; [50.00%]

  <bb 43> [10.00%]:
  accum_639 = accum_638 | 32768;

  <bb 44> [20.00%]:
  # accum_640 = PHI <accum_638(42), accum_639(43)>
  i_145 = i_319 + 1;
  if (i_145 != 64)
    goto <bb 46>; [98.44%]
  else
    goto <bb 45>; [1.56%]

  <bb 45> [0.31%]:
  MEM[(short unsigned int *)&locy + 4B] = accum_767;
  MEM[(short unsigned int *)&locy + 6B] = accum_782;
  MEM[(short unsigned int *)&locy + 8B] = accum_795;
  MEM[(short unsigned int *)&locy + 10B] = accum_808;
  _755 = (signed short) accum_653;
  if (_755 >= 0)
    goto <bb 62>; [85.00%]
  else
    goto <bb 70>; [15.00%]

  <bb 46> [20.00%]:
  # i_319 = PHI <i_145(44), 0(27)>
  # extra_bits$0_22 = PHI <accum_601(44), 0(27)>
  # extra_bits$1_269 = PHI <accum_614(44), 0(27)>
  # extra_bits$2_259 = PHI <accum_627(44), 0(27)>
  # extra_bits$3_898 = PHI <accum_640(44), 0(27)>
  # locy__lsm.165_623 = PHI <accum_767(44), locy__lsm.165_545(27)>
  # locy__lsm.167_46 = PHI <accum_782(44), locy__lsm.167_558(27)>
  # locy__lsm.169_636 = PHI <accum_795(44), locy__lsm.169_465(27)>
  # locy__lsm.171_409 = PHI <accum_808(44), locy__lsm.171_483(27)>
  # prephitmp_76 = PHI <accum_653(44), 0(27)>
  # prephitmp_893 = PHI <accum_666(44), 0(27)>
  _766 = locy__lsm.165_623 & 1;
  accum_767 = locy__lsm.165_623 >> 1;
  _779 = locy__lsm.167_46 & 1;
  accum_780 = locy__lsm.167_46 >> 1;
  if (_766 != 0)
    goto <bb 47>; [50.00%]
  else
    goto <bb 48>; [50.00%]

  <bb 47> [10.00%]:
  accum_781 = accum_780 | 32768;

  <bb 48> [20.00%]:
  # accum_782 = PHI <accum_780(46), accum_781(47)>
  _792 = locy__lsm.169_636 & 1;
  accum_793 = locy__lsm.169_636 >> 1;
  if (_779 != 0)
    goto <bb 49>; [50.00%]
  else
    goto <bb 50>; [50.00%]

  <bb 49> [10.00%]:
  accum_794 = accum_793 | 32768;

  <bb 50> [20.00%]:
  # accum_795 = PHI <accum_793(48), accum_794(49)>
  _805 = locy__lsm.171_409 & 1;
  accum_806 = locy__lsm.171_409 >> 1;
  if (_792 != 0)
    goto <bb 51>; [50.00%]
  else
    goto <bb 52>; [50.00%]

  <bb 51> [10.00%]:
  accum_807 = accum_806 | 32768;

  <bb 52> [20.00%]:
  # accum_808 = PHI <accum_806(50), accum_807(51)>
  if (_805 != 0)
    goto <bb 28>; [34.00%]
  else
    goto <bb 53>; [66.00%]

  <bb 53> [13.20%]:
  _557 = prephitmp_76 & 1;
  accum_570 = prephitmp_76 >> 1;
  goto <bb 30>; [100.00%]

  <bb 54> [0.89%]:
  accum_496 = accum_495 | 1;

  <bb 55> [1.77%]:
  # accum_497 = PHI <accum_495(68), accum_496(54)>
  accum_508 = D__lsm.159_56 << 1;
  _592 = (signed short) D__lsm.157_597;
  if (_592 < 0)
    goto <bb 56>; [50.00%]
  else
    goto <bb 57>; [50.00%]

  <bb 56> [0.89%]:
  accum_509 = accum_508 | 1;

  <bb 57> [1.77%]:
  # accum_510 = PHI <accum_508(55), accum_509(56)>
  accum_521 = D__lsm.161_610 << 1;
  _489 = (signed short) D__lsm.159_56;
  if (_489 < 0)
    goto <bb 58>; [50.00%]
  else
    goto <bb 59>; [50.00%]

  <bb 58> [0.89%]:
  accum_522 = accum_521 | 1;

  <bb 59> [1.77%]:
  # accum_523 = PHI <accum_521(57), accum_522(58)>
  accum_534 = _323 << 1;
  _488 = (signed short) D__lsm.161_610;
  if (_488 < 0)
    goto <bb 60>; [50.00%]
  else
    goto <bb 61>; [50.00%]

  <bb 60> [0.89%]:
  accum_535 = accum_534 | 1;

  <bb 61> [1.78%]:
  # accum_536 = PHI <accum_534(59), accum_535(60)>
  MEM[(short unsigned int *)_12 + 4B] = accum_536;
  _170 = (unsigned short) D__exp_lsm.163_50;
  _171 = _170 + 65535;
  _172 = (short int) _171;
  _174 = (signed short) accum_536;
  if (_174 >= 0)
    goto <bb 62>; [85.00%]
  else
    goto <bb 69>; [15.00%]

  <bb 62> [1.78%]:
  # _323 = PHI <accum_536(61), accum_653(45)>
  # extra_bits$0_20 = PHI <accum_588(61), accum_601(45)>
  # extra_bits$1_541 = PHI <accum_575(61), accum_614(45)>
  # extra_bits$2_697 = PHI <accum_562(61), accum_627(45)>
  # extra_bits$3_899 = PHI <accum_547(61), accum_640(45)>
  # D__lsm.157_597 = PHI <accum_497(61), accum_692(45)>
  # D__lsm.159_56 = PHI <accum_510(61), accum_679(45)>
  # D__lsm.161_610 = PHI <accum_523(61), accum_666(45)>
  # D__exp_lsm.163_50 = PHI <_172(61), _92(45)>
  accum_547 = extra_bits$3_899 << 1;
  accum_560 = extra_bits$2_697 << 1;
  _728 = (signed short) extra_bits$3_899;
  if (_728 < 0)
    goto <bb 63>; [50.00%]
  else
    goto <bb 64>; [50.00%]

  <bb 63> [0.89%]:
  accum_561 = accum_560 | 1;

  <bb 64> [1.78%]:
  # accum_562 = PHI <accum_560(62), accum_561(63)>
  accum_573 = extra_bits$1_541 << 1;
  _713 = (signed short) extra_bits$2_697;
  if (_713 < 0)
    goto <bb 65>; [50.00%]
  else
    goto <bb 66>; [50.00%]

  <bb 65> [0.89%]:
  accum_574 = accum_573 | 1;

  <bb 66> [1.78%]:
  # accum_575 = PHI <accum_573(64), accum_574(65)>
  accum_586 = extra_bits$0_20 << 1;
  _712 = (signed short) extra_bits$1_541;
  if (_712 < 0)
    goto <bb 67>; [50.00%]
  else
    goto <bb 68>; [50.00%]

  <bb 67> [0.89%]:
  accum_587 = accum_586 | 1;

  <bb 68> [1.78%]:
  # accum_588 = PHI <accum_586(66), accum_587(67)>
  accum_495 = D__lsm.157_597 << 1;
  _593 = (signed short) extra_bits$0_20;
  if (_593 < 0)
    goto <bb 54>; [50.00%]
  else
    goto <bb 55>; [50.00%]

  <bb 69> [0.27%]:
  MEM[(short unsigned int *)_12 + 10B] = accum_497;
  MEM[(short unsigned int *)_12 + 8B] = accum_510;
  MEM[(short unsigned int *)_12 + 6B] = accum_523;
  _12->exp = _172;

  <bb 70> [0.31%]:
  # extra_bits$0_262 = PHI <accum_588(69), accum_601(45)>
  # extra_bits$1_854 = PHI <accum_575(69), accum_614(45)>
  # extra_bits$2_889 = PHI <accum_562(69), accum_627(45)>
  # extra_bits$3_907 = PHI <accum_547(69), accum_640(45)>
  _745 = extra_bits$0_262 | extra_bits$1_854;
  _744 = _745 | extra_bits$2_889;
  _729 = _744 | extra_bits$3_907;
  if (_729 == 0)
    goto <bb 71>; [50.00%]
  else
    goto <bb 75> (<L20>); [50.00%]

  <bb 71> [0.16%]:
  _185 = _12->mantissa[3];
  _186 = _185 | 1;
  _12->mantissa[3] = _186;
  goto <bb 75> (<L20>); [100.00%]

  <bb 72> [0.05%]:
  __builtin_memmove (_14, _12, 12);
  pretmp_549 = _12->type;
  _140 = pretmp_549 + 255;
  goto <bb 75> (<L20>); [100.00%]

  <bb 73> [0.04%]:
  __builtin_memmove (_13, _12, 12);
  pretmp_184 = _12->type;
  _258 = pretmp_184 + 255;
  goto <bb 75> (<L20>); [100.00%]

  <bb 74> [0.23%]:
  __builtin_memmove (_14, _12, 12);
  pretmp_470 = _12->type;
  _670 = pretmp_470 + 255;

  # prephitmp_914 = PHI <pretmp_764(7), pretmp_532(16), pretmp_244(17), pretmp_470(74), pretmp_479(19), pretmp_181(20), cstore_247(70), cstore_247(71), pretmp_184(73), pretmp_549(72)>
  # prephitmp_632 = PHI <_684(7), _683(16), _671(17), _670(74), _658(19), _657(20), prephitmp_836(70), prephitmp_836(71), _258(73), _140(72)>
<L20> [2.19%]:
  if (prephitmp_632 <= 1)
    goto <bb 77>; [28.01%]
  else
    goto <bb 76>; [71.99%]

  <bb 76> [1.86%]:
  goto <bb 91>; [100.00%]

  <bb 77> [0.61%]:
  _408 = MEM[(short unsigned int *)_12 + 4B];
  _417 = MEM[(short unsigned int *)_12 + 6B];
  _190 = _408 | _417;
  _426 = MEM[(short unsigned int *)_12 + 8B];
  _554 = _190 | _426;
  _435 = MEM[(short unsigned int *)_12 + 10B];
  _553 = _435 | _554;
  if (_553 == 0)
    goto <bb 78>; [33.00%]
  else
    goto <bb 99>; [67.00%]

  <bb 78> [0.20%]:
  __builtin_puts (&"Error:  zero significand in denormalize"[0]);
  pretmp_222 = _12->type;
  goto <bb 99>; [100.00%]

  <bb 79> [0.08%]:
  _221 = (unsigned short) _365;
  _223 = _221 + 1;
  _224 = (short int) _223;
  _12->exp = _224;
  if (prephitmp_225 != 0)
    goto <bb 81>; [54.00%]
  else
    goto <bb 76>; [46.00%]

  <bb 80> [0.06%]:
  _246 = accum_400 | 1;
  MEM[(short unsigned int *)_12 + 10B] = _246;
  goto <bb 100>; [100.00%]

  <bb 81> [0.13%]:
  accum_357 = MEM[(short unsigned int *)_12 + 4B];
  _358 = accum_357 & 1;
  accum_359 = accum_357 >> 1;
  MEM[(short unsigned int *)_12 + 4B] = accum_359;
  accum_370 = MEM[(short unsigned int *)_12 + 6B];
  _371 = accum_370 & 1;
  accum_372 = accum_370 >> 1;
  if (_358 != 0)
    goto <bb 82>; [50.00%]
  else
    goto <bb 83>; [50.00%]

  <bb 82> [0.06%]:
  accum_373 = accum_372 | 32768;

  <bb 83> [0.13%]:
  # accum_374 = PHI <accum_372(81), accum_373(82)>
  MEM[(short unsigned int *)_12 + 6B] = accum_374;
  accum_383 = MEM[(short unsigned int *)_12 + 8B];
  _384 = accum_383 & 1;
  accum_385 = accum_383 >> 1;
  if (_371 != 0)
    goto <bb 84>; [50.00%]
  else
    goto <bb 85>; [50.00%]

  <bb 84> [0.06%]:
  accum_386 = accum_385 | 32768;

  <bb 85> [0.12%]:
  # accum_387 = PHI <accum_385(83), accum_386(84)>
  MEM[(short unsigned int *)_12 + 8B] = accum_387;
  accum_396 = MEM[(short unsigned int *)_12 + 10B];
  _397 = accum_396 & 1;
  accum_398 = accum_396 >> 1;
  if (_384 != 0)
    goto <bb 86>; [50.00%]
  else
    goto <bb 87>; [50.00%]

  <bb 86> [0.06%]:
  accum_399 = accum_398 | 32768;

  <bb 87> [0.13%]:
  # accum_400 = PHI <accum_398(85), accum_399(86)>
  MEM[(short unsigned int *)_12 + 10B] = accum_400;
  if (_397 != 0)
    goto <bb 80>; [50.00%]
  else
    goto <bb 100>; [50.00%]

  <bb 88> [0.44%]:
  if (prephitmp_225 != 0)
    goto <bb 89>; [45.52%]
  else
    goto <bb 76>; [54.48%]

  <bb 89> [0.20%]:
  pretmp_631 = MEM[(short unsigned int *)_12 + 10B];

  <bb 90> [0.33%]:
  # prephitmp_619 = PHI <pretmp_631(89), prephitmp_250(100)>
  _202 = prephitmp_619 & 65528;
  _12->mantissa[3] = _202;

  <bb 91> [2.50%]:
  extra_bits ={v} {CLOBBER};
  locy ={v} {CLOBBER};
  goto <bb 93> (<L6>); [100.00%]

<L5> [2.50%]:
  _15 = i_281 * 12;
  _16 = cbase_32(D) + _15;
  _17 = bbase_33(D) + _15;
  _18 = abase_34(D) + _15;
  DivideInternalFPF (_18, _17, _16);

<L6> [12.51%]:
  i_39 = i_281 + 1;
  if (arraysize_31(D) > i_39)
    goto <bb 94>; [85.00%]
  else
    goto <bb 95>; [15.00%]

  <bb 94> [10.63%]:
  _58 = i_39 & 15;
  pretmp_407 = jtable[_58];
  goto <bb 3>; [100.00%]

  <bb 95> [2.21%]:

  <bb 96> [2.60%]:
  # loops_19 = PHI <loops_27(D)(2), loops_28(95)>
  loops_28 = loops_19 + 18446744073709551615;
  if (loops_19 != 0)
    goto <bb 97>; [85.00%]
  else
    goto <bb 98>; [15.00%]

  <bb 97> [2.21%]:
  if (arraysize_31(D) != 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 95>; [15.00%]

  <bb 98> [0.39%]:
  _30 = StopStopwatch (elapsed_26);
  return _30;

  <bb 99> [0.61%]:
  # prephitmp_225 = PHI <pretmp_222(78), prephitmp_914(77)>
  _365 = _12->exp;
  _361 = (int) _365;
  _266 = _361 + 32767;
  exponent_difference_345 = (long int) _266;
  if (_365 == -32768)
    goto <bb 79>; [13.01%]
  else
    goto <bb 88>; [86.99%]

  <bb 100> [0.13%]:
  # prephitmp_250 = PHI <accum_400(87), _246(80)>
  goto <bb 90>; [100.00%]

}



;; Function RoundInternalFPF (RoundInternalFPF, funcdef_no=47, decl_uid=2809, cgraph_uid=47, symbol_order=47)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ptr = &NONLOCAL
_1 = *ptr
_2 = _1
_2 = &NONLOCAL
_10 = ptr + UNKNOWN
i_51 = i_19
i_51 = &NULL
n_124 = n_18
n_124 = &NULL
_12 = i_51
_13 = _12
_13 = &NONLOCAL
_14 = _10 + UNKNOWN
_15 = *_14
_16 = _15
n_18 = _16
n_18 = n_124
i_19 = i_51
i_19 = &NONLOCAL
ESCAPED = &STRING
_28 = _101
_30 = _28
_30 = &NONLOCAL
_31 = _30
*ptr + 16 = _31
_34 = *ptr
_53 = accum_158
_53 = &NONLOCAL
*ptr + 80 = _53
accum_115 = *ptr + 32
_116 = accum_115 + UNKNOWN
accum_117 = accum_115
accum_117 = &NONLOCAL
*ptr + 32 = accum_117
accum_128 = *ptr + 48
_129 = accum_128 + UNKNOWN
accum_130 = accum_128
accum_130 = &NONLOCAL
accum_131 = accum_130
accum_131 = &NONLOCAL
accum_132 = accum_130
accum_132 = accum_131
*ptr + 48 = accum_132
accum_141 = *ptr + 64
_142 = accum_141 + UNKNOWN
accum_143 = accum_141
accum_143 = &NONLOCAL
accum_144 = accum_143
accum_144 = &NONLOCAL
accum_145 = accum_143
accum_145 = accum_144
*ptr + 64 = accum_145
accum_154 = *ptr + 80
_155 = accum_154 + UNKNOWN
accum_156 = accum_154
accum_156 = &NONLOCAL
accum_157 = accum_156
accum_157 = &NONLOCAL
accum_158 = accum_156
accum_158 = accum_157
*ptr + 80 = accum_158
_7 = *ptr
_8 = *ptr + 80
_9 = _8 + UNKNOWN
*ptr + 80 = _9
_101 = *ptr + 16
_104 = _101
_105 = _104
_105 = &NONLOCAL
exponent_difference_108 = _105

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"ptr"[label="ptr = { 5 }"];
"_1";
"_2"[label="_2 = { 5 }"];
"_10";
"i_51"[label="i_51 = { 1 5 }"];
"n_124"[label="n_124 = { 1 }"];
"_12";
"_13"[label="_13 = { 5 }"];
"_14";
"_15";
"_16";
"puts";
"_28";
"_101";
"_30"[label="_30 = { 5 }"];
"_31";
"_34";
"_53"[label="_53 = { 5 }"];
"accum_158";
"accum_115";
"_116";
"accum_117"[label="accum_117 = { 5 }"];
"accum_128";
"_129";
"accum_130"[label="accum_130 = { 5 }"];
"accum_131"[label="accum_131 = { 5 }"];
"accum_132";
"accum_141";
"_142";
"accum_143"[label="accum_143 = { 5 }"];
"accum_144"[label="accum_144 = { 5 }"];
"accum_145";
"accum_154";
"_155";
"accum_156"[label="accum_156 = { 5 }"];
"accum_157"[label="accum_157 = { 5 }"];
"_7";
"_8";
"_9";
"_104";
"_105"[label="_105 = { 5 }"];
"exponent_difference_108";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*ptr";
"*_1";
"*_2";
"*_10";
"*i_51";
"*i_19";
"*n_124";
"*n_18";
"*_12";
"*_13";
"*_14";
"*_15";
"*_16";
"*puts";
"*_28";
"*_101";
"*_30";
"*_31";
"*_34";
"*_53";
"*accum_158";
"*accum_115";
"*_116";
"*accum_117";
"*accum_128";
"*_129";
"*accum_130";
"*accum_131";
"*accum_132";
"*accum_141";
"*_142";
"*accum_143";
"*accum_144";
"*accum_145";
"*accum_154";
"*_155";
"*accum_156";
"*accum_157";
"*_7";
"*_8";
"*_9";
"*_104";
"*_105";
"*exponent_difference_108";

  // Edges in the constraint graph:
"*ESCAPED" -> "ESCAPED";
"*ptr" -> "_1";
"_1" -> "_2";
"i_51" -> "i_51";
"i_51" -> "i_51";
"n_124" -> "n_124";
"n_124" -> "n_124";
"_16" -> "n_124";
"i_51" -> "_12";
"_12" -> "_13";
"*_14" -> "_15";
"_15" -> "_16";
"_101" -> "_28";
"_28" -> "_30";
"_30" -> "_31";
"*ptr" -> "_34";
"accum_158" -> "_53";
"accum_156" -> "accum_158";
"accum_157" -> "accum_158";
"accum_115" -> "accum_117";
"accum_128" -> "accum_130";
"accum_130" -> "accum_131";
"accum_130" -> "accum_132";
"accum_131" -> "accum_132";
"accum_141" -> "accum_143";
"accum_143" -> "accum_144";
"accum_143" -> "accum_145";
"accum_144" -> "accum_145";
"accum_154" -> "accum_156";
"accum_156" -> "accum_157";
"*ptr" -> "_7";
"_101" -> "_104";
"_104" -> "_105";
"_105" -> "exponent_difference_108";
"NONLOCAL" -> "*ESCAPED";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"ptr" [label="\N\n_1 = *ptr\l_10 = ptr + UNKNOWN\l_28 = *ptr + 16\laccum_115 = *ptr + 32\laccum_128 = *ptr + 48\laccum_141 = *ptr + 64\laccum_154 = *ptr + 80\l_8 = *ptr + 80\l*ptr + 16 = _30\l*ptr + 32 = accum_117\l*ptr + 48 = accum_130\l*ptr + 64 = accum_143\l*ptr + 80 = _53\l*ptr + 80 = _9\l"];
"_1";
"_2";
"_10" [label="\N\n_14 = _10 + UNKNOWN\l"];
"i_51";
"n_124";
"_14" [label="\N\n_15 = *_14\l"];
"_15";
"puts";
"_28";
"_30";
"_53";
"accum_115" [label="\N\n_116 = accum_115 + UNKNOWN\l"];
"_116";
"accum_117";
"accum_128" [label="\N\n_129 = accum_128 + UNKNOWN\l"];
"_129";
"accum_130";
"accum_141" [label="\N\n_142 = accum_141 + UNKNOWN\l"];
"_142";
"accum_143";
"accum_154" [label="\N\n_155 = accum_154 + UNKNOWN\l"];
"_155";
"_8" [label="\N\n_9 = _8 + UNKNOWN\l"];
"_9";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_28";
"STOREDANYTHING" -> "accum_115";
"STOREDANYTHING" -> "_116";
"STOREDANYTHING" -> "accum_128";
"STOREDANYTHING" -> "_129";
"STOREDANYTHING" -> "accum_141";
"STOREDANYTHING" -> "_142";
"STOREDANYTHING" -> "accum_154";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"_1" -> "_2";
"_15" -> "n_124";
"_28" -> "_30";
"accum_115" -> "accum_117";
"accum_128" -> "accum_130";
"accum_141" -> "accum_143";
"accum_154" -> "_53";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"ptr" [label="\N\n_1 = *ptr\l_10 = ptr + UNKNOWN\l_28 = *ptr + 16\laccum_115 = *ptr + 32\laccum_128 = *ptr + 48\laccum_141 = *ptr + 64\laccum_154 = *ptr + 80\l_8 = *ptr + 80\l*ptr + 16 = _30\l*ptr + 32 = accum_117\l*ptr + 48 = accum_130\l*ptr + 64 = accum_143\l*ptr + 80 = _53\l*ptr + 80 = _9\l"];
"_1";
"_2";
"_10" [label="\N\n_14 = _10 + UNKNOWN\l"];
"i_51";
"n_124";
"_14" [label="\N\n_15 = *_14\l"];
"_15";
"puts";
"_28";
"_30";
"_53";
"accum_115" [label="\N\n_116 = accum_115 + UNKNOWN\l"];
"_116";
"accum_117";
"accum_128" [label="\N\n_129 = accum_128 + UNKNOWN\l"];
"_129";
"accum_130";
"accum_141" [label="\N\n_142 = accum_141 + UNKNOWN\l"];
"_142";
"accum_143";
"accum_154" [label="\N\n_155 = accum_154 + UNKNOWN\l"];
"_155";
"_8" [label="\N\n_9 = _8 + UNKNOWN\l"];
"_9";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_28";
"STOREDANYTHING" -> "accum_115";
"STOREDANYTHING" -> "_116";
"STOREDANYTHING" -> "accum_128";
"STOREDANYTHING" -> "_129";
"STOREDANYTHING" -> "accum_141";
"STOREDANYTHING" -> "_142";
"STOREDANYTHING" -> "accum_154";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"_1" -> "_2";
"_15" -> "n_124";
"_28" -> "_30";
"_30" -> "ESCAPED";
"_53" -> "ESCAPED";
"accum_115" -> "accum_117";
"accum_117" -> "ESCAPED";
"accum_128" -> "accum_130";
"accum_130" -> "ESCAPED";
"accum_141" -> "accum_143";
"accum_143" -> "ESCAPED";
"accum_154" -> "_53";
"_9" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
ptr = { NONLOCAL }
_1 = { ESCAPED NONLOCAL }
_2 = { ESCAPED NONLOCAL }
_10 = { NONLOCAL }
i_51 = { NULL NONLOCAL }
i_19 = { NULL NONLOCAL } same as i_51
n_124 = { NULL ESCAPED NONLOCAL }
n_18 = { NULL ESCAPED NONLOCAL } same as n_124
_12 = { NULL NONLOCAL } same as i_51
_13 = { NULL NONLOCAL } same as i_51
_14 = { NONLOCAL }
_15 = { ESCAPED NONLOCAL }
_16 = { ESCAPED NONLOCAL } same as _15
puts = { }
_28 = { ESCAPED NONLOCAL }
_101 = { ESCAPED NONLOCAL } same as _28
_30 = { ESCAPED NONLOCAL }
_31 = { ESCAPED NONLOCAL } same as _30
_34 = { ESCAPED NONLOCAL } same as _1
_53 = { ESCAPED NONLOCAL }
accum_158 = { ESCAPED NONLOCAL } same as _53
accum_115 = { ESCAPED NONLOCAL }
_116 = { ESCAPED NONLOCAL }
accum_117 = { ESCAPED NONLOCAL }
accum_128 = { ESCAPED NONLOCAL }
_129 = { ESCAPED NONLOCAL }
accum_130 = { ESCAPED NONLOCAL }
accum_131 = { ESCAPED NONLOCAL } same as accum_130
accum_132 = { ESCAPED NONLOCAL } same as accum_130
accum_141 = { ESCAPED NONLOCAL }
_142 = { ESCAPED NONLOCAL }
accum_143 = { ESCAPED NONLOCAL }
accum_144 = { ESCAPED NONLOCAL } same as accum_143
accum_145 = { ESCAPED NONLOCAL } same as accum_143
accum_154 = { ESCAPED NONLOCAL }
_155 = { ESCAPED NONLOCAL }
accum_156 = { ESCAPED NONLOCAL } same as _53
accum_157 = { ESCAPED NONLOCAL } same as _53
_7 = { ESCAPED NONLOCAL } same as _1
_8 = { ESCAPED NONLOCAL }
_9 = { ESCAPED NONLOCAL }
_104 = { ESCAPED NONLOCAL } same as _28
_105 = { ESCAPED NONLOCAL } same as _30
exponent_difference_108 = { ESCAPED NONLOCAL } same as _30


Alias information for RoundInternalFPF

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { }

Flow-insensitive points-to information

ptr_4(D), points-to non-local, points-to NULL, points-to vars: { }
_10, points-to non-local, points-to vars: { }
_14, points-to non-local, points-to NULL, points-to vars: { }

;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 22 3 4 21 5 6 7 24 8 9 25 10 11 26 12 13 27 14 15 16 30 29 17 18 23 19 28 20
;;
;; Loop 2
;;  header 4, latch 21
;;  depth 1, outer 0
;;  nodes: 4 21
;; 2 succs { 3 22 }
;; 22 succs { 18 }
;; 3 succs { 4 }
;; 4 succs { 21 5 }
;; 21 succs { 4 }
;; 5 succs { 6 23 }
;; 6 succs { 19 }
;; 7 succs { 9 24 }
;; 24 succs { 18 }
;; 8 succs { 20 }
;; 9 succs { 10 25 }
;; 25 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 26 }
;; 26 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 27 }
;; 27 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 8 28 }
;; 16 succs { 29 30 }
;; 30 succs { 18 }
;; 29 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 23 succs { 19 }
;; 19 succs { 7 16 }
;; 28 succs { 20 }
;; 20 succs { 17 }
find_duplicates: <bb 22> duplicate of <bb 24>
find_duplicates: <bb 22> duplicate of <bb 30>
Removing basic block 24
Removing basic block 30

Symbols to be put in SSA form
{ D.3268 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 31
Number of blocks to update: 28 ( 90%)


Removing basic block 21
Removing basic block 23
Removing basic block 25
Removing basic block 26
Removing basic block 27
Removing basic block 28
RoundInternalFPF (struct InternalFPF * ptr)
{
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  int n;
  long int exponent_difference;
  unsigned char _1;
  unsigned char _2;
  short unsigned int _9;
  short unsigned int[4] * _10;
  long unsigned int _12;
  long unsigned int _13;
  short unsigned int * _14;
  short unsigned int _15;
  int _16;
  unsigned short _28;
  unsigned short _30;
  short int _31;
  short unsigned int prephitmp_52;
  short unsigned int _53;
  unsigned char prephitmp_67;
  short unsigned int prephitmp_90;
  short unsigned int pretmp_94;
  short int _101;
  int _104;
  int _105;
  unsigned char pretmp_107;
  short unsigned int _116;
  short unsigned int _129;
  short unsigned int _142;
  short unsigned int _155;

  <bb 2> [81.50%]:
  _1 = ptr_4(D)->type;
  _2 = _1 + 255;
  if (_2 <= 1)
    goto <bb 4>; [24.54%]
  else
    goto <bb 3>; [75.46%]

  <bb 3> [70.70%]:
  goto <bb 20>; [100.00%]

  <bb 4> [20.00%]:
  _10 = &ptr_4(D)->mantissa;

  <bb 5> [80.00%]:
  # i_51 = PHI <i_19(5), 0(4)>
  # n_124 = PHI <n_18(5), 0(4)>
  _12 = (long unsigned int) i_51;
  _13 = _12 * 2;
  _14 = _10 + _13;
  _15 = *_14;
  _16 = (int) _15;
  n_18 = _16 | n_124;
  i_19 = i_51 + 1;
  if (i_19 != 4)
    goto <bb 5>; [75.00%]
  else
    goto <bb 6>; [25.00%]

  <bb 6> [20.00%]:
  if (n_18 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 21>; [67.00%]

  <bb 7> [6.60%]:
  __builtin_puts (&"Error:  zero significand in denormalize"[0]);
  pretmp_107 = ptr_4(D)->type;
  goto <bb 21>; [100.00%]

  <bb 8> [2.62%]:
  _28 = (unsigned short) _101;
  _30 = _28 + 1;
  _31 = (short int) _30;
  ptr_4(D)->exp = _31;
  if (prephitmp_67 != 0)
    goto <bb 10>; [54.00%]
  else
    goto <bb 3>; [46.00%]

  <bb 9> [2.01%]:
  _53 = accum_158 | 1;
  MEM[(short unsigned int *)ptr_4(D) + 10B] = _53;
  goto <bb 22>; [100.00%]

  <bb 10> [4.02%]:
  accum_115 = MEM[(short unsigned int *)ptr_4(D) + 4B];
  _116 = accum_115 & 1;
  accum_117 = accum_115 >> 1;
  MEM[(short unsigned int *)ptr_4(D) + 4B] = accum_117;
  accum_128 = MEM[(short unsigned int *)ptr_4(D) + 6B];
  _129 = accum_128 & 1;
  accum_130 = accum_128 >> 1;
  if (_116 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [2.01%]:
  accum_131 = accum_130 | 32768;

  <bb 12> [4.02%]:
  # accum_132 = PHI <accum_130(10), accum_131(11)>
  MEM[(short unsigned int *)ptr_4(D) + 6B] = accum_132;
  accum_141 = MEM[(short unsigned int *)ptr_4(D) + 8B];
  _142 = accum_141 & 1;
  accum_143 = accum_141 >> 1;
  if (_129 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [2.01%]:
  accum_144 = accum_143 | 32768;

  <bb 14> [4.02%]:
  # accum_145 = PHI <accum_143(12), accum_144(13)>
  MEM[(short unsigned int *)ptr_4(D) + 8B] = accum_145;
  accum_154 = MEM[(short unsigned int *)ptr_4(D) + 10B];
  _155 = accum_154 & 1;
  accum_156 = accum_154 >> 1;
  if (_142 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [2.01%]:
  accum_157 = accum_156 | 32768;

  <bb 16> [4.02%]:
  # accum_158 = PHI <accum_156(14), accum_157(15)>
  MEM[(short unsigned int *)ptr_4(D) + 10B] = accum_158;
  if (_155 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 17> [14.77%]:
  if (prephitmp_67 != 0)
    goto <bb 18>; [45.88%]
  else
    goto <bb 3>; [54.12%]

  <bb 18> [6.78%]:
  pretmp_94 = MEM[(short unsigned int *)ptr_4(D) + 10B];

  <bb 19> [10.80%]:
  # prephitmp_52 = PHI <pretmp_94(18), prephitmp_90(22)>
  _9 = prephitmp_52 & 65528;
  ptr_4(D)->mantissa[3] = _9;

  <bb 20> [81.50%]:
  return;

  <bb 21> [20.00%]:
  # prephitmp_67 = PHI <pretmp_107(7), _1(6)>
  _101 = ptr_4(D)->exp;
  _104 = (int) _101;
  _105 = _104 + 32767;
  exponent_difference_108 = (long int) _105;
  if (_101 == -32768)
    goto <bb 8>; [13.12%]
  else
    goto <bb 17>; [86.88%]

  <bb 22> [4.02%]:
  # prephitmp_90 = PHI <accum_158(16), _53(9)>
  goto <bb 19>; [100.00%]

}


