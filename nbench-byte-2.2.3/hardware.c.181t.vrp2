
;; Function hardware (hardware, funcdef_no=56, decl_uid=3373, cgraph_uid=56, symbol_order=56)

;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 94 11 12 13 14 15 16 17 95 18 19 20 21 22 23 24 25 26 27 28 29 30 96 31 32 33 34 35 36 37 38 39 40 41 42 43 97 44 45 46 47 48 49 50 51 52 53 54 55 56 98 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
;;
;; Loop 1
;;  header 66, latch 65
;;  depth 1, outer 0
;;  nodes: 66 65 23 12 25 36 38 49 51 52 62 64 24 37 50 63 58 93 53 56 55 60 61 59 54 57 98 39 26 13 11 45 92 40 43 42 47 48 46 41 44 97 32 91 27 30 29 34 35 33 28 31 96 19 90 14 17 22 21 16 15 20 18 95
;;
;; Loop 2
;;  header 19, latch 18
;;  depth 2, outer 1
;;  nodes: 19 18 21 20
;;
;; Loop 3
;;  header 32, latch 31
;;  depth 2, outer 1
;;  nodes: 32 31 34 33
;;
;; Loop 4
;;  header 45, latch 44
;;  depth 2, outer 1
;;  nodes: 45 44 47 46
;;
;; Loop 5
;;  header 58, latch 57
;;  depth 2, outer 1
;;  nodes: 58 57 60 59
;; 2 succs { 3 4 }
;; 3 succs { 9 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 85 }
;; 10 succs { 94 84 }
;; 94 succs { 66 }
;; 11 succs { 12 13 }
;; 12 succs { 65 }
;; 13 succs { 14 26 }
;; 14 succs { 15 23 }
;; 15 succs { 17 16 }
;; 16 succs { 90 }
;; 17 succs { 95 90 }
;; 95 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 23 }
;; 20 succs { 21 22 }
;; 21 succs { 18 90 }
;; 22 succs { 90 }
;; 23 succs { 24 65 }
;; 24 succs { 25 65 }
;; 25 succs { 65 }
;; 26 succs { 27 39 }
;; 27 succs { 28 36 }
;; 28 succs { 30 29 }
;; 29 succs { 91 }
;; 30 succs { 96 91 }
;; 96 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 36 }
;; 33 succs { 34 35 }
;; 34 succs { 31 91 }
;; 35 succs { 91 }
;; 36 succs { 37 65 }
;; 37 succs { 38 65 }
;; 38 succs { 65 }
;; 39 succs { 40 52 }
;; 40 succs { 41 49 }
;; 41 succs { 43 42 }
;; 42 succs { 92 }
;; 43 succs { 97 92 }
;; 97 succs { 45 }
;; 44 succs { 45 }
;; 45 succs { 46 49 }
;; 46 succs { 47 48 }
;; 47 succs { 44 92 }
;; 48 succs { 92 }
;; 49 succs { 50 65 }
;; 50 succs { 51 65 }
;; 51 succs { 65 }
;; 52 succs { 53 65 }
;; 53 succs { 54 62 }
;; 54 succs { 56 55 }
;; 55 succs { 93 }
;; 56 succs { 98 93 }
;; 98 succs { 58 }
;; 57 succs { 58 }
;; 58 succs { 59 62 }
;; 59 succs { 60 61 }
;; 60 succs { 57 93 }
;; 61 succs { 93 }
;; 62 succs { 63 65 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 66 }
;; 66 succs { 11 67 }
;; 67 succs { 68 71 }
;; 68 succs { 69 70 }
;; 69 succs { 71 }
;; 70 succs { 71 }
;; 71 succs { 72 75 }
;; 72 succs { 73 74 }
;; 73 succs { 74 }
;; 74 succs { 75 }
;; 75 succs { 76 79 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 79 }
;; 79 succs { 80 83 }
;; 80 succs { 81 82 }
;; 81 succs { 82 }
;; 82 succs { 83 }
;; 83 succs { 84 }
;; 84 succs { 86 }
;; 85 succs { 86 }
;; 86 succs { 87 89 }
;; 87 succs { 88 }
;; 88 succs { 1 }
;; 89 succs { 88 }
;; 90 succs { 23 }
;; 91 succs { 36 }
;; 92 succs { 49 }
;; 93 succs { 62 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

cp_192 -> { cp_40 }
cpus_204 -> { cpus_36 }
cp_253 -> { cp_49 }
cp_262 -> { cp_67 }
cp_271 -> { cp_58 }
Incremental SSA update started at block: 66
Number of blocks in CFG: 99
Number of blocks to update: 43 ( 43%)



SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

cpus_8 -> { cpus_204 }
cp_20 -> { cp_88 }
_21 -> { _118 }
cp_26 -> { cp_83 }
_43 -> { _114 }
cp_45 -> { cp_80 }
_51 -> { _110 }
cp_52 -> { cp_80 }
_54 -> { _106 }
cp_57 -> { cp_80 }
cp_60 -> { cp_95 }
cp_63 -> { cp_67 }
cp_69 -> { cp_67 }
info_70 -> { info_32 }
cp_72 -> { cp_90 }
_77 -> { _30 }
cp_84 -> { cp_88 }
_91 -> { _66 }
cp_122 -> { cp_58 }
buffer_end_139 -> { buffer_end_34 }
cp_142 -> { cp_58 }
cp_180 -> { cp_49 }
_184 -> { _246 }
_186 -> { _190 }
cp_188 -> { cp_49 }
_191 -> { _210 }
cp_194 -> { cp_40 }
_197 -> { _255 }
pipe_198 -> { pipe_22 }
cp_200 -> { cp_40 }
_203 -> { _196 }
buffer_end_206 -> { buffer_end_34 }
cpus_213 -> { cpus_204 }
global_ofile_214 -> { global_ofile_10(D) }
buffer_end_219 -> { buffer_end_34 }
cp_220 -> { cp_88 }
buffer_end_221 -> { buffer_end_34 }
_233 -> { _202 }
_248 -> { _264 }
Incremental SSA update started at block: 2
Number of blocks in CFG: 101
Number of blocks to update: 71 ( 70%)



Value ranges after VRP:

_1: VARYING
.MEM_2: VARYING
_5: [1, 288230380446679552]
cpus_8: [3, +INF]  EQUIVALENCES: { cpus_204 cpus_213 } (2 elements)
write_to_file_9(D): VARYING
global_ofile_10(D): VARYING
_11: [0, 1]
_13: [1, 288230380446679552]
cp_20: ~[&model, &model]  EQUIVALENCES: { cp_88 } (1 elements)
_21: ~[0B, 0B]  EQUIVALENCES: { _118 } (1 elements)
pipe_22: VARYING
cp_23: ~[0B, 0B]  EQUIVALENCES: { cp_58 cp_142 } (2 elements)
_24: VARYING
_25: VARYING
cp_26: ~[0B, 0B]  EQUIVALENCES: { cp_83 } (1 elements)
_27: VARYING
_28: [0, 9223372036854775806]
_29: ~[9223372036854775806, 18446744073709551614]
_30: VARYING
_31: VARYING
info_32: VARYING
_33: [0, 9223372036854775806]
buffer_end_34: VARYING
_35: VARYING
cpus_36: [0, +INF(OVF)]
cpus_37: [1, +INF(OVF)]
_38: VARYING
cp_39: ~[0B, 0B]
cp_40: VARYING
_41: VARYING
cp_42: ~[0B, 0B]  EQUIVALENCES: { cp_49 cp_188 } (2 elements)
_43: ~[0B, 0B]  EQUIVALENCES: { _114 } (1 elements)
cp_45: ~[0B, 0B]  EQUIVALENCES: { cp_57 cp_80 } (2 elements)
_46: VARYING
_47: VARYING
cp_48: ~[0B, 0B]
cp_49: VARYING
_50: VARYING
_51: ~[0B, 0B]  EQUIVALENCES: { _110 } (1 elements)
cp_52: [&model, &model]  EQUIVALENCES: { cp_80 } (1 elements)
_54: ~[0B, 0B]  EQUIVALENCES: { _106 } (1 elements)
_55: VARYING
_56: VARYING
cp_57: ~[&model, &model]  EQUIVALENCES: { cp_80 } (1 elements)
cp_58: VARYING
_59: VARYING
cp_60: ~[&model, &model]  EQUIVALENCES: { cp_95 } (1 elements)
cpus_61: [0, +INF(OVF)]
cp_63: ~[0B, 0B]  EQUIVALENCES: { cp_67 cp_69 } (2 elements)
_64: VARYING
_65: VARYING
_66: [0, +INF]
cp_67: VARYING
_68: VARYING
cp_69: ~[buffer_end_206, buffer_end_206]  EQUIVALENCES: { cp_67 } (1 elements)
info_70: ~[0B, 0B]  EQUIVALENCES: { info_32 } (1 elements)
cp_72: ~[0B, 0B]  EQUIVALENCES: { cp_90 } (1 elements)
_73: [0, +INF]
_74: VARYING
_75: VARYING
cp_76: ~[0B, 0B]  EQUIVALENCES: { cp_40 cp_200 } (2 elements)
_77: ~[0B, 0B]  EQUIVALENCES: { _30 } (1 elements)
_78: [1, 288230380446679552]
_79: [0, 9223372036854775806]
cp_80: VARYING
_81: VARYING
cp_82: VARYING
cp_83: VARYING
cp_84: ~[0B, 0B]  EQUIVALENCES: { cp_20 cp_88 } (2 elements)
_85: [0, 9223372036854775806]
cp_86: VARYING
_87: VARYING
cp_88: VARYING
cp_89: VARYING
cp_90: VARYING
_91: [0, 58]  EQUIVALENCES: { _66 } (1 elements)
_92: [0, 9223372036854775806]
cp_93: VARYING
_94: VARYING
cp_95: VARYING
cp_96: VARYING
_97: VARYING
f_98: VARYING
_99: VARYING
i_100: VARYING
cp_101: VARYING
_102: [0, 58]
cpus_103: [0, +INF(OVF)]
_104: [0, 9223372036854775806]
_105: ~[9223372036854775806, 18446744073709551614]
_106: VARYING
_107: VARYING
_108: [0, 9223372036854775806]
_109: ~[9223372036854775806, 18446744073709551614]
_110: VARYING
_111: VARYING
_112: [0, 9223372036854775806]
_113: ~[9223372036854775806, 18446744073709551614]
_114: VARYING
_115: VARYING
_116: [0, 9223372036854775806]
_117: ~[9223372036854775806, 18446744073709551614]
_118: VARYING
_119: VARYING
.MEM_121: VARYING
cp_122: ~[0B, 0B]  EQUIVALENCES: { cp_58 cp_142 } (2 elements)
.MEM_123: VARYING
.MEM_124: VARYING
.MEM_125: VARYING
.MEM_126: VARYING
.MEM_127: VARYING
.MEM_128: VARYING
.MEM_129: VARYING
.MEM_130: VARYING
.MEM_131: VARYING
.MEM_132: VARYING
.MEM_133: VARYING
.MEM_134: VARYING
.MEM_135: VARYING
.MEM_136: VARYING
.MEM_137: VARYING
buffer_end_139: VARYING
.MEM_140: VARYING
cp_142: ~[buffer_end_219, buffer_end_219]  EQUIVALENCES: { cp_58 } (1 elements)
cp_180: ~[0B, 0B]  EQUIVALENCES: { cp_49 cp_188 } (2 elements)
_182: VARYING
_184: [0, 58]  EQUIVALENCES: { _246 } (1 elements)
_185: [1, 288230380446679552]
_186: [0, 58]  EQUIVALENCES: { _190 } (1 elements)
_187: [1, 288230380446679552]
cp_188: ~[buffer_end_221, buffer_end_221]  EQUIVALENCES: { cp_49 } (1 elements)
_189: [0, 58]
_190: [0, +INF]
_191: [0, 58]  EQUIVALENCES: { _210 } (1 elements)
cp_192: ~[0B, 0B]  EQUIVALENCES: { cp_40 cp_200 } (2 elements)
cp_193: ~[0B, 0B]
cp_194: ~[0B, 0B]  EQUIVALENCES: { cp_40 cp_200 } (2 elements)
_195: [0, 58]
_196: [0, +INF]
_197: [0, 58]  EQUIVALENCES: { _255 } (1 elements)
pipe_198: ~[0B, 0B]  EQUIVALENCES: { pipe_22 } (1 elements)
_199: [0, +INF]
cp_200: ~[buffer_end_139, buffer_end_139]  EQUIVALENCES: { cp_40 } (1 elements)
_201: [0, 58]
_202: [0, +INF]
_203: [0, 58]  EQUIVALENCES: { _196 } (1 elements)
cpus_204: [0, +INF(OVF)]
_205: [0, +INF]
buffer_end_206: VARYING
_207: [0, 58]
cp_208: ~[0B, 0B]
cp_209: ~[0B, 0B]
_210: [0, +INF]
_211: [0, +INF]
cp_212: ~[0B, 0B]
cpus_213: [2, +INF]  EQUIVALENCES: { cpus_204 } (1 elements)
global_ofile_214: ~[0B, 0B]  EQUIVALENCES: { global_ofile_10(D) } (1 elements)
cp_215: ~[0B, 0B]
cp_216: ~[0B, 0B]
_217: [1, +INF]
buffer_end_219: VARYING
cp_220: [&model, &model]  EQUIVALENCES: { cp_88 } (1 elements)
buffer_end_221: VARYING
_222: [0, 1]
_223: VARYING
_224: [1, +INF]
_225: [0, 1]
_226: [0, 1]
_227: [0, 1]
_228: [0, +INF]
_230: [1, +INF]
_231: [1, +INF]
_232: VARYING
_233: [0, 58]  EQUIVALENCES: { _202 } (1 elements)
_236: [1, +INF]
_242: [1, +INF]
_246: [0, +INF]
_247: [1, +INF]
_248: [0, 58]  EQUIVALENCES: { _264 } (1 elements)
_249: [0, 58]
_250: [1, 288230380446679552]
_251: [0, 1]
_252: [0, +INF]
cp_253: ~[0B, 0B]  EQUIVALENCES: { cp_49 cp_188 } (2 elements)
_255: [0, +INF]
_256: [1, +INF]
_258: [0, 58]
_259: [1, 288230380446679552]
_260: [0, 1]
_261: [0, +INF]
cp_262: ~[0B, 0B]  EQUIVALENCES: { cp_67 cp_69 } (2 elements)
_264: [0, +INF]
cp_265: ~[0B, 0B]  EQUIVALENCES: { cp_67 cp_69 } (2 elements)
_267: [0, 58]
_268: [1, 288230380446679552]
_269: [0, 1]
_270: [0, +INF]
cp_271: ~[0B, 0B]  EQUIVALENCES: { cp_58 cp_142 } (2 elements)


Removing basic block 16
Removing basic block 29
Removing basic block 42
Removing basic block 55
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 98
Removing basic block 99
Removing basic block 100
hardware (const int write_to_file, struct FILE * global_ofile)
{
  struct FILE * info;
  char * cp;
  int cpus;
  char * buffer_end;
  char buffer[1024];
  char vendor_id[1024];
  char model_name[1024];
  char cpu_MHz[1024];
  int i;
  float f;
  struct FILE * pipe;
  char os_command[12];
  char cache[1024];
  char model[1024];
  char os[1024];
  char buffer[1024];
  char * _1;
  long unsigned int _5;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  char _24;
  char * _25;
  char _27;
  long unsigned int _28;
  sizetype _29;
  char * _30;
  char _31;
  long unsigned int _33;
  int _35;
  int _38;
  char _41;
  char _46;
  int _47;
  char _50;
  char _55;
  int _56;
  char _59;
  char _64;
  int _65;
  unsigned char _66;
  char _68;
  _Bool _73;
  char _74;
  char * _75;
  long unsigned int _78;
  long unsigned int _79;
  char _81;
  long unsigned int _85;
  char _87;
  long unsigned int _92;
  char _94;
  double _97;
  float _99;
  int _102;
  long unsigned int _104;
  sizetype _105;
  char * _106;
  char _107;
  long unsigned int _108;
  sizetype _109;
  char * _110;
  char _111;
  long unsigned int _112;
  sizetype _113;
  char * _114;
  char _115;
  long unsigned int _116;
  sizetype _117;
  char * _118;
  char _119;
  char _182;
  long unsigned int _185;
  long unsigned int _187;
  int _189;
  unsigned char _190;
  int _195;
  unsigned char _196;
  _Bool _199;
  int _201;
  unsigned char _202;
  _Bool _205;
  int _207;
  unsigned char _210;
  _Bool _211;
  long unsigned int _222;
  char _223;
  long unsigned int _225;
  long unsigned int _226;
  long unsigned int _227;
  _Bool _228;
  char _232;
  long unsigned int _239;
  long unsigned int _245;
  unsigned char _246;
  int _249;
  long unsigned int _250;
  long unsigned int _251;
  _Bool _252;
  long unsigned int _254;
  unsigned char _255;
  long unsigned int _257;
  int _258;
  long unsigned int _259;
  long unsigned int _260;
  _Bool _261;
  long unsigned int _263;
  unsigned char _264;
  long unsigned int _266;
  int _267;
  long unsigned int _268;
  long unsigned int _269;
  _Bool _270;
  long unsigned int _272;

  <bb 2> [31.42%]:
  os_command = "uname -s -r";
  pipe_22 = popen (&os_command, "r");
  if (pipe_22 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [9.43%]:
  MEM[(char *)&os] = 0;
  goto <bb 9>; [100.00%]

  <bb 4> [21.99%]:
  _25 = __fgets_alias (&os, 1024, pipe_22);
  if (_25 == 0B)
    goto <bb 5>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 5> [6.60%]:
  MEM[(char *)&os] = 0;

  <bb 6> [21.99%]:
  pclose (pipe_22);
  _27 = MEM[(const char *)&os];
  if (_27 != 0)
    goto <bb 7>; [52.35%]
  else
    goto <bb 9>; [47.65%]

  <bb 7> [11.51%]:
  _28 = strlen (&os);
  _29 = _28 + 18446744073709551615;
  _30 = &os + _29;
  _31 = *_30;
  if (_31 == 10)
    goto <bb 8>; [37.68%]
  else
    goto <bb 9>; [62.32%]

  <bb 8> [4.34%]:
  *_30 = 0;

  <bb 9> [31.42%]:
  _1 = strstr (&os, "Linux");
  if (_1 != 0B)
    goto <bb 10>; [49.47%]
  else
    goto <bb 81>; [50.53%]

  <bb 10> [15.54%]:
  MEM[(char *)&cache] = 0;
  MEM[(char *)&model] = 0;
  cpu_MHz[0] = 0;
  model_name[0] = 0;
  vendor_id[0] = 0;
  info_32 = fopen ("/proc/cpuinfo", "r");
  if (info_32 != 0B)
    goto <bb 62>; [73.26%]
  else
    goto <bb 80>; [26.74%]

  <bb 11> [64.52%]:
  _33 = strlen (&buffer);
  _35 = strncmp (&buffer, "processor", 9);
  if (_35 == 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [32.26%]:
  cpus_37 = cpus_36 + 1;
  goto <bb 61>; [100.00%]

  <bb 13> [32.26%]:
  buffer_end_34 = &buffer + _33;
  _38 = strncmp (&buffer, "vendor_id", 9);
  if (_38 == 0)
    goto <bb 14>; [34.00%]
  else
    goto <bb 25>; [66.00%]

  <bb 14> [11.00%]:
  if (&MEM[(void *)&buffer + 9B] < buffer_end_34)
    goto <bb 15>; [92.50%]
  else
    goto <bb 22>; [7.50%]

  <bb 15> [10.18%]:
  _232 = MEM[(char *)&buffer + 9B];
  _264 = (unsigned char) _232;
  if (_264 > 58)
    goto <bb 86>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [10.18%]:
  _267 = (int) _264;
  _268 = 288230380446679552 >> _267;
  _269 = _268 & 1;
  _263 = _269 ^ 1;
  _270 = (_Bool) _263;
  if (_270 != 0)
    goto <bb 86>; [0.97%]
  else
    goto <bb 18>; [99.03%]

  <bb 17> [79.24%]:
  # cp_76 = PHI <cp_40(20)>

  <bb 18> [89.03%]:
  # cp_216 = PHI <cp_40(17), &MEM[(void *)&buffer + 9B](16)>
  cp_40 = cp_216 + 1;
  if (cp_40 != buffer_end_34)
    goto <bb 19>; [92.50%]
  else
    goto <bb 22>; [7.50%]

  <bb 19> [82.33%]:
  _41 = MEM[base: cp_40, offset: 0B];
  _255 = (unsigned char) _41;
  if (_255 > 58)
    goto <bb 21>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 20> [82.33%]:
  _258 = (int) _255;
  _259 = 288230380446679552 >> _258;
  _260 = _259 & 1;
  _239 = _260 ^ 1;
  _261 = (_Bool) _239;
  if (_261 != 0)
    goto <bb 86>; [3.75%]
  else
    goto <bb 17>; [96.25%]

  <bb 21> [0.00%]:
  # cp_192 = PHI <cp_40(19)>
  goto <bb 86>; [100.00%]

  <bb 22> [10.97%]:
  _46 = MEM[(const char *)&vendor_id];
  if (_46 != 0)
    goto <bb 23>; [33.00%]
  else
    goto <bb 61>; [67.00%]

  <bb 23> [3.62%]:
  _104 = strlen (&vendor_id);
  _105 = _104 + 18446744073709551615;
  _106 = &vendor_id + _105;
  _107 = *_106;
  if (_107 == 10)
    goto <bb 24>; [37.68%]
  else
    goto <bb 61>; [62.32%]

  <bb 24> [1.36%]:
  *_106 = 0;
  goto <bb 61>; [100.00%]

  <bb 25> [21.29%]:
  _47 = strncmp (&buffer, "model name", 10);
  if (_47 == 0)
    goto <bb 26>; [34.00%]
  else
    goto <bb 37>; [66.00%]

  <bb 26> [7.26%]:
  if (&MEM[(void *)&buffer + 10B] < buffer_end_34)
    goto <bb 27>; [92.50%]
  else
    goto <bb 34>; [7.50%]

  <bb 27> [6.72%]:
  _182 = MEM[(char *)&buffer + 10B];
  _246 = (unsigned char) _182;
  if (_246 > 58)
    goto <bb 87>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 28> [6.72%]:
  _249 = (int) _246;
  _250 = 288230380446679552 >> _249;
  _251 = _250 & 1;
  _272 = _251 ^ 1;
  _252 = (_Bool) _272;
  if (_252 != 0)
    goto <bb 87>; [0.97%]
  else
    goto <bb 30>; [99.03%]

  <bb 29> [52.29%]:
  # cp_42 = PHI <cp_49(32)>

  <bb 30> [58.76%]:
  # cp_215 = PHI <cp_49(29), &MEM[(void *)&buffer + 10B](28)>
  cp_49 = cp_215 + 1;
  if (cp_49 != buffer_end_34)
    goto <bb 31>; [92.50%]
  else
    goto <bb 34>; [7.50%]

  <bb 31> [54.33%]:
  _50 = MEM[base: cp_49, offset: 0B];
  _190 = (unsigned char) _50;
  if (_190 > 58)
    goto <bb 33>; [50.00%]
  else
    goto <bb 32>; [50.00%]

  <bb 32> [54.33%]:
  _189 = (int) _190;
  _13 = 288230380446679552 >> _189;
  _11 = _13 & 1;
  _257 = _11 ^ 1;
  _73 = (_Bool) _257;
  if (_73 != 0)
    goto <bb 87>; [3.75%]
  else
    goto <bb 29>; [96.25%]

  <bb 33> [0.00%]:
  # cp_253 = PHI <cp_49(31)>
  goto <bb 87>; [100.00%]

  <bb 34> [7.24%]:
  _55 = MEM[(const char *)&model_name];
  if (_55 != 0)
    goto <bb 35>; [33.00%]
  else
    goto <bb 61>; [67.00%]

  <bb 35> [2.39%]:
  _108 = strlen (&model_name);
  _109 = _108 + 18446744073709551615;
  _110 = &model_name + _109;
  _111 = *_110;
  if (_111 == 10)
    goto <bb 36>; [37.68%]
  else
    goto <bb 61>; [62.32%]

  <bb 36> [0.90%]:
  *_110 = 0;
  goto <bb 61>; [100.00%]

  <bb 37> [14.05%]:
  _56 = strncmp (&buffer, "cpu MHz", 7);
  if (_56 == 0)
    goto <bb 38>; [34.00%]
  else
    goto <bb 49>; [66.00%]

  <bb 38> [4.79%]:
  if (&MEM[(void *)&buffer + 7B] < buffer_end_34)
    goto <bb 39>; [92.50%]
  else
    goto <bb 46>; [7.50%]

  <bb 39> [4.43%]:
  _24 = MEM[(char *)&buffer + 7B];
  _196 = (unsigned char) _24;
  if (_196 > 58)
    goto <bb 88>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 40> [4.43%]:
  _195 = (int) _196;
  _5 = 288230380446679552 >> _195;
  _225 = _5 & 1;
  _245 = _225 ^ 1;
  _211 = (_Bool) _245;
  if (_211 != 0)
    goto <bb 88>; [0.97%]
  else
    goto <bb 42>; [99.03%]

  <bb 41> [34.52%]:
  # cp_23 = PHI <cp_58(44)>

  <bb 42> [38.78%]:
  # cp_212 = PHI <cp_58(41), &MEM[(void *)&buffer + 7B](40)>
  cp_58 = cp_212 + 1;
  if (cp_58 != buffer_end_34)
    goto <bb 43>; [92.50%]
  else
    goto <bb 46>; [7.50%]

  <bb 43> [35.86%]:
  _59 = MEM[base: cp_58, offset: 0B];
  _202 = (unsigned char) _59;
  if (_202 > 58)
    goto <bb 45>; [50.00%]
  else
    goto <bb 44>; [50.00%]

  <bb 44> [35.86%]:
  _201 = (int) _202;
  _185 = 288230380446679552 >> _201;
  _226 = _185 & 1;
  _266 = _226 ^ 1;
  _205 = (_Bool) _266;
  if (_205 != 0)
    goto <bb 88>; [3.75%]
  else
    goto <bb 41>; [96.25%]

  <bb 45> [0.00%]:
  # cp_271 = PHI <cp_58(43)>
  goto <bb 88>; [100.00%]

  <bb 46> [4.78%]:
  _64 = MEM[(const char *)&cpu_MHz];
  if (_64 != 0)
    goto <bb 47>; [33.00%]
  else
    goto <bb 61>; [67.00%]

  <bb 47> [1.58%]:
  _112 = strlen (&cpu_MHz);
  _113 = _112 + 18446744073709551615;
  _114 = &cpu_MHz + _113;
  _115 = *_114;
  if (_115 == 10)
    goto <bb 48>; [37.68%]
  else
    goto <bb 61>; [62.32%]

  <bb 48> [0.59%]:
  *_114 = 0;
  goto <bb 61>; [100.00%]

  <bb 49> [9.27%]:
  _65 = strncmp (&buffer, "cache size", 10);
  if (_65 == 0)
    goto <bb 50>; [34.00%]
  else
    goto <bb 61>; [66.00%]

  <bb 50> [3.16%]:
  if (&MEM[(void *)&buffer + 10B] < buffer_end_34)
    goto <bb 51>; [92.50%]
  else
    goto <bb 58>; [7.50%]

  <bb 51> [2.92%]:
  _223 = MEM[(char *)&buffer + 10B];
  _210 = (unsigned char) _223;
  if (_210 > 58)
    goto <bb 89>; [50.00%]
  else
    goto <bb 52>; [50.00%]

  <bb 52> [2.92%]:
  _207 = (int) _210;
  _187 = 288230380446679552 >> _207;
  _227 = _187 & 1;
  _254 = _227 ^ 1;
  _199 = (_Bool) _254;
  if (_199 != 0)
    goto <bb 89>; [0.97%]
  else
    goto <bb 54>; [99.03%]

  <bb 53> [22.78%]:
  # cp_265 = PHI <cp_67(56)>

  <bb 54> [25.60%]:
  # cp_193 = PHI <cp_67(53), &MEM[(void *)&buffer + 10B](52)>
  cp_67 = cp_193 + 1;
  if (cp_67 != buffer_end_34)
    goto <bb 55>; [92.50%]
  else
    goto <bb 58>; [7.50%]

  <bb 55> [23.67%]:
  _68 = MEM[base: cp_67, offset: 0B];
  _66 = (unsigned char) _68;
  if (_66 > 58)
    goto <bb 57>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 56> [23.67%]:
  _102 = (int) _66;
  _78 = 288230380446679552 >> _102;
  _222 = _78 & 1;
  _12 = _222 ^ 1;
  _228 = (_Bool) _12;
  if (_228 != 0)
    goto <bb 89>; [3.75%]
  else
    goto <bb 53>; [96.25%]

  <bb 57> [0.00%]:
  # cp_262 = PHI <cp_67(55)>
  goto <bb 89>; [100.00%]

  <bb 58> [3.15%]:
  _74 = MEM[(const char *)&cache];
  if (_74 != 0)
    goto <bb 59>; [33.00%]
  else
    goto <bb 61>; [67.00%]

  <bb 59> [1.04%]:
  _116 = strlen (&cache);
  _117 = _116 + 18446744073709551615;
  _118 = &cache + _117;
  _119 = *_118;
  if (_119 == 10)
    goto <bb 60>; [37.68%]
  else
    goto <bb 61>; [62.32%]

  <bb 60> [0.39%]:
  *_118 = 0;

  <bb 61> [64.51%]:
  # cpus_103 = PHI <cpus_36(22), cpus_37(12), cpus_36(24), cpus_36(34), cpus_36(36), cpus_36(46), cpus_36(48), cpus_36(49), cpus_36(58), cpus_36(60), cpus_36(23), cpus_36(35), cpus_36(47), cpus_36(59)>

  <bb 62> [75.91%]:
  # cpus_36 = PHI <cpus_103(61), 0(10)>
  _75 = __fgets_alias (&buffer, 1024, info_32);
  if (_75 != 0B)
    goto <bb 11>; [85.00%]
  else
    goto <bb 63>; [15.00%]

  <bb 63> [11.39%]:
  # cpus_61 = PHI <cpus_36(62)>
  # cpus_204 = PHI <cpus_36(62)>
  if (cpus_204 > 1)
    goto <bb 64>; [64.00%]
  else
    goto <bb 67>; [36.00%]

  <bb 64> [7.29%]:
  if (cpus_204 == 2)
    goto <bb 65>; [34.00%]
  else
    goto <bb 66>; [66.00%]

  <bb 65> [2.48%]:
  __builtin_memcpy (&model, "Dual", 5);
  goto <bb 67>; [100.00%]

  <bb 66> [4.81%]:
  __builtin___sprintf_chk (&model, 1, 1024, "%d CPU", cpus_204);

  <bb 67> [11.39%]:
  _79 = strlen (&model);
  cp_80 = &model + _79;
  _81 = vendor_id[0];
  if (_81 != 0)
    goto <bb 68>; [50.00%]
  else
    goto <bb 71>; [50.00%]

  <bb 68> [5.69%]:
  if (&model != cp_80)
    goto <bb 69>; [70.00%]
  else
    goto <bb 70>; [30.00%]

  <bb 69> [3.99%]:
  cp_82 = cp_80 + 1;
  *cp_80 = 32;

  <bb 70> [5.69%]:
  # cp_83 = PHI <&model(68), cp_82(69)>
  __builtin_strcpy (cp_83, &vendor_id);
  _85 = strlen (&vendor_id);
  cp_86 = cp_83 + _85;

  <bb 71> [11.39%]:
  # cp_88 = PHI <cp_80(67), cp_86(70)>
  _87 = model_name[0];
  if (_87 != 0)
    goto <bb 72>; [50.00%]
  else
    goto <bb 75>; [50.00%]

  <bb 72> [5.69%]:
  if (&model != cp_88)
    goto <bb 73>; [70.00%]
  else
    goto <bb 74>; [30.00%]

  <bb 73> [3.99%]:
  cp_89 = cp_88 + 1;
  *cp_88 = 32;

  <bb 74> [5.69%]:
  # cp_90 = PHI <&model(72), cp_89(73)>
  __builtin_strcpy (cp_90, &model_name);
  _92 = strlen (&model_name);
  cp_93 = cp_90 + _92;

  <bb 75> [11.39%]:
  # cp_95 = PHI <cp_88(71), cp_93(74)>
  _94 = cpu_MHz[0];
  if (_94 != 0)
    goto <bb 76>; [50.00%]
  else
    goto <bb 79>; [50.00%]

  <bb 76> [5.69%]:
  if (&model != cp_95)
    goto <bb 77>; [70.00%]
  else
    goto <bb 78>; [30.00%]

  <bb 77> [3.99%]:
  cp_96 = cp_95 + 1;
  *cp_95 = 32;

  <bb 78> [5.69%]:
  # cp_101 = PHI <&model(76), cp_96(77)>
  _97 = strtod (&cpu_MHz, 0B);
  f_98 = (float) _97;
  _99 = f_98 + 5.0e-1;
  i_100 = (int) _99;
  __builtin___sprintf_chk (&cpu_MHz, 1, 1024, "%dMHz", i_100);
  __builtin_strcpy (cp_101, &cpu_MHz);

  <bb 79> [11.39%]:
  fclose (info_32);

  <bb 80> [15.54%]:
  buffer ={v} {CLOBBER};
  vendor_id ={v} {CLOBBER};
  model_name ={v} {CLOBBER};
  cpu_MHz ={v} {CLOBBER};
  goto <bb 82>; [100.00%]

  <bb 81> [15.88%]:
  model[0] = 0;
  cache[0] = 0;

  <bb 82> [31.42%]:
  __builtin___sprintf_chk (&buffer, 1, 1024, "CPU                 : %s\n", &model);
  __printf_chk (1, "%s", &buffer);
  if (write_to_file_9(D) != 0)
    goto <bb 83>; [36.64%]
  else
    goto <bb 85>; [63.36%]

  <bb 83> [11.51%]:
  __builtin_fputs (&buffer, global_ofile_10(D));
  __builtin___sprintf_chk (&buffer, 1, 1024, "L2 Cache            : %s\n", &cache);
  __printf_chk (1, "%s", &buffer);
  __builtin_fputs (&buffer, global_ofile_10(D));
  __builtin___sprintf_chk (&buffer, 1, 1024, "OS                  : %s\n", &os);
  __printf_chk (1, "%s", &buffer);
  __builtin_fputs (&buffer, global_ofile_10(D));

  <bb 84> [31.42%]:
  buffer ={v} {CLOBBER};
  os ={v} {CLOBBER};
  model ={v} {CLOBBER};
  cache ={v} {CLOBBER};
  os_command ={v} {CLOBBER};
  return;

  <bb 85> [19.91%]:
  __builtin___sprintf_chk (&buffer, 1, 1024, "L2 Cache            : %s\n", &cache);
  __printf_chk (1, "%s", &buffer);
  __builtin___sprintf_chk (&buffer, 1, 1024, "OS                  : %s\n", &os);
  __printf_chk (1, "%s", &buffer);
  goto <bb 84>; [100.00%]

  <bb 86> [3.62%]:
  # cp_48 = PHI <&MEM[(void *)&buffer + 9B](16), cp_192(21), cp_40(20), &MEM[(void *)&buffer + 9B](15)>
  __builtin___strcpy_chk (&vendor_id, cp_48, 1024);
  goto <bb 22>; [100.00%]

  <bb 87> [2.39%]:
  # cp_39 = PHI <&MEM[(void *)&buffer + 10B](28), &MEM[(void *)&buffer + 10B](27), cp_49(32), cp_253(33)>
  __builtin___strcpy_chk (&model_name, cp_39, 1024);
  goto <bb 34>; [100.00%]

  <bb 88> [1.58%]:
  # cp_209 = PHI <&MEM[(void *)&buffer + 7B](40), &MEM[(void *)&buffer + 7B](39), cp_58(44), cp_271(45)>
  __builtin___strcpy_chk (&cpu_MHz, cp_209, 1024);
  goto <bb 46>; [100.00%]

  <bb 89> [1.04%]:
  # cp_208 = PHI <&MEM[(void *)&buffer + 10B](52), &MEM[(void *)&buffer + 10B](51), cp_67(56), cp_262(57)>
  __builtin___strcpy_chk (&cache, cp_208, 1024);
  goto <bb 58>; [100.00%]

}


