
;; Function sprintf (sprintf, funcdef_no=10, decl_uid=814, cgraph_uid=10, symbol_order=10)

__attribute__((__artificial__, __gnu_inline__, __always_inline__, __leaf__, __nothrow__))
sprintf (char * restrict __s, const char * restrict __fmt)
{
  long unsigned int _1;
  int _6;

  <bb 2> [0.00%]:
  _1 = __builtin_object_size (__s_3(D), 1);
  _6 = __builtin___sprintf_chk (__s_3(D), 1, _1, __fmt_4(D), __builtin_va_arg_pack ());
  return _6;

}



;; Function fprintf (fprintf, funcdef_no=14, decl_uid=776, cgraph_uid=14, symbol_order=14)

__attribute__((__artificial__, __gnu_inline__, __always_inline__))
fprintf (struct FILE * restrict __stream, const char * restrict __fmt)
{
  int _5;

  <bb 2> [0.00%]:
  _5 = __fprintf_chk (__stream_2(D), 1, __fmt_3(D), __builtin_va_arg_pack ());
  return _5;

}



;; Function printf (printf, funcdef_no=15, decl_uid=798, cgraph_uid=15, symbol_order=15)

__attribute__((__artificial__, __gnu_inline__, __always_inline__))
printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [0.00%]:
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function atoi (atoi, funcdef_no=23, decl_uid=2467, cgraph_uid=23, symbol_order=23)

Iterations: 0
__attribute__((__gnu_inline__, __pure__, __leaf__, __nothrow__))
atoi (const char * __nptr)
{
  long int _1;
  int _5;

  <bb 2> [0.00%]:
  _1 = strtol (__nptr_3(D), 0B, 10);
  _5 = (int) _1;
  return _5;

}



;; Function set_request_secs (set_request_secs, funcdef_no=60, decl_uid=4712, cgraph_uid=60, symbol_order=92)

Iterations: 0
set_request_secs ()
{
  long unsigned int global_min_seconds.20_1;
  long unsigned int global_min_seconds.21_2;
  long unsigned int global_min_seconds.22_3;
  long unsigned int global_min_seconds.23_4;
  long unsigned int global_min_seconds.24_5;
  long unsigned int global_min_seconds.25_6;
  long unsigned int global_min_seconds.26_7;
  long unsigned int global_min_seconds.27_8;
  long unsigned int global_min_seconds.28_9;
  long unsigned int global_min_seconds.29_10;

  <bb 2> [0.00%]:
  global_min_seconds.20_1 = global_min_seconds;
  global_numsortstruct.request_secs = global_min_seconds.20_1;
  global_min_seconds.21_2 = global_min_seconds;
  global_strsortstruct.request_secs = global_min_seconds.21_2;
  global_min_seconds.22_3 = global_min_seconds;
  global_bitopstruct.request_secs = global_min_seconds.22_3;
  global_min_seconds.23_4 = global_min_seconds;
  global_emfloatstruct.request_secs = global_min_seconds.23_4;
  global_min_seconds.24_5 = global_min_seconds;
  global_fourierstruct.request_secs = global_min_seconds.24_5;
  global_min_seconds.25_6 = global_min_seconds;
  global_assignstruct.request_secs = global_min_seconds.25_6;
  global_min_seconds.26_7 = global_min_seconds;
  global_ideastruct.request_secs = global_min_seconds.26_7;
  global_min_seconds.27_8 = global_min_seconds;
  global_huffstruct.request_secs = global_min_seconds.27_8;
  global_min_seconds.28_9 = global_min_seconds;
  global_nnetstruct.request_secs = global_min_seconds.28_9;
  global_min_seconds.29_10 = global_min_seconds;
  global_lustruct.request_secs = global_min_seconds.29_10;
  return;

}



;; Function getscore (getscore, funcdef_no=63, decl_uid=4725, cgraph_uid=63, symbol_order=95)

Iterations: 0
getscore (int fid)
{
  double _1;
  double _4;
  double _5;
  double _6;
  double _7;
  double _8;
  double _9;
  double _10;
  double _11;
  double _12;
  double _13;
  double _14;

  <bb 2> [0.00%]:
  switch (fid_2(D)) <default: <L10> [0.00%], case 0: <L0> [0.00%], case 1: <L1> [0.00%], case 2: <L2> [0.00%], case 3: <L3> [0.00%], case 4: <L4> [0.00%], case 5: <L5> [0.00%], case 6: <L6> [0.00%], case 7: <L7> [0.00%], case 8: <L8> [0.00%], case 9: <L9> [0.00%]>

<L0> [0.00%]:
  _13 = global_numsortstruct.sortspersec;
  goto <bb 14>; [0.00%]

<L1> [0.00%]:
  _12 = global_strsortstruct.sortspersec;
  goto <bb 14>; [0.00%]

<L2> [0.00%]:
  _11 = global_bitopstruct.bitopspersec;
  goto <bb 14>; [0.00%]

<L3> [0.00%]:
  _10 = global_emfloatstruct.emflops;
  goto <bb 14>; [0.00%]

<L4> [0.00%]:
  _9 = global_fourierstruct.fflops;
  goto <bb 14>; [0.00%]

<L5> [0.00%]:
  _8 = global_assignstruct.iterspersec;
  goto <bb 14>; [0.00%]

<L6> [0.00%]:
  _7 = global_ideastruct.iterspersec;
  goto <bb 14>; [0.00%]

<L7> [0.00%]:
  _6 = global_huffstruct.iterspersec;
  goto <bb 14>; [0.00%]

<L8> [0.00%]:
  _5 = global_nnetstruct.iterspersec;
  goto <bb 14>; [0.00%]

<L9> [0.00%]:
  _4 = global_lustruct.iterspersec;
  goto <bb 14>; [0.00%]

<L10> [0.00%]:
  _14 = 0.0;

  <bb 14> [0.00%]:
  # _1 = PHI <_13(3), _12(4), _11(5), _10(6), _9(7), _8(8), _7(9), _6(10), _5(11), _4(12), _14(13)>
  return _1;

}



;; Function bench_with_confidence (bench_with_confidence, funcdef_no=61, decl_uid=4717, cgraph_uid=61, symbol_order=93)

Considering inline candidate getscore.
  will not early inline: bench_with_confidence/93->getscore/95, growth 29 exceeds --param early-inlining-insns
Iterations: 0
bench_with_confidence (int fid, double * mean, double * stdev, long unsigned int * numtries)
{
  int i;
  double myscores[30];
  void (*<T8d0>) (void) _1;
  double _2;
  int _9;

  <bb 2> [0.00%]:
  i_5 = 0;
  goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _1 = funcpointer[fid_11(D)];
  _1 ();
  _2 = getscore (fid_11(D));
  myscores[i_3] = _2;
  i_15 = i_3 + 1;

  <bb 4> [0.00%]:
  # i_3 = PHI <i_5(2), i_15(3)>
  if (i_3 <= 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  *numtries_7(D) = 5;
  _9 = 0;
  myscores ={v} {CLOBBER};
  return _9;

}



;; Function output_string (output_string, funcdef_no=64, decl_uid=4727, cgraph_uid=64, symbol_order=96)

  Inlining fprintf into output_string (always_inline).
  Inlining printf into output_string (always_inline).
Iterations: 0
Merging blocks 2 and 6
Merging blocks 3 and 8
Removing basic block 7
Merging blocks 2 and 5

Symbols to be put in SSA form
{ D.4985 D.5013 D.5016 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


output_string (char * buffer)
{
  int D.5016;
  int D.5013;
  int write_to_file.30_1;
  struct FILE * global_ofile.31_2;
  int _8;
  int _9;

  <bb 2> [100.00%]:
  _8 = __printf_chk (1, "%s", buffer_5(D));
  _11 = _8;
  write_to_file.30_1 = write_to_file;
  if (write_to_file.30_1 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  global_ofile.31_2 = global_ofile;
  _9 = __fprintf_chk (global_ofile.31_2, 1, "%s", buffer_5(D));
  _13 = _9;

  <bb 4> [0.00%]:
  return;

}



;; Function show_stats (show_stats, funcdef_no=65, decl_uid=4729, cgraph_uid=65, symbol_order=97)

  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
  Inlining sprintf into show_stats (always_inline).
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: show_stats/97->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Iterations: 0
Merging blocks 3 and 17
Merging blocks 4 and 21
Merging blocks 5 and 25
Merging blocks 6 and 29
Merging blocks 7 and 31
Merging blocks 8 and 33
Merging blocks 9 and 37
Merging blocks 10 and 41
Merging blocks 11 and 43
Merging blocks 12 and 45
Merging blocks 3 and 16
Merging blocks 3 and 15
Merging blocks 3 and 14
Merging blocks 4 and 20
Merging blocks 4 and 19
Merging blocks 4 and 18
Merging blocks 5 and 24
Merging blocks 5 and 23
Merging blocks 5 and 22
Merging blocks 6 and 28
Merging blocks 6 and 27
Merging blocks 6 and 26
Merging blocks 7 and 30
Merging blocks 8 and 32
Merging blocks 9 and 36
Merging blocks 9 and 35
Merging blocks 9 and 34
Merging blocks 10 and 40
Merging blocks 10 and 39
Merging blocks 10 and 38
Merging blocks 11 and 42
Merging blocks 12 and 44

Symbols to be put in SSA form
{ D.4986 D.5026 D.5029 D.5032 D.5035 D.5038 D.5041 D.5044 D.5047 D.5050 D.5053 D.5056 D.5059 D.5062 D.5065 D.5068 D.5071 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


show_stats (int bid)
{
  int D.5071;
  int D.5068;
  int D.5065;
  int D.5062;
  int D.5059;
  int D.5056;
  int D.5053;
  int D.5050;
  int D.5047;
  int D.5044;
  int D.5041;
  int D.5038;
  int D.5035;
  int D.5032;
  int D.5029;
  int D.5026;
  char buffer[80];
  short unsigned int _1;
  int _2;
  long unsigned int _3;
  short unsigned int _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _55;
  int _56;
  long unsigned int _57;
  int _58;
  long unsigned int _59;
  int _60;
  long unsigned int _61;
  int _62;
  long unsigned int _63;
  int _64;
  long unsigned int _65;
  int _66;
  long unsigned int _67;
  int _68;
  long unsigned int _69;
  int _70;
  long unsigned int _71;
  int _72;
  long unsigned int _73;
  int _74;
  long unsigned int _75;
  int _76;
  long unsigned int _77;
  int _78;
  long unsigned int _79;
  int _80;
  long unsigned int _81;
  int _82;
  long unsigned int _83;
  int _84;
  long unsigned int _85;
  int _86;

  <bb 2> [0.00%]:
  switch (bid_20(D)) <default: <L14> [0.00%], case 0: <L0> [0.00%], case 1: <L1> [0.00%], case 2: <L2> [0.00%], case 3: <L3> [0.00%], case 4: <L4> [0.00%], case 5: <L5> [0.00%], case 6: <L6> [0.00%], case 7: <L7> [0.00%], case 8: <L8> [0.00%], case 9: <L9> [0.00%]>

<L0> [100.00%]:
  _1 = global_numsortstruct.numarrays;
  _2 = (int) _1;
  _57 = 80;
  _58 = __builtin___sprintf_chk (&buffer, 1, _57, "  Number of arrays: %d\n", _2);
  _116 = _58;
  output_string (&buffer);
  _3 = global_numsortstruct.arraysize;
  _55 = 80;
  _56 = __builtin___sprintf_chk (&buffer, 1, _55, "  Array size: %ld\n", _3);
  _118 = _56;
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L1> [100.00%]:
  _4 = global_strsortstruct.numarrays;
  _5 = (int) _4;
  _61 = 80;
  _62 = __builtin___sprintf_chk (&buffer, 1, _61, "  Number of arrays: %d\n", _5);
  _112 = _62;
  output_string (&buffer);
  _6 = global_strsortstruct.arraysize;
  _59 = 80;
  _60 = __builtin___sprintf_chk (&buffer, 1, _59, "  Array size: %ld\n", _6);
  _114 = _60;
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L2> [100.00%]:
  _7 = global_bitopstruct.bitoparraysize;
  _65 = 80;
  _66 = __builtin___sprintf_chk (&buffer, 1, _65, "  Operations array size: %ld\n", _7);
  _108 = _66;
  output_string (&buffer);
  _8 = global_bitopstruct.bitfieldarraysize;
  _63 = 80;
  _64 = __builtin___sprintf_chk (&buffer, 1, _63, "  Bitfield array size: %ld\n", _8);
  _110 = _64;
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L3> [100.00%]:
  _9 = global_emfloatstruct.loops;
  _69 = 80;
  _70 = __builtin___sprintf_chk (&buffer, 1, _69, "  Number of loops: %lu\n", _9);
  _104 = _70;
  output_string (&buffer);
  _10 = global_emfloatstruct.arraysize;
  _67 = 80;
  _68 = __builtin___sprintf_chk (&buffer, 1, _67, "  Array size: %lu\n", _10);
  _106 = _68;
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L4> [100.00%]:
  _11 = global_fourierstruct.arraysize;
  _71 = 80;
  _72 = __builtin___sprintf_chk (&buffer, 1, _71, "  Number of coefficients: %lu\n", _11);
  _102 = _72;
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L5> [100.00%]:
  _12 = global_assignstruct.numarrays;
  _73 = 80;
  _74 = __builtin___sprintf_chk (&buffer, 1, _73, "  Number of arrays: %lu\n", _12);
  _100 = _74;
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L6> [100.00%]:
  _13 = global_ideastruct.arraysize;
  _77 = 80;
  _78 = __builtin___sprintf_chk (&buffer, 1, _77, "  Array size: %lu\n", _13);
  _96 = _78;
  output_string (&buffer);
  _14 = global_ideastruct.loops;
  _75 = 80;
  _76 = __builtin___sprintf_chk (&buffer, 1, _75, " Number of loops: %lu\n", _14);
  _98 = _76;
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L7> [100.00%]:
  _15 = global_huffstruct.arraysize;
  _81 = 80;
  _82 = __builtin___sprintf_chk (&buffer, 1, _81, "  Array size: %lu\n", _15);
  _92 = _82;
  output_string (&buffer);
  _16 = global_huffstruct.loops;
  _79 = 80;
  _80 = __builtin___sprintf_chk (&buffer, 1, _79, "  Number of loops: %lu\n", _16);
  _94 = _80;
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L8> [100.00%]:
  _17 = global_nnetstruct.loops;
  _83 = 80;
  _84 = __builtin___sprintf_chk (&buffer, 1, _83, "  Number of loops: %lu\n", _17);
  _90 = _84;
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L9> [100.00%]:
  _18 = global_lustruct.numarrays;
  _85 = 80;
  _86 = __builtin___sprintf_chk (&buffer, 1, _85, "  Number of arrays: %lu\n", _18);
  _88 = _86;
  output_string (&buffer);

<L14> [0.00%]:
  buffer ={v} {CLOBBER};
  return;

}



;; Function main (main, funcdef_no=54, decl_uid=4760, cgraph_uid=54, symbol_order=86)

  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining sprintf into main (always_inline).
  Inlining atoi into main (always_inline).
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate show_stats.
  will not early inline: main/86->show_stats/97, growth 164 exceeds --param early-inlining-insns
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate bench_with_confidence.isra.0.
 Inlining bench_with_confidence.isra.0 into main.
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate output_string.
  will not early inline: main/86->output_string/96, growth 7 exceeds --param early-inlining-insns divided by number of calls
Considering inline candidate set_request_secs.
 Inlining set_request_secs into main.
Iterations: 1
Removing basic block 5
Merging blocks 6 and 30
Merging blocks 8 and 44
Merging blocks 11 and 46
Merging blocks 13 and 48
Merging blocks 21 and 50
Merging blocks 22 and 52
Merging blocks 23 and 56
Merging blocks 27 and 70
Merging blocks 72 and 71
Removing basic block 74
Removing basic block 75
Merging blocks 78 and 73
Merging blocks 6 and 29
Merging blocks 8 and 43
Merging blocks 8 and 42
Merging blocks 8 and 41
Merging blocks 8 and 40
Merging blocks 8 and 39
Merging blocks 8 and 38
Merging blocks 8 and 37
Merging blocks 8 and 36
Merging blocks 8 and 35
Merging blocks 8 and 34
Merging blocks 8 and 33
Merging blocks 8 and 32
Merging blocks 8 and 31
Merging blocks 11 and 45
Merging blocks 13 and 47
Merging blocks 21 and 49
Merging blocks 22 and 51
Merging blocks 23 and 55
Merging blocks 23 and 54
Merging blocks 23 and 53
Merging blocks 27 and 69
Merging blocks 27 and 68
Merging blocks 27 and 67
Merging blocks 27 and 66
Merging blocks 27 and 65
Merging blocks 27 and 64
Merging blocks 27 and 63
Merging blocks 27 and 62
Merging blocks 27 and 61
Merging blocks 27 and 60
Merging blocks 27 and 59
Merging blocks 27 and 58
Merging blocks 27 and 57

Symbols to be put in SSA form
{ D.4987 D.5074 D.5077 D.5080 D.5083 D.5086 D.5089 D.5092 D.5095 D.5098 D.5101 D.5104 D.5107 D.5110 D.5113 D.5116 D.5119 D.5122 D.5125 D.5128 D.5131 D.5134 D.5138 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 32
Number of blocks to update: 31 ( 97%)


No longer having address taken: bmean
No longer having address taken: bstdev
No longer having address taken: bnumrun

Symbols to be put in SSA form
{ D.4765 D.4766 D.4772 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 32
Number of blocks to update: 31 ( 97%)


main (int argc, char * * argv)
{
  int i;
  int D.5138;
  int D.5134;
  int D.5131;
  int D.5128;
  int D.5125;
  int D.5122;
  int D.5119;
  int D.5116;
  int D.5113;
  int D.5110;
  int D.5107;
  int D.5104;
  int D.5101;
  int D.5098;
  int D.5095;
  int D.5092;
  int D.5089;
  int D.5086;
  int D.5083;
  int D.5080;
  int D.5077;
  int D.5074;
  long unsigned int bnumrun;
  double fpindex;
  double intindex;
  double lx_fpindex;
  double lx_intindex;
  double lx_memindex;
  double bstdev;
  double bmean;
  struct tm * loctime;
  time_t time_and_date;
  int i;
  char * * _1;
  char * _2;
  int _3;
  int global_allstats.0_4;
  char * _5;
  int _6;
  char * _7;
  int _8;
  double bmean.1_9;
  double _10;
  double _11;
  double bmean.2_12;
  double _13;
  double _14;
  double bmean.3_15;
  _Bool _16;
  _Bool _17;
  _Bool _18;
  double bmean.4_19;
  double _20;
  double _21;
  double bmean.5_22;
  double _23;
  double _24;
  double bmean.6_25;
  double _26;
  double _27;
  _Bool _28;
  _Bool _29;
  _Bool _30;
  unsigned int i.7_31;
  unsigned int _32;
  double bmean.8_33;
  double _34;
  double _35;
  double bmean.9_36;
  double _37;
  double _38;
  int global_allstats.10_39;
  double bstdev.11_40;
  double bmean.12_41;
  double bstdev.13_42;
  double _43;
  double bmean.14_44;
  double _45;
  long unsigned int bnumrun.15_46;
  char * _47;
  int testnum.16_48;
  int global_custrun.17_49;
  double _50;
  double _51;
  struct FILE * global_ofile.18_52;
  int write_to_file.19_53;
  double _54;
  double _55;
  double _56;
  long int _195;
  int _196;
  long unsigned int _197;
  int _198;
  long unsigned int _199;
  int _200;
  long unsigned int _201;
  int _202;
  long unsigned int _203;
  int _204;
  long unsigned int _205;
  int _206;
  long unsigned int _207;
  int _208;
  long unsigned int _209;
  int _210;
  long unsigned int _211;
  int _212;
  long unsigned int _213;
  int _214;
  long unsigned int _215;
  int _216;
  long unsigned int _217;
  int _218;
  long unsigned int _219;
  int _220;
  long unsigned int _221;
  int _222;
  long unsigned int _223;
  int _224;
  long unsigned int _225;
  int _226;
  long unsigned int _227;
  int _228;
  long unsigned int _229;
  int _230;
  long unsigned int _231;
  int _232;
  long unsigned int _233;
  int _234;
  long unsigned int _235;
  int _236;
  long unsigned int global_min_seconds.20_237;
  void (*<T8d0>) (void) _238;

  <bb 2> [0.00%]:
  global_min_ticks = 60;
  global_min_seconds = 5;
  global_allstats = 0;
  global_custrun = 0;
  global_align = 8;
  write_to_file = 0;
  lx_memindex_89 = 1.0e+0;
  lx_intindex_90 = 1.0e+0;
  lx_fpindex_91 = 1.0e+0;
  intindex_92 = 1.0e+0;
  fpindex_93 = 1.0e+0;
  mem_array_ents = 0;
  i_95 = 0;
  goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  tests_to_do[i_57] = 1;
  i_194 = i_57 + 1;

  <bb 4> [0.00%]:
  # i_57 = PHI <i_95(2), i_194(3)>
  if (i_57 <= 9)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [100.00%]:
  global_min_seconds.20_237 = global_min_seconds;
  global_numsortstruct.request_secs = global_min_seconds.20_237;
  global_strsortstruct.request_secs = global_min_seconds.20_237;
  global_bitopstruct.request_secs = global_min_seconds.20_237;
  global_emfloatstruct.request_secs = global_min_seconds.20_237;
  global_fourierstruct.request_secs = global_min_seconds.20_237;
  global_assignstruct.request_secs = global_min_seconds.20_237;
  global_ideastruct.request_secs = global_min_seconds.20_237;
  global_huffstruct.request_secs = global_min_seconds.20_237;
  global_nnetstruct.request_secs = global_min_seconds.20_237;
  global_lustruct.request_secs = global_min_seconds.20_237;
  global_numsortstruct.adjust = 0;
  global_numsortstruct.arraysize = 8111;
  global_strsortstruct.adjust = 0;
  global_strsortstruct.arraysize = 8111;
  global_bitopstruct.adjust = 0;
  global_bitopstruct.bitfieldarraysize = 16384;
  global_emfloatstruct.adjust = 0;
  global_emfloatstruct.arraysize = 3000;
  global_fourierstruct.adjust = 0;
  global_assignstruct.adjust = 0;
  global_ideastruct.adjust = 0;
  global_ideastruct.arraysize = 4000;
  global_huffstruct.adjust = 0;
  global_huffstruct.arraysize = 5000;
  global_nnetstruct.adjust = 0;
  global_lustruct.adjust = 0;
  if (argc_113(D) == 2)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [100.00%]:
  _1 = argv_114(D) + 8;
  _2 = *_1;
  _195 = strtol (_2, 0B, 10);
  _196 = (int) _195;
  _252 = _196;
  _3 = _252;
  testnum = _3;

  <bb 7> [0.00%]:
  output_string ("\nBYTEmark* Native Mode Benchmark ver. 2 (10/95)\n");
  output_string ("Index-split by Andrew D. Balsa (11/97)\n");
  output_string ("Linux/Unix* port by Uwe F. Mayer (12/96,11/97)\n");
  global_allstats.0_4 = global_allstats;
  if (global_allstats.0_4 != 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 8> [100.00%]:
  output_string ("\n");
  output_string ("============================== ALL STATISTICS ===============================\n");
  time (&time_and_date);
  loctime_123 = localtime (&time_and_date);
  _5 = asctime (loctime_123);
  _209 = 1024;
  _210 = __builtin___sprintf_chk (&buffer, 1, _209, "**Date and time of benchmark run: %s", _5);
  _254 = _210;
  output_string (&buffer);
  _207 = 1024;
  _208 = __builtin___sprintf_chk (&buffer, 1, _207, "**Sizeof: char:%u short:%u int:%u long:%u u8:%u u16:%u u32:%u int32:%u\n", 1, 2, 4, 8, 1, 2, 4, 4);
  _256 = _208;
  output_string (&buffer);
  _205 = 1024;
  _206 = __builtin___sprintf_chk (&buffer, 1, _205, "**System used for compilation:\n");
  _258 = _206;
  output_string (&buffer);
  _203 = 1024;
  _204 = __builtin___sprintf_chk (&buffer, 1, _203, "**Linux elvenado 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 \n");
  _260 = _204;
  output_string (&buffer);
  _201 = 1024;
  _202 = __builtin___sprintf_chk (&buffer, 1, _201, "**C compiler: gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) \n");
  _262 = _202;
  output_string (&buffer);
  _199 = 1024;
  _200 = __builtin___sprintf_chk (&buffer, 1, _199, "**libc: libc-2.27.so\n");
  _264 = _200;
  output_string (&buffer);
  _197 = 1024;
  _198 = __builtin___sprintf_chk (&buffer, 1, _197, "**Date of compilation: Mon 24 Aug 10:41:27 BST 2020\n");
  _266 = _198;
  output_string (&buffer);
  output_string ("=============================================================================\n");

  <bb 9> [0.00%]:
  output_string ("\nTEST                : Iterations/sec.  : Old Index   : New Index\n");
  output_string ("                    :                  : Pentium 90* : AMD K6/233*\n");
  output_string ("--------------------:------------------:-------------:------------\n");
  i_143 = testnum;
  goto <bb 28>; [0.00%]

  <bb 10> [0.00%]:
  _6 = tests_to_do[i_58];
  if (_6 != 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 27>; [0.00%]

  <bb 11> [100.00%]:
  _7 = ftestnames[i_58];
  _211 = 1024;
  _212 = __builtin___sprintf_chk (&buffer, 1, _211, "%s    :", _7);
  _282 = _212;
  output_string (&buffer);
  goto <bb 13>; [100.00%]

  <bb 12> [50.00%]:
  _238 = funcpointer[i_58];
  _238 ();

  <bb 13> [100.00%]:
  # i_239 = PHI <0(11), 1(12)>
  if (i_239 <= 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [50.00%]:
  bnumrun_296 = 5;
  _284 = 0;
  _8 = _284;
  if (_8 != 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 15> [0.00%]:
  output_string ("\n** WARNING: The current test result is NOT 95 % statistically certain.\n");
  output_string ("** WARNING: The variation among the individual results is too large.\n");
  output_string ("                    :");

  <bb 16> [100.00%]:
  bmean.1_9 = bmean_297(D);
  _10 = lx_bindex[i_58];
  _11 = bmean.1_9 / _10;
  bmean.2_12 = bmean_297(D);
  _13 = bindex[i_58];
  _14 = bmean.2_12 / _13;
  bmean.3_15 = bmean_297(D);
  _213 = 1024;
  _214 = __builtin___sprintf_chk (&buffer, 1, _213, " %15.5g  :  %9.2f  :  %9.2f\n", bmean.3_15, _14, _11);
  _286 = _214;
  output_string (&buffer);
  _16 = i_58 == 4;
  _17 = i_58 == 8;
  _18 = _16 | _17;
  if (_18 != 0)
    goto <bb 18>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 17> [0.00%]:
  if (i_58 == 9)
    goto <bb 18>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 18> [0.00%]:
  bmean.4_19 = bmean_297(D);
  _20 = bindex[i_58];
  _21 = bmean.4_19 / _20;
  fpindex_181 = fpindex_73 * _21;
  bmean.5_22 = bmean_297(D);
  _23 = lx_bindex[i_58];
  _24 = bmean.5_22 / _23;
  lx_fpindex_182 = lx_fpindex_67 * _24;
  goto <bb 23>; [0.00%]

  <bb 19> [0.00%]:
  bmean.6_25 = bmean_297(D);
  _26 = bindex[i_58];
  _27 = bmean.6_25 / _26;
  intindex_178 = intindex_70 * _27;
  _28 = i_58 == 0;
  _29 = i_58 == 3;
  _30 = _28 | _29;
  if (_30 != 0)
    goto <bb 21>; [0.00%]
  else
    goto <bb 20>; [0.00%]

  <bb 20> [0.00%]:
  i.7_31 = (unsigned int) i_58;
  _32 = i.7_31 + 4294967290;
  if (_32 <= 1)
    goto <bb 21>; [0.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 21> [0.00%]:
  bmean.8_33 = bmean_297(D);
  _34 = lx_bindex[i_58];
  _35 = bmean.8_33 / _34;
  lx_intindex_180 = lx_intindex_64 * _35;
  goto <bb 23>; [0.00%]

  <bb 22> [0.00%]:
  bmean.9_36 = bmean_297(D);
  _37 = lx_bindex[i_58];
  _38 = bmean.9_36 / _37;
  lx_memindex_179 = lx_memindex_61 * _38;

  <bb 23> [0.00%]:
  # lx_memindex_59 = PHI <lx_memindex_61(18), lx_memindex_61(21), lx_memindex_179(22)>
  # lx_intindex_62 = PHI <lx_intindex_64(18), lx_intindex_180(21), lx_intindex_64(22)>
  # lx_fpindex_65 = PHI <lx_fpindex_182(18), lx_fpindex_67(21), lx_fpindex_67(22)>
  # intindex_68 = PHI <intindex_70(18), intindex_178(21), intindex_178(22)>
  # fpindex_71 = PHI <fpindex_181(18), fpindex_73(21), fpindex_73(22)>
  global_allstats.10_39 = global_allstats;
  if (global_allstats.10_39 != 0)
    goto <bb 24>; [0.00%]
  else
    goto <bb 27>; [0.00%]

  <bb 24> [100.00%]:
  bstdev.11_40 = bstdev_298(D);
  _215 = 1024;
  _216 = __builtin___sprintf_chk (&buffer, 1, _215, "  Absolute standard deviation: %g\n", bstdev.11_40);
  _288 = _216;
  output_string (&buffer);
  bmean.12_41 = bmean_297(D);
  if (bmean.12_41 > 1.00000000000000001999189980260288361964776078853415942018e-100)
    goto <bb 25>; [0.00%]
  else
    goto <bb 26>; [0.00%]

  <bb 25> [100.00%]:
  bstdev.13_42 = bstdev_298(D);
  _43 = bstdev.13_42 * 1.0e+2;
  bmean.14_44 = bmean_297(D);
  _45 = _43 / bmean.14_44;
  _217 = 1024;
  _218 = __builtin___sprintf_chk (&buffer, 1, _217, "  Relative standard deviation: %g %%\n", _45);
  _290 = _218;
  output_string (&buffer);

  <bb 26> [100.00%]:
  bnumrun.15_46 = bnumrun_296;
  _221 = 1024;
  _222 = __builtin___sprintf_chk (&buffer, 1, _221, "  Number of runs: %lu\n", bnumrun.15_46);
  _292 = _222;
  output_string (&buffer);
  show_stats (i_58);
  _47 = ftestnames[i_58];
  _219 = 1024;
  _220 = __builtin___sprintf_chk (&buffer, 1, _219, "Done with %s\n\n", _47);
  _294 = _220;
  output_string (&buffer);

  <bb 27> [0.00%]:
  # lx_memindex_60 = PHI <lx_memindex_61(10), lx_memindex_59(23), lx_memindex_59(26)>
  # lx_intindex_63 = PHI <lx_intindex_64(10), lx_intindex_62(23), lx_intindex_62(26)>
  # lx_fpindex_66 = PHI <lx_fpindex_67(10), lx_fpindex_65(23), lx_fpindex_65(26)>
  # intindex_69 = PHI <intindex_70(10), intindex_68(23), intindex_68(26)>
  # fpindex_72 = PHI <fpindex_73(10), fpindex_71(23), fpindex_71(26)>
  i_192 = i_58 + 1;

  <bb 28> [0.00%]:
  # i_58 = PHI <i_143(9), i_192(27)>
  # lx_memindex_61 = PHI <lx_memindex_89(9), lx_memindex_60(27)>
  # lx_intindex_64 = PHI <lx_intindex_90(9), lx_intindex_63(27)>
  # lx_fpindex_67 = PHI <lx_fpindex_91(9), lx_fpindex_66(27)>
  # intindex_70 = PHI <intindex_92(9), intindex_69(27)>
  # fpindex_73 = PHI <fpindex_93(9), fpindex_72(27)>
  testnum.16_48 = testnum;
  if (i_58 <= testnum.16_48)
    goto <bb 10>; [0.00%]
  else
    goto <bb 29>; [0.00%]

  <bb 29> [0.00%]:
  global_custrun.17_49 = global_custrun;
  if (global_custrun.17_49 == 0)
    goto <bb 30>; [0.00%]
  else
    goto <bb 31>; [0.00%]

  <bb 30> [100.00%]:
  output_string ("==========================ORIGINAL BYTEMARK RESULTS==========================\n");
  _50 = pow (intindex_70, 1.428570000000000117523768494720570743083953857421875e-1);
  _235 = 1024;
  _236 = __builtin___sprintf_chk (&buffer, 1, _235, "INTEGER INDEX       : %.3f\n", _50);
  _268 = _236;
  output_string (&buffer);
  _51 = pow (fpindex_73, 3.3333000000000001517008740847813896834850311279296875e-1);
  _233 = 1024;
  _234 = __builtin___sprintf_chk (&buffer, 1, _233, "FLOATING-POINT INDEX: %.3f\n", _51);
  _270 = _234;
  output_string (&buffer);
  output_string ("Baseline (MSDOS*)   : Pentium* 90, 256 KB L2-cache, Watcom* compiler 10.0\n");
  output_string ("==============================LINUX DATA BELOW===============================\n");
  global_ofile.18_52 = global_ofile;
  write_to_file.19_53 = write_to_file;
  hardware (write_to_file.19_53, global_ofile.18_52);
  _231 = 1024;
  _232 = __builtin___sprintf_chk (&buffer, 1, _231, "C compiler          : gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) \n");
  _272 = _232;
  output_string (&buffer);
  _229 = 1024;
  _230 = __builtin___sprintf_chk (&buffer, 1, _229, "libc                : libc-2.27.so\n");
  _274 = _230;
  output_string (&buffer);
  _54 = pow (lx_memindex_61, 3.33333333299999978738270556277711875736713409423828125e-1);
  _227 = 1024;
  _228 = __builtin___sprintf_chk (&buffer, 1, _227, "MEMORY INDEX        : %.3f\n", _54);
  _276 = _228;
  output_string (&buffer);
  _55 = pow (lx_intindex_64, 2.5e-1);
  _225 = 1024;
  _226 = __builtin___sprintf_chk (&buffer, 1, _225, "INTEGER INDEX       : %.3f\n", _55);
  _278 = _226;
  output_string (&buffer);
  _56 = pow (lx_fpindex_67, 3.33333333299999978738270556277711875736713409423828125e-1);
  _223 = 1024;
  _224 = __builtin___sprintf_chk (&buffer, 1, _223, "FLOATING-POINT INDEX: %.3f\n", _56);
  _280 = _224;
  output_string (&buffer);
  output_string ("Baseline (LINUX)    : AMD K6/233*, 512 KB L2-cache, gcc 2.7.2.3, libc-5.4.38\n");
  output_string ("* Trademarks are property of their respective holder.\n");

  <bb 31> [0.00%]:
  exit (0);

}


