
;; Function sprintf (sprintf, funcdef_no=10, decl_uid=814, cgraph_uid=10, symbol_order=10)

__attribute__((__artificial__, __gnu_inline__, __always_inline__, __leaf__, __nothrow__))
sprintf (char * restrict __s, const char * restrict __fmt)
{
  long unsigned int _1;
  int _6;

  <bb 2> [0.00%]:
  _1 = __builtin_object_size (__s_3(D), 1);
  _6 = __builtin___sprintf_chk (__s_3(D), 1, _1, __fmt_4(D), __builtin_va_arg_pack ());
  return _6;

}



;; Function fprintf (fprintf, funcdef_no=14, decl_uid=776, cgraph_uid=14, symbol_order=14)

__attribute__((__artificial__, __gnu_inline__, __always_inline__))
fprintf (struct FILE * restrict __stream, const char * restrict __fmt)
{
  int _5;

  <bb 2> [0.00%]:
  _5 = __fprintf_chk (__stream_2(D), 1, __fmt_3(D), __builtin_va_arg_pack ());
  return _5;

}



;; Function printf (printf, funcdef_no=15, decl_uid=798, cgraph_uid=15, symbol_order=15)

__attribute__((__artificial__, __gnu_inline__, __always_inline__))
printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [0.00%]:
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function atoi (atoi, funcdef_no=23, decl_uid=2467, cgraph_uid=23, symbol_order=23)

__attribute__((__gnu_inline__, __pure__, __leaf__, __nothrow__))
atoi (const char * __nptr)
{
  long int _1;
  int _5;

  <bb 2> [0.00%]:
  _1 = strtol (__nptr_3(D), 0B, 10);
  _5 = (int) _1;
  return _5;

}



;; Function set_request_secs (set_request_secs, funcdef_no=60, decl_uid=4712, cgraph_uid=60, symbol_order=92)

set_request_secs ()
{
  long unsigned int global_min_seconds.20_1;
  long unsigned int global_min_seconds.21_2;
  long unsigned int global_min_seconds.22_3;
  long unsigned int global_min_seconds.23_4;
  long unsigned int global_min_seconds.24_5;
  long unsigned int global_min_seconds.25_6;
  long unsigned int global_min_seconds.26_7;
  long unsigned int global_min_seconds.27_8;
  long unsigned int global_min_seconds.28_9;
  long unsigned int global_min_seconds.29_10;

  <bb 2> [0.00%]:
  global_min_seconds.20_1 = global_min_seconds;
  global_numsortstruct.request_secs = global_min_seconds.20_1;
  global_min_seconds.21_2 = global_min_seconds;
  global_strsortstruct.request_secs = global_min_seconds.21_2;
  global_min_seconds.22_3 = global_min_seconds;
  global_bitopstruct.request_secs = global_min_seconds.22_3;
  global_min_seconds.23_4 = global_min_seconds;
  global_emfloatstruct.request_secs = global_min_seconds.23_4;
  global_min_seconds.24_5 = global_min_seconds;
  global_fourierstruct.request_secs = global_min_seconds.24_5;
  global_min_seconds.25_6 = global_min_seconds;
  global_assignstruct.request_secs = global_min_seconds.25_6;
  global_min_seconds.26_7 = global_min_seconds;
  global_ideastruct.request_secs = global_min_seconds.26_7;
  global_min_seconds.27_8 = global_min_seconds;
  global_huffstruct.request_secs = global_min_seconds.27_8;
  global_min_seconds.28_9 = global_min_seconds;
  global_nnetstruct.request_secs = global_min_seconds.28_9;
  global_min_seconds.29_10 = global_min_seconds;
  global_lustruct.request_secs = global_min_seconds.29_10;
  return;

}



;; Function getscore (getscore, funcdef_no=63, decl_uid=4725, cgraph_uid=63, symbol_order=95)

getscore (int fid)
{
  double _1;
  double _4;
  double _5;
  double _6;
  double _7;
  double _8;
  double _9;
  double _10;
  double _11;
  double _12;
  double _13;
  double _14;

  <bb 2> [0.00%]:
  switch (fid_2(D)) <default: <L10> [0.00%], case 0: <L0> [0.00%], case 1: <L1> [0.00%], case 2: <L2> [0.00%], case 3: <L3> [0.00%], case 4: <L4> [0.00%], case 5: <L5> [0.00%], case 6: <L6> [0.00%], case 7: <L7> [0.00%], case 8: <L8> [0.00%], case 9: <L9> [0.00%]>

<L0> [0.00%]:
  _13 = global_numsortstruct.sortspersec;
  goto <bb 14>; [0.00%]

<L1> [0.00%]:
  _12 = global_strsortstruct.sortspersec;
  goto <bb 14>; [0.00%]

<L2> [0.00%]:
  _11 = global_bitopstruct.bitopspersec;
  goto <bb 14>; [0.00%]

<L3> [0.00%]:
  _10 = global_emfloatstruct.emflops;
  goto <bb 14>; [0.00%]

<L4> [0.00%]:
  _9 = global_fourierstruct.fflops;
  goto <bb 14>; [0.00%]

<L5> [0.00%]:
  _8 = global_assignstruct.iterspersec;
  goto <bb 14>; [0.00%]

<L6> [0.00%]:
  _7 = global_ideastruct.iterspersec;
  goto <bb 14>; [0.00%]

<L7> [0.00%]:
  _6 = global_huffstruct.iterspersec;
  goto <bb 14>; [0.00%]

<L8> [0.00%]:
  _5 = global_nnetstruct.iterspersec;
  goto <bb 14>; [0.00%]

<L9> [0.00%]:
  _4 = global_lustruct.iterspersec;
  goto <bb 14>; [0.00%]

<L10> [0.00%]:
  _14 = 0.0;

  <bb 14> [0.00%]:
  # _1 = PHI <_13(3), _12(4), _11(5), _10(6), _9(7), _8(8), _7(9), _6(10), _5(11), _4(12), _14(13)>
  return _1;

}



;; Function bench_with_confidence (bench_with_confidence, funcdef_no=61, decl_uid=4717, cgraph_uid=61, symbol_order=93)

bench_with_confidence (int fid, double * mean, double * stdev, long unsigned int * numtries)
{
  int i;
  double myscores[30];
  void (*<T8d0>) (void) _1;
  double _2;
  int _9;

  <bb 2> [0.00%]:
  i_5 = 0;
  goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _1 = funcpointer[fid_11(D)];
  _1 ();
  _2 = getscore (fid_11(D));
  myscores[i_3] = _2;
  i_15 = i_3 + 1;

  <bb 4> [0.00%]:
  # i_3 = PHI <i_5(2), i_15(3)>
  if (i_3 <= 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  *numtries_7(D) = 5;
  _9 = 0;
  myscores ={v} {CLOBBER};
  return _9;

}



;; Function output_string (output_string, funcdef_no=64, decl_uid=4727, cgraph_uid=64, symbol_order=96)

output_string (char * buffer)
{
  int write_to_file.30_1;
  struct FILE * global_ofile.31_2;

  <bb 2> [0.00%]:
  printf ("%s", buffer_5(D));
  write_to_file.30_1 = write_to_file;
  if (write_to_file.30_1 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  global_ofile.31_2 = global_ofile;
  fprintf (global_ofile.31_2, "%s", buffer_5(D));

  <bb 4> [0.00%]:
  return;

}



;; Function show_stats (show_stats, funcdef_no=65, decl_uid=4729, cgraph_uid=65, symbol_order=97)

show_stats (int bid)
{
  char buffer[80];
  short unsigned int _1;
  int _2;
  long unsigned int _3;
  short unsigned int _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;

  <bb 2> [0.00%]:
  switch (bid_20(D)) <default: <L14> [0.00%], case 0: <L0> [0.00%], case 1: <L1> [0.00%], case 2: <L2> [0.00%], case 3: <L3> [0.00%], case 4: <L4> [0.00%], case 5: <L5> [0.00%], case 6: <L6> [0.00%], case 7: <L7> [0.00%], case 8: <L8> [0.00%], case 9: <L9> [0.00%]>

<L0> [0.00%]:
  _1 = global_numsortstruct.numarrays;
  _2 = (int) _1;
  sprintf (&buffer, "  Number of arrays: %d\n", _2);
  output_string (&buffer);
  _3 = global_numsortstruct.arraysize;
  sprintf (&buffer, "  Array size: %ld\n", _3);
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L1> [0.00%]:
  _4 = global_strsortstruct.numarrays;
  _5 = (int) _4;
  sprintf (&buffer, "  Number of arrays: %d\n", _5);
  output_string (&buffer);
  _6 = global_strsortstruct.arraysize;
  sprintf (&buffer, "  Array size: %ld\n", _6);
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L2> [0.00%]:
  _7 = global_bitopstruct.bitoparraysize;
  sprintf (&buffer, "  Operations array size: %ld\n", _7);
  output_string (&buffer);
  _8 = global_bitopstruct.bitfieldarraysize;
  sprintf (&buffer, "  Bitfield array size: %ld\n", _8);
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L3> [0.00%]:
  _9 = global_emfloatstruct.loops;
  sprintf (&buffer, "  Number of loops: %lu\n", _9);
  output_string (&buffer);
  _10 = global_emfloatstruct.arraysize;
  sprintf (&buffer, "  Array size: %lu\n", _10);
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L4> [0.00%]:
  _11 = global_fourierstruct.arraysize;
  sprintf (&buffer, "  Number of coefficients: %lu\n", _11);
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L5> [0.00%]:
  _12 = global_assignstruct.numarrays;
  sprintf (&buffer, "  Number of arrays: %lu\n", _12);
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L6> [0.00%]:
  _13 = global_ideastruct.arraysize;
  sprintf (&buffer, "  Array size: %lu\n", _13);
  output_string (&buffer);
  _14 = global_ideastruct.loops;
  sprintf (&buffer, " Number of loops: %lu\n", _14);
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L7> [0.00%]:
  _15 = global_huffstruct.arraysize;
  sprintf (&buffer, "  Array size: %lu\n", _15);
  output_string (&buffer);
  _16 = global_huffstruct.loops;
  sprintf (&buffer, "  Number of loops: %lu\n", _16);
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L8> [0.00%]:
  _17 = global_nnetstruct.loops;
  sprintf (&buffer, "  Number of loops: %lu\n", _17);
  output_string (&buffer);
  goto <bb 13> (<L14>); [0.00%]

<L9> [0.00%]:
  _18 = global_lustruct.numarrays;
  sprintf (&buffer, "  Number of arrays: %lu\n", _18);
  output_string (&buffer);

<L14> [0.00%]:
  buffer ={v} {CLOBBER};
  return;

}



;; Function main (main, funcdef_no=54, decl_uid=4760, cgraph_uid=54, symbol_order=86)

main (int argc, char * * argv)
{
  long unsigned int bnumrun;
  double fpindex;
  double intindex;
  double lx_fpindex;
  double lx_intindex;
  double lx_memindex;
  double bstdev;
  double bmean;
  struct tm * loctime;
  time_t time_and_date;
  int i;
  char * * _1;
  char * _2;
  int _3;
  int global_allstats.0_4;
  char * _5;
  int _6;
  char * _7;
  int _8;
  double bmean.1_9;
  double _10;
  double _11;
  double bmean.2_12;
  double _13;
  double _14;
  double bmean.3_15;
  _Bool _16;
  _Bool _17;
  _Bool _18;
  double bmean.4_19;
  double _20;
  double _21;
  double bmean.5_22;
  double _23;
  double _24;
  double bmean.6_25;
  double _26;
  double _27;
  _Bool _28;
  _Bool _29;
  _Bool _30;
  unsigned int i.7_31;
  unsigned int _32;
  double bmean.8_33;
  double _34;
  double _35;
  double bmean.9_36;
  double _37;
  double _38;
  int global_allstats.10_39;
  double bstdev.11_40;
  double bmean.12_41;
  double bstdev.13_42;
  double _43;
  double bmean.14_44;
  double _45;
  long unsigned int bnumrun.15_46;
  char * _47;
  int testnum.16_48;
  int global_custrun.17_49;
  double _50;
  double _51;
  struct FILE * global_ofile.18_52;
  int write_to_file.19_53;
  double _54;
  double _55;
  double _56;

  <bb 2> [0.00%]:
  global_min_ticks = 60;
  global_min_seconds = 5;
  global_allstats = 0;
  global_custrun = 0;
  global_align = 8;
  write_to_file = 0;
  lx_memindex_89 = 1.0e+0;
  lx_intindex_90 = 1.0e+0;
  lx_fpindex_91 = 1.0e+0;
  intindex_92 = 1.0e+0;
  fpindex_93 = 1.0e+0;
  mem_array_ents = 0;
  i_95 = 0;
  goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  tests_to_do[i_57] = 1;
  i_194 = i_57 + 1;

  <bb 4> [0.00%]:
  # i_57 = PHI <i_95(2), i_194(3)>
  if (i_57 <= 9)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  set_request_secs ();
  global_numsortstruct.adjust = 0;
  global_numsortstruct.arraysize = 8111;
  global_strsortstruct.adjust = 0;
  global_strsortstruct.arraysize = 8111;
  global_bitopstruct.adjust = 0;
  global_bitopstruct.bitfieldarraysize = 16384;
  global_emfloatstruct.adjust = 0;
  global_emfloatstruct.arraysize = 3000;
  global_fourierstruct.adjust = 0;
  global_assignstruct.adjust = 0;
  global_ideastruct.adjust = 0;
  global_ideastruct.arraysize = 4000;
  global_huffstruct.adjust = 0;
  global_huffstruct.arraysize = 5000;
  global_nnetstruct.adjust = 0;
  global_lustruct.adjust = 0;
  if (argc_113(D) == 2)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  _1 = argv_114(D) + 8;
  _2 = *_1;
  _3 = atoi (_2);
  testnum = _3;

  <bb 7> [0.00%]:
  output_string ("\nBYTEmark* Native Mode Benchmark ver. 2 (10/95)\n");
  output_string ("Index-split by Andrew D. Balsa (11/97)\n");
  output_string ("Linux/Unix* port by Uwe F. Mayer (12/96,11/97)\n");
  global_allstats.0_4 = global_allstats;
  if (global_allstats.0_4 != 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 8> [0.00%]:
  output_string ("\n");
  output_string ("============================== ALL STATISTICS ===============================\n");
  time (&time_and_date);
  loctime_123 = localtime (&time_and_date);
  _5 = asctime (loctime_123);
  sprintf (&buffer, "**Date and time of benchmark run: %s", _5);
  output_string (&buffer);
  sprintf (&buffer, "**Sizeof: char:%u short:%u int:%u long:%u u8:%u u16:%u u32:%u int32:%u\n", 1, 2, 4, 8, 1, 2, 4, 4);
  output_string (&buffer);
  sprintf (&buffer, "**System used for compilation:\n");
  output_string (&buffer);
  sprintf (&buffer, "**Linux elvenado 4.15.0-112-generic #113-Ubuntu SMP Thu Jul 9 23:41:39 UTC 2020 \n");
  output_string (&buffer);
  sprintf (&buffer, "**C compiler: gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) \n");
  output_string (&buffer);
  sprintf (&buffer, "**libc: libc-2.27.so\n");
  output_string (&buffer);
  sprintf (&buffer, "**Date of compilation: Mon 24 Aug 10:41:27 BST 2020\n");
  output_string (&buffer);
  output_string ("=============================================================================\n");

  <bb 9> [0.00%]:
  output_string ("\nTEST                : Iterations/sec.  : Old Index   : New Index\n");
  output_string ("                    :                  : Pentium 90* : AMD K6/233*\n");
  output_string ("--------------------:------------------:-------------:------------\n");
  i_143 = testnum;
  goto <bb 25>; [0.00%]

  <bb 10> [0.00%]:
  _6 = tests_to_do[i_58];
  if (_6 != 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 24>; [0.00%]

  <bb 11> [0.00%]:
  _7 = ftestnames[i_58];
  sprintf (&buffer, "%s    :", _7);
  output_string (&buffer);
  _8 = bench_with_confidence.isra.0 (i_58, &bnumrun);
  if (_8 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 12> [0.00%]:
  output_string ("\n** WARNING: The current test result is NOT 95 % statistically certain.\n");
  output_string ("** WARNING: The variation among the individual results is too large.\n");
  output_string ("                    :");

  <bb 13> [0.00%]:
  bmean.1_9 = bmean;
  _10 = lx_bindex[i_58];
  _11 = bmean.1_9 / _10;
  bmean.2_12 = bmean;
  _13 = bindex[i_58];
  _14 = bmean.2_12 / _13;
  bmean.3_15 = bmean;
  sprintf (&buffer, " %15.5g  :  %9.2f  :  %9.2f\n", bmean.3_15, _14, _11);
  output_string (&buffer);
  _16 = i_58 == 4;
  _17 = i_58 == 8;
  _18 = _16 | _17;
  if (_18 != 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 14> [0.00%]:
  if (i_58 == 9)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 15> [0.00%]:
  bmean.4_19 = bmean;
  _20 = bindex[i_58];
  _21 = bmean.4_19 / _20;
  fpindex_181 = fpindex_73 * _21;
  bmean.5_22 = bmean;
  _23 = lx_bindex[i_58];
  _24 = bmean.5_22 / _23;
  lx_fpindex_182 = lx_fpindex_67 * _24;
  goto <bb 20>; [0.00%]

  <bb 16> [0.00%]:
  bmean.6_25 = bmean;
  _26 = bindex[i_58];
  _27 = bmean.6_25 / _26;
  intindex_178 = intindex_70 * _27;
  _28 = i_58 == 0;
  _29 = i_58 == 3;
  _30 = _28 | _29;
  if (_30 != 0)
    goto <bb 18>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 17> [0.00%]:
  i.7_31 = (unsigned int) i_58;
  _32 = i.7_31 + 4294967290;
  if (_32 <= 1)
    goto <bb 18>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 18> [0.00%]:
  bmean.8_33 = bmean;
  _34 = lx_bindex[i_58];
  _35 = bmean.8_33 / _34;
  lx_intindex_180 = lx_intindex_64 * _35;
  goto <bb 20>; [0.00%]

  <bb 19> [0.00%]:
  bmean.9_36 = bmean;
  _37 = lx_bindex[i_58];
  _38 = bmean.9_36 / _37;
  lx_memindex_179 = lx_memindex_61 * _38;

  <bb 20> [0.00%]:
  # lx_memindex_59 = PHI <lx_memindex_61(15), lx_memindex_61(18), lx_memindex_179(19)>
  # lx_intindex_62 = PHI <lx_intindex_64(15), lx_intindex_180(18), lx_intindex_64(19)>
  # lx_fpindex_65 = PHI <lx_fpindex_182(15), lx_fpindex_67(18), lx_fpindex_67(19)>
  # intindex_68 = PHI <intindex_70(15), intindex_178(18), intindex_178(19)>
  # fpindex_71 = PHI <fpindex_181(15), fpindex_73(18), fpindex_73(19)>
  global_allstats.10_39 = global_allstats;
  if (global_allstats.10_39 != 0)
    goto <bb 21>; [0.00%]
  else
    goto <bb 24>; [0.00%]

  <bb 21> [0.00%]:
  bstdev.11_40 = bstdev;
  sprintf (&buffer, "  Absolute standard deviation: %g\n", bstdev.11_40);
  output_string (&buffer);
  bmean.12_41 = bmean;
  if (bmean.12_41 > 1.00000000000000001999189980260288361964776078853415942018e-100)
    goto <bb 22>; [0.00%]
  else
    goto <bb 23>; [0.00%]

  <bb 22> [0.00%]:
  bstdev.13_42 = bstdev;
  _43 = bstdev.13_42 * 1.0e+2;
  bmean.14_44 = bmean;
  _45 = _43 / bmean.14_44;
  sprintf (&buffer, "  Relative standard deviation: %g %%\n", _45);
  output_string (&buffer);

  <bb 23> [0.00%]:
  bnumrun.15_46 = bnumrun;
  sprintf (&buffer, "  Number of runs: %lu\n", bnumrun.15_46);
  output_string (&buffer);
  show_stats (i_58);
  _47 = ftestnames[i_58];
  sprintf (&buffer, "Done with %s\n\n", _47);
  output_string (&buffer);

  <bb 24> [0.00%]:
  # lx_memindex_60 = PHI <lx_memindex_61(10), lx_memindex_59(20), lx_memindex_59(23)>
  # lx_intindex_63 = PHI <lx_intindex_64(10), lx_intindex_62(20), lx_intindex_62(23)>
  # lx_fpindex_66 = PHI <lx_fpindex_67(10), lx_fpindex_65(20), lx_fpindex_65(23)>
  # intindex_69 = PHI <intindex_70(10), intindex_68(20), intindex_68(23)>
  # fpindex_72 = PHI <fpindex_73(10), fpindex_71(20), fpindex_71(23)>
  i_192 = i_58 + 1;

  <bb 25> [0.00%]:
  # i_58 = PHI <i_143(9), i_192(24)>
  # lx_memindex_61 = PHI <lx_memindex_89(9), lx_memindex_60(24)>
  # lx_intindex_64 = PHI <lx_intindex_90(9), lx_intindex_63(24)>
  # lx_fpindex_67 = PHI <lx_fpindex_91(9), lx_fpindex_66(24)>
  # intindex_70 = PHI <intindex_92(9), intindex_69(24)>
  # fpindex_73 = PHI <fpindex_93(9), fpindex_72(24)>
  testnum.16_48 = testnum;
  if (i_58 <= testnum.16_48)
    goto <bb 10>; [0.00%]
  else
    goto <bb 26>; [0.00%]

  <bb 26> [0.00%]:
  global_custrun.17_49 = global_custrun;
  if (global_custrun.17_49 == 0)
    goto <bb 27>; [0.00%]
  else
    goto <bb 28>; [0.00%]

  <bb 27> [0.00%]:
  output_string ("==========================ORIGINAL BYTEMARK RESULTS==========================\n");
  _50 = pow (intindex_70, 1.428570000000000117523768494720570743083953857421875e-1);
  sprintf (&buffer, "INTEGER INDEX       : %.3f\n", _50);
  output_string (&buffer);
  _51 = pow (fpindex_73, 3.3333000000000001517008740847813896834850311279296875e-1);
  sprintf (&buffer, "FLOATING-POINT INDEX: %.3f\n", _51);
  output_string (&buffer);
  output_string ("Baseline (MSDOS*)   : Pentium* 90, 256 KB L2-cache, Watcom* compiler 10.0\n");
  output_string ("==============================LINUX DATA BELOW===============================\n");
  global_ofile.18_52 = global_ofile;
  write_to_file.19_53 = write_to_file;
  hardware (write_to_file.19_53, global_ofile.18_52);
  sprintf (&buffer, "C compiler          : gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) \n");
  output_string (&buffer);
  sprintf (&buffer, "libc                : libc-2.27.so\n");
  output_string (&buffer);
  _54 = pow (lx_memindex_61, 3.33333333299999978738270556277711875736713409423828125e-1);
  sprintf (&buffer, "MEMORY INDEX        : %.3f\n", _54);
  output_string (&buffer);
  _55 = pow (lx_intindex_64, 2.5e-1);
  sprintf (&buffer, "INTEGER INDEX       : %.3f\n", _55);
  output_string (&buffer);
  _56 = pow (lx_fpindex_67, 3.33333333299999978738270556277711875736713409423828125e-1);
  sprintf (&buffer, "FLOATING-POINT INDEX: %.3f\n", _56);
  output_string (&buffer);
  output_string ("Baseline (LINUX)    : AMD K6/233*, 512 KB L2-cache, gcc 2.7.2.3, libc-5.4.38\n");
  output_string ("* Trademarks are property of their respective holder.\n");

  <bb 28> [0.00%]:
  exit (0);

}


