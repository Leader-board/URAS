
;; Function AllocateMemory (AllocateMemory, funcdef_no=52, decl_uid=3587, cgraph_uid=52, symbol_order=52)

Removing basic block 12
Removing basic block 13
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 19 }
;; 9 succs { 10 13 }
;; 10 succs { 11 16 }
;; 11 succs { 16 }
;; 12 succs { 13 }
;; 13 succs { 12 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 1 }
AllocateMemory (long unsigned int nbytes, int * errorcode)
{
  long unsigned int adj_addr;
  long unsigned int true_addr;
  farvoid * returnval;
  farvoid * D.3734;

  <bb 2> [0.00%]:
  global_align.0_1 = global_align;
  _2 = (long int) global_align.0_1;
  _3 = _2 * 2;
  _4 = (long unsigned int) _3;
  _5 = nbytes + _4;
  returnval = malloc (_5);
  if (returnval == 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  *errorcode = 1;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  *errorcode = 0;

  <bb 5> [0.00%]:
  true_addr = (long unsigned int) returnval;
  adj_addr = true_addr;
  global_align.1_6 = global_align;
  if (global_align.1_6 == 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 6> [0.00%]:
  _7 = AddMemArray (true_addr, adj_addr);
  if (_7 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [0.00%]:
  *errorcode = 2;

  <bb 8> [0.00%]:
  D.3734 = returnval;
  goto <bb 19>; [0.00%]

  <bb 9> [0.00%]:
  global_align.2_8 = global_align;
  if (global_align.2_8 == 1)
    goto <bb 10>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 10> [0.00%]:
  _9 = true_addr & 1;
  if (_9 == 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 11> [0.00%]:
  adj_addr = adj_addr + 1;
  goto <bb 16>; [0.00%]

  <bb 12> [0.00%]:
  adj_addr = adj_addr + 1;

  <bb 13> [0.00%]:
  global_align.3_10 = global_align;
  _11 = (long unsigned int) global_align.3_10;
  _12 = adj_addr % _11;
  if (_12 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 14> [0.00%]:
  global_align.4_13 = global_align;
  _14 = global_align.4_13 * 2;
  _15 = (long unsigned int) _14;
  _16 = adj_addr % _15;
  if (_16 == 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 15> [0.00%]:
  global_align.5_17 = global_align;
  _18 = (long unsigned int) global_align.5_17;
  adj_addr = adj_addr + _18;

  <bb 16> [0.00%]:
  returnval = (farvoid *) adj_addr;
  _19 = AddMemArray (true_addr, adj_addr);
  if (_19 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 17> [0.00%]:
  *errorcode = 2;

  <bb 18> [0.00%]:
  D.3734 = returnval;

  <bb 19> [0.00%]:
  return D.3734;

}



;; Function FreeMemory (FreeMemory, funcdef_no=53, decl_uid=3590, cgraph_uid=53, symbol_order=53)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
FreeMemory (farvoid * mempointer, int * errorcode)
{
  long unsigned int true_addr;
  long unsigned int adj_addr;

  <bb 2> [0.00%]:
  adj_addr = (long unsigned int) mempointer;
  _1 = RemoveMemArray (adj_addr, &true_addr);
  if (_1 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  *errorcode = 3;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  true_addr.6_2 = true_addr;
  mempointer = (farvoid *) true_addr.6_2;
  free (mempointer);
  *errorcode = 0;

  <bb 5> [0.00%]:
  true_addr = {CLOBBER};
  return;

}



;; Function MoveMemory (MoveMemory, funcdef_no=54, decl_uid=3594, cgraph_uid=54, symbol_order=54)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
MoveMemory (farvoid * destination, farvoid * source, long unsigned int nbytes)
{
  <bb 2> [0.00%]:
  memmove (destination, source, nbytes);
  return;

}



;; Function memmove (<unset-asm-name>, funcdef_no=44, decl_uid=730, cgraph_uid=44, symbol_order=44)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((__artificial__, __gnu_inline__, __always_inline__, __nothrow__, __leaf__))
memmove (void * __dest, const void * __src, size_t __len)
{
  void * D.3749;

  <bb 2> [0.00%]:
  _1 = __builtin_object_size (__dest, 0);
  D.3749 = __builtin___memmove_chk (__dest, __src, __len, _1);
  return D.3749;

}



;; Function InitMemArray (InitMemArray, funcdef_no=55, decl_uid=3596, cgraph_uid=55, symbol_order=55)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
InitMemArray ()
{
  <bb 2> [0.00%]:
  mem_array_ents = 0;
  return;

}



;; Function AddMemArray (AddMemArray, funcdef_no=56, decl_uid=3599, cgraph_uid=56, symbol_order=56)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
AddMemArray (long unsigned int true_addr, long unsigned int adj_addr)
{
  int D.3754;

  <bb 2> [0.00%]:
  mem_array_ents.7_1 = mem_array_ents;
  if (mem_array_ents.7_1 > 19)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  D.3754 = -1;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  mem_array_ents.8_2 = mem_array_ents;
  mem_array[0][mem_array_ents.8_2] = true_addr;
  mem_array_ents.9_3 = mem_array_ents;
  mem_array[1][mem_array_ents.9_3] = adj_addr;
  mem_array_ents.10_4 = mem_array_ents;
  _5 = mem_array_ents.10_4 + 1;
  mem_array_ents = _5;
  D.3754 = 0;

  <bb 5> [0.00%]:
  return D.3754;

}



;; Function RemoveMemArray (RemoveMemArray, funcdef_no=57, decl_uid=3602, cgraph_uid=57, symbol_order=57)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 2
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 3
;; 2 succs { 9 }
;; 3 succs { 4 8 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 11 }
;; 8 succs { 9 }
;; 9 succs { 3 10 }
;; 10 succs { 11 }
;; 11 succs { 1 }
RemoveMemArray (long unsigned int adj_addr, long unsigned int * true_addr)
{
  int j;
  int i;
  int D.3758;

  <bb 2> [0.00%]:
  i = 0;
  goto <bb 9>; [0.00%]

  <bb 3> [0.00%]:
  _1 = mem_array[1][i];
  if (adj_addr == _1)
    goto <bb 4>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 4> [0.00%]:
  _2 = mem_array[0][i];
  *true_addr = _2;
  j = i;
  goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  _3 = j + 1;
  _4 = mem_array[0][_3];
  mem_array[0][j] = _4;
  _5 = j + 1;
  _6 = mem_array[1][_5];
  mem_array[1][j] = _6;
  j = j + 1;

  <bb 6> [0.00%]:
  _7 = j + 1;
  mem_array_ents.11_8 = mem_array_ents;
  if (_7 < mem_array_ents.11_8)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 7> [0.00%]:
  mem_array_ents.12_9 = mem_array_ents;
  _10 = mem_array_ents.12_9 + -1;
  mem_array_ents = _10;
  D.3758 = 0;
  goto <bb 11>; [0.00%]

  <bb 8> [0.00%]:
  i = i + 1;

  <bb 9> [0.00%]:
  mem_array_ents.13_11 = mem_array_ents;
  if (i < mem_array_ents.13_11)
    goto <bb 3>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 10> [0.00%]:
  D.3758 = -1;

  <bb 11> [0.00%]:
  return D.3758;

}



;; Function CreateFile (CreateFile, funcdef_no=58, decl_uid=3609, cgraph_uid=58, symbol_order=58)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
CreateFile (char * filename, int * errorcode)
{
  struct FILE * fhandle;

  <bb 2> [0.00%]:
  fhandle = fopen (filename, "w");
  if (fhandle == 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  *errorcode = 10;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  *errorcode = 0;

  <bb 5> [0.00%]:
  fclose (fhandle);
  return;

}



;; Function bmOpenFile (bmOpenFile, funcdef_no=59, decl_uid=3612, cgraph_uid=59, symbol_order=59)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
bmOpenFile (char * fname, int * errorcode)
{
  struct FILE * fhandle;
  struct FILE * D.3767;

  <bb 2> [0.00%]:
  fhandle = fopen (fname, "w+");
  if (fhandle == 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  *errorcode = 13;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  *errorcode = 0;

  <bb 5> [0.00%]:
  D.3767 = fhandle;
  return D.3767;

}



;; Function CloseFile (CloseFile, funcdef_no=60, decl_uid=3615, cgraph_uid=60, symbol_order=60)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
CloseFile (struct FILE * fhandle, int * errorcode)
{
  <bb 2> [0.00%]:
  fclose (fhandle);
  *errorcode = 0;
  return;

}



;; Function readfile (readfile, funcdef_no=61, decl_uid=3621, cgraph_uid=61, symbol_order=61)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
readfile (struct FILE * fhandle, long unsigned int offset, long unsigned int nbytes, void * buffer, int * errorcode)
{
  size_t readcode;
  size_t nelems;
  long int newoffset;

  <bb 2> [0.00%]:
  *errorcode = 0;
  offset.14_1 = (long int) offset;
  _2 = fseek (fhandle, offset.14_1, 0);
  newoffset = (long int) _2;
  if (newoffset == -1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  *errorcode = 14;
  goto <bb 6>; [0.00%]

  <bb 4> [0.00%]:
  nelems = nbytes & 65535;
  readcode = fread (buffer, 1, nelems, fhandle);
  if (readcode != nelems)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  *errorcode = 11;

  <bb 6> [0.00%]:
  return;

}



;; Function fread (fread, funcdef_no=39, decl_uid=2819, cgraph_uid=39, symbol_order=39)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 9 }
;; 3 succs { 6 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
__attribute__((__artificial__, __gnu_inline__, __always_inline__))
fread (void * restrict __ptr, size_t __size, size_t __n, struct FILE * restrict __stream)
{
  size_t D.3781;

  <bb 2> [0.00%]:
  _1 = __builtin_object_size (__ptr, 0);
  if (_1 != 18446744073709551615)
    goto <bb 3>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 3> [0.00%]:
  _2 = __builtin_constant_p (__size);
  if (_2 == 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 4> [0.00%]:
  _3 = __builtin_constant_p (__n);
  if (_3 == 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  _4 = __size | __n;
  if (_4 > 4294967295)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  _5 = __builtin_object_size (__ptr, 0);
  D.3781 = __fread_chk (__ptr, _5, __size, __n, __stream);
  goto <bb 10>; [0.00%]

  <bb 7> [0.00%]:
  _6 = __size * __n;
  _7 = __builtin_object_size (__ptr, 0);
  if (_6 > _7)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 8> [0.00%]:
  _8 = __builtin_object_size (__ptr, 0);
  D.3781 = __fread_chk_warn (__ptr, _8, __size, __n, __stream);
  goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  D.3781 = __fread_alias (__ptr, __size, __n, __stream);

  <bb 10> [0.00%]:
  return D.3781;

}



;; Function writefile (writefile, funcdef_no=62, decl_uid=3627, cgraph_uid=62, symbol_order=62)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
writefile (struct FILE * fhandle, long unsigned int offset, long unsigned int nbytes, void * buffer, int * errorcode)
{
  size_t writecode;
  size_t nelems;
  long int newoffset;

  <bb 2> [0.00%]:
  *errorcode = 0;
  offset.15_1 = (long int) offset;
  _2 = fseek (fhandle, offset.15_1, 0);
  newoffset = (long int) _2;
  if (newoffset == -1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  *errorcode = 14;
  goto <bb 6>; [0.00%]

  <bb 4> [0.00%]:
  nelems = nbytes & 65535;
  writecode = fwrite (buffer, 1, nelems, fhandle);
  if (writecode == nelems)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  *errorcode = 12;

  <bb 6> [0.00%]:
  return;

}



;; Function ReportError (ReportError, funcdef_no=63, decl_uid=3605, cgraph_uid=63, symbol_order=63)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
ReportError (char * errorcontext, int errorcode)
{
  <bb 2> [0.00%]:
  printf ("ERROR CONDITION\nContext: %s\n", errorcontext);
  printf ("Code: %d", errorcode);
  return;

}



;; Function printf (<unset-asm-name>, funcdef_no=33, decl_uid=798, cgraph_uid=33, symbol_order=33)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((__artificial__, __gnu_inline__, __always_inline__))
printf (const char * restrict __fmt)
{
  int D.3791;

  <bb 2> [0.00%]:
  D.3791 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  return D.3791;

}



;; Function ErrorExit (ErrorExit, funcdef_no=64, decl_uid=3606, cgraph_uid=64, symbol_order=64)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { }
ErrorExit ()
{
  <bb 2> [0.00%]:
  exit (1);

}



;; Function StartStopwatch (StartStopwatch, funcdef_no=65, decl_uid=3628, cgraph_uid=65, symbol_order=65)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
StartStopwatch ()
{
  long unsigned int D.3793;

  <bb 2> [0.00%]:
  _1 = clock ();
  D.3793 = (long unsigned int) _1;
  return D.3793;

}



;; Function StopStopwatch (StopStopwatch, funcdef_no=66, decl_uid=3630, cgraph_uid=66, symbol_order=66)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
StopStopwatch (long unsigned int startticks)
{
  long unsigned int D.3795;

  <bb 2> [0.00%]:
  _1 = clock ();
  _2 = (long unsigned int) _1;
  D.3795 = _2 - startticks;
  return D.3795;

}



;; Function TicksToSecs (TicksToSecs, funcdef_no=67, decl_uid=3632, cgraph_uid=67, symbol_order=67)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
TicksToSecs (long unsigned int tickamount)
{
  long unsigned int D.3797;

  <bb 2> [0.00%]:
  D.3797 = tickamount / 1000000;
  return D.3797;

}



;; Function TicksToFracSecs (TicksToFracSecs, funcdef_no=68, decl_uid=3634, cgraph_uid=68, symbol_order=68)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
TicksToFracSecs (long unsigned int tickamount)
{
  double D.3799;

  <bb 2> [0.00%]:
  _1 = (double) tickamount;
  D.3799 = _1 / 1.0e+6;
  return D.3799;

}


