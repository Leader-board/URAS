
;; Function Assignment (Assignment, funcdef_no=78, decl_uid=4613, cgraph_uid=78, symbol_order=103)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
arraybase = &NONLOCAL
j_451 = j_17
j_451 = &NULL
currentmin_452 = currentmin_228
currentmin_452 = &NONLOCAL
_14 = j_451
_15 = *_12 + UNKNOWN
currentmin_228 = _15
currentmin_228 = currentmin_452
j_17 = j_451
j_17 = &NONLOCAL
j_453 = j_26
j_453 = &NULL
_22 = j_453
_23 = *_12 + UNKNOWN
_25 = _23
_25 = currentmin_228
*_12 + UNKNOWN = _25
j_26 = j_453
j_26 = &NONLOCAL
i_27 = i_450
i_27 = &NONLOCAL
i_450 = i_27
i_450 = &NULL
_10 = i_450
_11 = _10
_11 = &NONLOCAL
_12 = arraybase + UNKNOWN
i_454 = i_36
i_454 = &NULL
currentmin_456 = currentmin_442
currentmin_456 = &NONLOCAL
_29 = i_454
_30 = _29
_30 = &NONLOCAL
_31 = arraybase + UNKNOWN
_33 = j_455
_34 = *_31 + UNKNOWN
currentmin_442 = _34
currentmin_442 = currentmin_456
i_36 = i_454
i_36 = &NONLOCAL
i_457 = i_45
i_457 = &NULL
_39 = i_457
_40 = _39
_40 = &NONLOCAL
_41 = arraybase + UNKNOWN
_43 = *_41 + UNKNOWN
_44 = _43
_44 = currentmin_442
*_41 + UNKNOWN = _44
i_45 = i_457
i_45 = &NONLOCAL
j_46 = j_455
j_46 = &NONLOCAL
j_455 = j_46
j_455 = &NULL
i_458 = i_50
i_458 = &NULL
linesrow = &NULL
i_50 = i_458
i_50 = &NONLOCAL
i_459 = i_52
i_459 = &NULL
linescol = &NULL
i_52 = i_459
i_52 = &NONLOCAL
j_461 = j_59
j_461 = &NULL
_58 = *_56 + UNKNOWN
j_59 = j_461
j_59 = &NONLOCAL
i_61 = i_460
i_61 = &NONLOCAL
i_460 = i_61
i_460 = &NULL
_54 = i_460
_55 = _54
_55 = &NONLOCAL
_56 = &assignedtableau
i_462 = i_70
i_462 = &NULL
_63 = linesrow
_64 = i_462
_65 = _64
_65 = &NONLOCAL
_66 = arraybase + UNKNOWN
j_463 = j_69
j_463 = &NULL
_68 = *_66 + UNKNOWN
linescol = &NONLOCAL
j_69 = j_463
j_69 = &NONLOCAL
i_70 = i_462
i_70 = &NONLOCAL
j_464 = j_82
j_464 = &NULL
newrows_474 = newrows_120
newrows_474 = &NULL
_72 = linescol
i_465 = i_81
i_465 = &NULL
newrows_466 = newrows_118
newrows_466 = newrows_474
_74 = i_465
_75 = _74
_75 = &NONLOCAL
_76 = &assignedtableau
_77 = *_76 + UNKNOWN
_78 = linesrow
linesrow = &NONLOCAL
newrows_80 = newrows_466
newrows_80 = &NONLOCAL
newrows_118 = newrows_466
newrows_118 = newrows_466
newrows_118 = newrows_80
i_81 = i_465
i_81 = &NONLOCAL
newrows_120 = newrows_474
newrows_120 = newrows_118
j_82 = j_464
j_82 = &NONLOCAL
i_467 = i_94
i_467 = &NULL
smallest_475 = smallest_123
smallest_475 = &NONLOCAL
_85 = linesrow
_88 = i_467
_89 = _88
_89 = &NONLOCAL
_90 = arraybase + UNKNOWN
j_468 = j_93
j_468 = &NULL
smallest_469 = smallest_121
smallest_469 = smallest_475
_87 = linescol
_91 = *_90 + UNKNOWN
_195 = _91
_195 = smallest_469
smallest_121 = smallest_469
smallest_121 = _195
j_93 = j_468
j_93 = &NONLOCAL
smallest_123 = smallest_475
smallest_123 = smallest_121
i_94 = i_467
i_94 = &NONLOCAL
i_470 = i_106
i_470 = &NULL
_96 = linesrow
_99 = i_470
_100 = _99
_100 = &NONLOCAL
_101 = arraybase + UNKNOWN
j_471 = j_105
j_471 = &NULL
_98 = linescol
_102 = *_101 + UNKNOWN
_104 = _102
_104 = smallest_123
*_101 + UNKNOWN = _104
j_105 = j_471
j_105 = &NONLOCAL
i_106 = i_470
i_106 = &NONLOCAL
i_472 = i_117
i_472 = &NULL
_108 = linesrow
_111 = i_472
_112 = _111
_112 = &NONLOCAL
_113 = arraybase + UNKNOWN
j_473 = j_116
j_473 = &NULL
_110 = linescol
_114 = *_113 + UNKNOWN
_115 = _114
_115 = smallest_123
*_113 + UNKNOWN = _115
j_116 = j_473
j_116 = &NONLOCAL
i_117 = i_472
i_117 = &NONLOCAL
j_477 = j_130
j_477 = &NULL
_129 = j_477
derefaddrtmp(123) = &NULL
*_127 + UNKNOWN = derefaddrtmp(123)
j_130 = j_477
j_130 = &NONLOCAL
i_131 = i_476
i_131 = &NONLOCAL
i_476 = i_131
i_476 = &NULL
_125 = i_476
_126 = _125
_126 = &NONLOCAL
_127 = &assignedtableau
totnumassigns_231 = &NULL
totnumassigns_231 = totnumassigns_246
selected_233 = &NULL
selected_233 = selected_242
j_479 = j_144
j_479 = &NULL
numzeros_480 = numzeros_235
numzeros_480 = &NULL
selected_495 = selected_236
selected_495 = selected_496
_137 = j_479
_138 = *_135 + UNKNOWN
_141 = *_140 + UNKNOWN
numzeros_143 = numzeros_480
numzeros_143 = &NONLOCAL
numzeros_235 = numzeros_480
numzeros_235 = numzeros_480
numzeros_235 = numzeros_143
selected_236 = selected_495
selected_236 = selected_495
selected_236 = _137
j_144 = j_479
j_144 = &NONLOCAL
numassigns_147 = numassigns_481
numassigns_147 = &NONLOCAL
totnumassigns_149 = totnumassigns_482
totnumassigns_149 = &NONLOCAL
_151 = _133
_151 = &NONLOCAL
_152 = &assignedtableau
derefaddrtmp(152) = &NONLOCAL
*_152 + UNKNOWN = derefaddrtmp(152)
k_483 = k_161
k_483 = &NULL
_155 = k_483
_156 = _155
_156 = &NONLOCAL
_157 = arraybase + UNKNOWN
_158 = *_157 + UNKNOWN
_159 = _155
_159 = &NONLOCAL
_160 = &assignedtableau
derefaddrtmp(161) = &NONLOCAL
*_160 + UNKNOWN = derefaddrtmp(161)
k_161 = k_483
k_161 = &NONLOCAL
numassigns_239 = numassigns_481
numassigns_239 = numassigns_147
totnumassigns_240 = totnumassigns_482
totnumassigns_240 = totnumassigns_149
i_162 = i_478
i_162 = &NONLOCAL
i_478 = i_162
i_478 = &NULL
numassigns_481 = numassigns_239
numassigns_481 = &NULL
totnumassigns_482 = totnumassigns_240
totnumassigns_482 = totnumassigns_231
selected_496 = selected_236
selected_496 = selected_233
_133 = i_478
_134 = _133
_134 = &NONLOCAL
_135 = arraybase + UNKNOWN
_139 = _133
_139 = &NONLOCAL
_140 = &assignedtableau
i_484 = i_176
i_484 = &NULL
numzeros_486 = numzeros_241
numzeros_486 = &NULL
selected_497 = selected_242
selected_497 = selected_498
_164 = i_484
_165 = _164
_165 = &NONLOCAL
_166 = arraybase + UNKNOWN
_168 = j_485
_169 = *_166 + UNKNOWN
_170 = _164
_170 = &NONLOCAL
_171 = &assignedtableau
_172 = *_171 + UNKNOWN
numzeros_174 = numzeros_486
numzeros_174 = &NONLOCAL
selected_175 = i_484
numzeros_241 = numzeros_486
numzeros_241 = numzeros_486
numzeros_241 = numzeros_174
selected_242 = selected_497
selected_242 = selected_497
selected_242 = selected_175
i_176 = i_484
i_176 = &NONLOCAL
numassigns_179 = numassigns_487
numassigns_179 = &NONLOCAL
totnumassigns_181 = totnumassigns_488
totnumassigns_181 = &NONLOCAL
_183 = selected_242
_184 = _183
_184 = &NONLOCAL
_185 = &assignedtableau
derefaddrtmp(192) = &NONLOCAL
*_185 + UNKNOWN = derefaddrtmp(192)
_188 = _183
_188 = &NONLOCAL
_189 = arraybase + UNKNOWN
k_489 = k_192
k_489 = &NULL
_190 = k_489
_191 = *_189 + UNKNOWN
derefaddrtmp(199) = &NONLOCAL
*_185 + UNKNOWN = derefaddrtmp(199)
k_192 = k_489
k_192 = &NONLOCAL
numassigns_245 = numassigns_487
numassigns_245 = numassigns_179
totnumassigns_246 = totnumassigns_488
totnumassigns_246 = totnumassigns_181
j_193 = j_485
j_193 = &NONLOCAL
j_485 = j_193
j_485 = &NULL
numassigns_487 = numassigns_245
numassigns_487 = numassigns_239
totnumassigns_488 = totnumassigns_246
totnumassigns_488 = totnumassigns_240
selected_498 = selected_242
selected_498 = selected_236
j_491 = j_206
j_491 = &NULL
_201 = j_491
_202 = *_199 + UNKNOWN
_205 = *_204 + UNKNOWN
j_206 = j_491
j_206 = &NONLOCAL
k_493 = k_218
k_493 = &NULL
_214 = k_493
_217 = *_199 + UNKNOWN
derefaddrtmp(213) = &NONLOCAL
*_204 + UNKNOWN = derefaddrtmp(213)
k_218 = k_493
k_218 = &NONLOCAL
k_494 = k_226
k_494 = &NULL
_220 = k_494
_221 = _220
_221 = &NONLOCAL
_222 = arraybase + UNKNOWN
_223 = *_222 + UNKNOWN
_224 = _220
_224 = &NONLOCAL
_225 = &assignedtableau
derefaddrtmp(222) = &NONLOCAL
*_225 + UNKNOWN = derefaddrtmp(222)
k_226 = k_494
k_226 = &NONLOCAL
totnumassigns_247 = totnumassigns_492
totnumassigns_247 = totnumassigns_212
i_227 = i_490
i_227 = &NONLOCAL
i_490 = i_227
i_490 = &NULL
totnumassigns_492 = totnumassigns_247
totnumassigns_492 = totnumassigns_246
_197 = i_490
_198 = _197
_198 = &NONLOCAL
_199 = arraybase + UNKNOWN
_203 = _197
_203 = &NONLOCAL
_204 = &assignedtableau
_229 = totnumassigns_247
linesrow = &NONLOCAL
derefaddrtmp(232) = &NONLOCAL
*_204 + UNKNOWN = derefaddrtmp(232)
totnumassigns_212 = totnumassigns_492
totnumassigns_212 = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED";
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"arraybase"[label="arraybase = { 5 }"];
"j_451"[label="j_451 = { 1 5 }"];
"currentmin_452"[label="currentmin_452 = { 5 }"];
"_14";
"_15";
"_12";
"j_453"[label="j_453 = { 1 5 }"];
"_22";
"_23";
"_25";
"i_27"[label="i_27 = { 1 5 }"];
"_10";
"_11"[label="_11 = { 5 }"];
"i_454"[label="i_454 = { 1 5 }"];
"currentmin_456"[label="currentmin_456 = { 5 }"];
"_29";
"_30"[label="_30 = { 5 }"];
"_31";
"_33";
"j_455"[label="j_455 = { 1 5 }"];
"_34";
"i_457"[label="i_457 = { 1 5 }"];
"_39";
"_40"[label="_40 = { 5 }"];
"_41";
"_43";
"_44";
"i_458"[label="i_458 = { 1 5 }"];
"linesrow"[label="linesrow = { 1 5 }"];
"i_459"[label="i_459 = { 1 5 }"];
"linescol"[label="linescol = { 1 5 }"];
"j_461"[label="j_461 = { 1 5 }"];
"_58";
"_56"[label="_56 = { 57 }"];
"i_61"[label="i_61 = { 1 5 }"];
"_54";
"_55"[label="_55 = { 5 }"];
"assignedtableau";
"i_462"[label="i_462 = { 1 5 }"];
"_63";
"_64";
"_65"[label="_65 = { 5 }"];
"_66";
"j_463"[label="j_463 = { 1 5 }"];
"_68";
"j_464"[label="j_464 = { 1 5 }"];
"newrows_474"[label="newrows_474 = { 1 5 }"];
"_72";
"i_465"[label="i_465 = { 1 5 }"];
"_74";
"_75"[label="_75 = { 5 }"];
"_76"[label="_76 = { 57 }"];
"_77";
"_78";
"i_467"[label="i_467 = { 1 5 }"];
"smallest_475"[label="smallest_475 = { 5 }"];
"_85";
"_88";
"_89"[label="_89 = { 5 }"];
"_90";
"j_468"[label="j_468 = { 1 5 }"];
"_87";
"_91";
"i_470"[label="i_470 = { 1 5 }"];
"_96";
"_99";
"_100"[label="_100 = { 5 }"];
"_101";
"j_471"[label="j_471 = { 1 5 }"];
"_98";
"_102";
"_104";
"i_472"[label="i_472 = { 1 5 }"];
"_108";
"_111";
"_112"[label="_112 = { 5 }"];
"_113";
"j_473"[label="j_473 = { 1 5 }"];
"_110";
"_114";
"_115";
"j_477"[label="j_477 = { 1 5 }"];
"_129";
"_127"[label="_127 = { 57 }"];
"derefaddrtmp(123)"[label="derefaddrtmp(123) = { 1 }"];
"i_131"[label="i_131 = { 1 5 }"];
"_125";
"_126"[label="_126 = { 5 }"];
"totnumassigns_231"[label="totnumassigns_231 = { 1 5 }"];
"selected_233"[label="selected_233 = { 1 }"];
"j_479"[label="j_479 = { 1 5 }"];
"numzeros_480"[label="numzeros_480 = { 1 5 }"];
"_137";
"_138";
"_135";
"_141";
"_140"[label="_140 = { 57 }"];
"numassigns_147"[label="numassigns_147 = { 1 5 }"];
"_151"[label="_151 = { 5 }"];
"_133";
"_152"[label="_152 = { 57 }"];
"derefaddrtmp(152)"[label="derefaddrtmp(152) = { 5 }"];
"k_483"[label="k_483 = { 1 5 }"];
"_155";
"_156"[label="_156 = { 5 }"];
"_157";
"_158";
"_159"[label="_159 = { 5 }"];
"_160"[label="_160 = { 57 }"];
"derefaddrtmp(161)"[label="derefaddrtmp(161) = { 5 }"];
"i_478"[label="i_478 = { 1 5 }"];
"_134"[label="_134 = { 5 }"];
"_139"[label="_139 = { 5 }"];
"i_484"[label="i_484 = { 1 5 }"];
"numzeros_486"[label="numzeros_486 = { 1 5 }"];
"_164";
"_165"[label="_165 = { 5 }"];
"_166";
"_168";
"j_485"[label="j_485 = { 1 5 }"];
"_169";
"_170"[label="_170 = { 5 }"];
"_171"[label="_171 = { 57 }"];
"_172";
"selected_175";
"numassigns_179"[label="numassigns_179 = { 5 }"];
"_183";
"_184"[label="_184 = { 5 }"];
"_185"[label="_185 = { 57 }"];
"derefaddrtmp(192)"[label="derefaddrtmp(192) = { 5 }"];
"_188"[label="_188 = { 5 }"];
"_189";
"k_489"[label="k_489 = { 1 5 }"];
"_190";
"_191";
"derefaddrtmp(199)"[label="derefaddrtmp(199) = { 5 }"];
"j_491"[label="j_491 = { 1 5 }"];
"_201";
"_202";
"_199";
"_205";
"_204"[label="_204 = { 57 }"];
"k_493"[label="k_493 = { 1 5 }"];
"_214";
"_217";
"derefaddrtmp(213)"[label="derefaddrtmp(213) = { 5 }"];
"k_494"[label="k_494 = { 1 5 }"];
"_220";
"_221"[label="_221 = { 5 }"];
"_222";
"_223";
"_224"[label="_224 = { 5 }"];
"_225"[label="_225 = { 57 }"];
"derefaddrtmp(222)"[label="derefaddrtmp(222) = { 5 }"];
"totnumassigns_247"[label="totnumassigns_247 = { 5 }"];
"i_227"[label="i_227 = { 1 5 }"];
"_197";
"_198"[label="_198 = { 5 }"];
"_203"[label="_203 = { 5 }"];
"_229";
"derefaddrtmp(232)"[label="derefaddrtmp(232) = { 5 }"];
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*arraybase";
"*j_451";
"*j_17";
"*currentmin_452";
"*currentmin_228";
"*_14";
"*_15";
"*_12";
"*j_453";
"*j_26";
"*_22";
"*_23";
"*_25";
"*i_27";
"*i_450";
"*_10";
"*_11";
"*i_454";
"*i_36";
"*currentmin_456";
"*currentmin_442";
"*_29";
"*_30";
"*_31";
"*_33";
"*j_455";
"*_34";
"*i_457";
"*i_45";
"*_39";
"*_40";
"*_41";
"*_43";
"*_44";
"*j_46";
"*i_458";
"*i_50";
"*linesrow";
"*i_459";
"*i_52";
"*linescol";
"*j_461";
"*j_59";
"*_58";
"*_56";
"*i_61";
"*i_460";
"*_54";
"*_55";
"*assignedtableau";
"*i_462";
"*i_70";
"*_63";
"*_64";
"*_65";
"*_66";
"*j_463";
"*j_69";
"*_68";
"*j_464";
"*j_82";
"*newrows_474";
"*newrows_120";
"*_72";
"*i_465";
"*i_81";
"*newrows_466";
"*newrows_118";
"*_74";
"*_75";
"*_76";
"*_77";
"*_78";
"*newrows_80";
"*i_467";
"*i_94";
"*smallest_475";
"*smallest_123";
"*_85";
"*_88";
"*_89";
"*_90";
"*j_468";
"*j_93";
"*smallest_469";
"*smallest_121";
"*_87";
"*_91";
"*_195";
"*i_470";
"*i_106";
"*_96";
"*_99";
"*_100";
"*_101";
"*j_471";
"*j_105";
"*_98";
"*_102";
"*_104";
"*i_472";
"*i_117";
"*_108";
"*_111";
"*_112";
"*_113";
"*j_473";
"*j_116";
"*_110";
"*_114";
"*_115";
"*j_477";
"*j_130";
"*_129";
"*_127";
"*derefaddrtmp(123)";
"*i_131";
"*i_476";
"*_125";
"*_126";
"*totnumassigns_231";
"*totnumassigns_246";
"*selected_233";
"*selected_242";
"*j_479";
"*j_144";
"*numzeros_480";
"*numzeros_235";
"*selected_495";
"*selected_236";
"*selected_496";
"*_137";
"*_138";
"*_135";
"*_141";
"*_140";
"*numzeros_143";
"*numassigns_147";
"*numassigns_481";
"*totnumassigns_149";
"*totnumassigns_482";
"*_151";
"*_133";
"*_152";
"*derefaddrtmp(152)";
"*k_483";
"*k_161";
"*_155";
"*_156";
"*_157";
"*_158";
"*_159";
"*_160";
"*derefaddrtmp(161)";
"*numassigns_239";
"*totnumassigns_240";
"*i_162";
"*i_478";
"*_134";
"*_139";
"*i_484";
"*i_176";
"*numzeros_486";
"*numzeros_241";
"*selected_497";
"*selected_498";
"*_164";
"*_165";
"*_166";
"*_168";
"*j_485";
"*_169";
"*_170";
"*_171";
"*_172";
"*numzeros_174";
"*selected_175";
"*numassigns_179";
"*numassigns_487";
"*totnumassigns_181";
"*totnumassigns_488";
"*_183";
"*_184";
"*_185";
"*derefaddrtmp(192)";
"*_188";
"*_189";
"*k_489";
"*k_192";
"*_190";
"*_191";
"*derefaddrtmp(199)";
"*numassigns_245";
"*j_193";
"*j_491";
"*j_206";
"*_201";
"*_202";
"*_199";
"*_205";
"*_204";
"*k_493";
"*k_218";
"*_214";
"*_217";
"*derefaddrtmp(213)";
"*k_494";
"*k_226";
"*_220";
"*_221";
"*_222";
"*_223";
"*_224";
"*_225";
"*derefaddrtmp(222)";
"*totnumassigns_247";
"*totnumassigns_492";
"*totnumassigns_212";
"*i_227";
"*i_490";
"*_197";
"*_198";
"*_203";
"*_229";
"*derefaddrtmp(232)";

  // Edges in the constraint graph:
"*ESCAPED" -> "ESCAPED";
"j_451" -> "j_451";
"j_451" -> "j_451";
"currentmin_452" -> "currentmin_452";
"currentmin_452" -> "currentmin_452";
"_15" -> "currentmin_452";
"j_451" -> "_14";
"j_453" -> "j_453";
"j_453" -> "j_453";
"j_453" -> "_22";
"currentmin_452" -> "_25";
"_23" -> "_25";
"i_27" -> "i_27";
"i_27" -> "i_27";
"i_27" -> "_10";
"_10" -> "_11";
"i_454" -> "i_454";
"i_454" -> "i_454";
"currentmin_456" -> "currentmin_456";
"currentmin_456" -> "currentmin_456";
"_34" -> "currentmin_456";
"i_454" -> "_29";
"_29" -> "_30";
"j_455" -> "_33";
"j_455" -> "j_455";
"j_455" -> "j_455";
"i_457" -> "i_457";
"i_457" -> "i_457";
"i_457" -> "_39";
"_39" -> "_40";
"currentmin_456" -> "_44";
"_43" -> "_44";
"i_458" -> "i_458";
"i_458" -> "i_458";
"i_459" -> "i_459";
"i_459" -> "i_459";
"j_461" -> "j_461";
"j_461" -> "j_461";
"i_61" -> "i_61";
"i_61" -> "i_61";
"i_61" -> "_54";
"_54" -> "_55";
"i_462" -> "i_462";
"i_462" -> "i_462";
"linesrow" -> "_63";
"i_462" -> "_64";
"_64" -> "_65";
"j_463" -> "j_463";
"j_463" -> "j_463";
"j_464" -> "j_464";
"j_464" -> "j_464";
"newrows_474" -> "newrows_474";
"newrows_474" -> "newrows_474";
"newrows_474" -> "newrows_474";
"newrows_474" -> "newrows_474";
"newrows_474" -> "newrows_474";
"linescol" -> "_72";
"i_465" -> "i_465";
"i_465" -> "i_465";
"i_465" -> "_74";
"_74" -> "_75";
"linesrow" -> "_78";
"i_467" -> "i_467";
"i_467" -> "i_467";
"smallest_475" -> "smallest_475";
"smallest_475" -> "smallest_475";
"smallest_475" -> "smallest_475";
"smallest_475" -> "smallest_475";
"_91" -> "smallest_475";
"smallest_475" -> "smallest_475";
"linesrow" -> "_85";
"i_467" -> "_88";
"_88" -> "_89";
"j_468" -> "j_468";
"j_468" -> "j_468";
"linescol" -> "_87";
"i_470" -> "i_470";
"i_470" -> "i_470";
"linesrow" -> "_96";
"i_470" -> "_99";
"_99" -> "_100";
"j_471" -> "j_471";
"j_471" -> "j_471";
"linescol" -> "_98";
"smallest_475" -> "_104";
"_102" -> "_104";
"i_472" -> "i_472";
"i_472" -> "i_472";
"linesrow" -> "_108";
"i_472" -> "_111";
"_111" -> "_112";
"j_473" -> "j_473";
"j_473" -> "j_473";
"linescol" -> "_110";
"smallest_475" -> "_115";
"_114" -> "_115";
"j_477" -> "j_477";
"j_477" -> "j_477";
"j_477" -> "_129";
"i_131" -> "i_131";
"i_131" -> "i_131";
"i_131" -> "_125";
"_125" -> "_126";
"totnumassigns_231" -> "totnumassigns_231";
"totnumassigns_231" -> "totnumassigns_231";
"totnumassigns_231" -> "totnumassigns_231";
"totnumassigns_231" -> "totnumassigns_231";
"totnumassigns_231" -> "totnumassigns_231";
"totnumassigns_231" -> "totnumassigns_231";
"totnumassigns_231" -> "totnumassigns_231";
"selected_233" -> "selected_233";
"selected_233" -> "selected_233";
"selected_233" -> "selected_233";
"selected_233" -> "selected_233";
"selected_233" -> "selected_233";
"_137" -> "selected_233";
"selected_233" -> "selected_233";
"selected_233" -> "selected_233";
"selected_175" -> "selected_233";
"j_479" -> "j_479";
"j_479" -> "j_479";
"numzeros_480" -> "numzeros_480";
"numzeros_480" -> "numzeros_480";
"numzeros_480" -> "numzeros_480";
"j_479" -> "_137";
"numassigns_147" -> "numassigns_147";
"numassigns_147" -> "numassigns_147";
"numassigns_147" -> "numassigns_147";
"_133" -> "_151";
"i_478" -> "_133";
"k_483" -> "k_483";
"k_483" -> "k_483";
"k_483" -> "_155";
"_155" -> "_156";
"_155" -> "_159";
"i_478" -> "i_478";
"i_478" -> "i_478";
"_133" -> "_134";
"_133" -> "_139";
"i_484" -> "i_484";
"i_484" -> "i_484";
"numzeros_486" -> "numzeros_486";
"numzeros_486" -> "numzeros_486";
"numzeros_486" -> "numzeros_486";
"i_484" -> "_164";
"_164" -> "_165";
"j_485" -> "_168";
"j_485" -> "j_485";
"j_485" -> "j_485";
"_164" -> "_170";
"i_484" -> "selected_175";
"numassigns_147" -> "numassigns_179";
"numassigns_179" -> "numassigns_179";
"numassigns_179" -> "numassigns_179";
"numassigns_179" -> "numassigns_179";
"selected_233" -> "_183";
"_183" -> "_184";
"_183" -> "_188";
"k_489" -> "k_489";
"k_489" -> "k_489";
"k_489" -> "_190";
"j_491" -> "j_491";
"j_491" -> "j_491";
"j_491" -> "_201";
"k_493" -> "k_493";
"k_493" -> "k_493";
"k_493" -> "_214";
"k_494" -> "k_494";
"k_494" -> "k_494";
"k_494" -> "_220";
"_220" -> "_221";
"_220" -> "_224";
"totnumassigns_231" -> "totnumassigns_247";
"totnumassigns_247" -> "totnumassigns_247";
"totnumassigns_247" -> "totnumassigns_247";
"totnumassigns_247" -> "totnumassigns_247";
"i_227" -> "i_227";
"i_227" -> "i_227";
"i_227" -> "_197";
"_197" -> "_198";
"_197" -> "_203";
"totnumassigns_247" -> "_229";
"NONLOCAL" -> "*ESCAPED";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"arraybase" [label="\N\n_12 = arraybase + UNKNOWN\l_31 = arraybase + UNKNOWN\l_41 = arraybase + UNKNOWN\l_66 = arraybase + UNKNOWN\l_90 = arraybase + UNKNOWN\l_101 = arraybase + UNKNOWN\l_113 = arraybase + UNKNOWN\l_135 = arraybase + UNKNOWN\l_157 = arraybase + UNKNOWN\l_166 = arraybase + UNKNOWN\l_189 = arraybase + UNKNOWN\l_199 = arraybase + UNKNOWN\l_222 = arraybase + UNKNOWN\l"];
"j_451";
"currentmin_452";
"_15";
"_12" [label="\N\n_15 = *_12 + UNKNOWN\l_23 = *_12 + UNKNOWN\l*_12 + UNKNOWN = _25\l"];
"_23";
"_25";
"currentmin_456";
"_31" [label="\N\n_34 = *_31 + UNKNOWN\l"];
"_34";
"_41" [label="\N\n_43 = *_41 + UNKNOWN\l*_41 + UNKNOWN = _44\l"];
"_43";
"_44";
"_58";
"_56" [label="\N\n_58 = *_56 + UNKNOWN\l_77 = *_56 + UNKNOWN\l_141 = *_56 + UNKNOWN\l_172 = *_56 + UNKNOWN\l_205 = *_56 + UNKNOWN\l*_56 + UNKNOWN = arraybase\l*_56 + UNKNOWN = derefaddrtmp(123)\l"];
"assignedtableau";
"_66" [label="\N\n_68 = *_66 + UNKNOWN\l"];
"_68";
"_77";
"smallest_475";
"_90" [label="\N\n_91 = *_90 + UNKNOWN\l"];
"_91";
"_101" [label="\N\n_102 = *_101 + UNKNOWN\l*_101 + UNKNOWN = _104\l"];
"_102";
"_104";
"_113" [label="\N\n_114 = *_113 + UNKNOWN\l*_113 + UNKNOWN = _115\l"];
"_114";
"_115";
"derefaddrtmp(123)";
"_138";
"_135" [label="\N\n_138 = *_135 + UNKNOWN\l"];
"_141";
"_157" [label="\N\n_158 = *_157 + UNKNOWN\l"];
"_158";
"_166" [label="\N\n_169 = *_166 + UNKNOWN\l"];
"_169";
"_172";
"_189" [label="\N\n_191 = *_189 + UNKNOWN\l"];
"_191";
"_202";
"_199" [label="\N\n_202 = *_199 + UNKNOWN\l_217 = *_199 + UNKNOWN\l"];
"_205";
"_217";
"_222" [label="\N\n_223 = *_222 + UNKNOWN\l"];
"_223";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_15";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_23";
"STOREDANYTHING" -> "_31";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_41";
"STOREDANYTHING" -> "_43";
"STOREDANYTHING" -> "_58";
"STOREDANYTHING" -> "assignedtableau";
"STOREDANYTHING" -> "_66";
"STOREDANYTHING" -> "_68";
"STOREDANYTHING" -> "_77";
"STOREDANYTHING" -> "_90";
"STOREDANYTHING" -> "_91";
"STOREDANYTHING" -> "_101";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_113";
"STOREDANYTHING" -> "_114";
"STOREDANYTHING" -> "_138";
"STOREDANYTHING" -> "_135";
"STOREDANYTHING" -> "_141";
"STOREDANYTHING" -> "_157";
"STOREDANYTHING" -> "_158";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_169";
"STOREDANYTHING" -> "_172";
"STOREDANYTHING" -> "_189";
"STOREDANYTHING" -> "_191";
"STOREDANYTHING" -> "_202";
"STOREDANYTHING" -> "_199";
"STOREDANYTHING" -> "_205";
"STOREDANYTHING" -> "_217";
"STOREDANYTHING" -> "_222";
"STOREDANYTHING" -> "_223";
"currentmin_452" -> "_25";
"_15" -> "currentmin_452";
"_23" -> "_25";
"currentmin_456" -> "_44";
"_34" -> "currentmin_456";
"_43" -> "_44";
"smallest_475" -> "_104";
"smallest_475" -> "_115";
"_91" -> "smallest_475";
"_102" -> "_104";
"_114" -> "_115";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"arraybase" [label="\N\n_12 = arraybase + UNKNOWN\l_31 = arraybase + UNKNOWN\l_41 = arraybase + UNKNOWN\l_66 = arraybase + UNKNOWN\l_90 = arraybase + UNKNOWN\l_101 = arraybase + UNKNOWN\l_113 = arraybase + UNKNOWN\l_135 = arraybase + UNKNOWN\l_157 = arraybase + UNKNOWN\l_166 = arraybase + UNKNOWN\l_189 = arraybase + UNKNOWN\l_199 = arraybase + UNKNOWN\l_222 = arraybase + UNKNOWN\l"];
"j_451";
"currentmin_452";
"_15";
"_12" [label="\N\n_15 = *_12 + UNKNOWN\l_23 = *_12 + UNKNOWN\l*_12 + UNKNOWN = _25\l"];
"_23";
"_25";
"currentmin_456";
"_31" [label="\N\n_34 = *_31 + UNKNOWN\l"];
"_34";
"_41" [label="\N\n_43 = *_41 + UNKNOWN\l*_41 + UNKNOWN = _44\l"];
"_43";
"_44";
"_58";
"_56" [label="\N\n_58 = *_56 + UNKNOWN\l_77 = *_56 + UNKNOWN\l_141 = *_56 + UNKNOWN\l_172 = *_56 + UNKNOWN\l_205 = *_56 + UNKNOWN\l*_56 + UNKNOWN = arraybase\l*_56 + UNKNOWN = derefaddrtmp(123)\l"];
"assignedtableau";
"_66" [label="\N\n_68 = *_66 + UNKNOWN\l"];
"_68";
"_77";
"smallest_475";
"_90" [label="\N\n_91 = *_90 + UNKNOWN\l"];
"_91";
"_101" [label="\N\n_102 = *_101 + UNKNOWN\l*_101 + UNKNOWN = _104\l"];
"_102";
"_104";
"_113" [label="\N\n_114 = *_113 + UNKNOWN\l*_113 + UNKNOWN = _115\l"];
"_114";
"_115";
"derefaddrtmp(123)";
"_138";
"_135" [label="\N\n_138 = *_135 + UNKNOWN\l"];
"_141";
"_157" [label="\N\n_158 = *_157 + UNKNOWN\l"];
"_158";
"_166" [label="\N\n_169 = *_166 + UNKNOWN\l"];
"_169";
"_172";
"_189" [label="\N\n_191 = *_189 + UNKNOWN\l"];
"_191";
"_202";
"_199" [label="\N\n_202 = *_199 + UNKNOWN\l_217 = *_199 + UNKNOWN\l"];
"_205";
"_217";
"_222" [label="\N\n_223 = *_222 + UNKNOWN\l"];
"_223";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_15";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_23";
"STOREDANYTHING" -> "_31";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_41";
"STOREDANYTHING" -> "_43";
"STOREDANYTHING" -> "_58";
"STOREDANYTHING" -> "assignedtableau";
"STOREDANYTHING" -> "_66";
"STOREDANYTHING" -> "_68";
"STOREDANYTHING" -> "_77";
"STOREDANYTHING" -> "_90";
"STOREDANYTHING" -> "_91";
"STOREDANYTHING" -> "_101";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_113";
"STOREDANYTHING" -> "_114";
"STOREDANYTHING" -> "_138";
"STOREDANYTHING" -> "_135";
"STOREDANYTHING" -> "_141";
"STOREDANYTHING" -> "_157";
"STOREDANYTHING" -> "_158";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_169";
"STOREDANYTHING" -> "_172";
"STOREDANYTHING" -> "_189";
"STOREDANYTHING" -> "_191";
"STOREDANYTHING" -> "_202";
"STOREDANYTHING" -> "_199";
"STOREDANYTHING" -> "_205";
"STOREDANYTHING" -> "_217";
"STOREDANYTHING" -> "_222";
"STOREDANYTHING" -> "_223";
"arraybase" -> "assignedtableau";
"currentmin_452" -> "_25";
"_15" -> "currentmin_452";
"_23" -> "_25";
"_25" -> "ESCAPED";
"currentmin_456" -> "_44";
"_34" -> "currentmin_456";
"_43" -> "_44";
"_44" -> "ESCAPED";
"assignedtableau" -> "_58";
"assignedtableau" -> "_77";
"assignedtableau" -> "_141";
"assignedtableau" -> "_172";
"assignedtableau" -> "_205";
"smallest_475" -> "_104";
"smallest_475" -> "_115";
"_91" -> "smallest_475";
"_102" -> "_104";
"_104" -> "ESCAPED";
"_114" -> "_115";
"_115" -> "ESCAPED";
"derefaddrtmp(123)" -> "assignedtableau";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
arraybase = { NONLOCAL }
j_451 = { NULL NONLOCAL }
j_17 = { NULL NONLOCAL } same as j_451
currentmin_452 = { ESCAPED NONLOCAL }
currentmin_228 = { ESCAPED NONLOCAL } same as currentmin_452
_14 = { NULL NONLOCAL } same as j_451
_15 = { ESCAPED NONLOCAL }
_12 = { NONLOCAL }
j_453 = { NULL NONLOCAL } same as j_451
j_26 = { NULL NONLOCAL } same as j_451
_22 = { NULL NONLOCAL } same as j_451
_23 = { ESCAPED NONLOCAL }
_25 = { ESCAPED NONLOCAL }
i_27 = { NULL NONLOCAL } same as j_451
i_450 = { NULL NONLOCAL } same as j_451
_10 = { NULL NONLOCAL } same as j_451
_11 = { NULL NONLOCAL } same as j_451
i_454 = { NULL NONLOCAL } same as j_451
i_36 = { NULL NONLOCAL } same as j_451
currentmin_456 = { ESCAPED NONLOCAL }
currentmin_442 = { ESCAPED NONLOCAL } same as currentmin_456
_29 = { NULL NONLOCAL } same as j_451
_30 = { NULL NONLOCAL } same as j_451
_31 = { NONLOCAL }
_33 = { NULL NONLOCAL } same as j_451
j_455 = { NULL NONLOCAL } same as j_451
_34 = { ESCAPED NONLOCAL }
i_457 = { NULL NONLOCAL } same as j_451
i_45 = { NULL NONLOCAL } same as j_451
_39 = { NULL NONLOCAL } same as j_451
_40 = { NULL NONLOCAL } same as j_451
_41 = { NONLOCAL }
_43 = { ESCAPED NONLOCAL }
_44 = { ESCAPED NONLOCAL }
j_46 = { NULL NONLOCAL } same as j_451
i_458 = { NULL NONLOCAL } same as j_451
i_50 = { NULL NONLOCAL } same as j_451
linesrow = { NULL NONLOCAL } same as j_451
i_459 = { NULL NONLOCAL } same as j_451
i_52 = { NULL NONLOCAL } same as j_451
linescol = { NULL NONLOCAL } same as j_451
j_461 = { NULL NONLOCAL } same as j_451
j_59 = { NULL NONLOCAL } same as j_451
_58 = { NULL NONLOCAL }
_56 = { assignedtableau }
i_61 = { NULL NONLOCAL } same as j_451
i_460 = { NULL NONLOCAL } same as j_451
_54 = { NULL NONLOCAL } same as j_451
_55 = { NULL NONLOCAL } same as j_451
assignedtableau = { NULL NONLOCAL }
i_462 = { NULL NONLOCAL } same as j_451
i_70 = { NULL NONLOCAL } same as j_451
_63 = { NULL NONLOCAL } same as j_451
_64 = { NULL NONLOCAL } same as j_451
_65 = { NULL NONLOCAL } same as j_451
_66 = { NONLOCAL }
j_463 = { NULL NONLOCAL } same as j_451
j_69 = { NULL NONLOCAL } same as j_451
_68 = { ESCAPED NONLOCAL }
j_464 = { NULL NONLOCAL } same as j_451
j_82 = { NULL NONLOCAL } same as j_451
newrows_474 = { NULL NONLOCAL } same as j_451
newrows_120 = { NULL NONLOCAL } same as j_451
_72 = { NULL NONLOCAL } same as j_451
i_465 = { NULL NONLOCAL } same as j_451
i_81 = { NULL NONLOCAL } same as j_451
newrows_466 = { NULL NONLOCAL } same as j_451
newrows_118 = { NULL NONLOCAL } same as j_451
_74 = { NULL NONLOCAL } same as j_451
_75 = { NULL NONLOCAL } same as j_451
_76 = { assignedtableau } same as _56
_77 = { NULL NONLOCAL }
_78 = { NULL NONLOCAL } same as j_451
newrows_80 = { NULL NONLOCAL } same as j_451
i_467 = { NULL NONLOCAL } same as j_451
i_94 = { NULL NONLOCAL } same as j_451
smallest_475 = { ESCAPED NONLOCAL }
smallest_123 = { ESCAPED NONLOCAL } same as smallest_475
_85 = { NULL NONLOCAL } same as j_451
_88 = { NULL NONLOCAL } same as j_451
_89 = { NULL NONLOCAL } same as j_451
_90 = { NONLOCAL }
j_468 = { NULL NONLOCAL } same as j_451
j_93 = { NULL NONLOCAL } same as j_451
smallest_469 = { ESCAPED NONLOCAL } same as smallest_475
smallest_121 = { ESCAPED NONLOCAL } same as smallest_475
_87 = { NULL NONLOCAL } same as j_451
_91 = { ESCAPED NONLOCAL }
_195 = { ESCAPED NONLOCAL } same as smallest_475
i_470 = { NULL NONLOCAL } same as j_451
i_106 = { NULL NONLOCAL } same as j_451
_96 = { NULL NONLOCAL } same as j_451
_99 = { NULL NONLOCAL } same as j_451
_100 = { NULL NONLOCAL } same as j_451
_101 = { NONLOCAL }
j_471 = { NULL NONLOCAL } same as j_451
j_105 = { NULL NONLOCAL } same as j_451
_98 = { NULL NONLOCAL } same as j_451
_102 = { ESCAPED NONLOCAL }
_104 = { ESCAPED NONLOCAL }
i_472 = { NULL NONLOCAL } same as j_451
i_117 = { NULL NONLOCAL } same as j_451
_108 = { NULL NONLOCAL } same as j_451
_111 = { NULL NONLOCAL } same as j_451
_112 = { NULL NONLOCAL } same as j_451
_113 = { NONLOCAL }
j_473 = { NULL NONLOCAL } same as j_451
j_116 = { NULL NONLOCAL } same as j_451
_110 = { NULL NONLOCAL } same as j_451
_114 = { ESCAPED NONLOCAL }
_115 = { ESCAPED NONLOCAL }
j_477 = { NULL NONLOCAL } same as j_451
j_130 = { NULL NONLOCAL } same as j_451
_129 = { NULL NONLOCAL } same as j_451
_127 = { assignedtableau } same as _56
derefaddrtmp(123) = { NULL }
i_131 = { NULL NONLOCAL } same as j_451
i_476 = { NULL NONLOCAL } same as j_451
_125 = { NULL NONLOCAL } same as j_451
_126 = { NULL NONLOCAL } same as j_451
totnumassigns_231 = { NULL NONLOCAL } same as j_451
totnumassigns_246 = { NULL NONLOCAL } same as j_451
selected_233 = { NULL NONLOCAL } same as j_451
selected_242 = { NULL NONLOCAL } same as j_451
j_479 = { NULL NONLOCAL } same as j_451
j_144 = { NULL NONLOCAL } same as j_451
numzeros_480 = { NULL NONLOCAL } same as j_451
numzeros_235 = { NULL NONLOCAL } same as j_451
selected_495 = { NULL NONLOCAL } same as j_451
selected_236 = { NULL NONLOCAL } same as j_451
selected_496 = { NULL NONLOCAL } same as j_451
_137 = { NULL NONLOCAL } same as j_451
_138 = { ESCAPED NONLOCAL }
_135 = { NONLOCAL }
_141 = { NULL NONLOCAL }
_140 = { assignedtableau } same as _56
numzeros_143 = { NULL NONLOCAL } same as j_451
numassigns_147 = { NULL NONLOCAL } same as j_451
numassigns_481 = { NULL NONLOCAL } same as j_451
totnumassigns_149 = { NULL NONLOCAL } same as j_451
totnumassigns_482 = { NULL NONLOCAL } same as j_451
_151 = { NULL NONLOCAL } same as j_451
_133 = { NULL NONLOCAL } same as j_451
_152 = { assignedtableau } same as _56
derefaddrtmp(152) = { NONLOCAL } same as arraybase
k_483 = { NULL NONLOCAL } same as j_451
k_161 = { NULL NONLOCAL } same as j_451
_155 = { NULL NONLOCAL } same as j_451
_156 = { NULL NONLOCAL } same as j_451
_157 = { NONLOCAL }
_158 = { ESCAPED NONLOCAL }
_159 = { NULL NONLOCAL } same as j_451
_160 = { assignedtableau } same as _56
derefaddrtmp(161) = { NONLOCAL } same as arraybase
numassigns_239 = { NULL NONLOCAL } same as j_451
totnumassigns_240 = { NULL NONLOCAL } same as j_451
i_162 = { NULL NONLOCAL } same as j_451
i_478 = { NULL NONLOCAL } same as j_451
_134 = { NULL NONLOCAL } same as j_451
_139 = { NULL NONLOCAL } same as j_451
i_484 = { NULL NONLOCAL } same as j_451
i_176 = { NULL NONLOCAL } same as j_451
numzeros_486 = { NULL NONLOCAL } same as j_451
numzeros_241 = { NULL NONLOCAL } same as j_451
selected_497 = { NULL NONLOCAL } same as j_451
selected_498 = { NULL NONLOCAL } same as j_451
_164 = { NULL NONLOCAL } same as j_451
_165 = { NULL NONLOCAL } same as j_451
_166 = { NONLOCAL }
_168 = { NULL NONLOCAL } same as j_451
j_485 = { NULL NONLOCAL } same as j_451
_169 = { ESCAPED NONLOCAL }
_170 = { NULL NONLOCAL } same as j_451
_171 = { assignedtableau } same as _56
_172 = { NULL NONLOCAL }
numzeros_174 = { NULL NONLOCAL } same as j_451
selected_175 = { NULL NONLOCAL } same as j_451
numassigns_179 = { NULL NONLOCAL } same as j_451
numassigns_487 = { NULL NONLOCAL } same as j_451
totnumassigns_181 = { NULL NONLOCAL } same as j_451
totnumassigns_488 = { NULL NONLOCAL } same as j_451
_183 = { NULL NONLOCAL } same as j_451
_184 = { NULL NONLOCAL } same as j_451
_185 = { assignedtableau } same as _56
derefaddrtmp(192) = { NONLOCAL } same as arraybase
_188 = { NULL NONLOCAL } same as j_451
_189 = { NONLOCAL }
k_489 = { NULL NONLOCAL } same as j_451
k_192 = { NULL NONLOCAL } same as j_451
_190 = { NULL NONLOCAL } same as j_451
_191 = { ESCAPED NONLOCAL }
derefaddrtmp(199) = { NONLOCAL } same as arraybase
numassigns_245 = { NULL NONLOCAL } same as j_451
j_193 = { NULL NONLOCAL } same as j_451
j_491 = { NULL NONLOCAL } same as j_451
j_206 = { NULL NONLOCAL } same as j_451
_201 = { NULL NONLOCAL } same as j_451
_202 = { ESCAPED NONLOCAL }
_199 = { NONLOCAL }
_205 = { NULL NONLOCAL }
_204 = { assignedtableau } same as _56
k_493 = { NULL NONLOCAL } same as j_451
k_218 = { NULL NONLOCAL } same as j_451
_214 = { NULL NONLOCAL } same as j_451
_217 = { ESCAPED NONLOCAL }
derefaddrtmp(213) = { NONLOCAL } same as arraybase
k_494 = { NULL NONLOCAL } same as j_451
k_226 = { NULL NONLOCAL } same as j_451
_220 = { NULL NONLOCAL } same as j_451
_221 = { NULL NONLOCAL } same as j_451
_222 = { NONLOCAL }
_223 = { ESCAPED NONLOCAL }
_224 = { NULL NONLOCAL } same as j_451
_225 = { assignedtableau } same as _56
derefaddrtmp(222) = { NONLOCAL } same as arraybase
totnumassigns_247 = { NULL NONLOCAL } same as j_451
totnumassigns_492 = { NULL NONLOCAL } same as j_451
totnumassigns_212 = { NULL NONLOCAL } same as j_451
i_227 = { NULL NONLOCAL } same as j_451
i_490 = { NULL NONLOCAL } same as j_451
_197 = { NULL NONLOCAL } same as j_451
_198 = { NULL NONLOCAL } same as j_451
_203 = { NULL NONLOCAL } same as j_451
_229 = { NULL NONLOCAL } same as j_451
derefaddrtmp(232) = { NONLOCAL } same as arraybase


Alias information for Assignment

Aliased symbols

assignedtableau, UID D.5123, short int[101][101], is addressable

Call clobber information

ESCAPED, points-to non-local, points-to vars: { }

Flow-insensitive points-to information

arraybase_4(D), points-to non-local, points-to NULL, points-to vars: { }
_12, points-to non-local, points-to NULL, points-to vars: { }
_31, points-to non-local, points-to NULL, points-to vars: { }
_41, points-to non-local, points-to NULL, points-to vars: { }
_56, points-to NULL, points-to vars: { D.5123 }
_66, points-to non-local, points-to NULL, points-to vars: { }
_76, points-to NULL, points-to vars: { D.5123 }
_90, points-to non-local, points-to NULL, points-to vars: { }
_101, points-to non-local, points-to NULL, points-to vars: { }
_113, points-to non-local, points-to NULL, points-to vars: { }
_127, points-to NULL, points-to vars: { D.5123 }
_135, points-to non-local, points-to NULL, points-to vars: { }
_140, points-to NULL, points-to vars: { D.5123 }
_152, points-to NULL, points-to vars: { D.5123 }
_157, points-to non-local, points-to NULL, points-to vars: { }
_160, points-to NULL, points-to vars: { D.5123 }
_166, points-to non-local, points-to NULL, points-to vars: { }
_171, points-to NULL, points-to vars: { D.5123 }
_185, points-to NULL, points-to vars: { D.5123 }
_189, points-to non-local, points-to NULL, points-to vars: { }
_199, points-to non-local, points-to NULL, points-to vars: { }
_204, points-to NULL, points-to vars: { D.5123 }
_222, points-to non-local, points-to NULL, points-to vars: { }
_225, points-to NULL, points-to vars: { D.5123 }

;; 36 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 149 3 115 4 148 5 147 6 146 7 8 114 9 151 145 150 10 144 95 113 11 108 12 130 107 13 129 106 128 14 15 152 16 127 17 102 18 19 105 20 154 21 22 155 126 153 23 125 103 24 104 25 157 26 158 27 28 159 124 156 29 123 30 122 100 31 101 32 161 33 34 162 121 160 35 120 98 36 99 37 164 38 39 165 119 163 40 118 96 41 97 42 167 43 44 168 117 166 45 116 46 47 143 48 49 142 50 111 51 141 52 169 53 170 54 55 56 57 58 172 59 173 60 61 174 140 171 62 112 139 63 138 64 175 65 176 66 67 68 69 70 178 71 179 72 73 180 137 177 74 136 75 76 135 77 181 109 134 78 182 79 183 80 133 81 185 82 186 83 84 110 85 187 86 188 87 88 189 132 184 89 131 90 91 190 92 93 94
;;
;; Loop 1
;;  header 47, latch 46
;;  depth 1, outer 0
;;  nodes: 47 46 45 166 168 44 167 43 42 117 97 41 116 96 40 163 165 39 164 38 37 119 99 36 118 98 35 160 162 34 161 33 32 121 101 31 120 100 30 29 156 159 28 157 158 27 26 25 124 104 24 123 103 23 153 155 22 154 21 20 126 105 19 125 18 102 122 16 152 93 15 14 128 17 127 106 13 129 107 12 130 108 91 89 184 189 88 187 188 87 86 85 132 110 84 185 186 83 82 81 133 94 79 78 134 90 131 109 77 76 74 177 180 73 178 179 72 71 70 137 69 68 67 175 176 66 65 64 138 75 136 112 62 171 174 61 172 173 60 59 58 140 57 56 55 169 170 54 53 52 141 63 139 51 111 135 49 48 143 50 142 80 182 183
;;
;; Loop 8
;;  header 41, latch 116
;;  depth 2, outer 1
;;  nodes: 41 116 45 166 168 44 167 43 42 117 97
;;
;; Loop 9
;;  header 42, latch 117
;;  depth 3, outer 8
;;  nodes: 42 117 44 167 43
;;
;; Loop 10
;;  header 36, latch 118
;;  depth 2, outer 1
;;  nodes: 36 118 40 163 165 39 164 38 37 119 99
;;
;; Loop 11
;;  header 37, latch 119
;;  depth 3, outer 10
;;  nodes: 37 119 39 164 38
;;
;; Loop 12
;;  header 31, latch 120
;;  depth 2, outer 1
;;  nodes: 31 120 35 160 162 34 161 33 32 121 101
;;
;; Loop 13
;;  header 32, latch 121
;;  depth 3, outer 12
;;  nodes: 32 121 34 161 33
;;
;; Loop 14
;;  header 18, latch 122
;;  depth 2, outer 1
;;  nodes: 18 122 30 29 156 159 28 157 158 27 26 25 124 104 24 123 103 23 153 155 22 154 21 20 126 105 19 125
;;
;; Loop 15
;;  header 24, latch 123
;;  depth 3, outer 14
;;  nodes: 24 123 29 156 159 28 157 158 27 26 25 124 104
;;
;; Loop 16
;;  header 25, latch 124
;;  depth 4, outer 15
;;  nodes: 25 124 28 157 158 27 26
;;
;; Loop 17
;;  header 19, latch 125
;;  depth 3, outer 14
;;  nodes: 19 125 23 153 155 22 154 21 20 126 105
;;
;; Loop 18
;;  header 20, latch 126
;;  depth 4, outer 17
;;  nodes: 20 126 22 154 21
;;
;; Loop 19
;;  header 17, latch 127
;;  depth 2, outer 1
;;  nodes: 17 127 16 152 93 15 14 128
;;
;; Loop 20
;;  header 14, latch 128
;;  depth 3, outer 19
;;  nodes: 14 128 15
;;
;; Loop 21
;;  header 13, latch 129
;;  depth 2, outer 1
;;  nodes: 13 129
;;
;; Loop 22
;;  header 12, latch 130
;;  depth 2, outer 1
;;  nodes: 12 130
;;
;; Loop 23
;;  header 90, latch 131
;;  depth 2, outer 1
;;  nodes: 90 131 89 184 189 88 187 188 87 86 85 132 110 84 185 186 83 82 81 133 94 79 78 134 80 182 183
;;
;; Loop 24
;;  header 85, latch 132
;;  depth 3, outer 23
;;  nodes: 85 132 88 187 188 87 86
;;
;; Loop 25
;;  header 81, latch 133
;;  depth 3, outer 23
;;  nodes: 81 133 84 185 186 83 82
;;
;; Loop 26
;;  header 78, latch 134
;;  depth 3, outer 23
;;  nodes: 78 134 80 182 183 79
;;
;; Loop 27
;;  header 51, latch 135
;;  depth 2, outer 1
;;  nodes: 51 135 76 74 177 180 73 178 179 72 71 70 137 69 68 67 175 176 66 65 64 138 75 136 112 62 171 174 61 172 173 60 59 58 140 57 56 55 169 170 54 53 52 141 63 139
;;
;; Loop 28
;;  header 75, latch 136
;;  depth 3, outer 27
;;  nodes: 75 136 74 177 180 73 178 179 72 71 70 137 69 68 67 175 176 66 65 64 138
;;
;; Loop 29
;;  header 70, latch 137
;;  depth 4, outer 28
;;  nodes: 70 137 73 178 179 72 71
;;
;; Loop 30
;;  header 64, latch 138
;;  depth 4, outer 28
;;  nodes: 64 138 67 175 176 66 65
;;
;; Loop 31
;;  header 63, latch 139
;;  depth 3, outer 27
;;  nodes: 63 139 62 171 174 61 172 173 60 59 58 140 57 56 55 169 170 54 53 52 141
;;
;; Loop 32
;;  header 58, latch 140
;;  depth 4, outer 31
;;  nodes: 58 140 61 172 173 60 59
;;
;; Loop 33
;;  header 52, latch 141
;;  depth 4, outer 31
;;  nodes: 52 141 55 169 170 54 53
;;
;; Loop 34
;;  header 50, latch 142
;;  depth 2, outer 1
;;  nodes: 50 142 49 48 143
;;
;; Loop 35
;;  header 48, latch 143
;;  depth 3, outer 34
;;  nodes: 48 143
;;
;; Loop 2
;;  header 11, latch 144
;;  depth 1, outer 0
;;  nodes: 11 144 10 150 151 9 145 114 8 7 146
;;
;; Loop 3
;;  header 9, latch 145
;;  depth 2, outer 2
;;  nodes: 9 145
;;
;; Loop 4
;;  header 7, latch 146
;;  depth 2, outer 2
;;  nodes: 7 146
;;
;; Loop 5
;;  header 6, latch 147
;;  depth 1, outer 0
;;  nodes: 6 147 5 4 148 115 3 149
;;
;; Loop 6
;;  header 4, latch 148
;;  depth 2, outer 5
;;  nodes: 4 148
;;
;; Loop 7
;;  header 3, latch 149
;;  depth 2, outer 5
;;  nodes: 3 149
;; 2 succs { 6 }
;; 149 succs { 3 }
;; 3 succs { 149 115 }
;; 115 succs { 4 }
;; 4 succs { 148 5 }
;; 148 succs { 4 }
;; 5 succs { 147 113 }
;; 147 succs { 6 }
;; 6 succs { 3 }
;; 146 succs { 7 }
;; 7 succs { 146 8 }
;; 8 succs { 114 150 }
;; 114 succs { 9 }
;; 9 succs { 145 151 }
;; 151 succs { 10 }
;; 145 succs { 9 }
;; 150 succs { 10 }
;; 10 succs { 144 95 }
;; 144 succs { 11 }
;; 95 succs { 47 }
;; 113 succs { 11 }
;; 11 succs { 7 }
;; 108 succs { 12 }
;; 12 succs { 130 107 }
;; 130 succs { 12 }
;; 107 succs { 13 }
;; 13 succs { 129 106 }
;; 129 succs { 13 }
;; 106 succs { 17 }
;; 128 succs { 14 }
;; 14 succs { 152 15 }
;; 15 succs { 128 93 }
;; 152 succs { 16 }
;; 16 succs { 127 102 }
;; 127 succs { 17 }
;; 17 succs { 14 }
;; 102 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 105 153 }
;; 105 succs { 20 }
;; 20 succs { 21 154 }
;; 154 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 126 155 }
;; 155 succs { 23 }
;; 126 succs { 20 }
;; 153 succs { 23 }
;; 23 succs { 125 103 }
;; 125 succs { 19 }
;; 103 succs { 24 }
;; 24 succs { 104 156 }
;; 104 succs { 25 }
;; 25 succs { 26 157 }
;; 157 succs { 28 }
;; 26 succs { 27 158 }
;; 158 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 124 159 }
;; 159 succs { 29 }
;; 124 succs { 25 }
;; 156 succs { 29 }
;; 29 succs { 123 30 }
;; 123 succs { 24 }
;; 30 succs { 122 100 }
;; 122 succs { 18 }
;; 100 succs { 31 }
;; 31 succs { 101 160 }
;; 101 succs { 32 }
;; 32 succs { 33 161 }
;; 161 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 121 162 }
;; 162 succs { 35 }
;; 121 succs { 32 }
;; 160 succs { 35 }
;; 35 succs { 120 98 }
;; 120 succs { 31 }
;; 98 succs { 36 }
;; 36 succs { 99 163 }
;; 99 succs { 37 }
;; 37 succs { 38 164 }
;; 164 succs { 39 }
;; 38 succs { 39 }
;; 39 succs { 119 165 }
;; 165 succs { 40 }
;; 119 succs { 37 }
;; 163 succs { 40 }
;; 40 succs { 118 96 }
;; 118 succs { 36 }
;; 96 succs { 41 }
;; 41 succs { 97 166 }
;; 97 succs { 42 }
;; 42 succs { 43 167 }
;; 167 succs { 44 }
;; 43 succs { 44 }
;; 44 succs { 117 168 }
;; 168 succs { 45 }
;; 117 succs { 42 }
;; 166 succs { 45 }
;; 45 succs { 116 46 }
;; 116 succs { 41 }
;; 46 succs { 47 }
;; 47 succs { 50 }
;; 143 succs { 48 }
;; 48 succs { 143 49 }
;; 49 succs { 142 111 }
;; 142 succs { 50 }
;; 50 succs { 48 }
;; 111 succs { 51 }
;; 51 succs { 63 }
;; 141 succs { 52 }
;; 52 succs { 53 169 }
;; 169 succs { 55 }
;; 53 succs { 54 170 }
;; 170 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 141 56 }
;; 56 succs { 57 171 }
;; 57 succs { 58 }
;; 58 succs { 59 172 }
;; 172 succs { 61 }
;; 59 succs { 60 173 }
;; 173 succs { 61 }
;; 60 succs { 61 }
;; 61 succs { 140 174 }
;; 174 succs { 62 }
;; 140 succs { 58 }
;; 171 succs { 62 }
;; 62 succs { 139 112 }
;; 112 succs { 75 }
;; 139 succs { 63 }
;; 63 succs { 52 }
;; 138 succs { 64 }
;; 64 succs { 65 175 }
;; 175 succs { 67 }
;; 65 succs { 66 176 }
;; 176 succs { 67 }
;; 66 succs { 67 }
;; 67 succs { 138 68 }
;; 68 succs { 69 177 }
;; 69 succs { 70 }
;; 70 succs { 71 178 }
;; 178 succs { 73 }
;; 71 succs { 72 179 }
;; 179 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 137 180 }
;; 180 succs { 74 }
;; 137 succs { 70 }
;; 177 succs { 74 }
;; 74 succs { 136 76 }
;; 136 succs { 75 }
;; 75 succs { 64 }
;; 76 succs { 135 77 }
;; 135 succs { 51 }
;; 77 succs { 181 109 }
;; 181 succs { 92 }
;; 109 succs { 90 }
;; 134 succs { 78 }
;; 78 succs { 79 182 }
;; 182 succs { 80 }
;; 79 succs { 94 183 }
;; 183 succs { 80 }
;; 80 succs { 134 184 }
;; 133 succs { 81 }
;; 81 succs { 82 185 }
;; 185 succs { 84 }
;; 82 succs { 83 186 }
;; 186 succs { 84 }
;; 83 succs { 84 }
;; 84 succs { 133 110 }
;; 110 succs { 85 }
;; 85 succs { 86 187 }
;; 187 succs { 88 }
;; 86 succs { 87 188 }
;; 188 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 132 189 }
;; 189 succs { 89 }
;; 132 succs { 85 }
;; 184 succs { 89 }
;; 89 succs { 131 91 }
;; 131 succs { 90 }
;; 90 succs { 78 }
;; 91 succs { 108 190 }
;; 190 succs { 92 }
;; 92 succs { 1 }
;; 93 succs { 16 }
;; 94 succs { 81 }
find_duplicates: <bb 181> duplicate of <bb 190>
find_duplicates: <bb 187> duplicate of <bb 188>
find_duplicates: <bb 185> duplicate of <bb 186>
find_duplicates: <bb 182> duplicate of <bb 183>
find_duplicates: <bb 178> duplicate of <bb 179>
find_duplicates: <bb 172> duplicate of <bb 173>
find_duplicates: <bb 166> duplicate of <bb 168>
find_duplicates: <bb 163> duplicate of <bb 165>
find_duplicates: <bb 153> duplicate of <bb 155>
find_duplicates: <bb 150> duplicate of <bb 151>
Removing basic block 190
Removing basic block 188
Removing basic block 186
Removing basic block 183
Removing basic block 179
Removing basic block 173
Removing basic block 168
Removing basic block 165
Removing basic block 155
Removing basic block 151

Symbols to be put in SSA form
{ D.6286 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 191
Number of blocks to update: 180 ( 94%)


Removing basic block 95
Removing basic block 96
Removing basic block 98
Removing basic block 100
Removing basic block 102
Removing basic block 103
Removing basic block 104
Removing basic block 106
Removing basic block 107
Removing basic block 108
Removing basic block 109
Removing basic block 110
Removing basic block 111
Removing basic block 112
Removing basic block 113
Removing basic block 114
Removing basic block 115
Removing basic block 116
Removing basic block 117
Removing basic block 118
Removing basic block 119
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 125
Removing basic block 126
Removing basic block 127
Removing basic block 128
Removing basic block 129
Removing basic block 130
Removing basic block 131
Removing basic block 132
Removing basic block 133
Removing basic block 134
Removing basic block 135
Removing basic block 136
Removing basic block 137
Removing basic block 138
Removing basic block 139
Removing basic block 140
Removing basic block 141
Removing basic block 142
Removing basic block 143
Removing basic block 144
Removing basic block 145
Removing basic block 146
Removing basic block 147
Removing basic block 148
Removing basic block 149
Merging blocks 150 and 10
Removing basic block 152
Merging blocks 153 and 23
Removing basic block 154
Removing basic block 156
Removing basic block 157
Removing basic block 158
Removing basic block 159
Removing basic block 160
Removing basic block 161
Removing basic block 162
Merging blocks 163 and 40
Removing basic block 164
Merging blocks 166 and 45
Removing basic block 167
Removing basic block 169
Removing basic block 170
Removing basic block 171
Removing basic block 172
Removing basic block 174
Removing basic block 175
Removing basic block 176
Removing basic block 177
Removing basic block 178
Removing basic block 180
Merging blocks 181 and 92
Removing basic block 182
Removing basic block 184
Removing basic block 185
Removing basic block 187
Removing basic block 189
Assignment (farlong[101] * arraybase)
{
  short unsigned int i;
  short unsigned int j;
  short unsigned int k;
  short unsigned int numassigns;
  short unsigned int totnumassigns;
  short unsigned int numzeros;
  int selected;
  int D.6709;
  int i;
  int j;
  short int linesrow[101];
  short int linescol[101];
  long int smallest;
  short unsigned int numassigns;
  short unsigned int newrows;
  short unsigned int i;
  short unsigned int j;
  long int currentmin;
  short int assignedtableau[101][101];
  long unsigned int _10;
  long unsigned int _11;
  long int[101] * _12;
  int _14;
  long int _15;
  int _22;
  long int _23;
  long int _25;
  long unsigned int _29;
  long unsigned int _30;
  long int[101] * _31;
  long int _34;
  long unsigned int _39;
  long unsigned int _40;
  long int[101] * _41;
  long int _43;
  long int _44;
  long unsigned int _54;
  long unsigned int _55;
  short int[101] * _56;
  short int _58;
  short int _63;
  long unsigned int _64;
  long unsigned int _65;
  long int[101] * _66;
  long int _68;
  short int _72;
  long unsigned int _74;
  long unsigned int _75;
  short int[101] * _76;
  short int _77;
  short int _78;
  short int _85;
  short int _87;
  long unsigned int _88;
  long unsigned int _89;
  long int[101] * _90;
  long int _91;
  short int _96;
  short int _98;
  long unsigned int _99;
  long unsigned int _100;
  long int[101] * _101;
  long int _102;
  long int _104;
  short int _108;
  short int _110;
  long unsigned int _111;
  long unsigned int _112;
  long int[101] * _113;
  long int _114;
  long int _115;
  long unsigned int _125;
  long unsigned int _126;
  short int[101] * _127;
  int _129;
  int _132;
  long unsigned int _133;
  long unsigned int _134;
  long int[101] * _135;
  int _137;
  long int _138;
  long unsigned int _139;
  short int[101] * _140;
  short int _141;
  long unsigned int _155;
  long unsigned int _156;
  long int[101] * _157;
  long int _158;
  long unsigned int _159;
  short int[101] * _160;
  long unsigned int _164;
  long unsigned int _165;
  long int[101] * _166;
  long int _169;
  long unsigned int _170;
  short int[101] * _171;
  short int _172;
  long unsigned int _183;
  long unsigned int _184;
  short int[101] * _185;
  long unsigned int _188;
  long int[101] * _189;
  int _190;
  long int _191;
  long int _195;
  long unsigned int _197;
  long unsigned int _198;
  long int[101] * _199;
  int _201;
  long int _202;
  long unsigned int _203;
  short int[101] * _204;
  short int _205;
  int _214;
  long int _217;
  long unsigned int _220;
  long unsigned int _221;
  long int[101] * _222;
  long int _223;
  long unsigned int _224;
  short int[101] * _225;
  int _229;
  int _441;

  <bb 2> [0.00%]:
  goto <bb 6>; [100.00%]

  <bb 3> [2.23%]:
  # j_451 = PHI <j_17(3), 0(6)>
  # currentmin_452 = PHI <currentmin_228(3), 9223372036854775807(6)>
  _14 = (int) j_451;
  _15 = *_12[_14];
  currentmin_228 = MIN_EXPR <_15, currentmin_452>;
  j_17 = j_451 + 1;
  if (j_17 != 101)
    goto <bb 3>; [98.99%]
  else
    goto <bb 4>; [1.01%]

  <bb 4> [2.23%]:
  # j_453 = PHI <j_26(4), 0(3)>
  _22 = (int) j_453;
  _23 = *_12[_22];
  _25 = _23 - currentmin_228;
  *_12[_22] = _25;
  j_26 = j_453 + 1;
  if (j_26 != 101)
    goto <bb 4>; [98.99%]
  else
    goto <bb 5>; [1.01%]

  <bb 5> [0.02%]:
  i_27 = i_450 + 1;
  if (i_27 != 101)
    goto <bb 6>; [99.00%]
  else
    goto <bb 11>; [1.00%]

  <bb 6> [0.02%]:
  # i_450 = PHI <i_27(5), 0(2)>
  _10 = (long unsigned int) i_450;
  _11 = _10 * 808;
  _12 = arraybase_4(D) + _11;
  goto <bb 3>; [100.00%]

  <bb 7> [2.23%]:
  # i_454 = PHI <i_36(7), 0(11)>
  # currentmin_456 = PHI <currentmin_442(7), 9223372036854775807(11)>
  _29 = (long unsigned int) i_454;
  _30 = _29 * 808;
  _31 = arraybase_4(D) + _30;
  _34 = *_31[_132];
  currentmin_442 = MIN_EXPR <_34, currentmin_456>;
  i_36 = i_454 + 1;
  if (i_36 != 101)
    goto <bb 7>; [98.99%]
  else
    goto <bb 8>; [1.01%]

  <bb 8> [0.02%]:
  if (currentmin_442 != 0)
    goto <bb 9>; [34.00%]
  else
    goto <bb 10>; [66.00%]

  <bb 9> [0.76%]:
  # i_457 = PHI <i_45(9), 0(8)>
  _39 = (long unsigned int) i_457;
  _40 = _39 * 808;
  _41 = arraybase_4(D) + _40;
  _43 = *_41[_132];
  _44 = _43 - currentmin_442;
  *_41[_132] = _44;
  i_45 = i_457 + 1;
  if (i_45 != 101)
    goto <bb 9>; [98.99%]
  else
    goto <bb 10>; [1.01%]

  <bb 10> [0.02%]:
  j_46 = j_455 + 1;
  if (j_46 != 101)
    goto <bb 11>; [99.00%]
  else
    goto <bb 51>; [1.00%]

  <bb 11> [0.02%]:
  # j_455 = PHI <j_46(10), 0(5)>
  _132 = (int) j_455;
  goto <bb 7>; [100.00%]

  <bb 12> [0.13%]:
  # i_458 = PHI <i_50(12), 0(96)>
  linesrow[i_458] = 0;
  i_50 = i_458 + 1;
  if (i_50 != 101)
    goto <bb 12>; [99.00%]
  else
    goto <bb 13>; [1.00%]

  <bb 13> [0.13%]:
  # i_459 = PHI <i_52(13), 0(12)>
  linescol[i_459] = 0;
  i_52 = i_459 + 1;
  if (i_52 != 101)
    goto <bb 13>; [99.00%]
  else
    goto <bb 17>; [1.00%]

  <bb 14> [1.50%]:
  # j_461 = PHI <j_59(15), 0(17)>
  _58 = *_56[j_461];
  if (_58 == 1)
    goto <bb 16>; [7.50%]
  else
    goto <bb 15>; [92.50%]

  <bb 15> [1.39%]:
  j_59 = j_461 + 1;
  if (j_59 != 101)
    goto <bb 14>; [98.91%]
  else
    goto <bb 97>; [1.09%]

  <bb 16> [0.13%]:
  i_61 = i_460 + 1;
  if (i_61 != 101)
    goto <bb 17>; [99.00%]
  else
    goto <bb 18>; [1.00%]

  <bb 17> [0.13%]:
  # i_460 = PHI <i_61(16), 0(13)>
  _54 = (long unsigned int) i_460;
  _55 = _54 * 202;
  _56 = &assignedtableau + _55;
  goto <bb 14>; [100.00%]

  <bb 18> [0.01%]:

  <bb 19> [0.85%]:
  # i_462 = PHI <i_70(24), 0(18)>
  _63 = linesrow[i_462];
  if (_63 == 1)
    goto <bb 20>; [20.97%]
  else
    goto <bb 24>; [79.03%]

  <bb 20> [0.18%]:
  _64 = (long unsigned int) i_462;
  _65 = _64 * 808;
  _66 = arraybase_4(D) + _65;

  <bb 21> [17.65%]:
  # j_463 = PHI <j_69(23), 0(20)>
  _68 = *_66[j_463];
  if (_68 == 0)
    goto <bb 22>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 22> [8.82%]:
  linescol[j_463] = 1;

  <bb 23> [17.65%]:
  j_69 = j_463 + 1;
  if (j_69 != 101)
    goto <bb 21>; [98.99%]
  else
    goto <bb 24>; [1.01%]

  <bb 24> [0.85%]:
  i_70 = i_462 + 1;
  if (i_70 != 101)
    goto <bb 19>; [98.99%]
  else
    goto <bb 25>; [1.01%]

  <bb 25> [0.85%]:
  # j_464 = PHI <j_82(30), 0(24)>
  # newrows_474 = PHI <newrows_120(30), 0(24)>
  _72 = linescol[j_464];
  if (_72 == 1)
    goto <bb 26>; [20.97%]
  else
    goto <bb 30>; [79.03%]

  <bb 26> [17.65%]:
  # i_465 = PHI <i_81(29), 0(25)>
  # newrows_466 = PHI <newrows_118(29), newrows_474(25)>
  _74 = (long unsigned int) i_465;
  _75 = _74 * 202;
  _76 = &assignedtableau + _75;
  _77 = *_76[j_464];
  if (_77 == 1)
    goto <bb 27>; [34.00%]
  else
    goto <bb 29>; [66.00%]

  <bb 27> [6.00%]:
  _78 = linesrow[i_465];
  if (_78 != 1)
    goto <bb 28>; [66.00%]
  else
    goto <bb 29>; [34.00%]

  <bb 28> [3.96%]:
  linesrow[i_465] = 1;
  newrows_80 = newrows_466 + 1;

  <bb 29> [17.65%]:
  # newrows_118 = PHI <newrows_466(26), newrows_466(27), newrows_80(28)>
  i_81 = i_465 + 1;
  if (i_81 != 101)
    goto <bb 26>; [98.99%]
  else
    goto <bb 30>; [1.01%]

  <bb 30> [0.85%]:
  # newrows_120 = PHI <newrows_474(25), newrows_118(29)>
  j_82 = j_464 + 1;
  if (j_82 != 101)
    goto <bb 25>; [98.99%]
  else
    goto <bb 31>; [1.01%]

  <bb 31> [0.01%]:
  if (newrows_120 != 0)
    goto <bb 18>; [85.00%]
  else
    goto <bb 32>; [15.00%]

  <bb 32> [0.13%]:
  # i_467 = PHI <i_94(37), 0(31)>
  # smallest_475 = PHI <smallest_123(37), 9223372036854775807(31)>
  _85 = linesrow[i_467];
  if (_85 != 0)
    goto <bb 33>; [34.00%]
  else
    goto <bb 37>; [66.00%]

  <bb 33> [0.04%]:
  _88 = (long unsigned int) i_467;
  _89 = _88 * 808;
  _90 = arraybase_4(D) + _89;

  <bb 34> [4.29%]:
  # j_468 = PHI <j_93(36), 0(33)>
  # smallest_469 = PHI <smallest_121(36), smallest_475(33)>
  _87 = linescol[j_468];
  if (_87 != 1)
    goto <bb 35>; [66.00%]
  else
    goto <bb 36>; [34.00%]

  <bb 35> [2.83%]:
  _91 = *_90[j_468];
  _195 = MIN_EXPR <_91, smallest_469>;

  <bb 36> [4.30%]:
  # smallest_121 = PHI <smallest_469(34), _195(35)>
  j_93 = j_468 + 1;
  if (j_93 != 101)
    goto <bb 34>; [98.99%]
  else
    goto <bb 37>; [1.01%]

  <bb 37> [0.13%]:
  # smallest_123 = PHI <smallest_475(32), smallest_121(36)>
  i_94 = i_467 + 1;
  if (i_94 != 101)
    goto <bb 32>; [99.00%]
  else
    goto <bb 38>; [1.00%]

  <bb 38> [0.13%]:
  # i_470 = PHI <i_106(43), 0(37)>
  _96 = linesrow[i_470];
  if (_96 != 0)
    goto <bb 39>; [34.00%]
  else
    goto <bb 43>; [66.00%]

  <bb 39> [0.04%]:
  _99 = (long unsigned int) i_470;
  _100 = _99 * 808;
  _101 = arraybase_4(D) + _100;

  <bb 40> [4.29%]:
  # j_471 = PHI <j_105(42), 0(39)>
  _98 = linescol[j_471];
  if (_98 != 1)
    goto <bb 41>; [66.00%]
  else
    goto <bb 42>; [34.00%]

  <bb 41> [2.83%]:
  _102 = *_101[j_471];
  _104 = _102 - smallest_123;
  *_101[j_471] = _104;

  <bb 42> [4.30%]:
  j_105 = j_471 + 1;
  if (j_105 != 101)
    goto <bb 40>; [98.99%]
  else
    goto <bb 43>; [1.01%]

  <bb 43> [0.13%]:
  i_106 = i_470 + 1;
  if (i_106 != 101)
    goto <bb 38>; [99.00%]
  else
    goto <bb 44>; [1.00%]

  <bb 44> [0.13%]:
  # i_472 = PHI <i_117(49), 0(43)>
  _108 = linesrow[i_472];
  if (_108 == 0)
    goto <bb 45>; [34.00%]
  else
    goto <bb 49>; [66.00%]

  <bb 45> [0.04%]:
  _111 = (long unsigned int) i_472;
  _112 = _111 * 808;
  _113 = arraybase_4(D) + _112;

  <bb 46> [4.29%]:
  # j_473 = PHI <j_116(48), 0(45)>
  _110 = linescol[j_473];
  if (_110 == 1)
    goto <bb 47>; [34.00%]
  else
    goto <bb 48>; [66.00%]

  <bb 47> [1.46%]:
  _114 = *_113[j_473];
  _115 = _114 + smallest_123;
  *_113[j_473] = _115;

  <bb 48> [4.30%]:
  j_116 = j_473 + 1;
  if (j_116 != 101)
    goto <bb 46>; [98.99%]
  else
    goto <bb 49>; [1.01%]

  <bb 49> [0.13%]:
  i_117 = i_472 + 1;
  if (i_117 != 101)
    goto <bb 44>; [99.00%]
  else
    goto <bb 50>; [1.00%]

  <bb 50> [0.00%]:
  linesrow ={v} {CLOBBER};
  linescol ={v} {CLOBBER};

  <bb 51> [0.00%]:
  goto <bb 54>; [100.00%]

  <bb 52> [14.85%]:
  # j_477 = PHI <j_130(52), 0(54)>
  _129 = (int) j_477;
  *_127[_129] = 0;
  j_130 = j_477 + 1;
  if (j_130 != 101)
    goto <bb 52>; [98.99%]
  else
    goto <bb 53>; [1.01%]

  <bb 53> [0.15%]:
  i_131 = i_476 + 1;
  if (i_131 != 101)
    goto <bb 54>; [99.00%]
  else
    goto <bb 55>; [1.00%]

  <bb 54> [0.15%]:
  # i_476 = PHI <i_131(53), 0(51)>
  _125 = (long unsigned int) i_476;
  _126 = _125 * 202;
  _127 = &assignedtableau + _126;
  goto <bb 52>; [100.00%]

  <bb 55> [0.01%]:
  # totnumassigns_231 = PHI <0(53), totnumassigns_246(80)>
  # selected_233 = PHI <0(53), selected_242(80)>
  goto <bb 67>; [100.00%]

  <bb 56> [99.00%]:
  # j_479 = PHI <j_144(59), 0(67)>
  # numzeros_480 = PHI <numzeros_235(59), 0(67)>
  # selected_495 = PHI <selected_236(59), selected_496(67)>
  _137 = (int) j_479;
  _138 = *_135[_137];
  if (_138 == 0)
    goto <bb 57>; [50.00%]
  else
    goto <bb 59>; [50.00%]

  <bb 57> [49.50%]:
  _141 = *_140[_137];
  if (_141 == 0)
    goto <bb 58>; [50.00%]
  else
    goto <bb 59>; [50.00%]

  <bb 58> [24.75%]:
  numzeros_143 = numzeros_480 + 1;

  <bb 59> [99.00%]:
  # numzeros_235 = PHI <numzeros_480(56), numzeros_480(57), numzeros_143(58)>
  # selected_236 = PHI <selected_495(56), selected_495(57), _137(58)>
  j_144 = j_479 + 1;
  if (j_144 != 101)
    goto <bb 56>; [98.99%]
  else
    goto <bb 60>; [1.01%]

  <bb 60> [1.00%]:
  if (numzeros_235 == 1)
    goto <bb 61>; [20.97%]
  else
    goto <bb 66>; [79.03%]

  <bb 61> [0.21%]:
  numassigns_147 = numassigns_481 + 1;
  totnumassigns_149 = totnumassigns_482 + 1;
  *_140[selected_236] = 1;

  <bb 62> [20.76%]:
  # k_483 = PHI <k_161(65), 0(61)>
  if (i_478 != k_483)
    goto <bb 63>; [98.96%]
  else
    goto <bb 65>; [1.04%]

  <bb 63> [20.54%]:
  _155 = (long unsigned int) k_483;
  _156 = _155 * 808;
  _157 = arraybase_4(D) + _156;
  _158 = *_157[selected_236];
  if (_158 == 0)
    goto <bb 64>; [50.00%]
  else
    goto <bb 65>; [50.00%]

  <bb 64> [10.27%]:
  _159 = _155 * 202;
  _160 = &assignedtableau + _159;
  *_160[selected_236] = 2;

  <bb 65> [20.76%]:
  k_161 = k_483 + 1;
  if (k_161 != 101)
    goto <bb 62>; [98.99%]
  else
    goto <bb 66>; [1.01%]

  <bb 66> [1.00%]:
  # numassigns_239 = PHI <numassigns_481(60), numassigns_147(65)>
  # totnumassigns_240 = PHI <totnumassigns_482(60), totnumassigns_149(65)>
  i_162 = i_478 + 1;
  if (i_162 != 101)
    goto <bb 67>; [98.99%]
  else
    goto <bb 79>; [1.01%]

  <bb 67> [1.00%]:
  # i_478 = PHI <i_162(66), 0(55)>
  # numassigns_481 = PHI <numassigns_239(66), 0(55)>
  # totnumassigns_482 = PHI <totnumassigns_240(66), totnumassigns_231(55)>
  # selected_496 = PHI <selected_236(66), selected_233(55)>
  _133 = (long unsigned int) i_478;
  _134 = _133 * 808;
  _135 = arraybase_4(D) + _134;
  _139 = _133 * 202;
  _140 = &assignedtableau + _139;
  goto <bb 56>; [100.00%]

  <bb 68> [99.00%]:
  # i_484 = PHI <i_176(71), 0(79)>
  # numzeros_486 = PHI <numzeros_241(71), 0(79)>
  # selected_497 = PHI <selected_242(71), selected_498(79)>
  _164 = (long unsigned int) i_484;
  _165 = _164 * 808;
  _166 = arraybase_4(D) + _165;
  _169 = *_166[_441];
  if (_169 == 0)
    goto <bb 69>; [50.00%]
  else
    goto <bb 71>; [50.00%]

  <bb 69> [49.50%]:
  _170 = _164 * 202;
  _171 = &assignedtableau + _170;
  _172 = *_171[_441];
  if (_172 == 0)
    goto <bb 70>; [50.00%]
  else
    goto <bb 71>; [50.00%]

  <bb 70> [24.75%]:
  numzeros_174 = numzeros_486 + 1;
  selected_175 = (int) i_484;

  <bb 71> [99.00%]:
  # numzeros_241 = PHI <numzeros_486(68), numzeros_486(69), numzeros_174(70)>
  # selected_242 = PHI <selected_497(68), selected_497(69), selected_175(70)>
  i_176 = i_484 + 1;
  if (i_176 != 101)
    goto <bb 68>; [98.99%]
  else
    goto <bb 72>; [1.01%]

  <bb 72> [1.00%]:
  if (numzeros_241 == 1)
    goto <bb 73>; [20.97%]
  else
    goto <bb 78>; [79.03%]

  <bb 73> [0.21%]:
  numassigns_179 = numassigns_487 + 1;
  totnumassigns_181 = totnumassigns_488 + 1;
  _183 = (long unsigned int) selected_242;
  _184 = _183 * 202;
  _185 = &assignedtableau + _184;
  *_185[_441] = 1;
  _188 = _183 * 808;
  _189 = arraybase_4(D) + _188;

  <bb 74> [20.76%]:
  # k_489 = PHI <k_192(77), 0(73)>
  if (j_485 != k_489)
    goto <bb 75>; [98.96%]
  else
    goto <bb 77>; [1.04%]

  <bb 75> [20.54%]:
  _190 = (int) k_489;
  _191 = *_189[_190];
  if (_191 == 0)
    goto <bb 76>; [50.00%]
  else
    goto <bb 77>; [50.00%]

  <bb 76> [10.27%]:
  *_185[_190] = 2;

  <bb 77> [20.76%]:
  k_192 = k_489 + 1;
  if (k_192 != 101)
    goto <bb 74>; [98.99%]
  else
    goto <bb 78>; [1.01%]

  <bb 78> [1.00%]:
  # numassigns_245 = PHI <numassigns_487(72), numassigns_179(77)>
  # totnumassigns_246 = PHI <totnumassigns_488(72), totnumassigns_181(77)>
  j_193 = j_485 + 1;
  if (j_193 != 101)
    goto <bb 79>; [98.99%]
  else
    goto <bb 80>; [1.01%]

  <bb 79> [1.00%]:
  # j_485 = PHI <j_193(78), 0(66)>
  # numassigns_487 = PHI <numassigns_245(78), numassigns_239(66)>
  # totnumassigns_488 = PHI <totnumassigns_246(78), totnumassigns_240(66)>
  # selected_498 = PHI <selected_242(78), selected_236(66)>
  _441 = (int) j_485;
  goto <bb 68>; [100.00%]

  <bb 80> [0.01%]:
  if (numassigns_245 != 0)
    goto <bb 55>; [85.00%]
  else
    goto <bb 81>; [15.00%]

  <bb 81> [0.00%]:
  if (totnumassigns_246 == 101)
    goto <bb 82>; [18.79%]
  else
    goto <bb 95>; [81.21%]

  <bb 82> [0.00%]:
  assignedtableau ={v} {CLOBBER};
  return;

  <bb 83> [2.56%]:
  # j_491 = PHI <j_206(85), 0(95)>
  _201 = (int) j_491;
  _202 = *_199[_201];
  if (_202 == 0)
    goto <bb 84>; [50.00%]
  else
    goto <bb 85>; [50.00%]

  <bb 84> [1.28%]:
  _205 = *_204[_201];
  if (_205 == 0)
    goto <bb 98>; [7.50%]
  else
    goto <bb 85>; [92.50%]

  <bb 85> [2.46%]:
  j_206 = j_491 + 1;
  if (j_206 != 101)
    goto <bb 83>; [98.95%]
  else
    goto <bb 94>; [1.05%]

  <bb 86> [6.03%]:
  # k_493 = PHI <k_218(89), 0(98)>
  _214 = (int) k_493;
  if (_201 != _214)
    goto <bb 87>; [98.96%]
  else
    goto <bb 89>; [1.04%]

  <bb 87> [5.97%]:
  _217 = *_199[_214];
  if (_217 == 0)
    goto <bb 88>; [50.00%]
  else
    goto <bb 89>; [50.00%]

  <bb 88> [2.98%]:
  *_204[_214] = 2;

  <bb 89> [6.03%]:
  k_218 = k_493 + 1;
  if (k_218 != 101)
    goto <bb 86>; [98.99%]
  else
    goto <bb 90>; [1.01%]

  <bb 90> [6.03%]:
  # k_494 = PHI <k_226(93), 0(89)>
  if (i_490 != k_494)
    goto <bb 91>; [98.96%]
  else
    goto <bb 93>; [1.04%]

  <bb 91> [5.97%]:
  _220 = (long unsigned int) k_494;
  _221 = _220 * 808;
  _222 = arraybase_4(D) + _221;
  _223 = *_222[_201];
  if (_223 == 0)
    goto <bb 92>; [50.00%]
  else
    goto <bb 93>; [50.00%]

  <bb 92> [2.98%]:
  _224 = _220 * 202;
  _225 = &assignedtableau + _224;
  *_225[_201] = 2;

  <bb 93> [6.03%]:
  k_226 = k_494 + 1;
  if (k_226 != 101)
    goto <bb 90>; [98.99%]
  else
    goto <bb 94>; [1.01%]

  <bb 94> [0.12%]:
  # totnumassigns_247 = PHI <totnumassigns_492(85), totnumassigns_212(93)>
  i_227 = i_490 + 1;
  if (i_227 != 101)
    goto <bb 95>; [99.00%]
  else
    goto <bb 96>; [1.00%]

  <bb 95> [0.12%]:
  # i_490 = PHI <i_227(94), 0(81)>
  # totnumassigns_492 = PHI <totnumassigns_247(94), totnumassigns_246(81)>
  _197 = (long unsigned int) i_490;
  _198 = _197 * 808;
  _199 = arraybase_4(D) + _198;
  _203 = _197 * 202;
  _204 = &assignedtableau + _203;
  goto <bb 83>; [100.00%]

  <bb 96> [0.00%]:
  _229 = (int) totnumassigns_247;
  if (totnumassigns_247 != 101)
    goto <bb 12>; [85.00%]
  else
    goto <bb 82>; [15.00%]

  <bb 97> [0.06%]:
  linesrow[i_460] = 1;
  goto <bb 16>; [100.00%]

  <bb 98> [0.10%]:
  *_204[_201] = 1;
  totnumassigns_212 = totnumassigns_492 + 1;
  goto <bb 86>; [100.00%]

}



;; Function DoBitfieldIteration (DoBitfieldIteration, funcdef_no=65, decl_uid=4548, cgraph_uid=65, symbol_order=90)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
bitarraybase = &NONLOCAL
bitoparraybase = &NONLOCAL
bitoparraysize = &NONLOCAL
nbitops = &NONLOCAL
derefaddrtmp(12) = &NULL
*nbitops = derefaddrtmp(12)
ESCAPED = &NONLOCAL
global_bitopstruct.0+32 = NONLOCAL
global_bitopstruct.64+256 = NONLOCAL
_131 = global_bitopstruct.64+256
i.39_133 = i.39_4
i.39_133 = &NULL
i_134 = i_66
i_134 = &NULL
_1 = i.39_133
_1 = &NONLOCAL
_2 = bitarraybase + UNKNOWN
derefaddrtmp(23) = &NONLOCAL
*_2 = derefaddrtmp(23)
i_66 = i_134
i_66 = &NONLOCAL
_3 = global_bitopstruct.64+256
i.39_4 = i_66
ESCAPED = &NONLOCAL
i_135 = i_64
i_135 = &NULL
ESCAPED = &NONLOCAL
_5 = NONLOCAL
bitoffset_59 = _5
i.40_6 = i_135
_7 = i.40_6
_7 = &NONLOCAL
_8 = bitoparraybase + UNKNOWN
*_8 = bitoffset_59
_9 = &NONLOCAL
_9 = _5
ESCAPED = _9
_10 = NONLOCAL
_11 = _7
_11 = &NONLOCAL
_12 = bitoparraybase + UNKNOWN
_13 = _10
*_12 = _13
_14 = *nbitops
_15 = _13
_15 = _14
*nbitops = _15
i_64 = i_135
i_64 = &NONLOCAL
i_136 = i_57
i_136 = &NULL
_16 = i_136
_16 = &NONLOCAL
i.42_17 = i_136
_18 = i.42_17
_18 = &NONLOCAL
_19 = _18
_19 = &NONLOCAL
_20 = bitoparraybase + UNKNOWN
_21 = *_20
_22 = bitoparraybase + UNKNOWN
_23 = *_22
nbits_113 = _21
nbits_113 = &NONLOCAL
bit_addr_143 = bit_addr_77
bit_addr_143 = _23
nbits_144 = nbits_79
nbits_144 = nbits_113
bindex_68 = bit_addr_143
bindex_68 = &NONLOCAL
bitnumb_69 = bit_addr_143 + UNKNOWN
_70 = bindex_68
_70 = &NONLOCAL
_71 = bitarraybase + UNKNOWN
_72 = *_71
_73 = bitnumb_69
_74 = &NONLOCAL
_74 = _73
_75 = _74
_76 = _72
_76 = _75
*_71 = _76
bit_addr_77 = bit_addr_143
bit_addr_77 = &NONLOCAL
nbits_79 = nbits_144
nbits_79 = &NONLOCAL
i.44_24 = i_136
_25 = i.44_24
_25 = &NONLOCAL
_26 = _25
_26 = &NONLOCAL
_27 = bitoparraybase + UNKNOWN
_28 = *_27
_29 = bitoparraybase + UNKNOWN
_30 = *_29
nbits_126 = _28
nbits_126 = &NONLOCAL
bit_addr_145 = bit_addr_91
bit_addr_145 = _30
nbits_146 = nbits_93
nbits_146 = nbits_126
bindex_81 = bit_addr_145
bindex_81 = &NONLOCAL
bitnumb_82 = bit_addr_145 + UNKNOWN
_83 = bindex_81
_83 = &NONLOCAL
_84 = bitarraybase + UNKNOWN
_85 = *_84
_86 = bitnumb_82
_87 = &NONLOCAL
_87 = _86
_88 = _87
_89 = _88
_90 = _85
_90 = _89
*_84 = _90
bit_addr_91 = bit_addr_145
bit_addr_91 = &NONLOCAL
nbits_93 = nbits_146
nbits_93 = &NONLOCAL
i.46_31 = i_136
_32 = i.46_31
_32 = &NONLOCAL
_33 = _32
_33 = &NONLOCAL
_34 = bitoparraybase + UNKNOWN
_35 = *_34
_36 = bitoparraybase + UNKNOWN
_37 = *_36
nbits_119 = _35
nbits_119 = &NONLOCAL
bit_addr_147 = bit_addr_104
bit_addr_147 = _37
nbits_148 = nbits_106
nbits_148 = nbits_119
bindex_95 = bit_addr_147
bindex_95 = &NONLOCAL
bitnumb_96 = bit_addr_147 + UNKNOWN
_97 = bindex_95
_97 = &NONLOCAL
_98 = bitarraybase + UNKNOWN
_99 = *_98
_100 = bitnumb_96
_101 = &NONLOCAL
_101 = _100
_102 = _101
_103 = _99
_103 = _102
*_98 = _103
bit_addr_104 = bit_addr_147
bit_addr_104 = &NONLOCAL
nbits_106 = nbits_148
nbits_106 = &NONLOCAL
i_57 = i_136
i_57 = &NONLOCAL
elapsed_121 = elapsed_109
elapsed_121 = elapsed_118
ESCAPED = elapsed_121
_54 = NONLOCAL
ESCAPED = _54
elapsed_109 = NONLOCAL
elapsed_118 = NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 5 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"bitarraybase"[label="bitarraybase = { 5 }"];
"bitoparraybase"[label="bitoparraybase = { 5 }"];
"bitoparraysize"[label="bitoparraysize = { 5 }"];
"nbitops"[label="nbitops = { 5 }"];
"derefaddrtmp(12)"[label="derefaddrtmp(12) = { 1 }"];
"randnum";
"_131";
"global_bitopstruct.0+32";
"global_bitopstruct.64+256";
"i.39_133"[label="i.39_133 = { 1 }"];
"i.39_4";
"i_66"[label="i_66 = { 1 5 }"];
"_1"[label="_1 = { 5 }"];
"_2";
"derefaddrtmp(23)"[label="derefaddrtmp(23) = { 5 }"];
"_3";
"i_135"[label="i_135 = { 1 5 }"];
"abs_randwc";
"_5";
"bitoffset_59";
"i.40_6";
"_7"[label="_7 = { 5 }"];
"_8";
"_9"[label="_9 = { 5 }"];
"_10";
"_11"[label="_11 = { 5 }"];
"_12";
"_13";
"_14";
"i_136"[label="i_136 = { 1 5 }"];
"_16"[label="_16 = { 5 }"];
"i.42_17";
"_18"[label="_18 = { 5 }"];
"_19"[label="_19 = { 5 }"];
"_20";
"_21";
"_22";
"_23";
"nbits_113"[label="nbits_113 = { 5 }"];
"bit_addr_143"[label="bit_addr_143 = { 5 }"];
"nbits_144"[label="nbits_144 = { 5 }"];
"bindex_68"[label="bindex_68 = { 5 }"];
"bitnumb_69";
"_70"[label="_70 = { 5 }"];
"_71";
"_72";
"_73";
"_74"[label="_74 = { 5 }"];
"_75";
"i.44_24";
"_25"[label="_25 = { 5 }"];
"_26"[label="_26 = { 5 }"];
"_27";
"_28";
"_29";
"_30";
"nbits_126"[label="nbits_126 = { 5 }"];
"bit_addr_145"[label="bit_addr_145 = { 5 }"];
"nbits_146"[label="nbits_146 = { 5 }"];
"bindex_81"[label="bindex_81 = { 5 }"];
"bitnumb_82";
"_83"[label="_83 = { 5 }"];
"_84";
"_85";
"_86";
"_87"[label="_87 = { 5 }"];
"_88";
"_89";
"i.46_31";
"_32"[label="_32 = { 5 }"];
"_33"[label="_33 = { 5 }"];
"_34";
"_35";
"_36";
"_37";
"nbits_119"[label="nbits_119 = { 5 }"];
"bit_addr_147"[label="bit_addr_147 = { 5 }"];
"nbits_148"[label="nbits_148 = { 5 }"];
"bindex_95"[label="bindex_95 = { 5 }"];
"bitnumb_96";
"_97"[label="_97 = { 5 }"];
"_98";
"_99";
"_100";
"_101"[label="_101 = { 5 }"];
"_102";
"elapsed_121";
"elapsed_109";
"elapsed_118";
"StopStopwatch";
"_54";
"StartStopwatch";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*bitarraybase";
"*bitoparraybase";
"*bitoparraysize";
"*derefaddrtmp(12)";
"*randnum";
"*_131";
"*global_bitopstruct.0+32";
"*global_bitopstruct.64+256";
"*i.39_133";
"*i.39_4";
"*i_134";
"*i_66";
"*_1";
"*_2";
"*derefaddrtmp(23)";
"*_3";
"*i_135";
"*i_64";
"*abs_randwc";
"*bitoffset_59";
"*i.40_6";
"*_7";
"*_8";
"*_10";
"*_11";
"*_12";
"*_13";
"*_14";
"*_15";
"*i_136";
"*i_57";
"*_16";
"*i.42_17";
"*_18";
"*_19";
"*_20";
"*_21";
"*_22";
"*_23";
"*nbits_113";
"*bit_addr_143";
"*bit_addr_77";
"*nbits_144";
"*nbits_79";
"*bindex_68";
"*bitnumb_69";
"*_70";
"*_72";
"*_73";
"*_74";
"*_75";
"*_76";
"*i.44_24";
"*_25";
"*_26";
"*_27";
"*_28";
"*_29";
"*_30";
"*nbits_126";
"*bit_addr_145";
"*bit_addr_91";
"*nbits_146";
"*nbits_93";
"*bindex_81";
"*bitnumb_82";
"*_83";
"*_85";
"*_86";
"*_87";
"*_88";
"*_89";
"*_90";
"*i.46_31";
"*_32";
"*_33";
"*_34";
"*_35";
"*_36";
"*_37";
"*nbits_119";
"*bit_addr_147";
"*bit_addr_104";
"*nbits_148";
"*nbits_106";
"*bindex_95";
"*bitnumb_96";
"*_97";
"*_99";
"*_100";
"*_101";
"*_102";
"*_103";
"*StopStopwatch";
"*StartStopwatch";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"_9" -> "ESCAPED";
"elapsed_121" -> "ESCAPED";
"_54" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"global_bitopstruct.64+256" -> "_131";
"NONLOCAL" -> "global_bitopstruct.0+32";
"NONLOCAL" -> "global_bitopstruct.64+256";
"i.39_4" -> "i.39_133";
"i_66" -> "i.39_4";
"i_66" -> "i_66";
"i_66" -> "i_66";
"i.39_133" -> "_1";
"global_bitopstruct.64+256" -> "_3";
"i_135" -> "i_135";
"i_135" -> "i_135";
"NONLOCAL" -> "_5";
"_5" -> "bitoffset_59";
"i_135" -> "i.40_6";
"i.40_6" -> "_7";
"_5" -> "_9";
"NONLOCAL" -> "_10";
"_7" -> "_11";
"_10" -> "_13";
"derefaddrtmp(12)" -> "_14";
"_13" -> "_14";
"_14" -> "_14";
"_14" -> "_14";
"_14" -> "_14";
"i_136" -> "i_136";
"i_136" -> "i_136";
"i_136" -> "_16";
"i_136" -> "i.42_17";
"i.42_17" -> "_18";
"_18" -> "_19";
"*_20" -> "_21";
"*_22" -> "_23";
"_21" -> "nbits_113";
"_23" -> "bit_addr_143";
"bit_addr_143" -> "bit_addr_143";
"bit_addr_143" -> "bit_addr_143";
"nbits_113" -> "nbits_144";
"nbits_144" -> "nbits_144";
"nbits_144" -> "nbits_144";
"bit_addr_143" -> "bindex_68";
"bindex_68" -> "_70";
"_72" -> "_72";
"_75" -> "_72";
"_72" -> "_72";
"_72" -> "_72";
"bitnumb_69" -> "_73";
"_73" -> "_74";
"_74" -> "_75";
"i_136" -> "i.44_24";
"i.44_24" -> "_25";
"_25" -> "_26";
"*_27" -> "_28";
"*_29" -> "_30";
"_28" -> "nbits_126";
"_30" -> "bit_addr_145";
"bit_addr_145" -> "bit_addr_145";
"bit_addr_145" -> "bit_addr_145";
"nbits_126" -> "nbits_146";
"nbits_146" -> "nbits_146";
"nbits_146" -> "nbits_146";
"bit_addr_145" -> "bindex_81";
"bindex_81" -> "_83";
"_85" -> "_85";
"_89" -> "_85";
"_85" -> "_85";
"_85" -> "_85";
"bitnumb_82" -> "_86";
"_86" -> "_87";
"_87" -> "_88";
"_88" -> "_89";
"i_136" -> "i.46_31";
"i.46_31" -> "_32";
"_32" -> "_33";
"*_34" -> "_35";
"*_36" -> "_37";
"_35" -> "nbits_119";
"_37" -> "bit_addr_147";
"bit_addr_147" -> "bit_addr_147";
"bit_addr_147" -> "bit_addr_147";
"nbits_119" -> "nbits_148";
"nbits_148" -> "nbits_148";
"nbits_148" -> "nbits_148";
"bit_addr_147" -> "bindex_95";
"bindex_95" -> "_97";
"_99" -> "_99";
"_102" -> "_99";
"_99" -> "_99";
"_99" -> "_99";
"bitnumb_96" -> "_100";
"_100" -> "_101";
"_101" -> "_102";
"elapsed_109" -> "elapsed_121";
"elapsed_118" -> "elapsed_121";
"NONLOCAL" -> "elapsed_109";
"NONLOCAL" -> "elapsed_118";
"NONLOCAL" -> "_54";
"derefaddrtmp(23)" -> "*_2";
"bitoffset_59" -> "*_8";
"_13" -> "*_12";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"bitarraybase" [label="\N\n_2 = bitarraybase + UNKNOWN\l_8 = bitarraybase + UNKNOWN\l_12 = bitarraybase + UNKNOWN\l_14 = *bitarraybase\l_20 = bitarraybase + UNKNOWN\l_22 = bitarraybase + UNKNOWN\l_71 = bitarraybase + UNKNOWN\l_27 = bitarraybase + UNKNOWN\l_29 = bitarraybase + UNKNOWN\l_84 = bitarraybase + UNKNOWN\l_34 = bitarraybase + UNKNOWN\l_36 = bitarraybase + UNKNOWN\l_98 = bitarraybase + UNKNOWN\l*bitarraybase = derefaddrtmp(12)\l*bitarraybase = _14\l"];
"derefaddrtmp(12)";
"randnum";
"global_bitopstruct.0+32";
"i.39_133";
"_2" [label="\N\n*_2 = bitarraybase\l"];
"abs_randwc";
"_8" [label="\N\n*_8 = global_bitopstruct.0+32\l"];
"_12" [label="\N\n*_12 = global_bitopstruct.0+32\l"];
"_14";
"_20" [label="\N\n_21 = *_20\l"];
"_21";
"_22" [label="\N\n_23 = *_22\l"];
"_23";
"nbits_113";
"bit_addr_143" [label="\N\nbitnumb_69 = bit_addr_143 + UNKNOWN\l"];
"bitnumb_69";
"_71" [label="\N\n_72 = *_71\l*_71 = _72\l"];
"_72";
"_74";
"_27" [label="\N\n_28 = *_27\l"];
"_28";
"_29" [label="\N\n_30 = *_29\l"];
"_30";
"nbits_126";
"bit_addr_145" [label="\N\nbitnumb_82 = bit_addr_145 + UNKNOWN\l"];
"bitnumb_82";
"_84" [label="\N\n_85 = *_84\l*_84 = _85\l"];
"_85";
"_87";
"_34" [label="\N\n_35 = *_34\l"];
"_35";
"_36" [label="\N\n_37 = *_36\l"];
"_37";
"nbits_119";
"bit_addr_147" [label="\N\nbitnumb_96 = bit_addr_147 + UNKNOWN\l"];
"bitnumb_96";
"_98" [label="\N\n_99 = *_98\l*_98 = _99\l"];
"_99";
"_101";
"StopStopwatch";
"StartStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_2";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_22";
"STOREDANYTHING" -> "bitnumb_69";
"STOREDANYTHING" -> "_71";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "_27";
"STOREDANYTHING" -> "_29";
"STOREDANYTHING" -> "bitnumb_82";
"STOREDANYTHING" -> "_84";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_36";
"STOREDANYTHING" -> "bitnumb_96";
"STOREDANYTHING" -> "_98";
"STOREDANYTHING" -> "_99";
"global_bitopstruct.0+32" -> "ESCAPED";
"global_bitopstruct.0+32" -> "_14";
"_21" -> "nbits_113";
"_23" -> "bit_addr_143";
"bitnumb_69" -> "_74";
"_74" -> "_72";
"_28" -> "nbits_126";
"_30" -> "bit_addr_145";
"bitnumb_82" -> "_87";
"_87" -> "_85";
"_35" -> "nbits_119";
"_37" -> "bit_addr_147";
"bitnumb_96" -> "_101";
"_101" -> "_99";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = global_bitopstruct.0+32\l"];
"STOREDANYTHING";
"INTEGER";
"bitarraybase" [label="\N\n_2 = bitarraybase + UNKNOWN\l_8 = bitarraybase + UNKNOWN\l_12 = bitarraybase + UNKNOWN\l_14 = *bitarraybase\l_20 = bitarraybase + UNKNOWN\l_22 = bitarraybase + UNKNOWN\l_71 = bitarraybase + UNKNOWN\l_27 = bitarraybase + UNKNOWN\l_29 = bitarraybase + UNKNOWN\l_84 = bitarraybase + UNKNOWN\l_34 = bitarraybase + UNKNOWN\l_36 = bitarraybase + UNKNOWN\l_98 = bitarraybase + UNKNOWN\l*bitarraybase = derefaddrtmp(12)\l*bitarraybase = _14\l"];
"derefaddrtmp(12)";
"randnum";
"global_bitopstruct.0+32";
"i.39_133";
"_2" [label="\N\n*_2 = bitarraybase\l"];
"abs_randwc";
"_8" [label="\N\n*_8 = global_bitopstruct.0+32\l"];
"_12" [label="\N\n*_12 = global_bitopstruct.0+32\l"];
"_14";
"_20" [label="\N\n_21 = *_20\l"];
"_21";
"_22" [label="\N\n_23 = *_22\l"];
"_23";
"nbits_113";
"bit_addr_143" [label="\N\nbitnumb_69 = bit_addr_143 + UNKNOWN\l"];
"bitnumb_69";
"_71" [label="\N\n_72 = *_71\l*_71 = _72\l"];
"_72";
"_74";
"_27" [label="\N\n_28 = *_27\l"];
"_28";
"_29" [label="\N\n_30 = *_29\l"];
"_30";
"nbits_126";
"bit_addr_145" [label="\N\nbitnumb_82 = bit_addr_145 + UNKNOWN\l"];
"bitnumb_82";
"_84" [label="\N\n_85 = *_84\l*_84 = _85\l"];
"_85";
"_87";
"_34" [label="\N\n_35 = *_34\l"];
"_35";
"_36" [label="\N\n_37 = *_36\l"];
"_37";
"nbits_119";
"bit_addr_147" [label="\N\nbitnumb_96 = bit_addr_147 + UNKNOWN\l"];
"bitnumb_96";
"_98" [label="\N\n_99 = *_98\l*_98 = _99\l"];
"_99";
"_101";
"StopStopwatch";
"StartStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_2";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_22";
"STOREDANYTHING" -> "bitnumb_69";
"STOREDANYTHING" -> "_71";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "_27";
"STOREDANYTHING" -> "_29";
"STOREDANYTHING" -> "bitnumb_82";
"STOREDANYTHING" -> "_84";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_36";
"STOREDANYTHING" -> "bitnumb_96";
"STOREDANYTHING" -> "_98";
"STOREDANYTHING" -> "_99";
"bitarraybase" -> "ESCAPED";
"derefaddrtmp(12)" -> "ESCAPED";
"global_bitopstruct.0+32" -> "ESCAPED";
"global_bitopstruct.0+32" -> "_14";
"global_bitopstruct.0+32" -> "_21";
"global_bitopstruct.0+32" -> "_23";
"global_bitopstruct.0+32" -> "_72";
"global_bitopstruct.0+32" -> "_28";
"global_bitopstruct.0+32" -> "_30";
"global_bitopstruct.0+32" -> "_85";
"global_bitopstruct.0+32" -> "_35";
"global_bitopstruct.0+32" -> "_37";
"global_bitopstruct.0+32" -> "_99";
"_14" -> "ESCAPED";
"_21" -> "nbits_113";
"_23" -> "bit_addr_143";
"bitnumb_69" -> "_74";
"_72" -> "ESCAPED";
"_74" -> "_72";
"_28" -> "nbits_126";
"_30" -> "bit_addr_145";
"bitnumb_82" -> "_87";
"_85" -> "ESCAPED";
"_87" -> "_85";
"_35" -> "nbits_119";
"_37" -> "bit_addr_147";
"bitnumb_96" -> "_101";
"_99" -> "ESCAPED";
"_101" -> "_99";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
STOREDANYTHING = { }
INTEGER = { ANYTHING }
bitarraybase = { NONLOCAL }
bitoparraybase = { NONLOCAL } same as bitarraybase
bitoparraysize = { NONLOCAL } same as bitarraybase
nbitops = { NONLOCAL } same as bitarraybase
derefaddrtmp(12) = { NULL }
randnum = { }
_131 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
global_bitopstruct.0+32 = { ESCAPED NONLOCAL }
global_bitopstruct.64+256 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
i.39_133 = { NULL NONLOCAL }
i.39_4 = { NULL NONLOCAL } same as i.39_133
i_134 = { NULL NONLOCAL } same as i.39_133
i_66 = { NULL NONLOCAL } same as i.39_133
_1 = { NULL NONLOCAL } same as i.39_133
_2 = { NONLOCAL }
derefaddrtmp(23) = { NONLOCAL } same as bitarraybase
_3 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
i_135 = { NULL NONLOCAL } same as i.39_133
i_64 = { NULL NONLOCAL } same as i.39_133
abs_randwc = { }
_5 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
bitoffset_59 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
i.40_6 = { NULL NONLOCAL } same as i.39_133
_7 = { NULL NONLOCAL } same as i.39_133
_8 = { NONLOCAL }
_9 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
_10 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
_11 = { NULL NONLOCAL } same as i.39_133
_12 = { NONLOCAL }
_13 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
_14 = { ESCAPED NONLOCAL }
_15 = { ESCAPED NONLOCAL } same as _14
i_136 = { NULL NONLOCAL } same as i.39_133
i_57 = { NULL NONLOCAL } same as i.39_133
_16 = { NULL NONLOCAL } same as i.39_133
i.42_17 = { NULL NONLOCAL } same as i.39_133
_18 = { NULL NONLOCAL } same as i.39_133
_19 = { NULL NONLOCAL } same as i.39_133
_20 = { NONLOCAL }
_21 = { ESCAPED NONLOCAL }
_22 = { NONLOCAL }
_23 = { ESCAPED NONLOCAL }
nbits_113 = { ESCAPED NONLOCAL }
bit_addr_143 = { ESCAPED NONLOCAL }
bit_addr_77 = { ESCAPED NONLOCAL } same as bit_addr_143
nbits_144 = { ESCAPED NONLOCAL } same as nbits_113
nbits_79 = { ESCAPED NONLOCAL } same as nbits_113
bindex_68 = { ESCAPED NONLOCAL } same as bit_addr_143
bitnumb_69 = { ESCAPED NONLOCAL }
_70 = { ESCAPED NONLOCAL } same as bit_addr_143
_71 = { NONLOCAL }
_72 = { ESCAPED NONLOCAL }
_73 = { ESCAPED NONLOCAL } same as bitnumb_69
_74 = { ESCAPED NONLOCAL }
_75 = { ESCAPED NONLOCAL } same as _74
_76 = { ESCAPED NONLOCAL } same as _72
i.44_24 = { NULL NONLOCAL } same as i.39_133
_25 = { NULL NONLOCAL } same as i.39_133
_26 = { NULL NONLOCAL } same as i.39_133
_27 = { NONLOCAL }
_28 = { ESCAPED NONLOCAL }
_29 = { NONLOCAL }
_30 = { ESCAPED NONLOCAL }
nbits_126 = { ESCAPED NONLOCAL }
bit_addr_145 = { ESCAPED NONLOCAL }
bit_addr_91 = { ESCAPED NONLOCAL } same as bit_addr_145
nbits_146 = { ESCAPED NONLOCAL } same as nbits_126
nbits_93 = { ESCAPED NONLOCAL } same as nbits_126
bindex_81 = { ESCAPED NONLOCAL } same as bit_addr_145
bitnumb_82 = { ESCAPED NONLOCAL }
_83 = { ESCAPED NONLOCAL } same as bit_addr_145
_84 = { NONLOCAL }
_85 = { ESCAPED NONLOCAL }
_86 = { ESCAPED NONLOCAL } same as bitnumb_82
_87 = { ESCAPED NONLOCAL }
_88 = { ESCAPED NONLOCAL } same as _87
_89 = { ESCAPED NONLOCAL } same as _87
_90 = { ESCAPED NONLOCAL } same as _85
i.46_31 = { NULL NONLOCAL } same as i.39_133
_32 = { NULL NONLOCAL } same as i.39_133
_33 = { NULL NONLOCAL } same as i.39_133
_34 = { NONLOCAL }
_35 = { ESCAPED NONLOCAL }
_36 = { NONLOCAL }
_37 = { ESCAPED NONLOCAL }
nbits_119 = { ESCAPED NONLOCAL }
bit_addr_147 = { ESCAPED NONLOCAL }
bit_addr_104 = { ESCAPED NONLOCAL } same as bit_addr_147
nbits_148 = { ESCAPED NONLOCAL } same as nbits_119
nbits_106 = { ESCAPED NONLOCAL } same as nbits_119
bindex_95 = { ESCAPED NONLOCAL } same as bit_addr_147
bitnumb_96 = { ESCAPED NONLOCAL }
_97 = { ESCAPED NONLOCAL } same as bit_addr_147
_98 = { NONLOCAL }
_99 = { ESCAPED NONLOCAL }
_100 = { ESCAPED NONLOCAL } same as bitnumb_96
_101 = { ESCAPED NONLOCAL }
_102 = { ESCAPED NONLOCAL } same as _101
_103 = { ESCAPED NONLOCAL } same as _99
elapsed_121 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
elapsed_109 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
elapsed_118 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
StopStopwatch = { }
_54 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
StartStopwatch = { }


Alias information for DoBitfieldIteration

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_2, points-to non-local, points-to NULL, points-to vars: { }
_8, points-to non-local, points-to NULL, points-to vars: { }
_12, points-to non-local, points-to NULL, points-to vars: { }
_20, points-to non-local, points-to NULL, points-to vars: { }
_22, points-to non-local, points-to NULL, points-to vars: { }
_27, points-to non-local, points-to NULL, points-to vars: { }
_29, points-to non-local, points-to NULL, points-to vars: { }
_34, points-to non-local, points-to NULL, points-to vars: { }
_36, points-to non-local, points-to NULL, points-to vars: { }
nbitops_46(D), points-to non-local, points-to vars: { }
bitoparraybase_55(D), points-to non-local, points-to NULL, points-to vars: { }
bitarraybase_56(D), points-to non-local, points-to NULL, points-to vars: { }
_71, points-to non-local, points-to NULL, points-to vars: { }
_84, points-to non-local, points-to NULL, points-to vars: { }
_98, points-to non-local, points-to NULL, points-to vars: { }

;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 21 3 29 27 28 4 20 5 26 22 6 7 18 8 31 24 9 32 19 10 33 25 11 34 17 12 35 23 30 13 36 14 15 16
;;
;; Loop 3
;;  header 6, latch 22
;;  depth 1, outer 0
;;  nodes: 6 22 13 35 31 33 34 30 32 9 7 11 10 25 19 8 24 18 12 23 17
;;
;; Loop 6
;;  header 12, latch 23
;;  depth 2, outer 3
;;  nodes: 12 23
;;
;; Loop 4
;;  header 8, latch 24
;;  depth 2, outer 3
;;  nodes: 8 24
;;
;; Loop 5
;;  header 10, latch 25
;;  depth 2, outer 3
;;  nodes: 10 25
;;
;; Loop 2
;;  header 5, latch 26
;;  depth 1, outer 0
;;  nodes: 5 26
;;
;; Loop 1
;;  header 3, latch 27
;;  depth 1, outer 0
;;  nodes: 3 27
;; 2 succs { 21 28 }
;; 21 succs { 3 }
;; 3 succs { 27 29 }
;; 29 succs { 4 }
;; 27 succs { 3 }
;; 28 succs { 4 }
;; 4 succs { 20 16 }
;; 20 succs { 5 }
;; 5 succs { 26 15 }
;; 26 succs { 5 }
;; 22 succs { 6 }
;; 6 succs { 11 7 9 }
;; 7 succs { 18 30 }
;; 18 succs { 8 }
;; 8 succs { 24 31 }
;; 31 succs { 13 }
;; 24 succs { 8 }
;; 9 succs { 19 32 }
;; 32 succs { 13 }
;; 19 succs { 10 }
;; 10 succs { 25 33 }
;; 33 succs { 13 }
;; 25 succs { 10 }
;; 11 succs { 17 34 }
;; 34 succs { 13 }
;; 17 succs { 12 }
;; 12 succs { 23 35 }
;; 35 succs { 13 }
;; 23 succs { 12 }
;; 30 succs { 13 }
;; 13 succs { 22 36 }
;; 36 succs { 14 }
;; 14 succs { 1 }
;; 15 succs { 6 }
;; 16 succs { 14 }
find_duplicates: <bb 30> duplicate of <bb 31>
find_duplicates: <bb 30> duplicate of <bb 32>
find_duplicates: <bb 30> duplicate of <bb 33>
find_duplicates: <bb 30> duplicate of <bb 34>
find_duplicates: <bb 30> duplicate of <bb 35>
find_duplicates: <bb 28> duplicate of <bb 29>
Removing basic block 31
Removing basic block 32
Removing basic block 33
Removing basic block 34
Removing basic block 35
Removing basic block 29

Symbols to be put in SSA form
{ D.6313 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 37
Number of blocks to update: 30 ( 81%)


Removing basic block 17
Removing basic block 18
Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 27
Merging blocks 28 and 4
Merging blocks 30 and 13
Removing basic block 36
DoBitfieldIteration (farulong * bitarraybase, farulong * bitoparraybase, long int bitoparraysize, long unsigned int * nbitops)
{
  long unsigned int bindex;
  long unsigned int bitnumb;
  long unsigned int bit_addr;
  long unsigned int nbits;
  long unsigned int bindex;
  long unsigned int bitnumb;
  long unsigned int bit_addr;
  long unsigned int nbits;
  long unsigned int bindex;
  long unsigned int bitnumb;
  long unsigned int bit_addr;
  long unsigned int nbits;
  long unsigned int elapsed;
  long unsigned int bitoffset;
  long int i;
  long unsigned int _1;
  farulong * _2;
  long unsigned int _3;
  long unsigned int i.39_4;
  unsigned int _5;
  long unsigned int i.40_6;
  long unsigned int _7;
  farulong * _8;
  unsigned int _9;
  unsigned int _10;
  sizetype _11;
  farulong * _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long int _16;
  long unsigned int _54;
  long unsigned int _70;
  farulong * _71;
  long unsigned int _72;
  unsigned int _73;
  long int _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _83;
  farulong * _84;
  long unsigned int _85;
  unsigned int _86;
  long int _87;
  long int _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _97;
  farulong * _98;
  long unsigned int _99;
  unsigned int _100;
  long int _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _131;
  long unsigned int i.39_133;
  long unsigned int _203;
  long unsigned int _204;
  sizetype _205;
  farulong * _206;
  long unsigned int pretmp_207;
  farulong * _208;
  long unsigned int pretmp_209;
  long unsigned int _210;

  <bb 2> [10.59%]:
  *nbitops_46(D) = 0;
  randnum (13);
  _131 = global_bitopstruct.bitfieldarraysize;
  if (_131 != 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 3> [60.00%]:
  # i.39_133 = PHI <i.39_4(3), 0(2)>
  # i_134 = PHI <i_66(3), 0(2)>
  _1 = i.39_133 * 8;
  _2 = bitarraybase_56(D) + _1;
  *_2 = 6148914691236517205;
  i_66 = i_134 + 1;
  _3 = global_bitopstruct.bitfieldarraysize;
  i.39_4 = (long unsigned int) i_66;
  if (_3 > i.39_4)
    goto <bb 3>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 4> [10.59%]:
  randnum (13);
  if (bitoparraysize_50(D) > 0)
    goto <bb 5>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 5> [60.00%]:
  # i_135 = PHI <i_64(5), 0(4)>
  _5 = abs_randwc (262140);
  bitoffset_59 = (long unsigned int) _5;
  i.40_6 = (long unsigned int) i_135;
  _7 = i.40_6 * 16;
  _8 = bitoparraybase_55(D) + _7;
  *_8 = bitoffset_59;
  _9 = 262140 - _5;
  _10 = abs_randwc (_9);
  _11 = _7 + 8;
  _12 = bitoparraybase_55(D) + _11;
  _13 = (long unsigned int) _10;
  *_12 = _13;
  _14 = *nbitops_46(D);
  _15 = _13 + _14;
  *nbitops_46(D) = _15;
  i_64 = i_135 + 1;
  if (bitoparraysize_50(D) > i_64)
    goto <bb 5>; [85.00%]
  else
    goto <bb 15>; [15.00%]

  <bb 6> [60.00%]:
  # i_136 = PHI <i_57(13), 0(15)>
  _16 = i_136 % 3;
  _203 = (long unsigned int) i_136;
  _204 = _203 * 16;
  _205 = _204 + 8;
  _206 = bitoparraybase_55(D) + _205;
  pretmp_207 = *_206;
  _208 = bitoparraybase_55(D) + _204;
  pretmp_209 = *_208;
  _210 = pretmp_207 + 18446744073709551615;
  switch (_16) <default: <L7> [25.00%], case 1: <L8> [25.00%], case 2: <L9> [25.00%]>

<L7> [15.00%]:
  if (pretmp_207 != 0)
    goto <bb 8>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 8> [85.00%]:
  # bit_addr_143 = PHI <bit_addr_77(8), pretmp_209(7)>
  # nbits_144 = PHI <nbits_79(8), _210(7)>
  bindex_68 = bit_addr_143 >> 6;
  bitnumb_69 = bit_addr_143 & 63;
  _70 = bindex_68 * 8;
  _71 = bitarraybase_56(D) + _70;
  _72 = *_71;
  _73 = (unsigned int) bitnumb_69;
  _74 = 1 << _73;
  _75 = (long unsigned int) _74;
  _76 = _72 | _75;
  *_71 = _76;
  bit_addr_77 = bit_addr_143 + 1;
  nbits_79 = nbits_144 + 18446744073709551615;
  if (nbits_144 != 0)
    goto <bb 8>; [85.00%]
  else
    goto <bb 13>; [15.00%]

<L8> [15.00%]:
  if (pretmp_207 != 0)
    goto <bb 10>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 10> [85.00%]:
  # bit_addr_145 = PHI <bit_addr_91(10), pretmp_209(9)>
  # nbits_146 = PHI <nbits_93(10), _210(9)>
  bindex_81 = bit_addr_145 >> 6;
  bitnumb_82 = bit_addr_145 & 63;
  _83 = bindex_81 * 8;
  _84 = bitarraybase_56(D) + _83;
  _85 = *_84;
  _86 = (unsigned int) bitnumb_82;
  _87 = 1 << _86;
  _88 = ~_87;
  _89 = (long unsigned int) _88;
  _90 = _85 & _89;
  *_84 = _90;
  bit_addr_91 = bit_addr_145 + 1;
  nbits_93 = nbits_146 + 18446744073709551615;
  if (nbits_146 != 0)
    goto <bb 10>; [85.00%]
  else
    goto <bb 13>; [15.00%]

<L9> [15.00%]:
  if (pretmp_207 != 0)
    goto <bb 12>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 12> [85.00%]:
  # bit_addr_147 = PHI <bit_addr_104(12), pretmp_209(11)>
  # nbits_148 = PHI <nbits_106(12), _210(11)>
  bindex_95 = bit_addr_147 >> 6;
  bitnumb_96 = bit_addr_147 & 63;
  _97 = bindex_95 * 8;
  _98 = bitarraybase_56(D) + _97;
  _99 = *_98;
  _100 = (unsigned int) bitnumb_96;
  _101 = 1 << _100;
  _102 = (long unsigned int) _101;
  _103 = _99 ^ _102;
  *_98 = _103;
  bit_addr_104 = bit_addr_147 + 1;
  nbits_106 = nbits_148 + 18446744073709551615;
  if (nbits_148 != 0)
    goto <bb 12>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 13> [60.00%]:
  i_57 = i_136 + 1;
  if (bitoparraysize_50(D) > i_57)
    goto <bb 6>; [85.00%]
  else
    goto <bb 14>; [15.00%]

  <bb 14> [10.59%]:
  # elapsed_121 = PHI <elapsed_109(13), elapsed_118(16)>
  _54 = StopStopwatch (elapsed_121);
  return _54;

  <bb 15> [9.00%]:
  elapsed_109 = StartStopwatch ();
  goto <bb 6>; [100.00%]

  <bb 16> [1.59%]:
  elapsed_118 = StartStopwatch ();
  goto <bb 14>; [100.00%]

}



;; Function stradjust (stradjust, funcdef_no=60, decl_uid=4523, cgraph_uid=60, symbol_order=85)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
optrarray = &NONLOCAL
strarray = &NONLOCAL
nstrings = &NONLOCAL
i = &NONLOCAL
l = &NONLOCAL
_1 = l
_2 = i
_2 = &NONLOCAL
_3 = optrarray + UNKNOWN
_4 = *_3
_5 = strarray + UNKNOWN
_6 = *_5
_7 = _6
direction_48 = _1
direction_48 = _7
_8 = direction_48
_9 = nstrings
_9 = &NONLOCAL
*_5 = l
_10 = nstrings
_10 = &NONLOCAL
_11 = _10
_11 = &NONLOCAL
_12 = optrarray + UNKNOWN
_13 = *_12
_14 = strarray + UNKNOWN
_15 = *_14
_16 = _15
_62 = _13
_62 = &NONLOCAL
_18 = i
_18 = &NONLOCAL
_19 = _18
_19 = &NONLOCAL
_20 = optrarray + UNKNOWN
_21 = *_20
_49 = _16
_49 = _62
nbytes_51 = _49
nbytes_51 = _21
_22 = strarray + UNKNOWN
_23 = l
_39 = _23
_39 = &NONLOCAL
_25 = _4
_25 = _39
_26 = strarray + UNKNOWN
ESCAPED = _26
ESCAPED = _22
ESCAPED = nbytes_51
j_61 = j_56
j_61 = _18
_27 = j_61
_27 = &NONLOCAL
_28 = optrarray + UNKNOWN
_29 = *_28
_30 = _8
_31 = _29
_31 = _30
*_28 = _31
_32 = j_61
_32 = &NONLOCAL
_33 = optrarray + UNKNOWN
_34 = *_33
_35 = _8
_36 = _34
_36 = _35
*_33 = _36
j_56 = j_61
j_56 = &NONLOCAL
_37 = *_3
_38 = strarray + UNKNOWN
*_38 = l

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED";
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"optrarray"[label="optrarray = { 5 }"];
"strarray"[label="strarray = { 5 }"];
"nstrings"[label="nstrings = { 5 }"];
"i"[label="i = { 5 }"];
"l"[label="l = { 5 }"];
"_1";
"_2"[label="_2 = { 5 }"];
"_3";
"_4";
"_5";
"_6";
"_7";
"direction_48";
"_8";
"_9"[label="_9 = { 5 }"];
"_10"[label="_10 = { 5 }"];
"_11"[label="_11 = { 5 }"];
"_12";
"_13";
"_14";
"_15";
"_16";
"_62"[label="_62 = { 5 }"];
"_18"[label="_18 = { 5 }"];
"_19"[label="_19 = { 5 }"];
"_20";
"_21";
"_49";
"nbytes_51";
"_22";
"_23";
"_39"[label="_39 = { 5 }"];
"_25";
"_26";
"MoveMemory";
"j_61"[label="j_61 = { 5 }"];
"_27"[label="_27 = { 5 }"];
"_28";
"_29";
"_30";
"_32"[label="_32 = { 5 }"];
"_33";
"_34";
"_35";
"_37";
"_38";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*optrarray";
"*strarray";
"*nstrings";
"*i";
"*l";
"*_1";
"*_2";
"*_3";
"*_4";
"*_5";
"*_6";
"*_7";
"*direction_48";
"*_8";
"*_9";
"*_10";
"*_11";
"*_12";
"*_13";
"*_14";
"*_15";
"*_16";
"*_62";
"*_18";
"*_19";
"*_20";
"*_21";
"*_49";
"*nbytes_51";
"*_22";
"*_23";
"*_39";
"*_25";
"*_26";
"*MoveMemory";
"*j_61";
"*j_56";
"*_27";
"*_29";
"*_30";
"*_31";
"*_32";
"*_34";
"*_35";
"*_36";
"*_37";
"*_38";

  // Edges in the constraint graph:
"nbytes_51" -> "ESCAPED";
"_22" -> "ESCAPED";
"_26" -> "ESCAPED";
"*ESCAPED" -> "ESCAPED";
"l" -> "_1";
"i" -> "_2";
"*_3" -> "_4";
"*_5" -> "_6";
"_6" -> "_7";
"_1" -> "direction_48";
"_7" -> "direction_48";
"direction_48" -> "_8";
"nstrings" -> "_9";
"nstrings" -> "_10";
"_10" -> "_11";
"*_12" -> "_13";
"*_14" -> "_15";
"_15" -> "_16";
"_13" -> "_62";
"i" -> "_18";
"_18" -> "_19";
"*_20" -> "_21";
"_16" -> "_49";
"_62" -> "_49";
"_21" -> "nbytes_51";
"_49" -> "nbytes_51";
"l" -> "_23";
"_23" -> "_39";
"_4" -> "_25";
"_39" -> "_25";
"_18" -> "j_61";
"j_61" -> "j_61";
"j_61" -> "j_61";
"j_61" -> "_27";
"_29" -> "_29";
"_30" -> "_29";
"_29" -> "_29";
"_29" -> "_29";
"_8" -> "_30";
"j_61" -> "_32";
"_34" -> "_34";
"_35" -> "_34";
"_34" -> "_34";
"_34" -> "_34";
"_8" -> "_35";
"*_3" -> "_37";
"NONLOCAL" -> "*ESCAPED";
"l" -> "*_5";
"l" -> "*_38";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"optrarray" [label="\N\n_3 = optrarray + UNKNOWN\l_5 = optrarray + UNKNOWN\l_12 = optrarray + UNKNOWN\l_14 = optrarray + UNKNOWN\l_20 = optrarray + UNKNOWN\l_22 = optrarray + UNKNOWN\l_26 = optrarray + UNKNOWN\l_28 = optrarray + UNKNOWN\l_33 = optrarray + UNKNOWN\l_38 = optrarray + UNKNOWN\l"];
"_3" [label="\N\n_4 = *_3\l"];
"_4";
"_5" [label="\N\n_6 = *_5\l*_5 = optrarray\l"];
"_6";
"_12" [label="\N\n_13 = *_12\l"];
"_13";
"_14" [label="\N\n_15 = *_14\l"];
"_15";
"_62";
"_20" [label="\N\n_21 = *_20\l"];
"_21";
"_49";
"nbytes_51";
"_22";
"_25";
"_26";
"MoveMemory";
"_28" [label="\N\n_29 = *_28\l*_28 = _29\l"];
"_29";
"_33" [label="\N\n_34 = *_33\l*_33 = _34\l"];
"_34";
"_38" [label="\N\n*_38 = optrarray\l"];

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_3";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_22";
"STOREDANYTHING" -> "_26";
"STOREDANYTHING" -> "_28";
"STOREDANYTHING" -> "_29";
"STOREDANYTHING" -> "_33";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_38";
"optrarray" -> "_6";
"optrarray" -> "_25";
"_4" -> "_25";
"_6" -> "_29";
"_6" -> "_34";
"_13" -> "_62";
"_15" -> "_49";
"_62" -> "_49";
"_21" -> "nbytes_51";
"_49" -> "nbytes_51";
"nbytes_51" -> "ESCAPED";
"_22" -> "ESCAPED";
"_26" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _34\l"];
"STOREDANYTHING";
"INTEGER";
"optrarray" [label="\N\n_3 = optrarray + UNKNOWN\l_5 = optrarray + UNKNOWN\l_12 = optrarray + UNKNOWN\l_14 = optrarray + UNKNOWN\l_20 = optrarray + UNKNOWN\l_22 = optrarray + UNKNOWN\l_26 = optrarray + UNKNOWN\l_28 = optrarray + UNKNOWN\l_33 = optrarray + UNKNOWN\l_38 = optrarray + UNKNOWN\l"];
"_3" [label="\N\n_4 = *_3\l"];
"_4";
"_5" [label="\N\n_6 = *_5\l*_5 = optrarray\l"];
"_6";
"_12" [label="\N\n_13 = *_12\l"];
"_13";
"_14" [label="\N\n_15 = *_14\l"];
"_15";
"_62";
"_20" [label="\N\n_21 = *_20\l"];
"_21";
"_49";
"nbytes_51";
"_22";
"_25";
"_26";
"MoveMemory";
"_28" [label="\N\n_29 = *_28\l*_28 = _29\l"];
"_29";
"_33" [label="\N\n_34 = *_33\l*_33 = _34\l"];
"_34";
"_38" [label="\N\n*_38 = optrarray\l"];

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_3";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_22";
"STOREDANYTHING" -> "_26";
"STOREDANYTHING" -> "_28";
"STOREDANYTHING" -> "_29";
"STOREDANYTHING" -> "_33";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_38";
"optrarray" -> "ESCAPED";
"optrarray" -> "_6";
"optrarray" -> "_25";
"_4" -> "_25";
"_6" -> "_29";
"_6" -> "_34";
"_13" -> "_62";
"_15" -> "_49";
"_62" -> "_49";
"_21" -> "nbytes_51";
"_49" -> "nbytes_51";
"nbytes_51" -> "ESCAPED";
"_22" -> "ESCAPED";
"_26" -> "ESCAPED";
"_29" -> "ESCAPED";
"_34" -> "ESCAPED";
"_34" -> "_4";
"_34" -> "_6";
"_34" -> "_13";
"_34" -> "_15";
"_34" -> "_21";
"_34" -> "_29";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as _34
STOREDANYTHING = { }
INTEGER = { ANYTHING }
optrarray = { NONLOCAL }
strarray = { NONLOCAL } same as optrarray
nstrings = { NONLOCAL } same as optrarray
i = { NONLOCAL } same as optrarray
l = { NONLOCAL } same as optrarray
_1 = { NONLOCAL } same as optrarray
_2 = { NONLOCAL } same as optrarray
_3 = { NONLOCAL }
_4 = { ESCAPED NONLOCAL }
_5 = { NONLOCAL }
_6 = { ESCAPED NONLOCAL }
_7 = { ESCAPED NONLOCAL } same as _6
direction_48 = { ESCAPED NONLOCAL } same as _6
_8 = { ESCAPED NONLOCAL } same as _6
_9 = { NONLOCAL } same as optrarray
_10 = { NONLOCAL } same as optrarray
_11 = { NONLOCAL } same as optrarray
_12 = { NONLOCAL }
_13 = { ESCAPED NONLOCAL }
_14 = { NONLOCAL }
_15 = { ESCAPED NONLOCAL }
_16 = { ESCAPED NONLOCAL } same as _15
_62 = { ESCAPED NONLOCAL }
_18 = { NONLOCAL } same as optrarray
_19 = { NONLOCAL } same as optrarray
_20 = { NONLOCAL }
_21 = { ESCAPED NONLOCAL }
_49 = { ESCAPED NONLOCAL }
nbytes_51 = { ESCAPED NONLOCAL }
_22 = { NONLOCAL }
_23 = { NONLOCAL } same as optrarray
_39 = { NONLOCAL } same as optrarray
_25 = { ESCAPED NONLOCAL }
_26 = { NONLOCAL }
MoveMemory = { }
j_61 = { NONLOCAL } same as optrarray
j_56 = { NONLOCAL } same as optrarray
_27 = { NONLOCAL } same as optrarray
_28 = { NONLOCAL }
_29 = { ESCAPED NONLOCAL }
_30 = { ESCAPED NONLOCAL } same as _6
_31 = { ESCAPED NONLOCAL } same as _29
_32 = { NONLOCAL } same as optrarray
_33 = { NONLOCAL }
_34 = { ESCAPED NONLOCAL }
_35 = { ESCAPED NONLOCAL } same as _6
_36 = { ESCAPED NONLOCAL } same as _34
_37 = { ESCAPED NONLOCAL } same as _4
_38 = { NONLOCAL }


Alias information for stradjust

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { }

Flow-insensitive points-to information

_3, points-to non-local, points-to NULL, points-to vars: { }
_5, points-to non-local, points-to NULL, points-to vars: { }
_12, points-to non-local, points-to NULL, points-to vars: { }
_14, points-to non-local, points-to NULL, points-to vars: { }
_20, points-to non-local, points-to NULL, points-to vars: { }
_22, points-to non-local, points-to NULL, points-to vars: { }
_26, points-to non-local, points-to NULL, points-to vars: { }
_28, points-to non-local, points-to NULL, points-to vars: { }
_33, points-to non-local, points-to NULL, points-to vars: { }
_38, points-to non-local, points-to NULL, points-to vars: { }
optrarray_45(D), points-to non-local, points-to NULL, points-to vars: { }
strarray_47(D), points-to non-local, points-to NULL, points-to vars: { }

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 11 5 6 7 8 14 12 13 9 10
;;
;; Loop 1
;;  header 5, latch 12
;;  depth 1, outer 0
;;  nodes: 5 12 8 6 7
;; 2 succs { 3 4 }
;; 3 succs { 10 }
;; 4 succs { 11 13 }
;; 11 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 12 14 }
;; 14 succs { 9 }
;; 12 succs { 5 }
;; 13 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
find_duplicates: <bb 13> duplicate of <bb 14>
Removing basic block 14

Symbols to be put in SSA form
{ D.6319 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 15
Number of blocks to update: 13 ( 87%)


Removing basic block 12
Merging blocks 13 and 9
stradjust (farulong * optrarray, faruchar * strarray, long unsigned int nstrings, long unsigned int i, unsigned char l)
{
  unsigned char adjamount;
  int direction;
  long unsigned int j;
  long unsigned int nbytes;
  int _1;
  long unsigned int _2;
  farulong * _3;
  long unsigned int _4;
  faruchar * _5;
  unsigned char _6;
  int _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  sizetype _11;
  farulong * _12;
  long unsigned int _13;
  faruchar * _14;
  unsigned char _15;
  long unsigned int _16;
  sizetype _18;
  sizetype _19;
  farulong * _20;
  long unsigned int _21;
  faruchar * _22;
  sizetype _23;
  sizetype _25;
  faruchar * _26;
  long unsigned int _31;
  long unsigned int _36;
  long unsigned int _37;
  faruchar * _38;
  sizetype _39;
  long unsigned int _49;
  long unsigned int _62;
  long unsigned int _68;
  farulong * _69;
  long unsigned int pretmp_71;
  long unsigned int _72;

  <bb 2> [28.37%]:
  _1 = (int) l_43(D);
  _2 = i_44(D) * 8;
  _3 = optrarray_45(D) + _2;
  _4 = *_3;
  _5 = strarray_47(D) + _4;
  _6 = *_5;
  _7 = (int) _6;
  direction_48 = _1 - _7;
  _8 = ABS_EXPR <direction_48>;
  _9 = nstrings_50(D) + 18446744073709551615;
  if (_9 == i_44(D))
    goto <bb 3>; [47.12%]
  else
    goto <bb 4>; [52.88%]

  <bb 3> [13.37%]:
  *_5 = l_43(D);
  goto <bb 11>; [100.00%]

  <bb 4> [15.00%]:
  _10 = nstrings_50(D) * 8;
  _11 = _10 + 18446744073709551608;
  _12 = optrarray_45(D) + _11;
  _13 = *_12;
  _14 = strarray_47(D) + _13;
  _15 = *_14;
  _16 = (long unsigned int) _15;
  _62 = _13 + 1;
  _18 = i_44(D) + 1;
  _19 = _18 * 8;
  _20 = optrarray_45(D) + _19;
  _21 = *_20;
  _49 = _16 + _62;
  nbytes_51 = _49 - _21;
  _22 = strarray_47(D) + _21;
  _23 = (sizetype) l_43(D);
  _39 = _23 + 1;
  _25 = _4 + _39;
  _26 = strarray_47(D) + _25;
  MoveMemory (_26, _22, nbytes_51);
  if (_18 < nstrings_50(D))
    goto <bb 5>; [85.00%]
  else
    goto <bb 10>; [15.00%]

  <bb 5> [12.75%]:
  _72 = (long unsigned int) _8;

  <bb 6> [85.00%]:
  # j_61 = PHI <j_56(9), _18(5)>
  _68 = j_61 * 8;
  _69 = optrarray_45(D) + _68;
  pretmp_71 = *_69;
  if (direction_48 < 0)
    goto <bb 7>; [36.00%]
  else
    goto <bb 8>; [64.00%]

  <bb 7> [30.60%]:
  _31 = pretmp_71 - _72;
  *_69 = _31;
  goto <bb 9>; [100.00%]

  <bb 8> [54.40%]:
  _36 = pretmp_71 + _72;
  *_69 = _36;

  <bb 9> [85.00%]:
  j_56 = j_61 + 1;
  if (nstrings_50(D) > j_56)
    goto <bb 6>; [85.00%]
  else
    goto <bb 10>; [15.00%]

  <bb 10> [15.00%]:
  _37 = *_3;
  _38 = strarray_47(D) + _37;
  *_38 = l_43(D);

  <bb 11> [28.37%]:
  return;

}



;; Function DoHuffIteration (DoHuffIteration, funcdef_no=92, decl_uid=4671, cgraph_uid=92, symbol_order=117)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
plaintext = &NONLOCAL
comparray = &NONLOCAL
decomparray = &NONLOCAL
arraysize = &NONLOCAL
nloops = &NONLOCAL
hufftree = &NONLOCAL
elapsed_118 = NONLOCAL
i_241 = i_161
i_241 = &NULL
_1 = i_241
_2 = _1
_2 = &NONLOCAL
_3 = hufftree + UNKNOWN
derefaddrtmp(21) = &NONLOCAL
*_3 + 32 = derefaddrtmp(21)
_4 = i_241
*_3 = _4
i_161 = i_241
i_161 = &NONLOCAL
j.161_51 = j.161_12
j.161_51 = &NULL
j_210 = j_158
j_210 = &NULL
_5 = plaintext + UNKNOWN
_6 = *_5
_7 = _6
_8 = _7
_8 = &NONLOCAL
_9 = hufftree + UNKNOWN
_10 = *_9 + 32
_11 = _10
_11 = &NONLOCAL
*_9 + 32 = _11
j_158 = j_210
j_158 = &NONLOCAL
j.161_12 = j_158
i_242 = i_156
i_242 = &NULL
_13 = i_242
_14 = _13
_14 = &NONLOCAL
_15 = hufftree + UNKNOWN
_16 = *_15 + 32
_228 = arraysize
_17 = _228
_18 = _16
_18 = _17
*_15 + 32 = _18
i_156 = i_242
i_156 = &NONLOCAL
_19 = hufftree + 40960
derefaddrtmp(44) = &NULL
*_19 + UNKNOWN = derefaddrtmp(44)
i_243 = i_154
i_243 = &NULL
_20 = i_243
_21 = _20
_21 = &NONLOCAL
_22 = hufftree + UNKNOWN
_23 = *_22 + 32
derefaddrtmp(51) = &NONLOCAL
*_22 + 128 = derefaddrtmp(51)
derefaddrtmp(52) = &NONLOCAL
*_22 + 96 = derefaddrtmp(52)
cstore_89 = &NONLOCAL
cstore_89 = &NONLOCAL
*_22 + 64 = cstore_89
i_154 = i_243
i_154 = &NONLOCAL
root_85 = &NONLOCAL
root_85 = root_126
i_244 = i_149
i_244 = &NULL
lowfreq1_246 = lowfreq1_86
lowfreq1_246 = &NONLOCAL
lowidx1_248 = lowidx1_90
lowidx1_248 = &NONLOCAL
_24 = i_244
_25 = _24
_25 = &NONLOCAL
_26 = hufftree + UNKNOWN
_27 = *_26 + 64
_28 = *_26 + 32
lowfreq1_86 = lowfreq1_246
lowfreq1_86 = lowfreq1_246
lowfreq1_86 = _28
lowidx1_90 = lowidx1_248
lowidx1_90 = lowidx1_248
lowidx1_90 = i_244
i_149 = i_244
i_149 = &NONLOCAL
i_245 = i_133
i_245 = &NULL
lowfreq2_247 = lowfreq2_88
lowfreq2_247 = &NONLOCAL
lowidx2_249 = lowidx2_92
lowidx2_249 = &NONLOCAL
_29 = i_245
_30 = _29
_30 = &NONLOCAL
_31 = hufftree + UNKNOWN
_32 = *_31 + 64
_47 = _237
_47 = _239
_33 = *_31 + 32
lowfreq2_88 = _33
lowfreq2_88 = lowfreq2_247
lowfreq2_88 = lowfreq2_247
lowidx2_92 = i_245
lowidx2_92 = lowidx2_249
lowidx2_92 = lowidx2_249
i_133 = i_245
i_133 = &NONLOCAL
root_126 = root_85
root_126 = &NONLOCAL
_34 = lowidx1_90
_35 = _34
_35 = &NONLOCAL
_36 = hufftree + UNKNOWN
*_36 + 64 = root_126
_37 = lowidx2_92
_38 = _37
_38 = &NONLOCAL
_39 = hufftree + UNKNOWN
*_39 + 64 = root_126
_40 = root_126
_41 = _40
_41 = &NONLOCAL
_42 = hufftree + UNKNOWN
_43 = lowfreq1_86
_43 = lowfreq2_88
*_42 + 32 = _43
*_42 + 96 = lowidx1_90
*_42 + 128 = lowidx2_92
derefaddrtmp(91) = &NONLOCAL
*_42 + 64 = derefaddrtmp(91)
_105 = _64
_105 = &NULL
i_227 = i_144
i_227 = &NULL
bitoffset_225 = bitoffset_226
bitoffset_225 = &NULL
_52 = plaintext + UNKNOWN
_53 = *_52
c_142 = _53
_78 = _53
_235 = _78
_235 = &NONLOCAL
_77 = hufftree + UNKNOWN
_76 = *_77 + 64
_107 = _61
_107 = _76
bitstringlen_206 = bitstringlen_148
bitstringlen_206 = &NULL
c_221 = _107
c_221 = c_142
_54 = _107
_55 = _54
_55 = &NONLOCAL
_56 = hufftree + UNKNOWN
_57 = *_56 + 96
cstore_93 = &NONLOCAL
cstore_93 = &NONLOCAL
bitstring = cstore_93
bitstringlen_148 = bitstringlen_206
bitstringlen_148 = &NONLOCAL
_61 = *_56 + 64
bitstringlen_79 = bitstringlen_206
bitoffset_211 = bitoffset_145
bitoffset_211 = bitoffset_225
bitstringlen_202 = bitstringlen_143
bitstringlen_202 = bitstringlen_206
_62 = bitstring
_63 = bitoffset_211
byteoffset_162 = _63
byteoffset_162 = &NONLOCAL
bitoffset.165_163 = bitoffset_211
bitnumb_164 = bitoffset.165_163 + UNKNOWN
_165 = byteoffset_162
_166 = comparray + UNKNOWN
_167 = *_166
_168 = _167
_169 = &NONLOCAL
_169 = bitnumb_164
_170 = _169
_171 = _168
_171 = _170
_172 = _171
*_166 = _172
_173 = byteoffset_162
_174 = comparray + UNKNOWN
_175 = *_174
_176 = _175
_177 = &NONLOCAL
_177 = bitnumb_164
_178 = _177
_179 = _178
_180 = _176
_180 = _179
_181 = _180
*_174 = _181
bitoffset_145 = bitoffset_211
bitoffset_145 = &NONLOCAL
bitstringlen_143 = bitstringlen_202
bitstringlen_143 = &NONLOCAL
bitoffset_226 = bitoffset_145
bitoffset_226 = bitoffset_225
bitoffset_226 = bitoffset_225
i_144 = i_227
i_144 = &NONLOCAL
_64 = i_144
bitoffset_224 = bitoffset_226
bitoffset_224 = &NULL
_45 = root_85
_196 = _45
_196 = &NONLOCAL
_49 = hufftree + UNKNOWN
bitoffset_96 = &NULL
bitoffset_96 = bitoffset_209
textoffset_98 = &NULL
textoffset_98 = textoffset_136
_197 = *_49 + 96
_102 = _68
_102 = _49
_222 = _69
_222 = _197
bitoffset_208 = bitoffset_140
bitoffset_208 = bitoffset_96
_65 = bitoffset_208
byteoffset_182 = _65
byteoffset_182 = &NONLOCAL
bitoffset.166_183 = bitoffset_208
bitnumb_184 = bitoffset.166_183 + UNKNOWN
_185 = &NONLOCAL
_185 = bitnumb_184
_186 = byteoffset_182
_187 = comparray + UNKNOWN
_188 = *_187
_189 = _188
_190 = _185
_190 = _189
i_139 = *_102 + 128
i_82 = _222
i_82 = i_139
bitoffset_140 = bitoffset_208
bitoffset_140 = &NONLOCAL
_66 = i_82
_67 = _66
_67 = &NONLOCAL
_68 = hufftree + UNKNOWN
_69 = *_68 + 96
_138 = _68
_138 = _49
bitoffset_209 = bitoffset_140
bitoffset_209 = bitoffset_96
_70 = *_138
textoffset.163_71 = textoffset_98
_72 = decomparray + UNKNOWN
_73 = _70
*_72 = _73
textoffset_136 = textoffset_98
textoffset_136 = &NONLOCAL
nloops_75 = nloops
nloops_75 = nloops_120
nloops_120 = nloops_75
nloops_120 = &NONLOCAL
ESCAPED = elapsed_118
_122 = NONLOCAL
ESCAPED = _122

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED";
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"plaintext"[label="plaintext = { 5 }"];
"comparray"[label="comparray = { 5 }"];
"decomparray"[label="decomparray = { 5 }"];
"arraysize"[label="arraysize = { 5 }"];
"nloops"[label="nloops = { 5 }"];
"hufftree"[label="hufftree = { 5 }"];
"StartStopwatch";
"elapsed_118";
"i_241"[label="i_241 = { 1 5 }"];
"_1";
"_2"[label="_2 = { 5 }"];
"_3";
"derefaddrtmp(21)"[label="derefaddrtmp(21) = { 5 }"];
"_4";
"j.161_51"[label="j.161_51 = { 1 }"];
"j.161_12";
"j_158"[label="j_158 = { 1 5 }"];
"_5";
"_6";
"_7";
"_8"[label="_8 = { 5 }"];
"_9";
"_10";
"_11"[label="_11 = { 5 }"];
"i_242"[label="i_242 = { 1 5 }"];
"_13";
"_14"[label="_14 = { 5 }"];
"_15";
"_16";
"_228";
"_17";
"_18";
"_19";
"derefaddrtmp(44)"[label="derefaddrtmp(44) = { 1 }"];
"i_243"[label="i_243 = { 1 5 }"];
"_20";
"_21"[label="_21 = { 5 }"];
"_22";
"_23";
"derefaddrtmp(51)"[label="derefaddrtmp(51) = { 5 }"];
"derefaddrtmp(52)"[label="derefaddrtmp(52) = { 5 }"];
"cstore_89"[label="cstore_89 = { 5 }"];
"root_85"[label="root_85 = { 5 }"];
"i_244"[label="i_244 = { 1 5 }"];
"lowfreq1_246"[label="lowfreq1_246 = { 5 }"];
"lowidx1_248"[label="lowidx1_248 = { 5 }"];
"_24";
"_25"[label="_25 = { 5 }"];
"_26";
"_27";
"_28";
"i_245"[label="i_245 = { 1 5 }"];
"lowfreq2_247"[label="lowfreq2_247 = { 5 }"];
"lowidx2_249"[label="lowidx2_249 = { 5 }"];
"_29";
"_30"[label="_30 = { 5 }"];
"_31";
"_32";
"_239";
"_237";
"_47";
"_33";
"_34";
"_35"[label="_35 = { 5 }"];
"_36";
"_37";
"_38"[label="_38 = { 5 }"];
"_39";
"_40";
"_41"[label="_41 = { 5 }"];
"_42";
"_43";
"derefaddrtmp(91)"[label="derefaddrtmp(91) = { 5 }"];
"_105"[label="_105 = { 1 }"];
"_64";
"i_144"[label="i_144 = { 1 5 }"];
"bitoffset_225"[label="bitoffset_225 = { 1 5 }"];
"_52";
"_53";
"c_142";
"_78";
"_235"[label="_235 = { 5 }"];
"_77";
"_76";
"_107";
"_61";
"bitstringlen_206"[label="bitstringlen_206 = { 1 5 }"];
"c_221";
"_54";
"_55"[label="_55 = { 5 }"];
"_56";
"_57";
"cstore_93"[label="cstore_93 = { 5 }"];
"bitstring";
"bitstringlen_79";
"bitstringlen_202"[label="bitstringlen_202 = { 5 }"];
"_62";
"_63";
"byteoffset_162"[label="byteoffset_162 = { 5 }"];
"bitoffset.165_163";
"bitnumb_164";
"_165";
"_166";
"_167";
"_169"[label="_169 = { 5 }"];
"_170";
"_173";
"_174";
"_175";
"_177"[label="_177 = { 5 }"];
"_178";
"_179";
"bitoffset_224"[label="bitoffset_224 = { 1 }"];
"_45";
"_196"[label="_196 = { 5 }"];
"_49";
"bitoffset_96"[label="bitoffset_96 = { 1 5 }"];
"textoffset_98"[label="textoffset_98 = { 1 5 }"];
"_197";
"_102";
"_68";
"_222";
"_69";
"_65";
"byteoffset_182"[label="byteoffset_182 = { 5 }"];
"bitoffset.166_183";
"bitnumb_184";
"_185"[label="_185 = { 5 }"];
"_186";
"_187";
"_188";
"_189";
"_190";
"i_139";
"i_82";
"_66";
"_67"[label="_67 = { 5 }"];
"_138";
"_70";
"textoffset.163_71";
"_72";
"_73";
"nloops_75"[label="nloops_75 = { 5 }"];
"StopStopwatch";
"_122";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*plaintext";
"*comparray";
"*decomparray";
"*arraysize";
"*nloops";
"*hufftree";
"*StartStopwatch";
"*i_241";
"*i_161";
"*_1";
"*_2";
"*_3";
"*derefaddrtmp(21)";
"*_4";
"*j.161_51";
"*j.161_12";
"*j_210";
"*j_158";
"*_5";
"*_6";
"*_7";
"*_8";
"*_9";
"*_10";
"*_11";
"*i_242";
"*i_156";
"*_13";
"*_14";
"*_15";
"*_16";
"*_228";
"*_17";
"*_18";
"*_19";
"*derefaddrtmp(44)";
"*i_243";
"*i_154";
"*_20";
"*_21";
"*_22";
"*_23";
"*derefaddrtmp(51)";
"*derefaddrtmp(52)";
"*cstore_89";
"*root_85";
"*root_126";
"*i_244";
"*i_149";
"*lowfreq1_246";
"*lowfreq1_86";
"*lowidx1_248";
"*lowidx1_90";
"*_24";
"*_25";
"*_26";
"*_27";
"*_28";
"*i_245";
"*i_133";
"*lowfreq2_247";
"*lowfreq2_88";
"*lowidx2_249";
"*lowidx2_92";
"*_29";
"*_30";
"*_31";
"*_32";
"*_239";
"*_237";
"*_47";
"*_33";
"*_34";
"*_35";
"*_36";
"*_37";
"*_38";
"*_39";
"*_40";
"*_41";
"*_42";
"*_43";
"*derefaddrtmp(91)";
"*_105";
"*_64";
"*i_227";
"*i_144";
"*bitoffset_225";
"*bitoffset_226";
"*_52";
"*_53";
"*c_142";
"*_78";
"*_235";
"*_77";
"*_76";
"*_107";
"*_61";
"*bitstringlen_206";
"*bitstringlen_148";
"*c_221";
"*_54";
"*_55";
"*_56";
"*_57";
"*cstore_93";
"*bitstring";
"*bitstringlen_79";
"*bitoffset_211";
"*bitoffset_145";
"*bitstringlen_202";
"*bitstringlen_143";
"*_62";
"*_63";
"*byteoffset_162";
"*bitoffset.165_163";
"*bitnumb_164";
"*_165";
"*_167";
"*_168";
"*_169";
"*_170";
"*_171";
"*_172";
"*_173";
"*_175";
"*_176";
"*_177";
"*_178";
"*_179";
"*_180";
"*_181";
"*bitoffset_224";
"*_45";
"*_196";
"*_49";
"*bitoffset_96";
"*bitoffset_209";
"*textoffset_98";
"*textoffset_136";
"*_197";
"*_102";
"*_68";
"*_222";
"*_69";
"*bitoffset_208";
"*bitoffset_140";
"*_65";
"*byteoffset_182";
"*bitoffset.166_183";
"*bitnumb_184";
"*_185";
"*_186";
"*_187";
"*_188";
"*_189";
"*_190";
"*i_139";
"*i_82";
"*_66";
"*_67";
"*_138";
"*_70";
"*textoffset.163_71";
"*_72";
"*_73";
"*nloops_75";
"*nloops_120";
"*StopStopwatch";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"elapsed_118" -> "ESCAPED";
"_122" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"NONLOCAL" -> "elapsed_118";
"i_241" -> "i_241";
"i_241" -> "i_241";
"i_241" -> "_1";
"_1" -> "_2";
"i_241" -> "_4";
"j.161_12" -> "j.161_51";
"j_158" -> "j.161_12";
"j_158" -> "j_158";
"j_158" -> "j_158";
"*_5" -> "_6";
"_6" -> "_7";
"_7" -> "_8";
"_10" -> "_11";
"i_242" -> "i_242";
"i_242" -> "i_242";
"i_242" -> "_13";
"_13" -> "_14";
"arraysize" -> "_228";
"_228" -> "_17";
"_16" -> "_18";
"_17" -> "_18";
"i_243" -> "i_243";
"i_243" -> "i_243";
"i_243" -> "_20";
"_20" -> "_21";
"root_85" -> "root_85";
"root_85" -> "root_85";
"i_244" -> "i_244";
"i_244" -> "i_244";
"lowfreq1_246" -> "lowfreq1_246";
"lowfreq1_246" -> "lowfreq1_246";
"_28" -> "lowfreq1_246";
"i_244" -> "lowidx1_248";
"lowidx1_248" -> "lowidx1_248";
"lowidx1_248" -> "lowidx1_248";
"i_244" -> "_24";
"_24" -> "_25";
"i_245" -> "i_245";
"i_245" -> "i_245";
"lowfreq2_247" -> "lowfreq2_247";
"lowfreq2_247" -> "lowfreq2_247";
"_33" -> "lowfreq2_247";
"i_245" -> "lowidx2_249";
"lowidx2_249" -> "lowidx2_249";
"lowidx2_249" -> "lowidx2_249";
"i_245" -> "_29";
"_29" -> "_30";
"_239" -> "_47";
"_237" -> "_47";
"lowidx1_248" -> "_34";
"_34" -> "_35";
"lowidx2_249" -> "_37";
"_37" -> "_38";
"root_85" -> "_40";
"_40" -> "_41";
"lowfreq1_246" -> "_43";
"lowfreq2_247" -> "_43";
"_64" -> "_105";
"i_144" -> "_64";
"i_144" -> "i_144";
"i_144" -> "i_144";
"bitoffset_225" -> "bitoffset_225";
"bitoffset_225" -> "bitoffset_225";
"bitoffset_225" -> "bitoffset_225";
"bitoffset_225" -> "bitoffset_225";
"*_52" -> "_53";
"_53" -> "c_142";
"_53" -> "_78";
"_78" -> "_235";
"_76" -> "_107";
"_61" -> "_107";
"bitstringlen_206" -> "bitstringlen_206";
"bitstringlen_206" -> "bitstringlen_206";
"c_142" -> "c_221";
"_107" -> "c_221";
"_107" -> "_54";
"_54" -> "_55";
"cstore_93" -> "bitstring";
"bitstringlen_206" -> "bitstringlen_79";
"bitstringlen_206" -> "bitstringlen_202";
"bitstringlen_202" -> "bitstringlen_202";
"bitstringlen_202" -> "bitstringlen_202";
"bitstring" -> "_62";
"bitoffset_225" -> "_63";
"_63" -> "byteoffset_162";
"bitoffset_225" -> "bitoffset.165_163";
"byteoffset_162" -> "_165";
"_167" -> "_167";
"_167" -> "_167";
"_170" -> "_167";
"_167" -> "_167";
"_167" -> "_167";
"_167" -> "_167";
"bitnumb_164" -> "_169";
"_169" -> "_170";
"byteoffset_162" -> "_173";
"_175" -> "_175";
"_175" -> "_175";
"_179" -> "_175";
"_175" -> "_175";
"_175" -> "_175";
"_175" -> "_175";
"bitnumb_164" -> "_177";
"_177" -> "_178";
"_178" -> "_179";
"bitoffset_225" -> "bitoffset_224";
"root_85" -> "_45";
"_45" -> "_196";
"bitoffset_96" -> "bitoffset_96";
"bitoffset_96" -> "bitoffset_96";
"bitoffset_96" -> "bitoffset_96";
"bitoffset_96" -> "bitoffset_96";
"textoffset_98" -> "textoffset_98";
"textoffset_98" -> "textoffset_98";
"_49" -> "_102";
"_68" -> "_102";
"_197" -> "_222";
"_69" -> "_222";
"bitoffset_96" -> "_65";
"_65" -> "byteoffset_182";
"bitoffset_96" -> "bitoffset.166_183";
"bitnumb_184" -> "_185";
"byteoffset_182" -> "_186";
"*_187" -> "_188";
"_188" -> "_189";
"_185" -> "_190";
"_189" -> "_190";
"_222" -> "i_82";
"i_139" -> "i_82";
"i_82" -> "_66";
"_66" -> "_67";
"_49" -> "_138";
"_68" -> "_138";
"*_138" -> "_70";
"textoffset_98" -> "textoffset.163_71";
"_70" -> "_73";
"nloops" -> "nloops_75";
"nloops_75" -> "nloops_75";
"nloops_75" -> "nloops_75";
"NONLOCAL" -> "_122";
"_4" -> "*_3";
"_73" -> "*_72";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"plaintext" [label="\N\n_3 = plaintext + UNKNOWN\l_5 = plaintext + UNKNOWN\l_9 = plaintext + UNKNOWN\l_15 = plaintext + UNKNOWN\l_19 = plaintext + 40960\l_22 = plaintext + UNKNOWN\l_26 = plaintext + UNKNOWN\l_31 = plaintext + UNKNOWN\l_36 = plaintext + UNKNOWN\l_39 = plaintext + UNKNOWN\l_42 = plaintext + UNKNOWN\l_52 = plaintext + UNKNOWN\l_77 = plaintext + UNKNOWN\l_56 = plaintext + UNKNOWN\l_166 = plaintext + UNKNOWN\l_174 = plaintext + UNKNOWN\l_49 = plaintext + UNKNOWN\l_68 = plaintext + UNKNOWN\l_187 = plaintext + UNKNOWN\l_72 = plaintext + UNKNOWN\l"];
"StartStopwatch";
"elapsed_118";
"i_241" [label="\N\nbitnumb_164 = i_241 + UNKNOWN\lbitnumb_184 = i_241 + UNKNOWN\l"];
"_3" [label="\N\n*_3 = i_241\l*_3 + 32 = plaintext\l"];
"_5" [label="\N\n_6 = *_5\l"];
"_6";
"_8";
"_9" [label="\N\n_10 = *_9 + 32\l*_9 + 32 = _11\l"];
"_10";
"_11";
"_15" [label="\N\n_16 = *_15 + 32\l*_15 + 32 = _18\l"];
"_16";
"_18";
"_19" [label="\N\n*_19 + UNKNOWN = derefaddrtmp(44)\l"];
"derefaddrtmp(44)";
"_22" [label="\N\n_23 = *_22 + 32\l*_22 + 64 = plaintext\l*_22 + 96 = plaintext\l*_22 + 128 = plaintext\l"];
"_23";
"lowfreq1_246";
"_26" [label="\N\n_27 = *_26 + 64\l_28 = *_26 + 32\l"];
"_27";
"_28";
"lowfreq2_247";
"_31" [label="\N\n_32 = *_31 + 64\l_33 = *_31 + 32\l"];
"_32";
"_239";
"_237";
"_47";
"_33";
"_36" [label="\N\n*_36 + 64 = plaintext\l"];
"_39" [label="\N\n*_39 + 64 = plaintext\l"];
"_42" [label="\N\n*_42 + 32 = _43\l*_42 + 64 = plaintext\l*_42 + 96 = i_241\l*_42 + 128 = i_241\l"];
"_43";
"_52" [label="\N\n_53 = *_52\l"];
"_53";
"_235";
"_77" [label="\N\n_76 = *_77 + 64\l"];
"_76";
"_107";
"_61";
"c_221";
"_55";
"_56" [label="\N\n_61 = *_56 + 64\l_57 = *_56 + 96\l"];
"_57";
"bitnumb_164";
"_166" [label="\N\n_167 = *_166\l*_166 = _167\l"];
"_167";
"_169";
"_174" [label="\N\n_175 = *_174\l*_174 = _175\l"];
"_175";
"_49" [label="\N\n_197 = *_49 + 96\l"];
"_197";
"_102" [label="\N\ni_139 = *_102 + 128\l_70 = *_102\l"];
"_68" [label="\N\n_69 = *_68 + 96\l"];
"_222";
"_69";
"bitnumb_184";
"_185";
"_187" [label="\N\n_188 = *_187\l"];
"_188";
"_190";
"i_139";
"i_82";
"_67";
"_70";
"_72" [label="\N\n*_72 = _70\l"];
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_3";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_15";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_19";
"STOREDANYTHING" -> "_22";
"STOREDANYTHING" -> "_23";
"STOREDANYTHING" -> "_26";
"STOREDANYTHING" -> "_27";
"STOREDANYTHING" -> "_28";
"STOREDANYTHING" -> "_31";
"STOREDANYTHING" -> "_32";
"STOREDANYTHING" -> "_33";
"STOREDANYTHING" -> "_36";
"STOREDANYTHING" -> "_39";
"STOREDANYTHING" -> "_42";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "_77";
"STOREDANYTHING" -> "_76";
"STOREDANYTHING" -> "_61";
"STOREDANYTHING" -> "_56";
"STOREDANYTHING" -> "_57";
"STOREDANYTHING" -> "bitnumb_164";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_167";
"STOREDANYTHING" -> "_174";
"STOREDANYTHING" -> "_175";
"STOREDANYTHING" -> "_49";
"STOREDANYTHING" -> "_197";
"STOREDANYTHING" -> "_68";
"STOREDANYTHING" -> "_69";
"STOREDANYTHING" -> "bitnumb_184";
"STOREDANYTHING" -> "_187";
"STOREDANYTHING" -> "i_139";
"STOREDANYTHING" -> "_72";
"plaintext" -> "_18";
"elapsed_118" -> "ESCAPED";
"_6" -> "_8";
"_10" -> "_11";
"_16" -> "_18";
"lowfreq1_246" -> "_43";
"_28" -> "lowfreq1_246";
"lowfreq2_247" -> "_43";
"_33" -> "lowfreq2_247";
"_53" -> "_235";
"_53" -> "c_221";
"_76" -> "_107";
"_107" -> "c_221";
"_107" -> "_55";
"_61" -> "_107";
"bitnumb_164" -> "_169";
"_169" -> "_167";
"_169" -> "_175";
"_49" -> "_102";
"_197" -> "_222";
"_68" -> "_102";
"_222" -> "i_82";
"_69" -> "_222";
"bitnumb_184" -> "_185";
"_185" -> "_190";
"_188" -> "_190";
"i_139" -> "i_82";
"i_82" -> "_67";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = elapsed_118\l"];
"STOREDANYTHING";
"INTEGER";
"plaintext" [label="\N\n_3 = plaintext + UNKNOWN\l_5 = plaintext + UNKNOWN\l_9 = plaintext + UNKNOWN\l_15 = plaintext + UNKNOWN\l_19 = plaintext + 40960\l_22 = plaintext + UNKNOWN\l_26 = plaintext + UNKNOWN\l_31 = plaintext + UNKNOWN\l_36 = plaintext + UNKNOWN\l_39 = plaintext + UNKNOWN\l_42 = plaintext + UNKNOWN\l_52 = plaintext + UNKNOWN\l_77 = plaintext + UNKNOWN\l_56 = plaintext + UNKNOWN\l_166 = plaintext + UNKNOWN\l_174 = plaintext + UNKNOWN\l_49 = plaintext + UNKNOWN\l_68 = plaintext + UNKNOWN\l_187 = plaintext + UNKNOWN\l_72 = plaintext + UNKNOWN\l"];
"StartStopwatch";
"elapsed_118";
"i_241" [label="\N\nbitnumb_164 = i_241 + UNKNOWN\lbitnumb_184 = i_241 + UNKNOWN\l"];
"_3" [label="\N\n*_3 = i_241\l*_3 + 32 = plaintext\l"];
"_5" [label="\N\n_6 = *_5\l"];
"_6";
"_8";
"_9" [label="\N\n_10 = *_9 + 32\l*_9 + 32 = _11\l"];
"_10";
"_11";
"_15" [label="\N\n_16 = *_15 + 32\l*_15 + 32 = _18\l"];
"_16";
"_18";
"_19" [label="\N\n*_19 + UNKNOWN = derefaddrtmp(44)\l"];
"derefaddrtmp(44)";
"_22" [label="\N\n_23 = *_22 + 32\l*_22 + 64 = plaintext\l*_22 + 96 = plaintext\l*_22 + 128 = plaintext\l"];
"_23";
"lowfreq1_246";
"_26" [label="\N\n_27 = *_26 + 64\l_28 = *_26 + 32\l"];
"_27";
"_28";
"lowfreq2_247";
"_31" [label="\N\n_32 = *_31 + 64\l_33 = *_31 + 32\l"];
"_32";
"_239";
"_237";
"_47";
"_33";
"_36" [label="\N\n*_36 + 64 = plaintext\l"];
"_39" [label="\N\n*_39 + 64 = plaintext\l"];
"_42" [label="\N\n*_42 + 32 = _43\l*_42 + 64 = plaintext\l*_42 + 96 = i_241\l*_42 + 128 = i_241\l"];
"_43";
"_52" [label="\N\n_53 = *_52\l"];
"_53";
"_235";
"_77" [label="\N\n_76 = *_77 + 64\l"];
"_76";
"_107";
"_61";
"c_221";
"_55";
"_56" [label="\N\n_61 = *_56 + 64\l_57 = *_56 + 96\l"];
"_57";
"bitnumb_164";
"_166" [label="\N\n_167 = *_166\l*_166 = _167\l"];
"_167";
"_169";
"_174" [label="\N\n_175 = *_174\l*_174 = _175\l"];
"_175";
"_49" [label="\N\n_197 = *_49 + 96\l"];
"_197";
"_102" [label="\N\ni_139 = *_102 + 128\l_70 = *_102\l"];
"_68" [label="\N\n_69 = *_68 + 96\l"];
"_222";
"_69";
"bitnumb_184";
"_185";
"_187" [label="\N\n_188 = *_187\l"];
"_188";
"_190";
"i_139";
"i_82";
"_67";
"_70";
"_72" [label="\N\n*_72 = _70\l"];
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_3";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_15";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_19";
"STOREDANYTHING" -> "_22";
"STOREDANYTHING" -> "_23";
"STOREDANYTHING" -> "_26";
"STOREDANYTHING" -> "_27";
"STOREDANYTHING" -> "_28";
"STOREDANYTHING" -> "_31";
"STOREDANYTHING" -> "_32";
"STOREDANYTHING" -> "_33";
"STOREDANYTHING" -> "_36";
"STOREDANYTHING" -> "_39";
"STOREDANYTHING" -> "_42";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "_77";
"STOREDANYTHING" -> "_76";
"STOREDANYTHING" -> "_61";
"STOREDANYTHING" -> "_56";
"STOREDANYTHING" -> "_57";
"STOREDANYTHING" -> "bitnumb_164";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_167";
"STOREDANYTHING" -> "_174";
"STOREDANYTHING" -> "_175";
"STOREDANYTHING" -> "_49";
"STOREDANYTHING" -> "_197";
"STOREDANYTHING" -> "_68";
"STOREDANYTHING" -> "_69";
"STOREDANYTHING" -> "bitnumb_184";
"STOREDANYTHING" -> "_187";
"STOREDANYTHING" -> "i_139";
"STOREDANYTHING" -> "_72";
"plaintext" -> "ESCAPED";
"plaintext" -> "_18";
"elapsed_118" -> "ESCAPED";
"elapsed_118" -> "_6";
"elapsed_118" -> "_10";
"elapsed_118" -> "_16";
"elapsed_118" -> "_23";
"elapsed_118" -> "_27";
"elapsed_118" -> "_28";
"elapsed_118" -> "_32";
"elapsed_118" -> "_33";
"elapsed_118" -> "_53";
"elapsed_118" -> "_76";
"elapsed_118" -> "_61";
"elapsed_118" -> "_57";
"elapsed_118" -> "_167";
"elapsed_118" -> "_175";
"elapsed_118" -> "_197";
"elapsed_118" -> "_69";
"elapsed_118" -> "_188";
"elapsed_118" -> "i_139";
"elapsed_118" -> "_70";
"i_241" -> "ESCAPED";
"_6" -> "_8";
"_10" -> "_11";
"_11" -> "ESCAPED";
"_16" -> "_18";
"_18" -> "ESCAPED";
"derefaddrtmp(44)" -> "ESCAPED";
"lowfreq1_246" -> "_43";
"_28" -> "lowfreq1_246";
"lowfreq2_247" -> "_43";
"_33" -> "lowfreq2_247";
"_43" -> "ESCAPED";
"_53" -> "_235";
"_53" -> "c_221";
"_76" -> "_107";
"_107" -> "c_221";
"_107" -> "_55";
"_61" -> "_107";
"bitnumb_164" -> "_169";
"_167" -> "ESCAPED";
"_169" -> "_167";
"_169" -> "_175";
"_175" -> "ESCAPED";
"_49" -> "_102";
"_197" -> "_222";
"_68" -> "_102";
"_222" -> "i_82";
"_69" -> "_222";
"bitnumb_184" -> "_185";
"_185" -> "_190";
"_188" -> "_190";
"i_139" -> "i_82";
"i_82" -> "_67";
"_70" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as elapsed_118
STOREDANYTHING = { }
INTEGER = { ANYTHING }
plaintext = { NONLOCAL }
comparray = { NONLOCAL } same as plaintext
decomparray = { NONLOCAL } same as plaintext
arraysize = { NONLOCAL } same as plaintext
nloops = { NONLOCAL } same as plaintext
hufftree = { NONLOCAL } same as plaintext
StartStopwatch = { }
elapsed_118 = { ESCAPED NONLOCAL }
i_241 = { NULL NONLOCAL }
i_161 = { NULL NONLOCAL } same as i_241
_1 = { NULL NONLOCAL } same as i_241
_2 = { NULL NONLOCAL } same as i_241
_3 = { NONLOCAL }
derefaddrtmp(21) = { NONLOCAL } same as plaintext
_4 = { NULL NONLOCAL } same as i_241
j.161_51 = { NULL NONLOCAL } same as i_241
j.161_12 = { NULL NONLOCAL } same as i_241
j_210 = { NULL NONLOCAL } same as i_241
j_158 = { NULL NONLOCAL } same as i_241
_5 = { NONLOCAL }
_6 = { ESCAPED NONLOCAL }
_7 = { ESCAPED NONLOCAL } same as _6
_8 = { ESCAPED NONLOCAL }
_9 = { NONLOCAL }
_10 = { ESCAPED NONLOCAL }
_11 = { ESCAPED NONLOCAL }
i_242 = { NULL NONLOCAL } same as i_241
i_156 = { NULL NONLOCAL } same as i_241
_13 = { NULL NONLOCAL } same as i_241
_14 = { NULL NONLOCAL } same as i_241
_15 = { NONLOCAL }
_16 = { ESCAPED NONLOCAL }
_228 = { NONLOCAL } same as plaintext
_17 = { NONLOCAL } same as plaintext
_18 = { ESCAPED NONLOCAL }
_19 = { NONLOCAL }
derefaddrtmp(44) = { NULL }
i_243 = { NULL NONLOCAL } same as i_241
i_154 = { NULL NONLOCAL } same as i_241
_20 = { NULL NONLOCAL } same as i_241
_21 = { NULL NONLOCAL } same as i_241
_22 = { NONLOCAL }
_23 = { ESCAPED NONLOCAL }
derefaddrtmp(51) = { NONLOCAL } same as plaintext
derefaddrtmp(52) = { NONLOCAL } same as plaintext
cstore_89 = { NONLOCAL } same as plaintext
root_85 = { NONLOCAL } same as plaintext
root_126 = { NONLOCAL } same as plaintext
i_244 = { NULL NONLOCAL } same as i_241
i_149 = { NULL NONLOCAL } same as i_241
lowfreq1_246 = { ESCAPED NONLOCAL }
lowfreq1_86 = { ESCAPED NONLOCAL } same as lowfreq1_246
lowidx1_248 = { NULL NONLOCAL } same as i_241
lowidx1_90 = { NULL NONLOCAL } same as i_241
_24 = { NULL NONLOCAL } same as i_241
_25 = { NULL NONLOCAL } same as i_241
_26 = { NONLOCAL }
_27 = { ESCAPED NONLOCAL }
_28 = { ESCAPED NONLOCAL }
i_245 = { NULL NONLOCAL } same as i_241
i_133 = { NULL NONLOCAL } same as i_241
lowfreq2_247 = { ESCAPED NONLOCAL }
lowfreq2_88 = { ESCAPED NONLOCAL } same as lowfreq2_247
lowidx2_249 = { NULL NONLOCAL } same as i_241
lowidx2_92 = { NULL NONLOCAL } same as i_241
_29 = { NULL NONLOCAL } same as i_241
_30 = { NULL NONLOCAL } same as i_241
_31 = { NONLOCAL }
_32 = { ESCAPED NONLOCAL }
_239 = { }
_237 = { }
_47 = { }
_33 = { ESCAPED NONLOCAL }
_34 = { NULL NONLOCAL } same as i_241
_35 = { NULL NONLOCAL } same as i_241
_36 = { NONLOCAL }
_37 = { NULL NONLOCAL } same as i_241
_38 = { NULL NONLOCAL } same as i_241
_39 = { NONLOCAL }
_40 = { NONLOCAL } same as plaintext
_41 = { NONLOCAL } same as plaintext
_42 = { NONLOCAL }
_43 = { ESCAPED NONLOCAL }
derefaddrtmp(91) = { NONLOCAL } same as plaintext
_105 = { NULL NONLOCAL } same as i_241
_64 = { NULL NONLOCAL } same as i_241
i_227 = { NULL NONLOCAL } same as i_241
i_144 = { NULL NONLOCAL } same as i_241
bitoffset_225 = { NULL NONLOCAL } same as i_241
bitoffset_226 = { NULL NONLOCAL } same as i_241
_52 = { NONLOCAL }
_53 = { ESCAPED NONLOCAL }
c_142 = { ESCAPED NONLOCAL } same as _53
_78 = { ESCAPED NONLOCAL } same as _53
_235 = { ESCAPED NONLOCAL }
_77 = { NONLOCAL }
_76 = { ESCAPED NONLOCAL }
_107 = { ESCAPED NONLOCAL }
_61 = { ESCAPED NONLOCAL }
bitstringlen_206 = { NULL NONLOCAL } same as i_241
bitstringlen_148 = { NULL NONLOCAL } same as i_241
c_221 = { ESCAPED NONLOCAL }
_54 = { ESCAPED NONLOCAL } same as _107
_55 = { ESCAPED NONLOCAL }
_56 = { NONLOCAL }
_57 = { ESCAPED NONLOCAL }
cstore_93 = { NONLOCAL } same as plaintext
bitstring = { NONLOCAL } same as plaintext
bitstringlen_79 = { NULL NONLOCAL } same as i_241
bitoffset_211 = { NULL NONLOCAL } same as i_241
bitoffset_145 = { NULL NONLOCAL } same as i_241
bitstringlen_202 = { NULL NONLOCAL } same as i_241
bitstringlen_143 = { NULL NONLOCAL } same as i_241
_62 = { NONLOCAL } same as plaintext
_63 = { NULL NONLOCAL } same as i_241
byteoffset_162 = { NULL NONLOCAL } same as i_241
bitoffset.165_163 = { NULL NONLOCAL } same as i_241
bitnumb_164 = { NULL NONLOCAL }
_165 = { NULL NONLOCAL } same as i_241
_166 = { NONLOCAL }
_167 = { NULL ESCAPED NONLOCAL }
_168 = { NULL ESCAPED NONLOCAL } same as _167
_169 = { NULL NONLOCAL }
_170 = { NULL NONLOCAL } same as _169
_171 = { NULL ESCAPED NONLOCAL } same as _167
_172 = { NULL ESCAPED NONLOCAL } same as _167
_173 = { NULL NONLOCAL } same as i_241
_174 = { NONLOCAL }
_175 = { NULL ESCAPED NONLOCAL }
_176 = { NULL ESCAPED NONLOCAL } same as _175
_177 = { NULL NONLOCAL } same as _169
_178 = { NULL NONLOCAL } same as _169
_179 = { NULL NONLOCAL } same as _169
_180 = { NULL ESCAPED NONLOCAL } same as _175
_181 = { NULL ESCAPED NONLOCAL } same as _175
bitoffset_224 = { NULL NONLOCAL } same as i_241
_45 = { NONLOCAL } same as plaintext
_196 = { NONLOCAL } same as plaintext
_49 = { NONLOCAL }
bitoffset_96 = { NULL NONLOCAL } same as i_241
bitoffset_209 = { NULL NONLOCAL } same as i_241
textoffset_98 = { NULL NONLOCAL } same as i_241
textoffset_136 = { NULL NONLOCAL } same as i_241
_197 = { ESCAPED NONLOCAL }
_102 = { NONLOCAL }
_68 = { NONLOCAL }
_222 = { ESCAPED NONLOCAL }
_69 = { ESCAPED NONLOCAL }
bitoffset_208 = { NULL NONLOCAL } same as i_241
bitoffset_140 = { NULL NONLOCAL } same as i_241
_65 = { NULL NONLOCAL } same as i_241
byteoffset_182 = { NULL NONLOCAL } same as i_241
bitoffset.166_183 = { NULL NONLOCAL } same as i_241
bitnumb_184 = { NULL NONLOCAL }
_185 = { NULL NONLOCAL }
_186 = { NULL NONLOCAL } same as i_241
_187 = { NONLOCAL }
_188 = { ESCAPED NONLOCAL }
_189 = { ESCAPED NONLOCAL } same as _188
_190 = { NULL ESCAPED NONLOCAL }
i_139 = { ESCAPED NONLOCAL }
i_82 = { ESCAPED NONLOCAL }
_66 = { ESCAPED NONLOCAL } same as i_82
_67 = { ESCAPED NONLOCAL }
_138 = { NONLOCAL } same as _102
_70 = { ESCAPED NONLOCAL }
textoffset.163_71 = { NULL NONLOCAL } same as i_241
_72 = { NONLOCAL }
_73 = { ESCAPED NONLOCAL } same as _70
nloops_75 = { NONLOCAL } same as plaintext
nloops_120 = { NONLOCAL } same as plaintext
StopStopwatch = { }
_122 = { ESCAPED NONLOCAL } same as elapsed_118


Alias information for DoHuffIteration

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_3, points-to non-local, points-to NULL, points-to vars: { }
_5, points-to non-local, points-to NULL, points-to vars: { }
_9, points-to non-local, points-to NULL, points-to vars: { }
_15, points-to non-local, points-to NULL, points-to vars: { }
_19, points-to non-local, points-to NULL, points-to vars: { }
_22, points-to non-local, points-to NULL, points-to vars: { }
_26, points-to non-local, points-to NULL, points-to vars: { }
_31, points-to non-local, points-to NULL, points-to vars: { }
_36, points-to non-local, points-to NULL, points-to vars: { }
_39, points-to non-local, points-to NULL, points-to vars: { }
_42, points-to non-local, points-to NULL, points-to vars: { }
_49, points-to non-local, points-to NULL, points-to vars: { }
_52, points-to non-local, points-to NULL, points-to vars: { }
_56, points-to non-local, points-to NULL, points-to vars: { }
_68, points-to non-local, points-to NULL, points-to vars: { }
_72, points-to non-local, points-to NULL, points-to vars: { }
_77, points-to non-local, points-to NULL, points-to vars: { }
_102, points-to non-local, points-to NULL, points-to vars: { }
hufftree_125(D), points-to non-local, points-to NULL, points-to vars: { }
decomparray_134(D), points-to non-local, points-to NULL, points-to vars: { }
comparray_137(D), points-to non-local, points-to NULL, points-to vars: { }
_138, points-to non-local, points-to NULL, points-to vars: { }
plaintext_141(D), points-to non-local, points-to NULL, points-to vars: { }
_166, points-to non-local, points-to NULL, points-to vars: { }
_174, points-to non-local, points-to NULL, points-to vars: { }
_187, points-to non-local, points-to NULL, points-to vars: { }

;; 14 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 52 3 64 4 51 5 66 63 65 6 7 67 8 9 62 10 11 68 12 13 61 49 14 15 69 16 70 17 18 60 19 71 20 50 21 73 22 74 23 24 59 25 75 26 46 27 48 28 77 29 30 58 31 78 47 32 33 34 35 79 57 76 36 80 56 72 37 38 45 39 82 40 41 83 55 81 42 54 53 43 44
;;
;; Loop 1
;;  header 43, latch 53
;;  depth 1, outer 0
;;  nodes: 43 53 42 83 81 38 37 54 80 72 20 71 75 25 24 23 73 74 22 21 59 50 19 18 69 70 17 16 15 60 14 49 26 13 68 12 11 61 10 9 67 8 7 62 6 66 65 4 3 64 52 5 63 51 36 79 78 76 27 56 46 31 30 77 29 28 58 48 35 34 33 32 57 47 41 82 40 39 55 45
;;
;; Loop 10
;;  header 38, latch 54
;;  depth 2, outer 1
;;  nodes: 38 54 42 83 81 41 82 40 39 55 45
;;
;; Loop 11
;;  header 39, latch 55
;;  depth 3, outer 10
;;  nodes: 39 55 41 82 40
;;
;; Loop 9
;;  header 27, latch 56
;;  depth 2, outer 1
;;  nodes: 27 56 36 79 78 76 31 30 77 29 28 58 48 35 34 33 32 57 47
;;
;; Loop 13
;;  header 32, latch 57
;;  depth 3, outer 9
;;  nodes: 32 57 35 34 33
;;
;; Loop 12
;;  header 28, latch 58
;;  depth 3, outer 9
;;  nodes: 28 58 30 77 29
;;
;; Loop 6
;;  header 14, latch 26
;;  depth 2, outer 1
;;  nodes: 14 26 25 24 23 73 74 22 21 59 50 19 18 69 70 17 16 15 60
;;
;; Loop 8
;;  header 21, latch 59
;;  depth 3, outer 6
;;  nodes: 21 59 24 23 73 74 22
;;
;; Loop 7
;;  header 15, latch 60
;;  depth 3, outer 6
;;  nodes: 15 60 18 69 70 17 16
;;
;; Loop 5
;;  header 11, latch 61
;;  depth 2, outer 1
;;  nodes: 11 61 13 68 12
;;
;; Loop 4
;;  header 7, latch 62
;;  depth 2, outer 1
;;  nodes: 7 62 9 67 8
;;
;; Loop 3
;;  header 5, latch 63
;;  depth 2, outer 1
;;  nodes: 5 63
;;
;; Loop 2
;;  header 3, latch 64
;;  depth 2, outer 1
;;  nodes: 3 64
;; 2 succs { 43 }
;; 52 succs { 3 }
;; 3 succs { 64 4 }
;; 64 succs { 3 }
;; 4 succs { 51 65 }
;; 51 succs { 5 }
;; 5 succs { 63 66 }
;; 66 succs { 6 }
;; 63 succs { 5 }
;; 65 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 8 67 }
;; 67 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 62 10 }
;; 62 succs { 7 }
;; 10 succs { 11 }
;; 11 succs { 68 12 }
;; 68 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 61 49 }
;; 61 succs { 11 }
;; 49 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 16 69 }
;; 69 succs { 18 }
;; 16 succs { 17 70 }
;; 70 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 60 19 }
;; 60 succs { 15 }
;; 19 succs { 71 50 }
;; 71 succs { 20 }
;; 20 succs { 46 72 }
;; 50 succs { 21 }
;; 21 succs { 22 73 }
;; 73 succs { 24 }
;; 22 succs { 23 74 }
;; 74 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 59 25 }
;; 59 succs { 21 }
;; 25 succs { 75 26 }
;; 75 succs { 20 }
;; 26 succs { 14 }
;; 46 succs { 27 }
;; 27 succs { 48 76 }
;; 48 succs { 28 }
;; 28 succs { 77 29 }
;; 77 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 58 31 }
;; 58 succs { 28 }
;; 31 succs { 47 78 }
;; 78 succs { 36 }
;; 47 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 57 79 }
;; 79 succs { 36 }
;; 57 succs { 32 }
;; 76 succs { 36 }
;; 36 succs { 56 80 }
;; 80 succs { 37 }
;; 56 succs { 27 }
;; 72 succs { 37 }
;; 37 succs { 38 }
;; 38 succs { 45 81 }
;; 45 succs { 39 }
;; 39 succs { 82 40 }
;; 82 succs { 41 }
;; 40 succs { 41 }
;; 41 succs { 55 83 }
;; 83 succs { 42 }
;; 55 succs { 39 }
;; 81 succs { 42 }
;; 42 succs { 54 53 }
;; 54 succs { 38 }
;; 53 succs { 43 }
;; 43 succs { 52 44 }
;; 44 succs { 1 }
find_duplicates: <bb 71> duplicate of <bb 75>
find_duplicates: <bb 65> duplicate of <bb 66>
Removing basic block 75
Removing basic block 66

Symbols to be put in SSA form
{ D.6308 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 84
Number of blocks to update: 81 ( 96%)


Removing basic block 17
Removing basic block 23
Removing basic block 29
Removing basic block 45
Removing basic block 46
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 58
Removing basic block 59
Removing basic block 60
Removing basic block 61
Removing basic block 62
Removing basic block 63
Removing basic block 64
Merging blocks 65 and 6
Removing basic block 67
Removing basic block 68
Removing basic block 69
Removing basic block 71
Removing basic block 72
Removing basic block 73
Removing basic block 76
Removing basic block 78
Removing basic block 79
Removing basic block 80
Removing basic block 81
Removing basic block 82
Removing basic block 83
DoHuffIteration (farchar * plaintext, farchar * comparray, farchar * decomparray, long unsigned int arraysize, long unsigned int nloops, struct huff_node * hufftree)
{
  u32 byteoffset;
  int bitnumb;
  u32 byteoffset;
  int bitnumb;
  long unsigned int elapsed;
  char bitstring[30];
  int c;
  long int bitstringlen;
  long int textoffset;
  long int bitoffset;
  int lowidx2;
  int lowidx1;
  float lowfreq2;
  float lowfreq1;
  int root;
  long int j;
  int i;
  long unsigned int _1;
  long unsigned int _2;
  struct huff_node * _3;
  unsigned char _4;
  farchar * _5;
  char _6;
  long unsigned int _7;
  long unsigned int _8;
  struct huff_node * _9;
  float _10;
  float _11;
  long unsigned int j.161_12;
  long unsigned int _13;
  long unsigned int _14;
  struct huff_node * _15;
  float _16;
  float _17;
  float _18;
  struct huff_node * _19;
  long unsigned int _20;
  long unsigned int _21;
  struct huff_node * _22;
  float _23;
  long unsigned int _24;
  long unsigned int _25;
  struct huff_node * _26;
  int _27;
  float _28;
  long unsigned int _29;
  long unsigned int _30;
  struct huff_node * _31;
  int _32;
  float _33;
  long unsigned int _34;
  long unsigned int _35;
  struct huff_node * _36;
  long unsigned int _37;
  long unsigned int _38;
  struct huff_node * _39;
  long unsigned int _40;
  long unsigned int _41;
  struct huff_node * _42;
  float _43;
  long unsigned int _45;
  _Bool _47;
  struct huff_node * _49;
  long unsigned int j.161_51;
  farchar * _52;
  char _53;
  long unsigned int _54;
  long unsigned int _55;
  struct huff_node * _56;
  int _57;
  int _61;
  char _62;
  unsigned int _63;
  long unsigned int _64;
  unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  struct huff_node * _68;
  int _69;
  unsigned char _70;
  sizetype textoffset.163_71;
  farchar * _72;
  char _73;
  int _76;
  struct huff_node * _77;
  long unsigned int _78;
  int cstore_89;
  char cstore_93;
  struct huff_node * _102;
  long unsigned int _105;
  int _107;
  long unsigned int _122;
  struct huff_node * _138;
  int bitoffset.165_163;
  signed char _171;
  unsigned char _172;
  signed char _179;
  signed char _180;
  unsigned char _181;
  int bitoffset.166_183;
  int _185;
  sizetype _186;
  u8 * _187;
  unsigned char _188;
  int _189;
  int _190;
  long unsigned int _196;
  int _197;
  int _222;
  signed long _228;
  long unsigned int _235;
  _Bool _237;
  _Bool _239;
  char pretmp_345;
  sizetype _352;
  farchar * _353;
  unsigned char pretmp_354;
  signed char _355;
  int _356;
  signed char _357;

  <bb 2> [0.18%]:
  elapsed_118 = StartStopwatch ();
  goto <bb 44>; [100.00%]

  <bb 3> [99.00%]:
  # i_241 = PHI <i_161(3), 0(44)>
  _1 = (long unsigned int) i_241;
  _2 = _1 * 20;
  _3 = hufftree_125(D) + _2;
  _3->freq = 0.0;
  _4 = (unsigned char) i_241;
  _3->c = _4;
  i_161 = i_241 + 1;
  if (i_161 != 256)
    goto <bb 3>; [98.99%]
  else
    goto <bb 4>; [1.01%]

  <bb 4> [1.00%]:
  if (arraysize_124(D) != 0)
    goto <bb 5>; [85.00%]
  else
    goto <bb 6>; [15.00%]

  <bb 5> [5.67%]:
  # j.161_51 = PHI <j.161_12(5), 0(4)>
  # j_210 = PHI <j_158(5), 0(4)>
  _5 = plaintext_141(D) + j.161_51;
  _6 = *_5;
  _7 = (long unsigned int) _6;
  _8 = _7 * 20;
  _9 = hufftree_125(D) + _8;
  _10 = _9->freq;
  _11 = _10 + 1.0e+0;
  _9->freq = _11;
  j_158 = j_210 + 1;
  j.161_12 = (long unsigned int) j_158;
  if (j.161_12 < arraysize_124(D))
    goto <bb 5>; [85.00%]
  else
    goto <bb 6>; [15.00%]

  <bb 6> [1.00%]:

  <bb 7> [99.00%]:
  # i_242 = PHI <i_156(9), 0(6)>
  _13 = (long unsigned int) i_242;
  _14 = _13 * 20;
  _15 = hufftree_125(D) + _14;
  _16 = _15->freq;
  if (_16 != 0.0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [49.50%]:
  _228 = (signed long) arraysize_124(D);
  _17 = (float) _228;
  _18 = _16 / _17;
  _15->freq = _18;

  <bb 9> [99.00%]:
  i_156 = i_242 + 1;
  if (i_156 != 256)
    goto <bb 7>; [98.99%]
  else
    goto <bb 10>; [1.01%]

  <bb 10> [1.00%]:
  _19 = hufftree_125(D) + 5120;
  __builtin_memset (_19, 0, 5120);

  <bb 11> [99.00%]:
  # i_243 = PHI <i_154(13), 0(10)>
  _20 = (long unsigned int) i_243;
  _21 = _20 * 20;
  _22 = hufftree_125(D) + _21;
  _23 = _22->freq;
  if (_23 == 0.0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 12> [49.50%]:
  _22->right = -1;
  _22->left = -1;

  <bb 13> [99.00%]:
  # cstore_89 = PHI <32000(11), -1(12)>
  _22->parent = cstore_89;
  i_154 = i_243 + 1;
  if (i_154 != 512)
    goto <bb 11>; [98.99%]
  else
    goto <bb 14>; [1.01%]

  <bb 14> [6.93%]:
  # root_85 = PHI <255(13), root_126(26)>

  <bb 15> [39.25%]:
  # i_244 = PHI <i_149(18), 0(14)>
  # lowfreq1_246 = PHI <lowfreq1_86(18), 2.0e+0(14)>
  # lowidx1_248 = PHI <lowidx1_90(18), -1(14)>
  _24 = (long unsigned int) i_244;
  _25 = _24 * 20;
  _26 = hufftree_125(D) + _25;
  _27 = _26->parent;
  if (_27 < 0)
    goto <bb 16>; [36.00%]
  else
    goto <bb 18>; [64.00%]

  <bb 16> [14.13%]:
  _28 = _26->freq;
  if (_28 < lowfreq1_246)
    goto <bb 18>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 17> [7.07%]:

  <bb 18> [39.25%]:
  # lowfreq1_86 = PHI <lowfreq1_246(15), lowfreq1_246(17), _28(16)>
  # lowidx1_90 = PHI <lowidx1_248(15), lowidx1_248(17), i_244(16)>
  i_149 = i_244 + 1;
  if (root_85 >= i_149)
    goto <bb 15>; [82.35%]
  else
    goto <bb 19>; [17.65%]

  <bb 19> [6.93%]:
  if (lowidx1_90 == -1)
    goto <bb 20>; [7.50%]
  else
    goto <bb 21>; [92.50%]

  <bb 20> [1.00%]:
  if (arraysize_124(D) != 0)
    goto <bb 27>; [85.00%]
  else
    goto <bb 38>; [15.00%]

  <bb 21> [36.31%]:
  # i_245 = PHI <i_133(24), 0(19)>
  # lowfreq2_247 = PHI <lowfreq2_88(24), 2.0e+0(19)>
  # lowidx2_249 = PHI <lowidx2_92(24), -1(19)>
  _29 = (long unsigned int) i_245;
  _30 = _29 * 20;
  _31 = hufftree_125(D) + _30;
  _32 = _31->parent;
  _239 = lowidx1_90 != i_245;
  _237 = _32 < 0;
  _47 = _237 & _239;
  if (_47 != 0)
    goto <bb 22>; [35.63%]
  else
    goto <bb 24>; [64.37%]

  <bb 22> [12.93%]:
  _33 = _31->freq;
  if (_33 < lowfreq2_247)
    goto <bb 24>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 23> [6.47%]:

  <bb 24> [36.31%]:
  # lowfreq2_88 = PHI <_33(22), lowfreq2_247(21), lowfreq2_247(23)>
  # lowidx2_92 = PHI <i_245(22), lowidx2_249(21), lowidx2_249(23)>
  i_133 = i_245 + 1;
  if (root_85 >= i_133)
    goto <bb 21>; [82.35%]
  else
    goto <bb 25>; [17.65%]

  <bb 25> [6.41%]:
  if (lowidx2_92 == -1)
    goto <bb 20>; [7.50%]
  else
    goto <bb 26>; [92.50%]

  <bb 26> [5.93%]:
  root_126 = root_85 + 1;
  _34 = (long unsigned int) lowidx1_90;
  _35 = _34 * 20;
  _36 = hufftree_125(D) + _35;
  _36->parent = root_126;
  _37 = (long unsigned int) lowidx2_92;
  _38 = _37 * 20;
  _39 = hufftree_125(D) + _38;
  _39->parent = root_126;
  _40 = (long unsigned int) root_126;
  _41 = _40 * 20;
  _42 = hufftree_125(D) + _41;
  _43 = lowfreq1_86 + lowfreq2_88;
  _42->freq = _43;
  _42->left = lowidx1_90;
  _42->right = lowidx2_92;
  _42->parent = -2;
  goto <bb 14>; [100.00%]

  <bb 27> [5.67%]:
  # _105 = PHI <_64(37), 0(20)>
  # i_227 = PHI <i_144(37), 0(20)>
  # bitoffset_225 = PHI <bitoffset_226(37), 0(20)>
  _52 = plaintext_141(D) + _105;
  _53 = *_52;
  c_142 = (int) _53;
  _78 = (long unsigned int) _53;
  _235 = _78 * 20;
  _77 = hufftree_125(D) + _235;
  _76 = _77->parent;
  if (_76 != -2)
    goto <bb 28>; [85.00%]
  else
    goto <bb 37>; [15.00%]

  <bb 28> [32.11%]:
  # _107 = PHI <_61(30), _76(27)>
  # bitstringlen_206 = PHI <bitstringlen_148(30), 0(27)>
  # c_221 = PHI <_107(30), c_142(27)>
  _54 = (long unsigned int) _107;
  _55 = _54 * 20;
  _56 = hufftree_125(D) + _55;
  _57 = _56->left;
  if (_57 == c_221)
    goto <bb 29>; [34.00%]
  else
    goto <bb 30>; [66.00%]

  <bb 29> [10.92%]:

  <bb 30> [32.11%]:
  # cstore_93 = PHI <48(29), 49(28)>
  bitstring[bitstringlen_206] = cstore_93;
  bitstringlen_148 = bitstringlen_206 + 1;
  _61 = _56->parent;
  if (_61 != -2)
    goto <bb 28>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 31> [4.82%]:
  if (bitstringlen_148 != 0)
    goto <bb 32>; [95.77%]
  else
    goto <bb 37>; [4.23%]

  <bb 32> [32.11%]:
  # bitoffset_211 = PHI <bitoffset_145(36), bitoffset_225(31)>
  # bitstringlen_202 = PHI <bitstringlen_143(36), bitstringlen_206(31)>
  _62 = bitstring[bitstringlen_202];
  _63 = (unsigned int) bitoffset_211;
  byteoffset_162 = _63 >> 3;
  bitoffset.165_163 = (int) bitoffset_211;
  bitnumb_164 = bitoffset.165_163 & 7;
  _352 = (sizetype) byteoffset_162;
  _353 = comparray_137(D) + _352;
  pretmp_354 = MEM[(u8 *)_353];
  _355 = (signed char) pretmp_354;
  _356 = 1 << bitnumb_164;
  _357 = (signed char) _356;
  if (_62 == 49)
    goto <bb 33>; [34.00%]
  else
    goto <bb 34>; [66.00%]

  <bb 33> [10.92%]:
  _171 = _355 | _357;
  _172 = (unsigned char) _171;
  MEM[(u8 *)_353] = _172;
  goto <bb 35>; [100.00%]

  <bb 34> [21.19%]:
  _179 = ~_357;
  _180 = _179 & _355;
  _181 = (unsigned char) _180;
  MEM[(u8 *)_353] = _181;

  <bb 35> [32.11%]:
  bitoffset_145 = bitoffset_211 + 1;
  bitstringlen_143 = bitstringlen_202 + -1;
  if (bitstringlen_202 != 0)
    goto <bb 36>; [85.00%]
  else
    goto <bb 37>; [15.00%]

  <bb 36> [27.29%]:
  pretmp_345 = bitstring[bitstringlen_143];
  goto <bb 32>; [100.00%]

  <bb 37> [5.67%]:
  # bitoffset_226 = PHI <bitoffset_145(35), bitoffset_225(31), bitoffset_225(27)>
  i_144 = i_227 + 1;
  _64 = (long unsigned int) i_144;
  if (_64 < arraysize_124(D))
    goto <bb 27>; [85.00%]
  else
    goto <bb 38>; [15.00%]

  <bb 38> [1.00%]:
  # bitoffset_224 = PHI <bitoffset_226(37), 0(20)>
  _45 = (long unsigned int) root_85;
  _196 = _45 * 20;
  _49 = hufftree_125(D) + _196;

  <bb 39> [6.67%]:
  # bitoffset_96 = PHI <0(38), bitoffset_209(43)>
  # textoffset_98 = PHI <0(38), textoffset_136(43)>
  _197 = _49->left;
  if (_197 != -1)
    goto <bb 40>; [85.00%]
  else
    goto <bb 43>; [15.00%]

  <bb 40> [37.78%]:
  # _102 = PHI <_68(42), _49(39)>
  # _222 = PHI <_69(42), _197(39)>
  # bitoffset_208 = PHI <bitoffset_140(42), bitoffset_96(39)>
  _65 = (unsigned int) bitoffset_208;
  byteoffset_182 = _65 >> 3;
  bitoffset.166_183 = (int) bitoffset_208;
  bitnumb_184 = bitoffset.166_183 & 7;
  _185 = 1 << bitnumb_184;
  _186 = (sizetype) byteoffset_182;
  _187 = comparray_137(D) + _186;
  _188 = *_187;
  _189 = (int) _188;
  _190 = _185 & _189;
  if (_190 == 0)
    goto <bb 42>; [50.00%]
  else
    goto <bb 41>; [50.00%]

  <bb 41> [18.89%]:
  i_139 = _102->right;

  <bb 42> [37.78%]:
  # i_82 = PHI <_222(40), i_139(41)>
  bitoffset_140 = bitoffset_208 + 1;
  _66 = (long unsigned int) i_82;
  _67 = _66 * 20;
  _68 = hufftree_125(D) + _67;
  _69 = _68->left;
  if (_69 != -1)
    goto <bb 40>; [85.00%]
  else
    goto <bb 43>; [15.00%]

  <bb 43> [6.67%]:
  # _138 = PHI <_68(42), _49(39)>
  # bitoffset_209 = PHI <bitoffset_140(42), bitoffset_96(39)>
  _70 = _138->c;
  textoffset.163_71 = (sizetype) textoffset_98;
  _72 = decomparray_134(D) + textoffset.163_71;
  _73 = (char) _70;
  *_72 = _73;
  textoffset_136 = textoffset_98 + 1;
  if (bitoffset_209 < bitoffset_224)
    goto <bb 39>; [85.00%]
  else
    goto <bb 44>; [15.00%]

  <bb 44> [1.18%]:
  # nloops_75 = PHI <nloops_119(D)(2), nloops_120(43)>
  nloops_120 = nloops_75 + 18446744073709551615;
  if (nloops_75 != 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 45>; [15.00%]

  <bb 45> [0.18%]:
  _122 = StopStopwatch (elapsed_118);
  bitstring ={v} {CLOBBER};
  return _122;

}



;; Function DoNNetIteration (DoNNetIteration, funcdef_no=96, decl_uid=4703, cgraph_uid=96, symbol_order=121)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
nloops = &NONLOCAL
elapsed_15 = NONLOCAL
i_982 = i_50
i_982 = &NULL
ESCAPED = &NONLOCAL
_43 = NONLOCAL
value_44 = _43
_45 = value_44
_45 = &NONLOCAL
value_46 = _45
value_46 = &NONLOCAL
_47 = value_46
_47 = &NONLOCAL
mid_wts = NONLOCAL
mid_wts = _47
ESCAPED = _47
i_50 = i_982
i_50 = &NONLOCAL
neurode_51 = neurode_983
neurode_51 = &NONLOCAL
neurode_983 = neurode_51
neurode_983 = &NULL
i_941 = i_59
i_941 = &NULL
ESCAPED = &NONLOCAL
_52 = NONLOCAL
value_53 = _52
_54 = value_53
_54 = &NONLOCAL
value_55 = _54
value_55 = &NONLOCAL
_56 = value_55
_56 = &NONLOCAL
out_wts = NONLOCAL
out_wts = _56
ESCAPED = _56
i_59 = i_941
i_59 = &NONLOCAL
neurode_60 = neurode_942
neurode_60 = &NONLOCAL
neurode_942 = neurode_60
neurode_942 = &NULL
j_1023 = j_37
j_1023 = &NULL
mid_wt_change = NONLOCAL
mid_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
mid_wt_cum_change = NONLOCAL
mid_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
j_37 = j_1023
j_37 = &NONLOCAL
i_38 = i_1024
i_38 = &NONLOCAL
i_1024 = i_38
i_1024 = &NULL
out_wt_change = NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_change = &NONLOCAL
ESCAPED = &NONLOCAL
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
iteration_count = NONLOCAL
iteration_count = &NONLOCAL
ESCAPED = &NONLOCAL
learned = NONLOCAL
learned = &NULL
ESCAPED = &NULL
numpasses = NONLOCAL
numpasses = &NULL
ESCAPED = &NULL
patt_235 = patt_32
patt_235 = &NULL
worst_error = NONLOCAL
worst_error = &NONLOCAL
ESCAPED = &NONLOCAL
j_1371 = j_106
j_1371 = &NULL
_105 = mid_wt_cum_change
mid_wt_change = _105
ESCAPED = _105
mid_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
j_106 = j_1371
j_106 = &NONLOCAL
i_107 = i_819
i_107 = &NONLOCAL
i_819 = i_107
i_819 = &NULL
_1148 = out_wt_cum_change
out_wt_change = _1148
ESCAPED = _1148
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1151 = out_wt_cum_change
out_wt_change = _1151
ESCAPED = _1151
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1154 = out_wt_cum_change
out_wt_change = _1154
ESCAPED = _1154
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1157 = out_wt_cum_change
out_wt_change = _1157
ESCAPED = _1157
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1160 = out_wt_cum_change
out_wt_change = _1160
ESCAPED = _1160
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1163 = out_wt_cum_change
out_wt_change = _1163
ESCAPED = _1163
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1166 = out_wt_cum_change
out_wt_change = _1166
ESCAPED = _1166
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1169 = out_wt_cum_change
out_wt_change = _1169
ESCAPED = _1169
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1176 = out_wt_cum_change
out_wt_change = _1176
ESCAPED = _1176
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1179 = out_wt_cum_change
out_wt_change = _1179
ESCAPED = _1179
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1182 = out_wt_cum_change
out_wt_change = _1182
ESCAPED = _1182
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1185 = out_wt_cum_change
out_wt_change = _1185
ESCAPED = _1185
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1188 = out_wt_cum_change
out_wt_change = _1188
ESCAPED = _1188
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1191 = out_wt_cum_change
out_wt_change = _1191
ESCAPED = _1191
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1194 = out_wt_cum_change
out_wt_change = _1194
ESCAPED = _1194
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1197 = out_wt_cum_change
out_wt_change = _1197
ESCAPED = _1197
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1204 = out_wt_cum_change
out_wt_change = _1204
ESCAPED = _1204
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1207 = out_wt_cum_change
out_wt_change = _1207
ESCAPED = _1207
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1210 = out_wt_cum_change
out_wt_change = _1210
ESCAPED = _1210
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1213 = out_wt_cum_change
out_wt_change = _1213
ESCAPED = _1213
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1216 = out_wt_cum_change
out_wt_change = _1216
ESCAPED = _1216
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1219 = out_wt_cum_change
out_wt_change = _1219
ESCAPED = _1219
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1222 = out_wt_cum_change
out_wt_change = _1222
ESCAPED = _1222
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1225 = out_wt_cum_change
out_wt_change = _1225
ESCAPED = _1225
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1232 = out_wt_cum_change
out_wt_change = _1232
ESCAPED = _1232
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1235 = out_wt_cum_change
out_wt_change = _1235
ESCAPED = _1235
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1238 = out_wt_cum_change
out_wt_change = _1238
ESCAPED = _1238
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1241 = out_wt_cum_change
out_wt_change = _1241
ESCAPED = _1241
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1244 = out_wt_cum_change
out_wt_change = _1244
ESCAPED = _1244
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1247 = out_wt_cum_change
out_wt_change = _1247
ESCAPED = _1247
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1250 = out_wt_cum_change
out_wt_change = _1250
ESCAPED = _1250
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1253 = out_wt_cum_change
out_wt_change = _1253
ESCAPED = _1253
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1260 = out_wt_cum_change
out_wt_change = _1260
ESCAPED = _1260
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1263 = out_wt_cum_change
out_wt_change = _1263
ESCAPED = _1263
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1266 = out_wt_cum_change
out_wt_change = _1266
ESCAPED = _1266
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1269 = out_wt_cum_change
out_wt_change = _1269
ESCAPED = _1269
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1272 = out_wt_cum_change
out_wt_change = _1272
ESCAPED = _1272
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1275 = out_wt_cum_change
out_wt_change = _1275
ESCAPED = _1275
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1278 = out_wt_cum_change
out_wt_change = _1278
ESCAPED = _1278
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1281 = out_wt_cum_change
out_wt_change = _1281
ESCAPED = _1281
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1288 = out_wt_cum_change
out_wt_change = _1288
ESCAPED = _1288
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1291 = out_wt_cum_change
out_wt_change = _1291
ESCAPED = _1291
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1294 = out_wt_cum_change
out_wt_change = _1294
ESCAPED = _1294
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1297 = out_wt_cum_change
out_wt_change = _1297
ESCAPED = _1297
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1300 = out_wt_cum_change
out_wt_change = _1300
ESCAPED = _1300
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1303 = out_wt_cum_change
out_wt_change = _1303
ESCAPED = _1303
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1306 = out_wt_cum_change
out_wt_change = _1306
ESCAPED = _1306
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1309 = out_wt_cum_change
out_wt_change = _1309
ESCAPED = _1309
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1316 = out_wt_cum_change
out_wt_change = _1316
ESCAPED = _1316
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1319 = out_wt_cum_change
out_wt_change = _1319
ESCAPED = _1319
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1322 = out_wt_cum_change
out_wt_change = _1322
ESCAPED = _1322
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1325 = out_wt_cum_change
out_wt_change = _1325
ESCAPED = _1325
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1328 = out_wt_cum_change
out_wt_change = _1328
ESCAPED = _1328
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1331 = out_wt_cum_change
out_wt_change = _1331
ESCAPED = _1331
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1334 = out_wt_cum_change
out_wt_change = _1334
ESCAPED = _1334
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1337 = out_wt_cum_change
out_wt_change = _1337
ESCAPED = _1337
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1344 = out_wt_cum_change
out_wt_change = _1344
ESCAPED = _1344
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1347 = out_wt_cum_change
out_wt_change = _1347
ESCAPED = _1347
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1350 = out_wt_cum_change
out_wt_change = _1350
ESCAPED = _1350
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1353 = out_wt_cum_change
out_wt_change = _1353
ESCAPED = _1353
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1356 = out_wt_cum_change
out_wt_change = _1356
ESCAPED = _1356
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1359 = out_wt_cum_change
out_wt_change = _1359
ESCAPED = _1359
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1362 = out_wt_cum_change
out_wt_change = _1362
ESCAPED = _1362
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
_1365 = out_wt_cum_change
out_wt_change = _1365
ESCAPED = _1365
out_wt_cum_change = &NONLOCAL
ESCAPED = &NONLOCAL
i_860 = i_96
i_860 = &NULL
sum_859 = sum_95
sum_859 = &NONLOCAL
_91 = mid_wts
in_pats = NONLOCAL
_92 = in_pats
_93 = _91
_93 = _92
sum_95 = _93
sum_95 = sum_859
i_96 = i_860
i_96 = &NONLOCAL
_98 = sum_95
ESCAPED = _98
_99 = NONLOCAL
_100 = _99
_100 = &NONLOCAL
sum_101 = &NONLOCAL
sum_101 = _100
mid_out = NONLOCAL
mid_out = sum_101
ESCAPED = sum_101
neurode_102 = neurode_900
neurode_102 = &NONLOCAL
neurode_900 = neurode_102
neurode_900 = &NULL
neurode_901 = neurode_88
neurode_901 = &NULL
_674 = out_wts
_675 = mid_out
_676 = _674
_676 = _675
sum_677 = _676
sum_677 = &NONLOCAL
_681 = out_wts
_682 = mid_out
_683 = _681
_683 = _682
sum_684 = sum_677
sum_684 = _683
_688 = out_wts
_689 = mid_out
_690 = _688
_690 = _689
sum_691 = sum_684
sum_691 = _690
_695 = out_wts
_696 = mid_out
_697 = _695
_697 = _696
sum_698 = sum_691
sum_698 = _697
_702 = out_wts
_703 = mid_out
_704 = _702
_704 = _703
sum_705 = sum_698
sum_705 = _704
_709 = out_wts
_710 = mid_out
_711 = _709
_711 = _710
sum_712 = sum_705
sum_712 = _711
_716 = out_wts
_717 = mid_out
_718 = _716
_718 = _717
sum_719 = sum_712
sum_719 = _718
_723 = out_wts
_724 = mid_out
_725 = _723
_725 = _724
sum_726 = sum_719
sum_726 = _725
_84 = sum_726
ESCAPED = _84
_85 = NONLOCAL
_86 = _85
_86 = &NONLOCAL
sum_87 = &NONLOCAL
sum_87 = _86
out_out = NONLOCAL
out_out = sum_87
ESCAPED = sum_87
neurode_88 = neurode_901
neurode_88 = &NONLOCAL
out_pats = NONLOCAL
_564 = out_pats
_565 = out_out
_566 = _564
_566 = _565
out_error = NONLOCAL
out_error = _566
ESCAPED = _566
sum_568 = _566
sum_568 = &NONLOCAL
sum_569 = &NONLOCAL
sum_569 = _566
_570 = _566
tot_error_571 = &NONLOCAL
tot_error_571 = _566
tot_error_571 = _570
sum_572 = sum_568
sum_572 = sum_568
sum_572 = sum_569
_578 = out_pats
_579 = out_out
_580 = _578
_580 = _579
out_error = _580
ESCAPED = _580
sum_582 = sum_572
sum_582 = _580
sum_583 = sum_572
sum_583 = _580
_584 = _580
tot_error_585 = tot_error_571
tot_error_585 = _580
tot_error_585 = tot_error_571
tot_error_585 = _584
sum_586 = sum_582
sum_586 = sum_582
sum_586 = sum_583
sum_586 = sum_583
_592 = out_pats
_593 = out_out
_594 = _592
_594 = _593
out_error = _594
ESCAPED = _594
sum_596 = sum_586
sum_596 = _594
sum_597 = sum_586
sum_597 = _594
_598 = _594
tot_error_599 = tot_error_585
tot_error_599 = _594
tot_error_599 = tot_error_585
tot_error_599 = _598
sum_600 = sum_596
sum_600 = sum_596
sum_600 = sum_597
sum_600 = sum_597
_606 = out_pats
_607 = out_out
_608 = _606
_608 = _607
out_error = _608
ESCAPED = _608
sum_610 = sum_600
sum_610 = _608
sum_611 = sum_600
sum_611 = _608
_612 = _608
tot_error_613 = tot_error_599
tot_error_613 = _608
tot_error_613 = tot_error_599
tot_error_613 = _612
sum_614 = sum_610
sum_614 = sum_610
sum_614 = sum_611
sum_614 = sum_611
_620 = out_pats
_621 = out_out
_622 = _620
_622 = _621
out_error = _622
ESCAPED = _622
sum_624 = sum_614
sum_624 = _622
sum_625 = sum_614
sum_625 = _622
_626 = _622
tot_error_627 = tot_error_613
tot_error_627 = _622
tot_error_627 = tot_error_613
tot_error_627 = _626
sum_628 = sum_624
sum_628 = sum_624
sum_628 = sum_625
sum_628 = sum_625
_634 = out_pats
_635 = out_out
_636 = _634
_636 = _635
out_error = _636
ESCAPED = _636
sum_638 = sum_628
sum_638 = _636
sum_639 = sum_628
sum_639 = _636
_640 = _636
tot_error_641 = tot_error_627
tot_error_641 = _636
tot_error_641 = tot_error_627
tot_error_641 = _640
sum_642 = sum_638
sum_642 = sum_638
sum_642 = sum_639
sum_642 = sum_639
_648 = out_pats
_649 = out_out
_650 = _648
_650 = _649
out_error = _650
ESCAPED = _650
sum_652 = sum_642
sum_652 = _650
sum_653 = sum_642
sum_653 = _650
_654 = _650
tot_error_655 = tot_error_641
tot_error_655 = _650
tot_error_655 = tot_error_641
tot_error_655 = _654
sum_656 = sum_652
sum_656 = sum_652
sum_656 = sum_653
sum_656 = sum_653
_662 = out_pats
_663 = out_out
_664 = _662
_664 = _663
out_error = _664
ESCAPED = _664
sum_666 = sum_656
sum_666 = _664
sum_667 = sum_656
sum_667 = _664
_668 = _664
tot_error_669 = tot_error_655
tot_error_669 = _664
tot_error_669 = tot_error_655
tot_error_669 = _668
sum_670 = sum_666
sum_670 = sum_666
sum_670 = sum_667
sum_670 = sum_667
_124 = sum_670
_124 = &NONLOCAL
avg_out_error = NONLOCAL
avg_out_error = _124
ESCAPED = _124
tot_out_error = NONLOCAL
tot_out_error = tot_error_669
ESCAPED = tot_error_669
_820 = out_wts
_822 = _566
_822 = _820
sum_823 = _822
sum_823 = &NONLOCAL
_824 = out_wts
_826 = _580
_826 = _824
sum_827 = sum_823
sum_827 = _826
_828 = out_wts
_830 = _594
_830 = _828
sum_831 = sum_827
sum_831 = _830
_832 = out_wts
_834 = _608
_834 = _832
sum_835 = sum_831
sum_835 = _834
_836 = out_wts
_838 = _622
_838 = _836
sum_839 = sum_835
sum_839 = _838
_840 = out_wts
_842 = _636
_842 = _840
sum_843 = sum_839
sum_843 = _842
_844 = out_wts
_846 = _650
_846 = _844
sum_847 = sum_843
sum_847 = _846
_848 = out_wts
_850 = _664
_850 = _848
sum_851 = sum_847
sum_851 = _850
_852 = mid_out
_853 = &NONLOCAL
_853 = _852
_854 = _852
_854 = _853
_855 = sum_851
_855 = _854
mid_error = NONLOCAL
mid_error = _855
ESCAPED = _855
_861 = out_wts
_863 = _566
_863 = _861
sum_864 = _863
sum_864 = &NONLOCAL
_865 = out_wts
_867 = _580
_867 = _865
sum_868 = sum_864
sum_868 = _867
_869 = out_wts
_871 = _594
_871 = _869
sum_872 = sum_868
sum_872 = _871
_873 = out_wts
_875 = _608
_875 = _873
sum_876 = sum_872
sum_876 = _875
_877 = out_wts
_879 = _622
_879 = _877
sum_880 = sum_876
sum_880 = _879
_881 = out_wts
_883 = _636
_883 = _881
sum_884 = sum_880
sum_884 = _883
_885 = out_wts
_887 = _650
_887 = _885
sum_888 = sum_884
sum_888 = _887
_889 = out_wts
_891 = _664
_891 = _889
sum_892 = sum_888
sum_892 = _891
_893 = mid_out
_894 = &NONLOCAL
_894 = _893
_895 = _893
_895 = _894
_896 = sum_892
_896 = _895
mid_error = _896
ESCAPED = _896
_902 = out_wts
_904 = _566
_904 = _902
sum_905 = _904
sum_905 = &NONLOCAL
_906 = out_wts
_908 = _580
_908 = _906
sum_909 = sum_905
sum_909 = _908
_910 = out_wts
_912 = _594
_912 = _910
sum_913 = sum_909
sum_913 = _912
_914 = out_wts
_916 = _608
_916 = _914
sum_917 = sum_913
sum_917 = _916
_918 = out_wts
_920 = _622
_920 = _918
sum_921 = sum_917
sum_921 = _920
_922 = out_wts
_924 = _636
_924 = _922
sum_925 = sum_921
sum_925 = _924
_926 = out_wts
_928 = _650
_928 = _926
sum_929 = sum_925
sum_929 = _928
_930 = out_wts
_932 = _664
_932 = _930
sum_933 = sum_929
sum_933 = _932
_934 = mid_out
_935 = &NONLOCAL
_935 = _934
_936 = _934
_936 = _935
_937 = sum_933
_937 = _936
mid_error = _937
ESCAPED = _937
_943 = out_wts
_945 = _566
_945 = _943
sum_946 = _945
sum_946 = &NONLOCAL
_947 = out_wts
_949 = _580
_949 = _947
sum_950 = sum_946
sum_950 = _949
_951 = out_wts
_953 = _594
_953 = _951
sum_954 = sum_950
sum_954 = _953
_955 = out_wts
_957 = _608
_957 = _955
sum_958 = sum_954
sum_958 = _957
_959 = out_wts
_961 = _622
_961 = _959
sum_962 = sum_958
sum_962 = _961
_963 = out_wts
_965 = _636
_965 = _963
sum_966 = sum_962
sum_966 = _965
_967 = out_wts
_969 = _650
_969 = _967
sum_970 = sum_966
sum_970 = _969
_971 = out_wts
_973 = _664
_973 = _971
sum_974 = sum_970
sum_974 = _973
_975 = mid_out
_976 = &NONLOCAL
_976 = _975
_977 = _975
_977 = _976
_978 = sum_974
_978 = _977
mid_error = _978
ESCAPED = _978
_984 = out_wts
_986 = _566
_986 = _984
sum_987 = _986
sum_987 = &NONLOCAL
_988 = out_wts
_990 = _580
_990 = _988
sum_991 = sum_987
sum_991 = _990
_992 = out_wts
_994 = _594
_994 = _992
sum_995 = sum_991
sum_995 = _994
_996 = out_wts
_998 = _608
_998 = _996
sum_999 = sum_995
sum_999 = _998
_1000 = out_wts
_1002 = _622
_1002 = _1000
sum_1003 = sum_999
sum_1003 = _1002
_1004 = out_wts
_1006 = _636
_1006 = _1004
sum_1007 = sum_1003
sum_1007 = _1006
_1008 = out_wts
_1010 = _650
_1010 = _1008
sum_1011 = sum_1007
sum_1011 = _1010
_1012 = out_wts
_1014 = _664
_1014 = _1012
sum_1015 = sum_1011
sum_1015 = _1014
_1016 = mid_out
_1017 = &NONLOCAL
_1017 = _1016
_1018 = _1016
_1018 = _1017
_1019 = sum_1015
_1019 = _1018
mid_error = _1019
ESCAPED = _1019
_1025 = out_wts
_1027 = _566
_1027 = _1025
sum_1028 = _1027
sum_1028 = &NONLOCAL
_1029 = out_wts
_1031 = _580
_1031 = _1029
sum_1032 = sum_1028
sum_1032 = _1031
_1033 = out_wts
_1035 = _594
_1035 = _1033
sum_1036 = sum_1032
sum_1036 = _1035
_1037 = out_wts
_1039 = _608
_1039 = _1037
sum_1040 = sum_1036
sum_1040 = _1039
_1041 = out_wts
_1043 = _622
_1043 = _1041
sum_1044 = sum_1040
sum_1044 = _1043
_1045 = out_wts
_1047 = _636
_1047 = _1045
sum_1048 = sum_1044
sum_1048 = _1047
_1049 = out_wts
_1051 = _650
_1051 = _1049
sum_1052 = sum_1048
sum_1052 = _1051
_1053 = out_wts
_1055 = _664
_1055 = _1053
sum_1056 = sum_1052
sum_1056 = _1055
_1057 = mid_out
_1058 = &NONLOCAL
_1058 = _1057
_1059 = _1057
_1059 = _1058
_1060 = sum_1056
_1060 = _1059
mid_error = _1060
ESCAPED = _1060
_1066 = out_wts
_1068 = _566
_1068 = _1066
sum_1069 = _1068
sum_1069 = &NONLOCAL
_1070 = out_wts
_1072 = _580
_1072 = _1070
sum_1073 = sum_1069
sum_1073 = _1072
_1074 = out_wts
_1076 = _594
_1076 = _1074
sum_1077 = sum_1073
sum_1077 = _1076
_1078 = out_wts
_1080 = _608
_1080 = _1078
sum_1081 = sum_1077
sum_1081 = _1080
_1082 = out_wts
_1084 = _622
_1084 = _1082
sum_1085 = sum_1081
sum_1085 = _1084
_1086 = out_wts
_1088 = _636
_1088 = _1086
sum_1089 = sum_1085
sum_1089 = _1088
_1090 = out_wts
_1092 = _650
_1092 = _1090
sum_1093 = sum_1089
sum_1093 = _1092
_1094 = out_wts
_1096 = _664
_1096 = _1094
sum_1097 = sum_1093
sum_1097 = _1096
_1098 = mid_out
_1099 = &NONLOCAL
_1099 = _1098
_1100 = _1098
_1100 = _1099
_1101 = sum_1097
_1101 = _1100
mid_error = _1101
ESCAPED = _1101
_1107 = out_wts
_1109 = _566
_1109 = _1107
sum_1110 = _1109
sum_1110 = &NONLOCAL
_1111 = out_wts
_1113 = _580
_1113 = _1111
sum_1114 = sum_1110
sum_1114 = _1113
_1115 = out_wts
_1117 = _594
_1117 = _1115
sum_1118 = sum_1114
sum_1118 = _1117
_1119 = out_wts
_1121 = _608
_1121 = _1119
sum_1122 = sum_1118
sum_1122 = _1121
_1123 = out_wts
_1125 = _622
_1125 = _1123
sum_1126 = sum_1122
sum_1126 = _1125
_1127 = out_wts
_1129 = _636
_1129 = _1127
sum_1130 = sum_1126
sum_1130 = _1129
_1131 = out_wts
_1133 = _650
_1133 = _1131
sum_1134 = sum_1130
sum_1134 = _1133
_1135 = out_wts
_1137 = _664
_1137 = _1135
sum_1138 = sum_1134
sum_1138 = _1137
_1139 = mid_out
_1140 = &NONLOCAL
_1140 = _1139
_1141 = _1139
_1141 = _1140
_1142 = sum_1138
_1142 = _1141
mid_error = _1142
ESCAPED = _1142
neurode_504 = neurode_157
neurode_504 = &NULL
_378 = out_error
_379 = _378
_379 = &NONLOCAL
delta_381 = _379
delta_381 = _852
_382 = out_wt_change
_383 = _382
_383 = &NONLOCAL
delta_384 = delta_381
delta_384 = _383
_385 = out_wts
_386 = delta_384
_386 = _385
out_wts = _386
ESCAPED = _386
_388 = out_wt_cum_change
_389 = delta_384
_389 = _388
out_wt_cum_change = _389
ESCAPED = _389
delta_397 = _379
delta_397 = _893
_398 = out_wt_change
_399 = _398
_399 = &NONLOCAL
delta_400 = delta_397
delta_400 = _399
_401 = out_wts
_402 = delta_400
_402 = _401
out_wts = _402
ESCAPED = _402
_404 = out_wt_cum_change
_405 = delta_400
_405 = _404
out_wt_cum_change = _405
ESCAPED = _405
delta_413 = _379
delta_413 = _934
_414 = out_wt_change
_415 = _414
_415 = &NONLOCAL
delta_416 = delta_413
delta_416 = _415
_417 = out_wts
_418 = delta_416
_418 = _417
out_wts = _418
ESCAPED = _418
_420 = out_wt_cum_change
_421 = delta_416
_421 = _420
out_wt_cum_change = _421
ESCAPED = _421
delta_429 = _379
delta_429 = _975
_430 = out_wt_change
_431 = _430
_431 = &NONLOCAL
delta_432 = delta_429
delta_432 = _431
_433 = out_wts
_434 = delta_432
_434 = _433
out_wts = _434
ESCAPED = _434
_436 = out_wt_cum_change
_437 = delta_432
_437 = _436
out_wt_cum_change = _437
ESCAPED = _437
delta_445 = _379
delta_445 = _1016
_446 = out_wt_change
_447 = _446
_447 = &NONLOCAL
delta_448 = delta_445
delta_448 = _447
_449 = out_wts
_450 = delta_448
_450 = _449
out_wts = _450
ESCAPED = _450
_452 = out_wt_cum_change
_453 = delta_448
_453 = _452
out_wt_cum_change = _453
ESCAPED = _453
delta_461 = _379
delta_461 = _1057
_462 = out_wt_change
_463 = _462
_463 = &NONLOCAL
delta_464 = delta_461
delta_464 = _463
_465 = out_wts
_466 = delta_464
_466 = _465
out_wts = _466
ESCAPED = _466
_468 = out_wt_cum_change
_469 = delta_464
_469 = _468
out_wt_cum_change = _469
ESCAPED = _469
delta_477 = _379
delta_477 = _1098
_478 = out_wt_change
_479 = _478
_479 = &NONLOCAL
delta_480 = delta_477
delta_480 = _479
_481 = out_wts
_482 = delta_480
_482 = _481
out_wts = _482
ESCAPED = _482
_484 = out_wt_cum_change
_485 = delta_480
_485 = _484
out_wt_cum_change = _485
ESCAPED = _485
delta_493 = _379
delta_493 = _1139
_494 = out_wt_change
_495 = _494
_495 = &NONLOCAL
delta_496 = delta_493
delta_496 = _495
_497 = out_wts
_498 = delta_496
_498 = _497
out_wts = _498
ESCAPED = _498
_500 = out_wt_cum_change
_501 = delta_496
_501 = _500
out_wt_cum_change = _501
ESCAPED = _501
neurode_157 = neurode_504
neurode_157 = &NONLOCAL
weight_818 = weight_141
weight_818 = &NULL
_132 = in_pats
delta_133 = _130
delta_133 = _132
_134 = mid_wt_change
_135 = _134
_135 = &NONLOCAL
delta_136 = delta_133
delta_136 = _135
_137 = mid_wts
_138 = delta_136
_138 = _137
mid_wts = _138
ESCAPED = _138
_139 = mid_wt_cum_change
_140 = delta_136
_140 = _139
mid_wt_cum_change = _140
ESCAPED = _140
weight_141 = weight_818
weight_141 = &NONLOCAL
neurode_142 = neurode_1147
neurode_142 = &NONLOCAL
neurode_1147 = neurode_142
neurode_1147 = &NULL
_129 = mid_error
_130 = _129
_130 = &NONLOCAL
iteration_count.186_1 = iteration_count
_2 = iteration_count.186_1
_2 = &NONLOCAL
iteration_count = _2
ESCAPED = _2
patt_32 = patt_235
patt_32 = &NONLOCAL
numpats = NONLOCAL
numpats.187_3 = numpats
numpasses.188_4 = numpasses
_5 = numpasses.188_4
_5 = &NONLOCAL
numpasses = _5
ESCAPED = _5
_290 = tot_out_error
error_291 = &NONLOCAL
error_291 = _290
_292 = avg_out_error
sum_293 = _292
sum_293 = &NONLOCAL
_299 = tot_out_error
error_300 = error_291
error_300 = _299
_301 = avg_out_error
sum_302 = sum_293
sum_302 = _301
_308 = tot_out_error
error_309 = error_300
error_309 = _308
_310 = avg_out_error
sum_311 = sum_302
sum_311 = _310
_317 = tot_out_error
error_318 = error_309
error_318 = _317
_319 = avg_out_error
sum_320 = sum_311
sum_320 = _319
_326 = tot_out_error
error_327 = error_318
error_327 = _326
_328 = avg_out_error
sum_329 = sum_320
sum_329 = _328
_335 = tot_out_error
error_336 = error_327
error_336 = _335
_337 = avg_out_error
sum_338 = sum_329
sum_338 = _337
_344 = tot_out_error
error_345 = error_336
error_345 = _344
_346 = avg_out_error
sum_347 = sum_338
sum_347 = _346
_353 = tot_out_error
error_354 = error_345
error_354 = _353
_355 = avg_out_error
sum_356 = sum_347
sum_356 = _355
_362 = tot_out_error
error_363 = error_354
error_363 = _362
_364 = avg_out_error
sum_365 = sum_356
sum_365 = _364
_371 = tot_out_error
error_907 = &NULL
error_907 = &NONLOCAL
error_907 = &NONLOCAL
_104 = _1391
_104 = _89
_104 = _1391
_1286 = _1451
_1286 = _94
_1286 = _1451
result_30 = _1286
result_30 = &NULL
_20 = tot_out_error
error_903 = error_907
error_903 = &NONLOCAL
result_233 = result_30
result_233 = &NULL
_234 = tot_out_error
error_911 = error_903
error_911 = &NONLOCAL
result_240 = result_233
result_240 = &NULL
_241 = tot_out_error
error_915 = error_911
error_915 = &NONLOCAL
result_247 = result_240
result_247 = &NULL
_248 = tot_out_error
error_919 = error_915
error_919 = &NONLOCAL
result_254 = result_247
result_254 = &NULL
_255 = tot_out_error
error_923 = error_919
error_923 = &NONLOCAL
result_261 = result_254
result_261 = &NULL
_262 = tot_out_error
error_927 = error_923
error_927 = &NONLOCAL
result_268 = result_261
result_268 = &NULL
_269 = tot_out_error
error_931 = error_927
error_931 = &NONLOCAL
result_275 = result_268
result_275 = &NULL
_276 = tot_out_error
error_529 = error_931
error_529 = &NONLOCAL
result_181 = result_1471
result_181 = result_275
result_181 = result_268
result_181 = result_30
result_181 = result_233
result_181 = result_240
result_181 = result_247
result_181 = result_254
result_181 = result_261
error_174 = error_529
error_174 = error_931
error_174 = error_927
error_174 = error_907
error_174 = error_903
error_174 = error_911
error_174 = error_915
error_174 = error_919
error_174 = error_923
result_175 = result_181
result_175 = &NONLOCAL
result_175 = _1451
result_175 = &NONLOCAL
result_175 = &NONLOCAL
result_175 = _94
learned = result_175
ESCAPED = result_175
numpats.187_878 = numpats
nloops_8 = nloops
nloops_8 = nloops_17
nloops_17 = nloops_8
nloops_17 = &NONLOCAL
ESCAPED = elapsed_15
_19 = NONLOCAL
ESCAPED = _19
error_442 = _371
error_442 = error_363
_443 = avg_out_error
sum_444 = sum_365
sum_444 = _443
numpats.187_1314 = numpats.187_3
numpats.187_1314 = numpats.187_878
worst_error = &NONLOCAL
ESCAPED = &NONLOCAL
_474 = numpats.187_1314
_475 = &NONLOCAL
_475 = _474
average_error = NONLOCAL
average_error = _475
ESCAPED = _475
result_1471 = &NULL
result_1471 = result_275
_1470 = tot_out_error
numpasses.188_11 = numpasses
_10 = numpasses.188_11
_10 = &NONLOCAL
numpasses = _10
ESCAPED = _10
error_72 = error_442
error_72 = error_300
error_72 = error_309
error_72 = error_318
error_72 = error_327
error_72 = error_336
error_72 = error_345
error_72 = error_354
error_72 = error_363
sum_270 = sum_444
sum_270 = sum_302
sum_270 = sum_311
sum_270 = sum_320
sum_270 = sum_329
sum_270 = sum_338
sum_270 = sum_347
sum_270 = sum_356
sum_270 = sum_365
worst_error = error_72
ESCAPED = error_72
_1490 = numpats.187_3
_284 = sum_270
_284 = _1490
average_error = _284
ESCAPED = _284
_1431 = _1391
_1451 = _1431
worst_error = error_291
ESCAPED = error_291
_75 = numpats.187_3
_1343 = sum_293
_1343 = _75
average_error = _1343
ESCAPED = _1343
_90 = _89
_94 = _90

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 1 5 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"nloops"[label="nloops = { 5 }"];
"StartStopwatch";
"elapsed_15";
"i_982"[label="i_982 = { 1 5 }"];
"abs_randwc";
"_43";
"value_44";
"_45"[label="_45 = { 5 }"];
"value_46"[label="value_46 = { 5 }"];
"_47"[label="_47 = { 5 }"];
"mid_wts";
"neurode_51"[label="neurode_51 = { 1 5 }"];
"i_941"[label="i_941 = { 1 5 }"];
"_52";
"value_53";
"_54"[label="_54 = { 5 }"];
"value_55"[label="value_55 = { 5 }"];
"_56"[label="_56 = { 5 }"];
"out_wts";
"neurode_60"[label="neurode_60 = { 1 5 }"];
"j_1023"[label="j_1023 = { 1 5 }"];
"i_38"[label="i_38 = { 1 5 }"];
"learned"[label="learned = { 1 }"];
"patt_235"[label="patt_235 = { 1 5 }"];
"worst_error"[label="worst_error = { 5 }"];
"j_1371"[label="j_1371 = { 1 5 }"];
"_105"[label="_105 = { 5 }"];
"i_107"[label="i_107 = { 1 5 }"];
"i_860"[label="i_860 = { 1 5 }"];
"sum_95"[label="sum_95 = { 5 }"];
"_91";
"_92";
"in_pats";
"_93";
"_98";
"exp";
"_99";
"_100"[label="_100 = { 5 }"];
"sum_101"[label="sum_101 = { 5 }"];
"mid_out";
"neurode_102"[label="neurode_102 = { 1 5 }"];
"neurode_901"[label="neurode_901 = { 1 5 }"];
"_674";
"_675";
"_676";
"sum_677"[label="sum_677 = { 5 }"];
"_681";
"_682";
"_683";
"sum_684";
"_688";
"_689";
"_690";
"sum_691";
"_695";
"_696";
"_697";
"sum_698";
"_702";
"_703";
"_704";
"sum_705";
"_709";
"_710";
"_711";
"sum_712";
"_716";
"_717";
"_718";
"sum_719";
"_723";
"_724";
"_725";
"sum_726";
"_84";
"_85";
"_86"[label="_86 = { 5 }"];
"sum_87"[label="sum_87 = { 5 }"];
"out_out";
"_564";
"out_pats";
"_565";
"_566";
"out_error";
"sum_568"[label="sum_568 = { 5 }"];
"sum_569"[label="sum_569 = { 5 }"];
"_570";
"tot_error_571"[label="tot_error_571 = { 5 }"];
"sum_572";
"_578";
"_579";
"_580";
"sum_582";
"sum_583";
"_584";
"tot_error_585";
"sum_586";
"_592";
"_593";
"_594";
"sum_596";
"sum_597";
"_598";
"tot_error_599";
"sum_600";
"_606";
"_607";
"_608";
"sum_610";
"sum_611";
"_612";
"tot_error_613";
"sum_614";
"_620";
"_621";
"_622";
"sum_624";
"sum_625";
"_626";
"tot_error_627";
"sum_628";
"_634";
"_635";
"_636";
"sum_638";
"sum_639";
"_640";
"tot_error_641";
"sum_642";
"_648";
"_649";
"_650";
"sum_652";
"sum_653";
"_654";
"tot_error_655";
"sum_656";
"_662";
"_663";
"_664";
"sum_666";
"sum_667";
"_668";
"tot_error_669";
"sum_670";
"_124"[label="_124 = { 5 }"];
"avg_out_error";
"tot_out_error";
"_820";
"_822";
"sum_823"[label="sum_823 = { 5 }"];
"_824";
"_826";
"sum_827";
"_828";
"_830";
"sum_831";
"_832";
"_834";
"sum_835";
"_836";
"_838";
"sum_839";
"_840";
"_842";
"sum_843";
"_844";
"_846";
"sum_847";
"_848";
"_850";
"sum_851";
"_852";
"_853"[label="_853 = { 5 }"];
"_854";
"_855";
"mid_error";
"_861";
"_863";
"sum_864"[label="sum_864 = { 5 }"];
"_865";
"_867";
"sum_868";
"_869";
"_871";
"sum_872";
"_873";
"_875";
"sum_876";
"_877";
"_879";
"sum_880";
"_881";
"_883";
"sum_884";
"_885";
"_887";
"sum_888";
"_889";
"_891";
"sum_892";
"_893";
"_894"[label="_894 = { 5 }"];
"_895";
"_896";
"_902";
"_904";
"sum_905"[label="sum_905 = { 5 }"];
"_906";
"_908";
"sum_909";
"_910";
"_912";
"sum_913";
"_914";
"_916";
"sum_917";
"_918";
"_920";
"sum_921";
"_922";
"_924";
"sum_925";
"_926";
"_928";
"sum_929";
"_930";
"_932";
"sum_933";
"_934";
"_935"[label="_935 = { 5 }"];
"_936";
"_937";
"_943";
"_945";
"sum_946"[label="sum_946 = { 5 }"];
"_947";
"_949";
"sum_950";
"_951";
"_953";
"sum_954";
"_955";
"_957";
"sum_958";
"_959";
"_961";
"sum_962";
"_963";
"_965";
"sum_966";
"_967";
"_969";
"sum_970";
"_971";
"_973";
"sum_974";
"_975";
"_976"[label="_976 = { 5 }"];
"_977";
"_978";
"_984";
"_986";
"sum_987"[label="sum_987 = { 5 }"];
"_988";
"_990";
"sum_991";
"_992";
"_994";
"sum_995";
"_996";
"_998";
"sum_999";
"_1000";
"_1002";
"sum_1003";
"_1004";
"_1006";
"sum_1007";
"_1008";
"_1010";
"sum_1011";
"_1012";
"_1014";
"sum_1015";
"_1016";
"_1017"[label="_1017 = { 5 }"];
"_1018";
"_1019";
"_1025";
"_1027";
"sum_1028"[label="sum_1028 = { 5 }"];
"_1029";
"_1031";
"sum_1032";
"_1033";
"_1035";
"sum_1036";
"_1037";
"_1039";
"sum_1040";
"_1041";
"_1043";
"sum_1044";
"_1045";
"_1047";
"sum_1048";
"_1049";
"_1051";
"sum_1052";
"_1053";
"_1055";
"sum_1056";
"_1057";
"_1058"[label="_1058 = { 5 }"];
"_1059";
"_1060";
"_1066";
"_1068";
"sum_1069"[label="sum_1069 = { 5 }"];
"_1070";
"_1072";
"sum_1073";
"_1074";
"_1076";
"sum_1077";
"_1078";
"_1080";
"sum_1081";
"_1082";
"_1084";
"sum_1085";
"_1086";
"_1088";
"sum_1089";
"_1090";
"_1092";
"sum_1093";
"_1094";
"_1096";
"sum_1097";
"_1098";
"_1099"[label="_1099 = { 5 }"];
"_1100";
"_1101";
"_1107";
"_1109";
"sum_1110"[label="sum_1110 = { 5 }"];
"_1111";
"_1113";
"sum_1114";
"_1115";
"_1117";
"sum_1118";
"_1119";
"_1121";
"sum_1122";
"_1123";
"_1125";
"sum_1126";
"_1127";
"_1129";
"sum_1130";
"_1131";
"_1133";
"sum_1134";
"_1135";
"_1137";
"sum_1138";
"_1139";
"_1140"[label="_1140 = { 5 }"];
"_1141";
"_1142";
"neurode_504"[label="neurode_504 = { 1 5 }"];
"_378";
"_379"[label="_379 = { 5 }"];
"delta_381";
"delta_384"[label="delta_384 = { 5 }"];
"delta_397";
"delta_413";
"delta_429";
"delta_445";
"delta_461";
"delta_477";
"delta_493";
"weight_818"[label="weight_818 = { 1 5 }"];
"_132";
"delta_133";
"_130"[label="_130 = { 5 }"];
"neurode_142"[label="neurode_142 = { 1 5 }"];
"_129";
"_2"[label="_2 = { 5 }"];
"numpats.187_3";
"numpats";
"_5"[label="_5 = { 1 5 }"];
"_290";
"error_291"[label="error_291 = { 5 }"];
"_292";
"sum_293"[label="sum_293 = { 5 }"];
"_299";
"error_300";
"_301";
"sum_302";
"_308";
"error_309";
"_310";
"sum_311";
"_317";
"error_318";
"_319";
"sum_320";
"_326";
"error_327";
"_328";
"sum_329";
"_335";
"error_336";
"_337";
"sum_338";
"_344";
"error_345";
"_346";
"sum_347";
"_353";
"error_354";
"_355";
"sum_356";
"_362";
"error_363";
"_364";
"sum_365";
"_371";
"error_907"[label="error_907 = { 1 5 }"];
"_104";
"_1391";
"_89";
"_1286";
"_1451";
"_94";
"result_30"[label="result_30 = { 1 }"];
"_20";
"error_903"[label="error_903 = { 5 }"];
"result_233"[label="result_233 = { 1 }"];
"_234";
"error_911"[label="error_911 = { 5 }"];
"result_240"[label="result_240 = { 1 }"];
"_241";
"error_915"[label="error_915 = { 5 }"];
"result_247"[label="result_247 = { 1 }"];
"_248";
"error_919"[label="error_919 = { 5 }"];
"result_254"[label="result_254 = { 1 }"];
"_255";
"error_923"[label="error_923 = { 5 }"];
"result_261"[label="result_261 = { 1 }"];
"_262";
"error_927"[label="error_927 = { 5 }"];
"result_268"[label="result_268 = { 1 }"];
"_269";
"error_931"[label="error_931 = { 5 }"];
"result_275"[label="result_275 = { 1 }"];
"_276";
"error_529"[label="error_529 = { 5 }"];
"result_181";
"result_1471"[label="result_1471 = { 1 }"];
"error_174";
"result_175"[label="result_175 = { 5 }"];
"numpats.187_878";
"nloops_8"[label="nloops_8 = { 5 }"];
"StopStopwatch";
"_19";
"error_442";
"_443";
"sum_444";
"numpats.187_1314";
"_474";
"_475"[label="_475 = { 5 }"];
"average_error";
"_1470";
"error_72";
"sum_270";
"_1490";
"_284";
"_1431";
"_75";
"_1343";
"_90";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*nloops";
"*StartStopwatch";
"*i_982";
"*i_50";
"*abs_randwc";
"*neurode_51";
"*neurode_983";
"*i_941";
"*i_59";
"*neurode_60";
"*neurode_942";
"*j_1023";
"*j_37";
"*i_38";
"*i_1024";
"*learned";
"*patt_235";
"*patt_32";
"*worst_error";
"*j_1371";
"*j_106";
"*i_107";
"*i_819";
"*i_860";
"*i_96";
"*exp";
"*neurode_102";
"*neurode_900";
"*neurode_901";
"*neurode_88";
"*neurode_504";
"*neurode_157";
"*weight_818";
"*weight_141";
"*neurode_142";
"*neurode_1147";
"*error_907";
"*_104";
"*_1391";
"*_89";
"*_1286";
"*_1451";
"*_94";
"*result_30";
"*_20";
"*error_903";
"*result_233";
"*_234";
"*error_911";
"*result_240";
"*_241";
"*error_915";
"*result_247";
"*_248";
"*error_919";
"*result_254";
"*_255";
"*error_923";
"*result_261";
"*_262";
"*error_927";
"*result_268";
"*_269";
"*error_931";
"*result_275";
"*_276";
"*error_529";
"*result_181";
"*result_1471";
"*error_174";
"*result_175";
"*nloops_8";
"*nloops_17";
"*StopStopwatch";
"*average_error";
"*_1470";
"*_1431";
"*_90";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"elapsed_15" -> "ESCAPED";
"_47" -> "ESCAPED";
"_56" -> "ESCAPED";
"_105" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"_98" -> "ESCAPED";
"sum_101" -> "ESCAPED";
"_84" -> "ESCAPED";
"sum_87" -> "ESCAPED";
"_566" -> "ESCAPED";
"_580" -> "ESCAPED";
"_594" -> "ESCAPED";
"_608" -> "ESCAPED";
"_622" -> "ESCAPED";
"_636" -> "ESCAPED";
"_650" -> "ESCAPED";
"_664" -> "ESCAPED";
"tot_error_669" -> "ESCAPED";
"_124" -> "ESCAPED";
"_855" -> "ESCAPED";
"_896" -> "ESCAPED";
"_937" -> "ESCAPED";
"_978" -> "ESCAPED";
"_1019" -> "ESCAPED";
"_1060" -> "ESCAPED";
"_1101" -> "ESCAPED";
"_1142" -> "ESCAPED";
"out_wts" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"out_wts" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"out_wts" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"out_wts" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"out_wts" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"out_wts" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"out_wts" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"out_wts" -> "ESCAPED";
"delta_384" -> "ESCAPED";
"mid_wts" -> "ESCAPED";
"_105" -> "ESCAPED";
"_2" -> "ESCAPED";
"_5" -> "ESCAPED";
"error_291" -> "ESCAPED";
"result_175" -> "ESCAPED";
"_19" -> "ESCAPED";
"_475" -> "ESCAPED";
"_5" -> "ESCAPED";
"error_72" -> "ESCAPED";
"_284" -> "ESCAPED";
"_1343" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"NONLOCAL" -> "elapsed_15";
"i_982" -> "i_982";
"i_982" -> "i_982";
"NONLOCAL" -> "_43";
"_43" -> "value_44";
"value_44" -> "_45";
"_45" -> "value_46";
"value_46" -> "_47";
"NONLOCAL" -> "mid_wts";
"_47" -> "mid_wts";
"mid_wts" -> "mid_wts";
"_105" -> "mid_wts";
"mid_wts" -> "mid_wts";
"mid_wts" -> "mid_wts";
"neurode_51" -> "neurode_51";
"neurode_51" -> "neurode_51";
"i_941" -> "i_941";
"i_941" -> "i_941";
"NONLOCAL" -> "_52";
"_52" -> "value_53";
"value_53" -> "_54";
"_54" -> "value_55";
"value_55" -> "_56";
"NONLOCAL" -> "out_wts";
"_56" -> "out_wts";
"out_wts" -> "out_wts";
"delta_384" -> "out_wts";
"out_wts" -> "out_wts";
"out_wts" -> "out_wts";
"delta_384" -> "out_wts";
"out_wts" -> "out_wts";
"out_wts" -> "out_wts";
"delta_384" -> "out_wts";
"out_wts" -> "out_wts";
"out_wts" -> "out_wts";
"delta_384" -> "out_wts";
"out_wts" -> "out_wts";
"out_wts" -> "out_wts";
"delta_384" -> "out_wts";
"out_wts" -> "out_wts";
"out_wts" -> "out_wts";
"delta_384" -> "out_wts";
"out_wts" -> "out_wts";
"out_wts" -> "out_wts";
"delta_384" -> "out_wts";
"out_wts" -> "out_wts";
"out_wts" -> "out_wts";
"delta_384" -> "out_wts";
"out_wts" -> "out_wts";
"out_wts" -> "out_wts";
"neurode_60" -> "neurode_60";
"neurode_60" -> "neurode_60";
"j_1023" -> "j_1023";
"j_1023" -> "j_1023";
"i_38" -> "i_38";
"i_38" -> "i_38";
"NONLOCAL" -> "learned";
"result_175" -> "learned";
"patt_235" -> "patt_235";
"patt_235" -> "patt_235";
"NONLOCAL" -> "worst_error";
"error_291" -> "worst_error";
"error_72" -> "worst_error";
"j_1371" -> "j_1371";
"j_1371" -> "j_1371";
"NONLOCAL" -> "_105";
"_105" -> "_105";
"_105" -> "_105";
"_105" -> "_105";
"delta_133" -> "_105";
"_105" -> "_105";
"_105" -> "_105";
"_105" -> "_105";
"_105" -> "_105";
"_105" -> "_105";
"i_107" -> "i_107";
"i_107" -> "i_107";
"i_860" -> "i_860";
"i_860" -> "i_860";
"sum_95" -> "sum_95";
"sum_95" -> "sum_95";
"_93" -> "sum_95";
"mid_wts" -> "_91";
"in_pats" -> "_92";
"NONLOCAL" -> "in_pats";
"_91" -> "_93";
"_92" -> "_93";
"sum_95" -> "_98";
"NONLOCAL" -> "_99";
"_99" -> "_100";
"_100" -> "sum_101";
"NONLOCAL" -> "mid_out";
"sum_101" -> "mid_out";
"neurode_102" -> "neurode_102";
"neurode_102" -> "neurode_102";
"neurode_901" -> "neurode_901";
"neurode_901" -> "neurode_901";
"out_wts" -> "_674";
"mid_out" -> "_675";
"_674" -> "_676";
"_675" -> "_676";
"_676" -> "sum_677";
"out_wts" -> "_681";
"mid_out" -> "_682";
"_681" -> "_683";
"_682" -> "_683";
"sum_677" -> "sum_684";
"_683" -> "sum_684";
"out_wts" -> "_688";
"mid_out" -> "_689";
"_688" -> "_690";
"_689" -> "_690";
"sum_684" -> "sum_691";
"_690" -> "sum_691";
"out_wts" -> "_695";
"mid_out" -> "_696";
"_695" -> "_697";
"_696" -> "_697";
"sum_691" -> "sum_698";
"_697" -> "sum_698";
"out_wts" -> "_702";
"mid_out" -> "_703";
"_702" -> "_704";
"_703" -> "_704";
"sum_698" -> "sum_705";
"_704" -> "sum_705";
"out_wts" -> "_709";
"mid_out" -> "_710";
"_709" -> "_711";
"_710" -> "_711";
"sum_705" -> "sum_712";
"_711" -> "sum_712";
"out_wts" -> "_716";
"mid_out" -> "_717";
"_716" -> "_718";
"_717" -> "_718";
"sum_712" -> "sum_719";
"_718" -> "sum_719";
"out_wts" -> "_723";
"mid_out" -> "_724";
"_723" -> "_725";
"_724" -> "_725";
"sum_719" -> "sum_726";
"_725" -> "sum_726";
"sum_726" -> "_84";
"NONLOCAL" -> "_85";
"_85" -> "_86";
"_86" -> "sum_87";
"NONLOCAL" -> "out_out";
"sum_87" -> "out_out";
"out_pats" -> "_564";
"NONLOCAL" -> "out_pats";
"out_out" -> "_565";
"_564" -> "_566";
"_565" -> "_566";
"NONLOCAL" -> "out_error";
"_566" -> "out_error";
"_580" -> "out_error";
"_594" -> "out_error";
"_608" -> "out_error";
"_622" -> "out_error";
"_636" -> "out_error";
"_650" -> "out_error";
"_664" -> "out_error";
"_566" -> "sum_568";
"_566" -> "sum_569";
"_566" -> "_570";
"_566" -> "tot_error_571";
"_570" -> "tot_error_571";
"sum_568" -> "sum_572";
"sum_569" -> "sum_572";
"out_pats" -> "_578";
"out_out" -> "_579";
"_578" -> "_580";
"_579" -> "_580";
"sum_572" -> "sum_582";
"_580" -> "sum_582";
"sum_572" -> "sum_583";
"_580" -> "sum_583";
"_580" -> "_584";
"tot_error_571" -> "tot_error_585";
"_580" -> "tot_error_585";
"_584" -> "tot_error_585";
"sum_582" -> "sum_586";
"sum_583" -> "sum_586";
"out_pats" -> "_592";
"out_out" -> "_593";
"_592" -> "_594";
"_593" -> "_594";
"sum_586" -> "sum_596";
"_594" -> "sum_596";
"sum_586" -> "sum_597";
"_594" -> "sum_597";
"_594" -> "_598";
"tot_error_585" -> "tot_error_599";
"_594" -> "tot_error_599";
"_598" -> "tot_error_599";
"sum_596" -> "sum_600";
"sum_597" -> "sum_600";
"out_pats" -> "_606";
"out_out" -> "_607";
"_606" -> "_608";
"_607" -> "_608";
"sum_600" -> "sum_610";
"_608" -> "sum_610";
"sum_600" -> "sum_611";
"_608" -> "sum_611";
"_608" -> "_612";
"tot_error_599" -> "tot_error_613";
"_608" -> "tot_error_613";
"_612" -> "tot_error_613";
"sum_610" -> "sum_614";
"sum_611" -> "sum_614";
"out_pats" -> "_620";
"out_out" -> "_621";
"_620" -> "_622";
"_621" -> "_622";
"sum_614" -> "sum_624";
"_622" -> "sum_624";
"sum_614" -> "sum_625";
"_622" -> "sum_625";
"_622" -> "_626";
"tot_error_613" -> "tot_error_627";
"_622" -> "tot_error_627";
"_626" -> "tot_error_627";
"sum_624" -> "sum_628";
"sum_625" -> "sum_628";
"out_pats" -> "_634";
"out_out" -> "_635";
"_634" -> "_636";
"_635" -> "_636";
"sum_628" -> "sum_638";
"_636" -> "sum_638";
"sum_628" -> "sum_639";
"_636" -> "sum_639";
"_636" -> "_640";
"tot_error_627" -> "tot_error_641";
"_636" -> "tot_error_641";
"_640" -> "tot_error_641";
"sum_638" -> "sum_642";
"sum_639" -> "sum_642";
"out_pats" -> "_648";
"out_out" -> "_649";
"_648" -> "_650";
"_649" -> "_650";
"sum_642" -> "sum_652";
"_650" -> "sum_652";
"sum_642" -> "sum_653";
"_650" -> "sum_653";
"_650" -> "_654";
"tot_error_641" -> "tot_error_655";
"_650" -> "tot_error_655";
"_654" -> "tot_error_655";
"sum_652" -> "sum_656";
"sum_653" -> "sum_656";
"out_pats" -> "_662";
"out_out" -> "_663";
"_662" -> "_664";
"_663" -> "_664";
"sum_656" -> "sum_666";
"_664" -> "sum_666";
"sum_656" -> "sum_667";
"_664" -> "sum_667";
"_664" -> "_668";
"tot_error_655" -> "tot_error_669";
"_664" -> "tot_error_669";
"_668" -> "tot_error_669";
"sum_666" -> "sum_670";
"sum_667" -> "sum_670";
"sum_670" -> "_124";
"NONLOCAL" -> "avg_out_error";
"_124" -> "avg_out_error";
"NONLOCAL" -> "tot_out_error";
"tot_error_669" -> "tot_out_error";
"out_wts" -> "_820";
"_566" -> "_822";
"_820" -> "_822";
"_822" -> "sum_823";
"out_wts" -> "_824";
"_580" -> "_826";
"_824" -> "_826";
"sum_823" -> "sum_827";
"_826" -> "sum_827";
"out_wts" -> "_828";
"_594" -> "_830";
"_828" -> "_830";
"sum_827" -> "sum_831";
"_830" -> "sum_831";
"out_wts" -> "_832";
"_608" -> "_834";
"_832" -> "_834";
"sum_831" -> "sum_835";
"_834" -> "sum_835";
"out_wts" -> "_836";
"_622" -> "_838";
"_836" -> "_838";
"sum_835" -> "sum_839";
"_838" -> "sum_839";
"out_wts" -> "_840";
"_636" -> "_842";
"_840" -> "_842";
"sum_839" -> "sum_843";
"_842" -> "sum_843";
"out_wts" -> "_844";
"_650" -> "_846";
"_844" -> "_846";
"sum_843" -> "sum_847";
"_846" -> "sum_847";
"out_wts" -> "_848";
"_664" -> "_850";
"_848" -> "_850";
"sum_847" -> "sum_851";
"_850" -> "sum_851";
"mid_out" -> "_852";
"_852" -> "_853";
"_852" -> "_854";
"_853" -> "_854";
"sum_851" -> "_855";
"_854" -> "_855";
"NONLOCAL" -> "mid_error";
"_855" -> "mid_error";
"_896" -> "mid_error";
"_937" -> "mid_error";
"_978" -> "mid_error";
"_1019" -> "mid_error";
"_1060" -> "mid_error";
"_1101" -> "mid_error";
"_1142" -> "mid_error";
"out_wts" -> "_861";
"_566" -> "_863";
"_861" -> "_863";
"_863" -> "sum_864";
"out_wts" -> "_865";
"_580" -> "_867";
"_865" -> "_867";
"sum_864" -> "sum_868";
"_867" -> "sum_868";
"out_wts" -> "_869";
"_594" -> "_871";
"_869" -> "_871";
"sum_868" -> "sum_872";
"_871" -> "sum_872";
"out_wts" -> "_873";
"_608" -> "_875";
"_873" -> "_875";
"sum_872" -> "sum_876";
"_875" -> "sum_876";
"out_wts" -> "_877";
"_622" -> "_879";
"_877" -> "_879";
"sum_876" -> "sum_880";
"_879" -> "sum_880";
"out_wts" -> "_881";
"_636" -> "_883";
"_881" -> "_883";
"sum_880" -> "sum_884";
"_883" -> "sum_884";
"out_wts" -> "_885";
"_650" -> "_887";
"_885" -> "_887";
"sum_884" -> "sum_888";
"_887" -> "sum_888";
"out_wts" -> "_889";
"_664" -> "_891";
"_889" -> "_891";
"sum_888" -> "sum_892";
"_891" -> "sum_892";
"mid_out" -> "_893";
"_893" -> "_894";
"_893" -> "_895";
"_894" -> "_895";
"sum_892" -> "_896";
"_895" -> "_896";
"out_wts" -> "_902";
"_566" -> "_904";
"_902" -> "_904";
"_904" -> "sum_905";
"out_wts" -> "_906";
"_580" -> "_908";
"_906" -> "_908";
"sum_905" -> "sum_909";
"_908" -> "sum_909";
"out_wts" -> "_910";
"_594" -> "_912";
"_910" -> "_912";
"sum_909" -> "sum_913";
"_912" -> "sum_913";
"out_wts" -> "_914";
"_608" -> "_916";
"_914" -> "_916";
"sum_913" -> "sum_917";
"_916" -> "sum_917";
"out_wts" -> "_918";
"_622" -> "_920";
"_918" -> "_920";
"sum_917" -> "sum_921";
"_920" -> "sum_921";
"out_wts" -> "_922";
"_636" -> "_924";
"_922" -> "_924";
"sum_921" -> "sum_925";
"_924" -> "sum_925";
"out_wts" -> "_926";
"_650" -> "_928";
"_926" -> "_928";
"sum_925" -> "sum_929";
"_928" -> "sum_929";
"out_wts" -> "_930";
"_664" -> "_932";
"_930" -> "_932";
"sum_929" -> "sum_933";
"_932" -> "sum_933";
"mid_out" -> "_934";
"_934" -> "_935";
"_934" -> "_936";
"_935" -> "_936";
"sum_933" -> "_937";
"_936" -> "_937";
"out_wts" -> "_943";
"_566" -> "_945";
"_943" -> "_945";
"_945" -> "sum_946";
"out_wts" -> "_947";
"_580" -> "_949";
"_947" -> "_949";
"sum_946" -> "sum_950";
"_949" -> "sum_950";
"out_wts" -> "_951";
"_594" -> "_953";
"_951" -> "_953";
"sum_950" -> "sum_954";
"_953" -> "sum_954";
"out_wts" -> "_955";
"_608" -> "_957";
"_955" -> "_957";
"sum_954" -> "sum_958";
"_957" -> "sum_958";
"out_wts" -> "_959";
"_622" -> "_961";
"_959" -> "_961";
"sum_958" -> "sum_962";
"_961" -> "sum_962";
"out_wts" -> "_963";
"_636" -> "_965";
"_963" -> "_965";
"sum_962" -> "sum_966";
"_965" -> "sum_966";
"out_wts" -> "_967";
"_650" -> "_969";
"_967" -> "_969";
"sum_966" -> "sum_970";
"_969" -> "sum_970";
"out_wts" -> "_971";
"_664" -> "_973";
"_971" -> "_973";
"sum_970" -> "sum_974";
"_973" -> "sum_974";
"mid_out" -> "_975";
"_975" -> "_976";
"_975" -> "_977";
"_976" -> "_977";
"sum_974" -> "_978";
"_977" -> "_978";
"out_wts" -> "_984";
"_566" -> "_986";
"_984" -> "_986";
"_986" -> "sum_987";
"out_wts" -> "_988";
"_580" -> "_990";
"_988" -> "_990";
"sum_987" -> "sum_991";
"_990" -> "sum_991";
"out_wts" -> "_992";
"_594" -> "_994";
"_992" -> "_994";
"sum_991" -> "sum_995";
"_994" -> "sum_995";
"out_wts" -> "_996";
"_608" -> "_998";
"_996" -> "_998";
"sum_995" -> "sum_999";
"_998" -> "sum_999";
"out_wts" -> "_1000";
"_622" -> "_1002";
"_1000" -> "_1002";
"sum_999" -> "sum_1003";
"_1002" -> "sum_1003";
"out_wts" -> "_1004";
"_636" -> "_1006";
"_1004" -> "_1006";
"sum_1003" -> "sum_1007";
"_1006" -> "sum_1007";
"out_wts" -> "_1008";
"_650" -> "_1010";
"_1008" -> "_1010";
"sum_1007" -> "sum_1011";
"_1010" -> "sum_1011";
"out_wts" -> "_1012";
"_664" -> "_1014";
"_1012" -> "_1014";
"sum_1011" -> "sum_1015";
"_1014" -> "sum_1015";
"mid_out" -> "_1016";
"_1016" -> "_1017";
"_1016" -> "_1018";
"_1017" -> "_1018";
"sum_1015" -> "_1019";
"_1018" -> "_1019";
"out_wts" -> "_1025";
"_566" -> "_1027";
"_1025" -> "_1027";
"_1027" -> "sum_1028";
"out_wts" -> "_1029";
"_580" -> "_1031";
"_1029" -> "_1031";
"sum_1028" -> "sum_1032";
"_1031" -> "sum_1032";
"out_wts" -> "_1033";
"_594" -> "_1035";
"_1033" -> "_1035";
"sum_1032" -> "sum_1036";
"_1035" -> "sum_1036";
"out_wts" -> "_1037";
"_608" -> "_1039";
"_1037" -> "_1039";
"sum_1036" -> "sum_1040";
"_1039" -> "sum_1040";
"out_wts" -> "_1041";
"_622" -> "_1043";
"_1041" -> "_1043";
"sum_1040" -> "sum_1044";
"_1043" -> "sum_1044";
"out_wts" -> "_1045";
"_636" -> "_1047";
"_1045" -> "_1047";
"sum_1044" -> "sum_1048";
"_1047" -> "sum_1048";
"out_wts" -> "_1049";
"_650" -> "_1051";
"_1049" -> "_1051";
"sum_1048" -> "sum_1052";
"_1051" -> "sum_1052";
"out_wts" -> "_1053";
"_664" -> "_1055";
"_1053" -> "_1055";
"sum_1052" -> "sum_1056";
"_1055" -> "sum_1056";
"mid_out" -> "_1057";
"_1057" -> "_1058";
"_1057" -> "_1059";
"_1058" -> "_1059";
"sum_1056" -> "_1060";
"_1059" -> "_1060";
"out_wts" -> "_1066";
"_566" -> "_1068";
"_1066" -> "_1068";
"_1068" -> "sum_1069";
"out_wts" -> "_1070";
"_580" -> "_1072";
"_1070" -> "_1072";
"sum_1069" -> "sum_1073";
"_1072" -> "sum_1073";
"out_wts" -> "_1074";
"_594" -> "_1076";
"_1074" -> "_1076";
"sum_1073" -> "sum_1077";
"_1076" -> "sum_1077";
"out_wts" -> "_1078";
"_608" -> "_1080";
"_1078" -> "_1080";
"sum_1077" -> "sum_1081";
"_1080" -> "sum_1081";
"out_wts" -> "_1082";
"_622" -> "_1084";
"_1082" -> "_1084";
"sum_1081" -> "sum_1085";
"_1084" -> "sum_1085";
"out_wts" -> "_1086";
"_636" -> "_1088";
"_1086" -> "_1088";
"sum_1085" -> "sum_1089";
"_1088" -> "sum_1089";
"out_wts" -> "_1090";
"_650" -> "_1092";
"_1090" -> "_1092";
"sum_1089" -> "sum_1093";
"_1092" -> "sum_1093";
"out_wts" -> "_1094";
"_664" -> "_1096";
"_1094" -> "_1096";
"sum_1093" -> "sum_1097";
"_1096" -> "sum_1097";
"mid_out" -> "_1098";
"_1098" -> "_1099";
"_1098" -> "_1100";
"_1099" -> "_1100";
"sum_1097" -> "_1101";
"_1100" -> "_1101";
"out_wts" -> "_1107";
"_566" -> "_1109";
"_1107" -> "_1109";
"_1109" -> "sum_1110";
"out_wts" -> "_1111";
"_580" -> "_1113";
"_1111" -> "_1113";
"sum_1110" -> "sum_1114";
"_1113" -> "sum_1114";
"out_wts" -> "_1115";
"_594" -> "_1117";
"_1115" -> "_1117";
"sum_1114" -> "sum_1118";
"_1117" -> "sum_1118";
"out_wts" -> "_1119";
"_608" -> "_1121";
"_1119" -> "_1121";
"sum_1118" -> "sum_1122";
"_1121" -> "sum_1122";
"out_wts" -> "_1123";
"_622" -> "_1125";
"_1123" -> "_1125";
"sum_1122" -> "sum_1126";
"_1125" -> "sum_1126";
"out_wts" -> "_1127";
"_636" -> "_1129";
"_1127" -> "_1129";
"sum_1126" -> "sum_1130";
"_1129" -> "sum_1130";
"out_wts" -> "_1131";
"_650" -> "_1133";
"_1131" -> "_1133";
"sum_1130" -> "sum_1134";
"_1133" -> "sum_1134";
"out_wts" -> "_1135";
"_664" -> "_1137";
"_1135" -> "_1137";
"sum_1134" -> "sum_1138";
"_1137" -> "sum_1138";
"mid_out" -> "_1139";
"_1139" -> "_1140";
"_1139" -> "_1141";
"_1140" -> "_1141";
"sum_1138" -> "_1142";
"_1141" -> "_1142";
"neurode_504" -> "neurode_504";
"neurode_504" -> "neurode_504";
"out_error" -> "_378";
"_378" -> "_379";
"_852" -> "delta_381";
"_379" -> "delta_381";
"NONLOCAL" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_381" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_397" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_413" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_429" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_445" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_461" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_477" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_493" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"delta_384" -> "delta_384";
"_893" -> "delta_397";
"_379" -> "delta_397";
"_934" -> "delta_413";
"_379" -> "delta_413";
"_975" -> "delta_429";
"_379" -> "delta_429";
"_1016" -> "delta_445";
"_379" -> "delta_445";
"_1057" -> "delta_461";
"_379" -> "delta_461";
"_1098" -> "delta_477";
"_379" -> "delta_477";
"_1139" -> "delta_493";
"_379" -> "delta_493";
"weight_818" -> "weight_818";
"weight_818" -> "weight_818";
"in_pats" -> "_132";
"_132" -> "delta_133";
"_130" -> "delta_133";
"_129" -> "_130";
"neurode_142" -> "neurode_142";
"neurode_142" -> "neurode_142";
"mid_error" -> "_129";
"NONLOCAL" -> "_2";
"_2" -> "_2";
"_2" -> "_2";
"_2" -> "_2";
"numpats" -> "numpats.187_3";
"NONLOCAL" -> "numpats";
"NONLOCAL" -> "_5";
"_5" -> "_5";
"_5" -> "_5";
"_5" -> "_5";
"_5" -> "_5";
"_5" -> "_5";
"tot_out_error" -> "_290";
"_290" -> "error_291";
"avg_out_error" -> "_292";
"_292" -> "sum_293";
"tot_out_error" -> "_299";
"error_291" -> "error_300";
"_299" -> "error_300";
"avg_out_error" -> "_301";
"sum_293" -> "sum_302";
"_301" -> "sum_302";
"tot_out_error" -> "_308";
"error_300" -> "error_309";
"_308" -> "error_309";
"avg_out_error" -> "_310";
"sum_302" -> "sum_311";
"_310" -> "sum_311";
"tot_out_error" -> "_317";
"error_309" -> "error_318";
"_317" -> "error_318";
"avg_out_error" -> "_319";
"sum_311" -> "sum_320";
"_319" -> "sum_320";
"tot_out_error" -> "_326";
"error_318" -> "error_327";
"_326" -> "error_327";
"avg_out_error" -> "_328";
"sum_320" -> "sum_329";
"_328" -> "sum_329";
"tot_out_error" -> "_335";
"error_327" -> "error_336";
"_335" -> "error_336";
"avg_out_error" -> "_337";
"sum_329" -> "sum_338";
"_337" -> "sum_338";
"tot_out_error" -> "_344";
"error_336" -> "error_345";
"_344" -> "error_345";
"avg_out_error" -> "_346";
"sum_338" -> "sum_347";
"_346" -> "sum_347";
"tot_out_error" -> "_353";
"error_345" -> "error_354";
"_353" -> "error_354";
"avg_out_error" -> "_355";
"sum_347" -> "sum_356";
"_355" -> "sum_356";
"tot_out_error" -> "_362";
"error_354" -> "error_363";
"_362" -> "error_363";
"avg_out_error" -> "_364";
"sum_356" -> "sum_365";
"_364" -> "sum_365";
"tot_out_error" -> "_371";
"_1391" -> "_104";
"_89" -> "_104";
"_1451" -> "_1286";
"_94" -> "_1286";
"_1431" -> "_1451";
"_90" -> "_94";
"_1286" -> "result_30";
"tot_out_error" -> "_20";
"error_907" -> "error_903";
"result_30" -> "result_233";
"tot_out_error" -> "_234";
"error_903" -> "error_911";
"result_233" -> "result_240";
"tot_out_error" -> "_241";
"error_911" -> "error_915";
"result_240" -> "result_247";
"tot_out_error" -> "_248";
"error_915" -> "error_919";
"result_247" -> "result_254";
"tot_out_error" -> "_255";
"error_919" -> "error_923";
"result_254" -> "result_261";
"tot_out_error" -> "_262";
"error_923" -> "error_927";
"result_261" -> "result_268";
"tot_out_error" -> "_269";
"error_927" -> "error_931";
"result_268" -> "result_275";
"tot_out_error" -> "_276";
"error_931" -> "error_529";
"result_30" -> "result_181";
"result_233" -> "result_181";
"result_240" -> "result_181";
"result_247" -> "result_181";
"result_254" -> "result_181";
"result_261" -> "result_181";
"result_268" -> "result_181";
"result_275" -> "result_181";
"result_1471" -> "result_181";
"result_275" -> "result_1471";
"error_907" -> "error_174";
"error_903" -> "error_174";
"error_911" -> "error_174";
"error_915" -> "error_174";
"error_919" -> "error_174";
"error_923" -> "error_174";
"error_927" -> "error_174";
"error_931" -> "error_174";
"error_529" -> "error_174";
"_1451" -> "result_175";
"_94" -> "result_175";
"result_181" -> "result_175";
"numpats" -> "numpats.187_878";
"nloops" -> "nloops_8";
"nloops_8" -> "nloops_8";
"nloops_8" -> "nloops_8";
"NONLOCAL" -> "_19";
"error_363" -> "error_442";
"_371" -> "error_442";
"avg_out_error" -> "_443";
"sum_365" -> "sum_444";
"_443" -> "sum_444";
"numpats.187_3" -> "numpats.187_1314";
"numpats.187_878" -> "numpats.187_1314";
"numpats.187_1314" -> "_474";
"_474" -> "_475";
"NONLOCAL" -> "average_error";
"_475" -> "average_error";
"_284" -> "average_error";
"_1343" -> "average_error";
"tot_out_error" -> "_1470";
"error_300" -> "error_72";
"error_309" -> "error_72";
"error_318" -> "error_72";
"error_327" -> "error_72";
"error_336" -> "error_72";
"error_345" -> "error_72";
"error_354" -> "error_72";
"error_363" -> "error_72";
"error_442" -> "error_72";
"sum_302" -> "sum_270";
"sum_311" -> "sum_270";
"sum_320" -> "sum_270";
"sum_329" -> "sum_270";
"sum_338" -> "sum_270";
"sum_347" -> "sum_270";
"sum_356" -> "sum_270";
"sum_365" -> "sum_270";
"sum_444" -> "sum_270";
"numpats.187_3" -> "_1490";
"sum_270" -> "_284";
"_1490" -> "_284";
"_1391" -> "_1431";
"numpats.187_3" -> "_75";
"sum_293" -> "_1343";
"_75" -> "_1343";
"_89" -> "_90";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"nloops";
"StartStopwatch";
"elapsed_15";
"i_982";
"abs_randwc";
"learned";
"exp";
"_104";
"_1391";
"_89";
"_1286";
"_1451";
"_94";
"result_30";
"StopStopwatch";
"_1431";
"_90";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"elapsed_15" -> "ESCAPED";
"elapsed_15" -> "learned";
"i_982" -> "ESCAPED";
"i_982" -> "learned";
"learned" -> "ESCAPED";
"result_30" -> "i_982";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = elapsed_15\l"];
"STOREDANYTHING";
"INTEGER";
"nloops";
"StartStopwatch";
"elapsed_15";
"i_982";
"abs_randwc";
"learned";
"exp";
"_104";
"_1391";
"_89";
"_1286";
"_1451";
"_94";
"result_30";
"StopStopwatch";
"_1431";
"_90";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"elapsed_15" -> "ESCAPED";
"elapsed_15" -> "learned";
"i_982" -> "ESCAPED";
"i_982" -> "learned";
"learned" -> "ESCAPED";
"result_30" -> "i_982";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as elapsed_15
STOREDANYTHING = { }
INTEGER = { ANYTHING }
nloops = { NONLOCAL }
StartStopwatch = { }
elapsed_15 = { ESCAPED NONLOCAL }
i_982 = { NULL NONLOCAL }
i_50 = { NULL NONLOCAL } same as i_982
abs_randwc = { }
_43 = { ESCAPED NONLOCAL } same as elapsed_15
value_44 = { ESCAPED NONLOCAL } same as elapsed_15
_45 = { ESCAPED NONLOCAL } same as elapsed_15
value_46 = { ESCAPED NONLOCAL } same as elapsed_15
_47 = { ESCAPED NONLOCAL } same as elapsed_15
mid_wts = { ESCAPED NONLOCAL } same as elapsed_15
neurode_51 = { NULL NONLOCAL } same as i_982
neurode_983 = { NULL NONLOCAL } same as i_982
i_941 = { NULL NONLOCAL } same as i_982
i_59 = { NULL NONLOCAL } same as i_982
_52 = { ESCAPED NONLOCAL } same as elapsed_15
value_53 = { ESCAPED NONLOCAL } same as elapsed_15
_54 = { ESCAPED NONLOCAL } same as elapsed_15
value_55 = { ESCAPED NONLOCAL } same as elapsed_15
_56 = { ESCAPED NONLOCAL } same as elapsed_15
out_wts = { ESCAPED NONLOCAL } same as elapsed_15
neurode_60 = { NULL NONLOCAL } same as i_982
neurode_942 = { NULL NONLOCAL } same as i_982
j_1023 = { NULL NONLOCAL } same as i_982
j_37 = { NULL NONLOCAL } same as i_982
mid_wt_change = { ESCAPED NONLOCAL } same as elapsed_15
mid_wt_cum_change = { ESCAPED NONLOCAL } same as elapsed_15
i_38 = { NULL NONLOCAL } same as i_982
i_1024 = { NULL NONLOCAL } same as i_982
out_wt_change = { ESCAPED NONLOCAL } same as elapsed_15
out_wt_cum_change = { ESCAPED NONLOCAL } same as elapsed_15
iteration_count = { ESCAPED NONLOCAL } same as elapsed_15
learned = { NULL ESCAPED NONLOCAL }
numpasses = { NULL ESCAPED NONLOCAL } same as learned
patt_235 = { NULL NONLOCAL } same as i_982
patt_32 = { NULL NONLOCAL } same as i_982
worst_error = { ESCAPED NONLOCAL } same as elapsed_15
j_1371 = { NULL NONLOCAL } same as i_982
j_106 = { NULL NONLOCAL } same as i_982
_105 = { ESCAPED NONLOCAL } same as elapsed_15
i_107 = { NULL NONLOCAL } same as i_982
i_819 = { NULL NONLOCAL } same as i_982
_1148 = { ESCAPED NONLOCAL } same as elapsed_15
_1151 = { ESCAPED NONLOCAL } same as elapsed_15
_1154 = { ESCAPED NONLOCAL } same as elapsed_15
_1157 = { ESCAPED NONLOCAL } same as elapsed_15
_1160 = { ESCAPED NONLOCAL } same as elapsed_15
_1163 = { ESCAPED NONLOCAL } same as elapsed_15
_1166 = { ESCAPED NONLOCAL } same as elapsed_15
_1169 = { ESCAPED NONLOCAL } same as elapsed_15
_1176 = { ESCAPED NONLOCAL } same as elapsed_15
_1179 = { ESCAPED NONLOCAL } same as elapsed_15
_1182 = { ESCAPED NONLOCAL } same as elapsed_15
_1185 = { ESCAPED NONLOCAL } same as elapsed_15
_1188 = { ESCAPED NONLOCAL } same as elapsed_15
_1191 = { ESCAPED NONLOCAL } same as elapsed_15
_1194 = { ESCAPED NONLOCAL } same as elapsed_15
_1197 = { ESCAPED NONLOCAL } same as elapsed_15
_1204 = { ESCAPED NONLOCAL } same as elapsed_15
_1207 = { ESCAPED NONLOCAL } same as elapsed_15
_1210 = { ESCAPED NONLOCAL } same as elapsed_15
_1213 = { ESCAPED NONLOCAL } same as elapsed_15
_1216 = { ESCAPED NONLOCAL } same as elapsed_15
_1219 = { ESCAPED NONLOCAL } same as elapsed_15
_1222 = { ESCAPED NONLOCAL } same as elapsed_15
_1225 = { ESCAPED NONLOCAL } same as elapsed_15
_1232 = { ESCAPED NONLOCAL } same as elapsed_15
_1235 = { ESCAPED NONLOCAL } same as elapsed_15
_1238 = { ESCAPED NONLOCAL } same as elapsed_15
_1241 = { ESCAPED NONLOCAL } same as elapsed_15
_1244 = { ESCAPED NONLOCAL } same as elapsed_15
_1247 = { ESCAPED NONLOCAL } same as elapsed_15
_1250 = { ESCAPED NONLOCAL } same as elapsed_15
_1253 = { ESCAPED NONLOCAL } same as elapsed_15
_1260 = { ESCAPED NONLOCAL } same as elapsed_15
_1263 = { ESCAPED NONLOCAL } same as elapsed_15
_1266 = { ESCAPED NONLOCAL } same as elapsed_15
_1269 = { ESCAPED NONLOCAL } same as elapsed_15
_1272 = { ESCAPED NONLOCAL } same as elapsed_15
_1275 = { ESCAPED NONLOCAL } same as elapsed_15
_1278 = { ESCAPED NONLOCAL } same as elapsed_15
_1281 = { ESCAPED NONLOCAL } same as elapsed_15
_1288 = { ESCAPED NONLOCAL } same as elapsed_15
_1291 = { ESCAPED NONLOCAL } same as elapsed_15
_1294 = { ESCAPED NONLOCAL } same as elapsed_15
_1297 = { ESCAPED NONLOCAL } same as elapsed_15
_1300 = { ESCAPED NONLOCAL } same as elapsed_15
_1303 = { ESCAPED NONLOCAL } same as elapsed_15
_1306 = { ESCAPED NONLOCAL } same as elapsed_15
_1309 = { ESCAPED NONLOCAL } same as elapsed_15
_1316 = { ESCAPED NONLOCAL } same as elapsed_15
_1319 = { ESCAPED NONLOCAL } same as elapsed_15
_1322 = { ESCAPED NONLOCAL } same as elapsed_15
_1325 = { ESCAPED NONLOCAL } same as elapsed_15
_1328 = { ESCAPED NONLOCAL } same as elapsed_15
_1331 = { ESCAPED NONLOCAL } same as elapsed_15
_1334 = { ESCAPED NONLOCAL } same as elapsed_15
_1337 = { ESCAPED NONLOCAL } same as elapsed_15
_1344 = { ESCAPED NONLOCAL } same as elapsed_15
_1347 = { ESCAPED NONLOCAL } same as elapsed_15
_1350 = { ESCAPED NONLOCAL } same as elapsed_15
_1353 = { ESCAPED NONLOCAL } same as elapsed_15
_1356 = { ESCAPED NONLOCAL } same as elapsed_15
_1359 = { ESCAPED NONLOCAL } same as elapsed_15
_1362 = { ESCAPED NONLOCAL } same as elapsed_15
_1365 = { ESCAPED NONLOCAL } same as elapsed_15
i_860 = { NULL NONLOCAL } same as i_982
i_96 = { NULL NONLOCAL } same as i_982
sum_859 = { ESCAPED NONLOCAL } same as elapsed_15
sum_95 = { ESCAPED NONLOCAL } same as elapsed_15
_91 = { ESCAPED NONLOCAL } same as elapsed_15
_92 = { ESCAPED NONLOCAL } same as elapsed_15
in_pats = { ESCAPED NONLOCAL } same as elapsed_15
_93 = { ESCAPED NONLOCAL } same as elapsed_15
_98 = { ESCAPED NONLOCAL } same as elapsed_15
exp = { }
_99 = { ESCAPED NONLOCAL } same as elapsed_15
_100 = { ESCAPED NONLOCAL } same as elapsed_15
sum_101 = { ESCAPED NONLOCAL } same as elapsed_15
mid_out = { ESCAPED NONLOCAL } same as elapsed_15
neurode_102 = { NULL NONLOCAL } same as i_982
neurode_900 = { NULL NONLOCAL } same as i_982
neurode_901 = { NULL NONLOCAL } same as i_982
neurode_88 = { NULL NONLOCAL } same as i_982
_674 = { ESCAPED NONLOCAL } same as elapsed_15
_675 = { ESCAPED NONLOCAL } same as elapsed_15
_676 = { ESCAPED NONLOCAL } same as elapsed_15
sum_677 = { ESCAPED NONLOCAL } same as elapsed_15
_681 = { ESCAPED NONLOCAL } same as elapsed_15
_682 = { ESCAPED NONLOCAL } same as elapsed_15
_683 = { ESCAPED NONLOCAL } same as elapsed_15
sum_684 = { ESCAPED NONLOCAL } same as elapsed_15
_688 = { ESCAPED NONLOCAL } same as elapsed_15
_689 = { ESCAPED NONLOCAL } same as elapsed_15
_690 = { ESCAPED NONLOCAL } same as elapsed_15
sum_691 = { ESCAPED NONLOCAL } same as elapsed_15
_695 = { ESCAPED NONLOCAL } same as elapsed_15
_696 = { ESCAPED NONLOCAL } same as elapsed_15
_697 = { ESCAPED NONLOCAL } same as elapsed_15
sum_698 = { ESCAPED NONLOCAL } same as elapsed_15
_702 = { ESCAPED NONLOCAL } same as elapsed_15
_703 = { ESCAPED NONLOCAL } same as elapsed_15
_704 = { ESCAPED NONLOCAL } same as elapsed_15
sum_705 = { ESCAPED NONLOCAL } same as elapsed_15
_709 = { ESCAPED NONLOCAL } same as elapsed_15
_710 = { ESCAPED NONLOCAL } same as elapsed_15
_711 = { ESCAPED NONLOCAL } same as elapsed_15
sum_712 = { ESCAPED NONLOCAL } same as elapsed_15
_716 = { ESCAPED NONLOCAL } same as elapsed_15
_717 = { ESCAPED NONLOCAL } same as elapsed_15
_718 = { ESCAPED NONLOCAL } same as elapsed_15
sum_719 = { ESCAPED NONLOCAL } same as elapsed_15
_723 = { ESCAPED NONLOCAL } same as elapsed_15
_724 = { ESCAPED NONLOCAL } same as elapsed_15
_725 = { ESCAPED NONLOCAL } same as elapsed_15
sum_726 = { ESCAPED NONLOCAL } same as elapsed_15
_84 = { ESCAPED NONLOCAL } same as elapsed_15
_85 = { ESCAPED NONLOCAL } same as elapsed_15
_86 = { ESCAPED NONLOCAL } same as elapsed_15
sum_87 = { ESCAPED NONLOCAL } same as elapsed_15
out_out = { ESCAPED NONLOCAL } same as elapsed_15
_564 = { ESCAPED NONLOCAL } same as elapsed_15
out_pats = { ESCAPED NONLOCAL } same as elapsed_15
_565 = { ESCAPED NONLOCAL } same as elapsed_15
_566 = { ESCAPED NONLOCAL } same as elapsed_15
out_error = { ESCAPED NONLOCAL } same as elapsed_15
sum_568 = { ESCAPED NONLOCAL } same as elapsed_15
sum_569 = { ESCAPED NONLOCAL } same as elapsed_15
_570 = { ESCAPED NONLOCAL } same as elapsed_15
tot_error_571 = { ESCAPED NONLOCAL } same as elapsed_15
sum_572 = { ESCAPED NONLOCAL } same as elapsed_15
_578 = { ESCAPED NONLOCAL } same as elapsed_15
_579 = { ESCAPED NONLOCAL } same as elapsed_15
_580 = { ESCAPED NONLOCAL } same as elapsed_15
sum_582 = { ESCAPED NONLOCAL } same as elapsed_15
sum_583 = { ESCAPED NONLOCAL } same as elapsed_15
_584 = { ESCAPED NONLOCAL } same as elapsed_15
tot_error_585 = { ESCAPED NONLOCAL } same as elapsed_15
sum_586 = { ESCAPED NONLOCAL } same as elapsed_15
_592 = { ESCAPED NONLOCAL } same as elapsed_15
_593 = { ESCAPED NONLOCAL } same as elapsed_15
_594 = { ESCAPED NONLOCAL } same as elapsed_15
sum_596 = { ESCAPED NONLOCAL } same as elapsed_15
sum_597 = { ESCAPED NONLOCAL } same as elapsed_15
_598 = { ESCAPED NONLOCAL } same as elapsed_15
tot_error_599 = { ESCAPED NONLOCAL } same as elapsed_15
sum_600 = { ESCAPED NONLOCAL } same as elapsed_15
_606 = { ESCAPED NONLOCAL } same as elapsed_15
_607 = { ESCAPED NONLOCAL } same as elapsed_15
_608 = { ESCAPED NONLOCAL } same as elapsed_15
sum_610 = { ESCAPED NONLOCAL } same as elapsed_15
sum_611 = { ESCAPED NONLOCAL } same as elapsed_15
_612 = { ESCAPED NONLOCAL } same as elapsed_15
tot_error_613 = { ESCAPED NONLOCAL } same as elapsed_15
sum_614 = { ESCAPED NONLOCAL } same as elapsed_15
_620 = { ESCAPED NONLOCAL } same as elapsed_15
_621 = { ESCAPED NONLOCAL } same as elapsed_15
_622 = { ESCAPED NONLOCAL } same as elapsed_15
sum_624 = { ESCAPED NONLOCAL } same as elapsed_15
sum_625 = { ESCAPED NONLOCAL } same as elapsed_15
_626 = { ESCAPED NONLOCAL } same as elapsed_15
tot_error_627 = { ESCAPED NONLOCAL } same as elapsed_15
sum_628 = { ESCAPED NONLOCAL } same as elapsed_15
_634 = { ESCAPED NONLOCAL } same as elapsed_15
_635 = { ESCAPED NONLOCAL } same as elapsed_15
_636 = { ESCAPED NONLOCAL } same as elapsed_15
sum_638 = { ESCAPED NONLOCAL } same as elapsed_15
sum_639 = { ESCAPED NONLOCAL } same as elapsed_15
_640 = { ESCAPED NONLOCAL } same as elapsed_15
tot_error_641 = { ESCAPED NONLOCAL } same as elapsed_15
sum_642 = { ESCAPED NONLOCAL } same as elapsed_15
_648 = { ESCAPED NONLOCAL } same as elapsed_15
_649 = { ESCAPED NONLOCAL } same as elapsed_15
_650 = { ESCAPED NONLOCAL } same as elapsed_15
sum_652 = { ESCAPED NONLOCAL } same as elapsed_15
sum_653 = { ESCAPED NONLOCAL } same as elapsed_15
_654 = { ESCAPED NONLOCAL } same as elapsed_15
tot_error_655 = { ESCAPED NONLOCAL } same as elapsed_15
sum_656 = { ESCAPED NONLOCAL } same as elapsed_15
_662 = { ESCAPED NONLOCAL } same as elapsed_15
_663 = { ESCAPED NONLOCAL } same as elapsed_15
_664 = { ESCAPED NONLOCAL } same as elapsed_15
sum_666 = { ESCAPED NONLOCAL } same as elapsed_15
sum_667 = { ESCAPED NONLOCAL } same as elapsed_15
_668 = { ESCAPED NONLOCAL } same as elapsed_15
tot_error_669 = { ESCAPED NONLOCAL } same as elapsed_15
sum_670 = { ESCAPED NONLOCAL } same as elapsed_15
_124 = { ESCAPED NONLOCAL } same as elapsed_15
avg_out_error = { ESCAPED NONLOCAL } same as elapsed_15
tot_out_error = { ESCAPED NONLOCAL } same as elapsed_15
_820 = { ESCAPED NONLOCAL } same as elapsed_15
_822 = { ESCAPED NONLOCAL } same as elapsed_15
sum_823 = { ESCAPED NONLOCAL } same as elapsed_15
_824 = { ESCAPED NONLOCAL } same as elapsed_15
_826 = { ESCAPED NONLOCAL } same as elapsed_15
sum_827 = { ESCAPED NONLOCAL } same as elapsed_15
_828 = { ESCAPED NONLOCAL } same as elapsed_15
_830 = { ESCAPED NONLOCAL } same as elapsed_15
sum_831 = { ESCAPED NONLOCAL } same as elapsed_15
_832 = { ESCAPED NONLOCAL } same as elapsed_15
_834 = { ESCAPED NONLOCAL } same as elapsed_15
sum_835 = { ESCAPED NONLOCAL } same as elapsed_15
_836 = { ESCAPED NONLOCAL } same as elapsed_15
_838 = { ESCAPED NONLOCAL } same as elapsed_15
sum_839 = { ESCAPED NONLOCAL } same as elapsed_15
_840 = { ESCAPED NONLOCAL } same as elapsed_15
_842 = { ESCAPED NONLOCAL } same as elapsed_15
sum_843 = { ESCAPED NONLOCAL } same as elapsed_15
_844 = { ESCAPED NONLOCAL } same as elapsed_15
_846 = { ESCAPED NONLOCAL } same as elapsed_15
sum_847 = { ESCAPED NONLOCAL } same as elapsed_15
_848 = { ESCAPED NONLOCAL } same as elapsed_15
_850 = { ESCAPED NONLOCAL } same as elapsed_15
sum_851 = { ESCAPED NONLOCAL } same as elapsed_15
_852 = { ESCAPED NONLOCAL } same as elapsed_15
_853 = { ESCAPED NONLOCAL } same as elapsed_15
_854 = { ESCAPED NONLOCAL } same as elapsed_15
_855 = { ESCAPED NONLOCAL } same as elapsed_15
mid_error = { ESCAPED NONLOCAL } same as elapsed_15
_861 = { ESCAPED NONLOCAL } same as elapsed_15
_863 = { ESCAPED NONLOCAL } same as elapsed_15
sum_864 = { ESCAPED NONLOCAL } same as elapsed_15
_865 = { ESCAPED NONLOCAL } same as elapsed_15
_867 = { ESCAPED NONLOCAL } same as elapsed_15
sum_868 = { ESCAPED NONLOCAL } same as elapsed_15
_869 = { ESCAPED NONLOCAL } same as elapsed_15
_871 = { ESCAPED NONLOCAL } same as elapsed_15
sum_872 = { ESCAPED NONLOCAL } same as elapsed_15
_873 = { ESCAPED NONLOCAL } same as elapsed_15
_875 = { ESCAPED NONLOCAL } same as elapsed_15
sum_876 = { ESCAPED NONLOCAL } same as elapsed_15
_877 = { ESCAPED NONLOCAL } same as elapsed_15
_879 = { ESCAPED NONLOCAL } same as elapsed_15
sum_880 = { ESCAPED NONLOCAL } same as elapsed_15
_881 = { ESCAPED NONLOCAL } same as elapsed_15
_883 = { ESCAPED NONLOCAL } same as elapsed_15
sum_884 = { ESCAPED NONLOCAL } same as elapsed_15
_885 = { ESCAPED NONLOCAL } same as elapsed_15
_887 = { ESCAPED NONLOCAL } same as elapsed_15
sum_888 = { ESCAPED NONLOCAL } same as elapsed_15
_889 = { ESCAPED NONLOCAL } same as elapsed_15
_891 = { ESCAPED NONLOCAL } same as elapsed_15
sum_892 = { ESCAPED NONLOCAL } same as elapsed_15
_893 = { ESCAPED NONLOCAL } same as elapsed_15
_894 = { ESCAPED NONLOCAL } same as elapsed_15
_895 = { ESCAPED NONLOCAL } same as elapsed_15
_896 = { ESCAPED NONLOCAL } same as elapsed_15
_902 = { ESCAPED NONLOCAL } same as elapsed_15
_904 = { ESCAPED NONLOCAL } same as elapsed_15
sum_905 = { ESCAPED NONLOCAL } same as elapsed_15
_906 = { ESCAPED NONLOCAL } same as elapsed_15
_908 = { ESCAPED NONLOCAL } same as elapsed_15
sum_909 = { ESCAPED NONLOCAL } same as elapsed_15
_910 = { ESCAPED NONLOCAL } same as elapsed_15
_912 = { ESCAPED NONLOCAL } same as elapsed_15
sum_913 = { ESCAPED NONLOCAL } same as elapsed_15
_914 = { ESCAPED NONLOCAL } same as elapsed_15
_916 = { ESCAPED NONLOCAL } same as elapsed_15
sum_917 = { ESCAPED NONLOCAL } same as elapsed_15
_918 = { ESCAPED NONLOCAL } same as elapsed_15
_920 = { ESCAPED NONLOCAL } same as elapsed_15
sum_921 = { ESCAPED NONLOCAL } same as elapsed_15
_922 = { ESCAPED NONLOCAL } same as elapsed_15
_924 = { ESCAPED NONLOCAL } same as elapsed_15
sum_925 = { ESCAPED NONLOCAL } same as elapsed_15
_926 = { ESCAPED NONLOCAL } same as elapsed_15
_928 = { ESCAPED NONLOCAL } same as elapsed_15
sum_929 = { ESCAPED NONLOCAL } same as elapsed_15
_930 = { ESCAPED NONLOCAL } same as elapsed_15
_932 = { ESCAPED NONLOCAL } same as elapsed_15
sum_933 = { ESCAPED NONLOCAL } same as elapsed_15
_934 = { ESCAPED NONLOCAL } same as elapsed_15
_935 = { ESCAPED NONLOCAL } same as elapsed_15
_936 = { ESCAPED NONLOCAL } same as elapsed_15
_937 = { ESCAPED NONLOCAL } same as elapsed_15
_943 = { ESCAPED NONLOCAL } same as elapsed_15
_945 = { ESCAPED NONLOCAL } same as elapsed_15
sum_946 = { ESCAPED NONLOCAL } same as elapsed_15
_947 = { ESCAPED NONLOCAL } same as elapsed_15
_949 = { ESCAPED NONLOCAL } same as elapsed_15
sum_950 = { ESCAPED NONLOCAL } same as elapsed_15
_951 = { ESCAPED NONLOCAL } same as elapsed_15
_953 = { ESCAPED NONLOCAL } same as elapsed_15
sum_954 = { ESCAPED NONLOCAL } same as elapsed_15
_955 = { ESCAPED NONLOCAL } same as elapsed_15
_957 = { ESCAPED NONLOCAL } same as elapsed_15
sum_958 = { ESCAPED NONLOCAL } same as elapsed_15
_959 = { ESCAPED NONLOCAL } same as elapsed_15
_961 = { ESCAPED NONLOCAL } same as elapsed_15
sum_962 = { ESCAPED NONLOCAL } same as elapsed_15
_963 = { ESCAPED NONLOCAL } same as elapsed_15
_965 = { ESCAPED NONLOCAL } same as elapsed_15
sum_966 = { ESCAPED NONLOCAL } same as elapsed_15
_967 = { ESCAPED NONLOCAL } same as elapsed_15
_969 = { ESCAPED NONLOCAL } same as elapsed_15
sum_970 = { ESCAPED NONLOCAL } same as elapsed_15
_971 = { ESCAPED NONLOCAL } same as elapsed_15
_973 = { ESCAPED NONLOCAL } same as elapsed_15
sum_974 = { ESCAPED NONLOCAL } same as elapsed_15
_975 = { ESCAPED NONLOCAL } same as elapsed_15
_976 = { ESCAPED NONLOCAL } same as elapsed_15
_977 = { ESCAPED NONLOCAL } same as elapsed_15
_978 = { ESCAPED NONLOCAL } same as elapsed_15
_984 = { ESCAPED NONLOCAL } same as elapsed_15
_986 = { ESCAPED NONLOCAL } same as elapsed_15
sum_987 = { ESCAPED NONLOCAL } same as elapsed_15
_988 = { ESCAPED NONLOCAL } same as elapsed_15
_990 = { ESCAPED NONLOCAL } same as elapsed_15
sum_991 = { ESCAPED NONLOCAL } same as elapsed_15
_992 = { ESCAPED NONLOCAL } same as elapsed_15
_994 = { ESCAPED NONLOCAL } same as elapsed_15
sum_995 = { ESCAPED NONLOCAL } same as elapsed_15
_996 = { ESCAPED NONLOCAL } same as elapsed_15
_998 = { ESCAPED NONLOCAL } same as elapsed_15
sum_999 = { ESCAPED NONLOCAL } same as elapsed_15
_1000 = { ESCAPED NONLOCAL } same as elapsed_15
_1002 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1003 = { ESCAPED NONLOCAL } same as elapsed_15
_1004 = { ESCAPED NONLOCAL } same as elapsed_15
_1006 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1007 = { ESCAPED NONLOCAL } same as elapsed_15
_1008 = { ESCAPED NONLOCAL } same as elapsed_15
_1010 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1011 = { ESCAPED NONLOCAL } same as elapsed_15
_1012 = { ESCAPED NONLOCAL } same as elapsed_15
_1014 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1015 = { ESCAPED NONLOCAL } same as elapsed_15
_1016 = { ESCAPED NONLOCAL } same as elapsed_15
_1017 = { ESCAPED NONLOCAL } same as elapsed_15
_1018 = { ESCAPED NONLOCAL } same as elapsed_15
_1019 = { ESCAPED NONLOCAL } same as elapsed_15
_1025 = { ESCAPED NONLOCAL } same as elapsed_15
_1027 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1028 = { ESCAPED NONLOCAL } same as elapsed_15
_1029 = { ESCAPED NONLOCAL } same as elapsed_15
_1031 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1032 = { ESCAPED NONLOCAL } same as elapsed_15
_1033 = { ESCAPED NONLOCAL } same as elapsed_15
_1035 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1036 = { ESCAPED NONLOCAL } same as elapsed_15
_1037 = { ESCAPED NONLOCAL } same as elapsed_15
_1039 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1040 = { ESCAPED NONLOCAL } same as elapsed_15
_1041 = { ESCAPED NONLOCAL } same as elapsed_15
_1043 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1044 = { ESCAPED NONLOCAL } same as elapsed_15
_1045 = { ESCAPED NONLOCAL } same as elapsed_15
_1047 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1048 = { ESCAPED NONLOCAL } same as elapsed_15
_1049 = { ESCAPED NONLOCAL } same as elapsed_15
_1051 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1052 = { ESCAPED NONLOCAL } same as elapsed_15
_1053 = { ESCAPED NONLOCAL } same as elapsed_15
_1055 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1056 = { ESCAPED NONLOCAL } same as elapsed_15
_1057 = { ESCAPED NONLOCAL } same as elapsed_15
_1058 = { ESCAPED NONLOCAL } same as elapsed_15
_1059 = { ESCAPED NONLOCAL } same as elapsed_15
_1060 = { ESCAPED NONLOCAL } same as elapsed_15
_1066 = { ESCAPED NONLOCAL } same as elapsed_15
_1068 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1069 = { ESCAPED NONLOCAL } same as elapsed_15
_1070 = { ESCAPED NONLOCAL } same as elapsed_15
_1072 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1073 = { ESCAPED NONLOCAL } same as elapsed_15
_1074 = { ESCAPED NONLOCAL } same as elapsed_15
_1076 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1077 = { ESCAPED NONLOCAL } same as elapsed_15
_1078 = { ESCAPED NONLOCAL } same as elapsed_15
_1080 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1081 = { ESCAPED NONLOCAL } same as elapsed_15
_1082 = { ESCAPED NONLOCAL } same as elapsed_15
_1084 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1085 = { ESCAPED NONLOCAL } same as elapsed_15
_1086 = { ESCAPED NONLOCAL } same as elapsed_15
_1088 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1089 = { ESCAPED NONLOCAL } same as elapsed_15
_1090 = { ESCAPED NONLOCAL } same as elapsed_15
_1092 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1093 = { ESCAPED NONLOCAL } same as elapsed_15
_1094 = { ESCAPED NONLOCAL } same as elapsed_15
_1096 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1097 = { ESCAPED NONLOCAL } same as elapsed_15
_1098 = { ESCAPED NONLOCAL } same as elapsed_15
_1099 = { ESCAPED NONLOCAL } same as elapsed_15
_1100 = { ESCAPED NONLOCAL } same as elapsed_15
_1101 = { ESCAPED NONLOCAL } same as elapsed_15
_1107 = { ESCAPED NONLOCAL } same as elapsed_15
_1109 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1110 = { ESCAPED NONLOCAL } same as elapsed_15
_1111 = { ESCAPED NONLOCAL } same as elapsed_15
_1113 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1114 = { ESCAPED NONLOCAL } same as elapsed_15
_1115 = { ESCAPED NONLOCAL } same as elapsed_15
_1117 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1118 = { ESCAPED NONLOCAL } same as elapsed_15
_1119 = { ESCAPED NONLOCAL } same as elapsed_15
_1121 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1122 = { ESCAPED NONLOCAL } same as elapsed_15
_1123 = { ESCAPED NONLOCAL } same as elapsed_15
_1125 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1126 = { ESCAPED NONLOCAL } same as elapsed_15
_1127 = { ESCAPED NONLOCAL } same as elapsed_15
_1129 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1130 = { ESCAPED NONLOCAL } same as elapsed_15
_1131 = { ESCAPED NONLOCAL } same as elapsed_15
_1133 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1134 = { ESCAPED NONLOCAL } same as elapsed_15
_1135 = { ESCAPED NONLOCAL } same as elapsed_15
_1137 = { ESCAPED NONLOCAL } same as elapsed_15
sum_1138 = { ESCAPED NONLOCAL } same as elapsed_15
_1139 = { ESCAPED NONLOCAL } same as elapsed_15
_1140 = { ESCAPED NONLOCAL } same as elapsed_15
_1141 = { ESCAPED NONLOCAL } same as elapsed_15
_1142 = { ESCAPED NONLOCAL } same as elapsed_15
neurode_504 = { NULL NONLOCAL } same as i_982
neurode_157 = { NULL NONLOCAL } same as i_982
_378 = { ESCAPED NONLOCAL } same as elapsed_15
_379 = { ESCAPED NONLOCAL } same as elapsed_15
delta_381 = { ESCAPED NONLOCAL } same as elapsed_15
_382 = { ESCAPED NONLOCAL } same as elapsed_15
_383 = { ESCAPED NONLOCAL } same as elapsed_15
delta_384 = { ESCAPED NONLOCAL } same as elapsed_15
_385 = { ESCAPED NONLOCAL } same as elapsed_15
_386 = { ESCAPED NONLOCAL } same as elapsed_15
_388 = { ESCAPED NONLOCAL } same as elapsed_15
_389 = { ESCAPED NONLOCAL } same as elapsed_15
delta_397 = { ESCAPED NONLOCAL } same as elapsed_15
_398 = { ESCAPED NONLOCAL } same as elapsed_15
_399 = { ESCAPED NONLOCAL } same as elapsed_15
delta_400 = { ESCAPED NONLOCAL } same as elapsed_15
_401 = { ESCAPED NONLOCAL } same as elapsed_15
_402 = { ESCAPED NONLOCAL } same as elapsed_15
_404 = { ESCAPED NONLOCAL } same as elapsed_15
_405 = { ESCAPED NONLOCAL } same as elapsed_15
delta_413 = { ESCAPED NONLOCAL } same as elapsed_15
_414 = { ESCAPED NONLOCAL } same as elapsed_15
_415 = { ESCAPED NONLOCAL } same as elapsed_15
delta_416 = { ESCAPED NONLOCAL } same as elapsed_15
_417 = { ESCAPED NONLOCAL } same as elapsed_15
_418 = { ESCAPED NONLOCAL } same as elapsed_15
_420 = { ESCAPED NONLOCAL } same as elapsed_15
_421 = { ESCAPED NONLOCAL } same as elapsed_15
delta_429 = { ESCAPED NONLOCAL } same as elapsed_15
_430 = { ESCAPED NONLOCAL } same as elapsed_15
_431 = { ESCAPED NONLOCAL } same as elapsed_15
delta_432 = { ESCAPED NONLOCAL } same as elapsed_15
_433 = { ESCAPED NONLOCAL } same as elapsed_15
_434 = { ESCAPED NONLOCAL } same as elapsed_15
_436 = { ESCAPED NONLOCAL } same as elapsed_15
_437 = { ESCAPED NONLOCAL } same as elapsed_15
delta_445 = { ESCAPED NONLOCAL } same as elapsed_15
_446 = { ESCAPED NONLOCAL } same as elapsed_15
_447 = { ESCAPED NONLOCAL } same as elapsed_15
delta_448 = { ESCAPED NONLOCAL } same as elapsed_15
_449 = { ESCAPED NONLOCAL } same as elapsed_15
_450 = { ESCAPED NONLOCAL } same as elapsed_15
_452 = { ESCAPED NONLOCAL } same as elapsed_15
_453 = { ESCAPED NONLOCAL } same as elapsed_15
delta_461 = { ESCAPED NONLOCAL } same as elapsed_15
_462 = { ESCAPED NONLOCAL } same as elapsed_15
_463 = { ESCAPED NONLOCAL } same as elapsed_15
delta_464 = { ESCAPED NONLOCAL } same as elapsed_15
_465 = { ESCAPED NONLOCAL } same as elapsed_15
_466 = { ESCAPED NONLOCAL } same as elapsed_15
_468 = { ESCAPED NONLOCAL } same as elapsed_15
_469 = { ESCAPED NONLOCAL } same as elapsed_15
delta_477 = { ESCAPED NONLOCAL } same as elapsed_15
_478 = { ESCAPED NONLOCAL } same as elapsed_15
_479 = { ESCAPED NONLOCAL } same as elapsed_15
delta_480 = { ESCAPED NONLOCAL } same as elapsed_15
_481 = { ESCAPED NONLOCAL } same as elapsed_15
_482 = { ESCAPED NONLOCAL } same as elapsed_15
_484 = { ESCAPED NONLOCAL } same as elapsed_15
_485 = { ESCAPED NONLOCAL } same as elapsed_15
delta_493 = { ESCAPED NONLOCAL } same as elapsed_15
_494 = { ESCAPED NONLOCAL } same as elapsed_15
_495 = { ESCAPED NONLOCAL } same as elapsed_15
delta_496 = { ESCAPED NONLOCAL } same as elapsed_15
_497 = { ESCAPED NONLOCAL } same as elapsed_15
_498 = { ESCAPED NONLOCAL } same as elapsed_15
_500 = { ESCAPED NONLOCAL } same as elapsed_15
_501 = { ESCAPED NONLOCAL } same as elapsed_15
weight_818 = { NULL NONLOCAL } same as i_982
weight_141 = { NULL NONLOCAL } same as i_982
_132 = { ESCAPED NONLOCAL } same as elapsed_15
delta_133 = { ESCAPED NONLOCAL } same as elapsed_15
_130 = { ESCAPED NONLOCAL } same as elapsed_15
_134 = { ESCAPED NONLOCAL } same as elapsed_15
_135 = { ESCAPED NONLOCAL } same as elapsed_15
delta_136 = { ESCAPED NONLOCAL } same as elapsed_15
_137 = { ESCAPED NONLOCAL } same as elapsed_15
_138 = { ESCAPED NONLOCAL } same as elapsed_15
_139 = { ESCAPED NONLOCAL } same as elapsed_15
_140 = { ESCAPED NONLOCAL } same as elapsed_15
neurode_142 = { NULL NONLOCAL } same as i_982
neurode_1147 = { NULL NONLOCAL } same as i_982
_129 = { ESCAPED NONLOCAL } same as elapsed_15
iteration_count.186_1 = { ESCAPED NONLOCAL } same as elapsed_15
_2 = { ESCAPED NONLOCAL } same as elapsed_15
numpats.187_3 = { ESCAPED NONLOCAL } same as elapsed_15
numpats = { ESCAPED NONLOCAL } same as elapsed_15
numpasses.188_4 = { NULL ESCAPED NONLOCAL } same as learned
_5 = { NULL ESCAPED NONLOCAL } same as learned
_290 = { ESCAPED NONLOCAL } same as elapsed_15
error_291 = { ESCAPED NONLOCAL } same as elapsed_15
_292 = { ESCAPED NONLOCAL } same as elapsed_15
sum_293 = { ESCAPED NONLOCAL } same as elapsed_15
_299 = { ESCAPED NONLOCAL } same as elapsed_15
error_300 = { ESCAPED NONLOCAL } same as elapsed_15
_301 = { ESCAPED NONLOCAL } same as elapsed_15
sum_302 = { ESCAPED NONLOCAL } same as elapsed_15
_308 = { ESCAPED NONLOCAL } same as elapsed_15
error_309 = { ESCAPED NONLOCAL } same as elapsed_15
_310 = { ESCAPED NONLOCAL } same as elapsed_15
sum_311 = { ESCAPED NONLOCAL } same as elapsed_15
_317 = { ESCAPED NONLOCAL } same as elapsed_15
error_318 = { ESCAPED NONLOCAL } same as elapsed_15
_319 = { ESCAPED NONLOCAL } same as elapsed_15
sum_320 = { ESCAPED NONLOCAL } same as elapsed_15
_326 = { ESCAPED NONLOCAL } same as elapsed_15
error_327 = { ESCAPED NONLOCAL } same as elapsed_15
_328 = { ESCAPED NONLOCAL } same as elapsed_15
sum_329 = { ESCAPED NONLOCAL } same as elapsed_15
_335 = { ESCAPED NONLOCAL } same as elapsed_15
error_336 = { ESCAPED NONLOCAL } same as elapsed_15
_337 = { ESCAPED NONLOCAL } same as elapsed_15
sum_338 = { ESCAPED NONLOCAL } same as elapsed_15
_344 = { ESCAPED NONLOCAL } same as elapsed_15
error_345 = { ESCAPED NONLOCAL } same as elapsed_15
_346 = { ESCAPED NONLOCAL } same as elapsed_15
sum_347 = { ESCAPED NONLOCAL } same as elapsed_15
_353 = { ESCAPED NONLOCAL } same as elapsed_15
error_354 = { ESCAPED NONLOCAL } same as elapsed_15
_355 = { ESCAPED NONLOCAL } same as elapsed_15
sum_356 = { ESCAPED NONLOCAL } same as elapsed_15
_362 = { ESCAPED NONLOCAL } same as elapsed_15
error_363 = { ESCAPED NONLOCAL } same as elapsed_15
_364 = { ESCAPED NONLOCAL } same as elapsed_15
sum_365 = { ESCAPED NONLOCAL } same as elapsed_15
_371 = { ESCAPED NONLOCAL } same as elapsed_15
error_907 = { NULL NONLOCAL } same as i_982
_104 = { }
_1391 = { }
_89 = { }
_1286 = { }
_1451 = { }
_94 = { }
result_30 = { NULL }
_20 = { ESCAPED NONLOCAL } same as elapsed_15
error_903 = { NULL NONLOCAL } same as i_982
result_233 = { NULL } same as result_30
_234 = { ESCAPED NONLOCAL } same as elapsed_15
error_911 = { NULL NONLOCAL } same as i_982
result_240 = { NULL } same as result_30
_241 = { ESCAPED NONLOCAL } same as elapsed_15
error_915 = { NULL NONLOCAL } same as i_982
result_247 = { NULL } same as result_30
_248 = { ESCAPED NONLOCAL } same as elapsed_15
error_919 = { NULL NONLOCAL } same as i_982
result_254 = { NULL } same as result_30
_255 = { ESCAPED NONLOCAL } same as elapsed_15
error_923 = { NULL NONLOCAL } same as i_982
result_261 = { NULL } same as result_30
_262 = { ESCAPED NONLOCAL } same as elapsed_15
error_927 = { NULL NONLOCAL } same as i_982
result_268 = { NULL } same as result_30
_269 = { ESCAPED NONLOCAL } same as elapsed_15
error_931 = { NULL NONLOCAL } same as i_982
result_275 = { NULL } same as result_30
_276 = { ESCAPED NONLOCAL } same as elapsed_15
error_529 = { NULL NONLOCAL } same as i_982
result_181 = { NULL } same as result_30
result_1471 = { NULL } same as result_30
error_174 = { NULL NONLOCAL } same as i_982
result_175 = { NULL NONLOCAL } same as i_982
numpats.187_878 = { ESCAPED NONLOCAL } same as elapsed_15
nloops_8 = { NONLOCAL } same as nloops
nloops_17 = { NONLOCAL } same as nloops
StopStopwatch = { }
_19 = { ESCAPED NONLOCAL } same as elapsed_15
error_442 = { ESCAPED NONLOCAL } same as elapsed_15
_443 = { ESCAPED NONLOCAL } same as elapsed_15
sum_444 = { ESCAPED NONLOCAL } same as elapsed_15
numpats.187_1314 = { ESCAPED NONLOCAL } same as elapsed_15
_474 = { ESCAPED NONLOCAL } same as elapsed_15
_475 = { ESCAPED NONLOCAL } same as elapsed_15
average_error = { ESCAPED NONLOCAL } same as elapsed_15
_1470 = { ESCAPED NONLOCAL } same as elapsed_15
numpasses.188_11 = { NULL ESCAPED NONLOCAL } same as learned
_10 = { NULL ESCAPED NONLOCAL } same as learned
error_72 = { ESCAPED NONLOCAL } same as elapsed_15
sum_270 = { ESCAPED NONLOCAL } same as elapsed_15
_1490 = { ESCAPED NONLOCAL } same as elapsed_15
_284 = { ESCAPED NONLOCAL } same as elapsed_15
_1431 = { }
_75 = { ESCAPED NONLOCAL } same as elapsed_15
_1343 = { ESCAPED NONLOCAL } same as elapsed_15
_90 = { }


Alias information for DoNNetIteration

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information


;; 29 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 144, latch 159
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 2
;;  header 143, latch 160
;;  depth 2, outer 1
;;  nodes
;;
;; Loop 3
;;  header 13, latch 161
;;  depth 3, outer 2
;;  nodes: 13 161 66 64 63 163 65 162 154 62 164 61 189 58 190 60 59 56 187 53 188 55 54 51 185 48 186 50 49 46 183 43 184 45 44 41 181 38 182 40 39 36 179 33 180 35 34 31 177 28 178 30 29 26 176 24 25 22 21 165 155 19 18 167 20 166 17 15 14 169 16 168 23 27 32 37 42 47 52 57
;;
;; Loop 23
;;  header 65, latch 162
;;  depth 4, outer 3
;;  nodes: 65 162 64 63 163
;;
;; Loop 24
;;  header 63, latch 163
;;  depth 5, outer 23
;;  nodes: 63 163
;;
;; Loop 25
;;  header 62, latch 164
;;  depth 4, outer 3
;;  nodes: 62 164
;;
;; Loop 14
;;  header 21, latch 165
;;  depth 4, outer 3
;;  nodes: 21 165
;;
;; Loop 16
;;  header 20, latch 166
;;  depth 4, outer 3
;;  nodes: 20 166 19 18 167
;;
;; Loop 17
;;  header 18, latch 167
;;  depth 5, outer 16
;;  nodes: 18 167
;;
;; Loop 20
;;  header 16, latch 168
;;  depth 4, outer 3
;;  nodes: 16 168 15 14 169
;;
;; Loop 21
;;  header 14, latch 169
;;  depth 5, outer 20
;;  nodes: 14 169
;;
;; Loop 6
;;  header 11, latch 170
;;  depth 2, outer 1
;;  nodes: 11 170 10 9 171
;;
;; Loop 7
;;  header 9, latch 171
;;  depth 3, outer 6
;;  nodes: 9 171
;;
;; Loop 8
;;  header 8, latch 172
;;  depth 2, outer 1
;;  nodes: 8 172 7 6 173
;;
;; Loop 9
;;  header 6, latch 173
;;  depth 3, outer 8
;;  nodes: 6 173
;;
;; Loop 10
;;  header 5, latch 174
;;  depth 2, outer 1
;;  nodes: 5 174 4 3 175
;;
;; Loop 11
;;  header 3, latch 175
;;  depth 3, outer 10
;;  nodes: 3 175
;; 2 succs { 144 }
;; 175 succs { 3 }
;; 3 succs { 175 4 }
;; 4 succs { 174 157 }
;; 174 succs { 5 }
;; 5 succs { 3 }
;; 173 succs { 6 }
;; 6 succs { 173 7 }
;; 7 succs { 172 156 }
;; 172 succs { 8 }
;; 156 succs { 11 }
;; 157 succs { 8 }
;; 8 succs { 6 }
;; 171 succs { 9 }
;; 9 succs { 171 10 }
;; 10 succs { 170 12 }
;; 170 succs { 11 }
;; 11 succs { 9 }
;; 12 succs { 143 }
;; 153 succs { 13 }
;; 13 succs { 16 }
;; 169 succs { 14 }
;; 14 succs { 169 15 }
;; 15 succs { 168 17 }
;; 168 succs { 16 }
;; 16 succs { 14 }
;; 17 succs { 20 }
;; 167 succs { 18 }
;; 18 succs { 167 19 }
;; 19 succs { 166 155 }
;; 166 succs { 20 }
;; 20 succs { 18 }
;; 155 succs { 21 }
;; 21 succs { 165 22 }
;; 165 succs { 21 }
;; 22 succs { 25 23 }
;; 23 succs { 24 176 }
;; 176 succs { 26 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 29 27 }
;; 27 succs { 28 177 }
;; 177 succs { 31 }
;; 28 succs { 31 }
;; 29 succs { 30 178 }
;; 178 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 34 32 }
;; 32 succs { 33 179 }
;; 179 succs { 36 }
;; 33 succs { 36 }
;; 34 succs { 35 180 }
;; 180 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 39 37 }
;; 37 succs { 38 181 }
;; 181 succs { 41 }
;; 38 succs { 41 }
;; 39 succs { 40 182 }
;; 182 succs { 41 }
;; 40 succs { 41 }
;; 41 succs { 44 42 }
;; 42 succs { 43 183 }
;; 183 succs { 46 }
;; 43 succs { 46 }
;; 44 succs { 45 184 }
;; 184 succs { 46 }
;; 45 succs { 46 }
;; 46 succs { 49 47 }
;; 47 succs { 48 185 }
;; 185 succs { 51 }
;; 48 succs { 51 }
;; 49 succs { 50 186 }
;; 186 succs { 51 }
;; 50 succs { 51 }
;; 51 succs { 54 52 }
;; 52 succs { 53 187 }
;; 187 succs { 56 }
;; 53 succs { 56 }
;; 54 succs { 55 188 }
;; 188 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 59 57 }
;; 57 succs { 58 189 }
;; 189 succs { 61 }
;; 58 succs { 61 }
;; 59 succs { 60 190 }
;; 190 succs { 61 }
;; 60 succs { 61 }
;; 61 succs { 62 }
;; 62 succs { 164 154 }
;; 164 succs { 62 }
;; 154 succs { 65 }
;; 163 succs { 63 }
;; 63 succs { 163 64 }
;; 64 succs { 162 66 }
;; 162 succs { 65 }
;; 65 succs { 63 }
;; 66 succs { 161 67 }
;; 161 succs { 13 }
;; 67 succs { 68 191 }
;; 68 succs { 69 192 }
;; 192 succs { 70 }
;; 69 succs { 70 }
;; 70 succs { 71 152 }
;; 71 succs { 72 193 }
;; 193 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 74 194 }
;; 74 succs { 75 195 }
;; 195 succs { 76 }
;; 75 succs { 76 }
;; 76 succs { 77 196 }
;; 196 succs { 151 }
;; 77 succs { 78 197 }
;; 197 succs { 79 }
;; 78 succs { 79 }
;; 79 succs { 80 198 }
;; 198 succs { 151 }
;; 80 succs { 81 199 }
;; 199 succs { 82 }
;; 81 succs { 82 }
;; 82 succs { 83 200 }
;; 200 succs { 151 }
;; 83 succs { 84 201 }
;; 201 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 86 202 }
;; 202 succs { 151 }
;; 86 succs { 87 203 }
;; 203 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 204 }
;; 204 succs { 151 }
;; 89 succs { 90 205 }
;; 205 succs { 91 }
;; 90 succs { 91 }
;; 91 succs { 92 206 }
;; 206 succs { 151 }
;; 92 succs { 93 207 }
;; 207 succs { 94 }
;; 93 succs { 94 }
;; 94 succs { 95 208 }
;; 208 succs { 151 }
;; 95 succs { 96 209 }
;; 96 succs { 146 }
;; 97 succs { 210 211 }
;; 211 succs { 141 }
;; 210 succs { 99 }
;; 98 succs { 212 213 }
;; 213 succs { 142 }
;; 212 succs { 99 }
;; 99 succs { 100 214 }
;; 214 succs { 101 }
;; 100 succs { 101 }
;; 101 succs { 102 103 }
;; 102 succs { 215 216 }
;; 216 succs { 141 }
;; 215 succs { 104 }
;; 103 succs { 217 218 }
;; 217 succs { 104 }
;; 104 succs { 105 219 }
;; 219 succs { 106 }
;; 105 succs { 106 }
;; 106 succs { 107 108 }
;; 107 succs { 220 221 }
;; 221 succs { 141 }
;; 220 succs { 109 }
;; 108 succs { 222 223 }
;; 223 succs { 140 }
;; 222 succs { 109 }
;; 109 succs { 110 224 }
;; 224 succs { 111 }
;; 110 succs { 111 }
;; 111 succs { 112 113 }
;; 112 succs { 225 226 }
;; 226 succs { 141 }
;; 225 succs { 114 }
;; 113 succs { 227 228 }
;; 228 succs { 140 }
;; 227 succs { 114 }
;; 114 succs { 115 229 }
;; 229 succs { 116 }
;; 115 succs { 116 }
;; 116 succs { 117 118 }
;; 117 succs { 230 231 }
;; 231 succs { 141 }
;; 230 succs { 119 }
;; 118 succs { 232 233 }
;; 233 succs { 140 }
;; 232 succs { 119 }
;; 119 succs { 120 234 }
;; 234 succs { 121 }
;; 120 succs { 121 }
;; 121 succs { 122 123 }
;; 122 succs { 235 236 }
;; 236 succs { 141 }
;; 235 succs { 124 }
;; 123 succs { 237 238 }
;; 238 succs { 140 }
;; 237 succs { 124 }
;; 124 succs { 125 239 }
;; 239 succs { 126 }
;; 125 succs { 126 }
;; 126 succs { 127 128 }
;; 127 succs { 240 241 }
;; 241 succs { 141 }
;; 240 succs { 129 }
;; 128 succs { 242 243 }
;; 243 succs { 140 }
;; 242 succs { 129 }
;; 129 succs { 130 244 }
;; 244 succs { 131 }
;; 130 succs { 131 }
;; 131 succs { 132 133 }
;; 132 succs { 245 246 }
;; 246 succs { 141 }
;; 245 succs { 134 }
;; 133 succs { 247 248 }
;; 248 succs { 140 }
;; 247 succs { 134 }
;; 134 succs { 135 249 }
;; 249 succs { 136 }
;; 135 succs { 136 }
;; 136 succs { 148 137 }
;; 137 succs { 250 251 }
;; 251 succs { 140 }
;; 250 succs { 138 }
;; 138 succs { 139 252 }
;; 139 succs { 149 }
;; 218 succs { 140 }
;; 140 succs { 253 254 }
;; 254 succs { 142 }
;; 253 succs { 141 }
;; 141 succs { 142 }
;; 142 succs { 160 159 }
;; 160 succs { 143 }
;; 143 succs { 153 150 }
;; 159 succs { 144 }
;; 144 succs { 158 145 }
;; 158 succs { 5 }
;; 145 succs { 1 }
;; 209 succs { 146 }
;; 146 succs { 151 }
;; 191 succs { 147 }
;; 147 succs { 142 }
;; 148 succs { 255 256 }
;; 256 succs { 142 }
;; 255 succs { 138 }
;; 252 succs { 149 }
;; 149 succs { 257 258 }
;; 258 succs { 140 }
;; 257 succs { 141 }
;; 150 succs { 147 }
;; 194 succs { 151 }
;; 151 succs { 259 98 }
;; 259 succs { 99 }
;; 152 succs { 97 260 }
;; 260 succs { 142 }
find_duplicates: <bb 141> duplicate of <bb 256>
find_duplicates: <bb 211> duplicate of <bb 216>
find_duplicates: <bb 211> duplicate of <bb 221>
find_duplicates: <bb 211> duplicate of <bb 226>
find_duplicates: <bb 211> duplicate of <bb 231>
find_duplicates: <bb 211> duplicate of <bb 236>
find_duplicates: <bb 211> duplicate of <bb 241>
find_duplicates: <bb 211> duplicate of <bb 246>
find_duplicates: <bb 211> duplicate of <bb 253>
find_duplicates: <bb 211> duplicate of <bb 257>
Removing basic block 256
Removing basic block 216
Removing basic block 221
Removing basic block 226
Removing basic block 231
Removing basic block 236
Removing basic block 241
Removing basic block 246
Removing basic block 253
Removing basic block 257

Symbols to be put in SSA form
{ D.6333 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 261
Number of blocks to update: 250 ( 96%)


Removing basic block 210
Removing basic block 213
Removing basic block 24
Removing basic block 28
Removing basic block 30
Removing basic block 33
Removing basic block 35
Removing basic block 38
Removing basic block 40
Removing basic block 43
Removing basic block 45
Removing basic block 48
Removing basic block 50
Removing basic block 53
Removing basic block 55
Removing basic block 58
Removing basic block 60
Removing basic block 69
Removing basic block 72
Removing basic block 75
Removing basic block 78
Removing basic block 81
Removing basic block 84
Removing basic block 87
Removing basic block 90
Removing basic block 93
Removing basic block 96
Removing basic block 97
Removing basic block 98
Removing basic block 100
Removing basic block 105
Removing basic block 110
Removing basic block 115
Removing basic block 120
Removing basic block 125
Removing basic block 130
Removing basic block 135
Removing basic block 139
Removing basic block 153
Removing basic block 154
Removing basic block 155
Removing basic block 156
Removing basic block 157
Removing basic block 158
Removing basic block 159
Removing basic block 160
Removing basic block 161
Removing basic block 163
Removing basic block 165
Removing basic block 166
Removing basic block 167
Removing basic block 168
Removing basic block 169
Removing basic block 170
Removing basic block 171
Removing basic block 172
Removing basic block 173
Removing basic block 174
Removing basic block 175
Removing basic block 191
Removing basic block 194
Removing basic block 196
Removing basic block 198
Removing basic block 200
Removing basic block 202
Removing basic block 204
Removing basic block 206
Removing basic block 208
Removing basic block 212
Removing basic block 215
Removing basic block 217
Removing basic block 218
Removing basic block 220
Removing basic block 222
Removing basic block 223
Removing basic block 225
Removing basic block 227
Removing basic block 228
Removing basic block 230
Removing basic block 232
Removing basic block 233
Removing basic block 235
Removing basic block 237
Removing basic block 238
Removing basic block 240
Removing basic block 242
Removing basic block 243
Removing basic block 245
Removing basic block 247
Removing basic block 248
Removing basic block 250
Removing basic block 251
Removing basic block 254
Removing basic block 255
Removing basic block 258
Removing basic block 260
DoNNetIteration (long unsigned int nloops)
{
  int result;
  int i;
  int error;
  int i;
  double sum;
  double error;
  int D.7216;
  int weight;
  int neurode;
  double delta;
  int weight;
  int neurode;
  double delta;
  int neurode;
  double tot_error;
  double sum;
  int i;
  int j;
  double sum;
  int neurode;
  int i;
  double sum;
  int neurode;
  int i;
  int i;
  int neurode;
  double sum;
  int neurode;
  int i;
  double value;
  int i;
  int j;
  int patt;
  long unsigned int elapsed;
  int iteration_count.186_1;
  int _2;
  int numpats.187_3;
  int numpasses.188_4;
  int _5;
  int _10;
  int numpasses.188_11;
  long unsigned int _19;
  unsigned int _43;
  double _45;
  double _47;
  unsigned int _52;
  double _54;
  double _56;
  double _84;
  double _85;
  double _86;
  _Bool _89;
  _Bool _90;
  double _91;
  double _92;
  double _93;
  int _94;
  double _98;
  double _99;
  double _100;
  _Bool _104;
  double _105;
  double _124;
  double _129;
  double _130;
  double _132;
  double _134;
  double _135;
  double _137;
  double _138;
  double _139;
  double _140;
  double _234;
  double _241;
  double _248;
  double _255;
  double _262;
  double _269;
  double _276;
  double _284;
  double _290;
  double _292;
  double _299;
  double _301;
  double _308;
  double _310;
  double _317;
  double _319;
  double _326;
  double _328;
  double _335;
  double _337;
  double _344;
  double _346;
  double _353;
  double _355;
  double _362;
  double _364;
  double _371;
  double _378;
  double _379;
  double _382;
  double _383;
  double _385;
  double _386;
  double _388;
  double _389;
  double _398;
  double _399;
  double _401;
  double _402;
  double _404;
  double _405;
  double _414;
  double _415;
  double _417;
  double _418;
  double _420;
  double _421;
  double _430;
  double _431;
  double _433;
  double _434;
  double _436;
  double _437;
  double _443;
  double _446;
  double _447;
  double _449;
  double _450;
  double _452;
  double _453;
  double _462;
  double _463;
  double _465;
  double _466;
  double _468;
  double _469;
  double _474;
  double _475;
  double _478;
  double _479;
  double _481;
  double _482;
  double _484;
  double _485;
  double _494;
  double _495;
  double _497;
  double _498;
  double _500;
  double _501;
  double _564;
  double _565;
  double _566;
  double _570;
  double _578;
  double _579;
  double _580;
  double _584;
  double _592;
  double _593;
  double _594;
  double _598;
  double _606;
  double _607;
  double _608;
  double _612;
  double _620;
  double _621;
  double _622;
  double _626;
  double _634;
  double _635;
  double _636;
  double _640;
  double _648;
  double _649;
  double _650;
  double _654;
  double _662;
  double _663;
  double _664;
  double _668;
  double _674;
  double _675;
  double _676;
  double _681;
  double _682;
  double _683;
  double _688;
  double _689;
  double _690;
  double _695;
  double _696;
  double _697;
  double _702;
  double _703;
  double _704;
  double _709;
  double _710;
  double _711;
  double _716;
  double _717;
  double _718;
  double _723;
  double _724;
  double _725;
  double pretmp_808;
  double pretmp_813;
  double _820;
  double _822;
  double _824;
  double _826;
  double _828;
  double _830;
  double _832;
  double _834;
  double _836;
  double _838;
  double _840;
  double _842;
  double _844;
  double _846;
  double _848;
  double _850;
  double _852;
  double _853;
  double _854;
  double _855;
  double _861;
  double _863;
  double _865;
  double _867;
  double _869;
  double _871;
  double _873;
  double _875;
  double _877;
  int numpats.187_878;
  double _879;
  double _881;
  double _883;
  double _885;
  double _887;
  double _889;
  double _891;
  double _893;
  double _894;
  double _895;
  double _896;
  double _902;
  double _904;
  double _906;
  double _908;
  double _910;
  double _912;
  double _914;
  double _916;
  double _918;
  double _920;
  double _922;
  double _924;
  double _926;
  double _928;
  double _930;
  double _932;
  double _934;
  double _935;
  double _936;
  double _937;
  double _943;
  double _945;
  double _947;
  double _949;
  double _951;
  double _953;
  double _955;
  double _957;
  double _959;
  double _961;
  double _963;
  double _965;
  double _967;
  double _969;
  double _971;
  double _973;
  double _975;
  double _976;
  double _977;
  double _978;
  double _984;
  double _986;
  double _988;
  double _990;
  double _992;
  double _994;
  double _996;
  double _998;
  double _1000;
  double _1002;
  double _1004;
  double _1006;
  double _1008;
  double _1010;
  double _1012;
  double _1014;
  double _1016;
  double _1017;
  double _1018;
  double _1019;
  double _1025;
  double _1027;
  double _1029;
  double _1031;
  double _1033;
  double _1035;
  double _1037;
  double _1039;
  double _1041;
  double _1043;
  double _1045;
  double _1047;
  double _1049;
  double _1051;
  double _1053;
  double _1055;
  double _1057;
  double _1058;
  double _1059;
  double _1060;
  double _1066;
  double _1068;
  double _1070;
  double _1072;
  double _1074;
  double _1076;
  double _1078;
  double _1080;
  double _1082;
  double _1084;
  double _1086;
  double _1088;
  double _1090;
  double _1092;
  double _1094;
  double _1096;
  double _1098;
  double _1099;
  double _1100;
  double _1101;
  double _1107;
  double _1109;
  double _1111;
  double _1113;
  double _1115;
  double _1117;
  double _1119;
  double _1121;
  double _1123;
  double _1125;
  double _1127;
  double _1129;
  double _1131;
  double _1133;
  double _1135;
  double _1137;
  double _1139;
  double _1140;
  double _1141;
  double _1142;
  double _1148;
  double _1151;
  double _1154;
  double _1157;
  double _1160;
  double _1163;
  double _1166;
  double _1169;
  double _1176;
  double _1179;
  double _1182;
  double _1185;
  double _1188;
  double _1191;
  double _1194;
  double _1197;
  double _1204;
  double _1207;
  double _1210;
  double _1213;
  double _1216;
  double _1219;
  double _1222;
  double _1225;
  double _1232;
  double _1235;
  double _1238;
  double _1241;
  double _1244;
  double _1247;
  double _1250;
  double _1253;
  double pretmp_1257;
  double _1260;
  double _1263;
  double _1266;
  double _1269;
  double _1272;
  double _1275;
  double _1278;
  double _1281;
  int _1286;
  double _1288;
  double _1291;
  double _1294;
  double _1297;
  double _1300;
  double _1303;
  double _1306;
  double _1309;
  int numpats.187_1314;
  double _1316;
  double _1319;
  double _1322;
  double _1325;
  double _1328;
  double _1331;
  double _1334;
  double _1337;
  double _1343;
  double _1344;
  double _1347;
  double _1350;
  double _1353;
  double _1356;
  double _1359;
  double _1362;
  double _1365;
  _Bool _1391;
  _Bool _1431;
  int _1451;
  double _1470;
  double prephitmp_1508;
  double _1528;

  <bb 2> [0.00%]:
  elapsed_15 = StartStopwatch ();
  goto <bb 143>; [100.00%]

  <bb 3> [3.03%]:
  # i_982 = PHI <i_50(3), 0(5)>
  _43 = abs_randwc (100000);
  value_44 = (double) _43;
  _45 = value_44 / 1.0e+5;
  value_46 = _45 - 5.0e-1;
  _47 = value_46 * 5.0e-1;
  mid_wts[neurode_983][i_982] = _47;
  i_50 = i_982 + 1;
  if (i_50 != 35)
    goto <bb 3>; [97.14%]
  else
    goto <bb 4>; [2.86%]

  <bb 4> [0.09%]:
  neurode_51 = neurode_983 + 1;
  if (neurode_51 != 8)
    goto <bb 5>; [87.66%]
  else
    goto <bb 8>; [12.34%]

  <bb 5> [0.09%]:
  # neurode_983 = PHI <neurode_51(4), 0(143)>
  goto <bb 3>; [100.00%]

  <bb 6> [0.69%]:
  # i_941 = PHI <i_59(6), 0(8)>
  _52 = abs_randwc (100000);
  value_53 = (double) _52;
  _54 = value_53 / 1.0e+4;
  value_55 = _54 - 5.0e-1;
  _56 = value_55 * 5.0e-1;
  out_wts[neurode_942][i_941] = _56;
  i_59 = i_941 + 1;
  if (i_59 != 8)
    goto <bb 6>; [87.44%]
  else
    goto <bb 7>; [12.56%]

  <bb 7> [0.09%]:
  neurode_60 = neurode_942 + 1;
  if (neurode_60 != 8)
    goto <bb 8>; [87.66%]
  else
    goto <bb 11>; [12.34%]

  <bb 8> [0.09%]:
  # neurode_942 = PHI <neurode_60(7), 0(4)>
  goto <bb 6>; [100.00%]

  <bb 9> [3.03%]:
  # j_1023 = PHI <j_37(9), 0(11)>
  mid_wt_change[i_1024][j_1023] = 0.0;
  mid_wt_cum_change[i_1024][j_1023] = 0.0;
  j_37 = j_1023 + 1;
  if (j_37 != 35)
    goto <bb 9>; [97.14%]
  else
    goto <bb 10>; [2.86%]

  <bb 10> [0.09%]:
  i_38 = i_1024 + 1;
  if (i_38 != 8)
    goto <bb 11>; [87.66%]
  else
    goto <bb 12>; [12.34%]

  <bb 11> [0.09%]:
  # i_1024 = PHI <i_38(10), 0(7)>
  goto <bb 9>; [100.00%]

  <bb 12> [0.01%]:
  out_wt_change[0][0] = 0.0;
  out_wt_cum_change[0][0] = 0.0;
  out_wt_change[0][1] = 0.0;
  out_wt_cum_change[0][1] = 0.0;
  out_wt_change[0][2] = 0.0;
  out_wt_cum_change[0][2] = 0.0;
  out_wt_change[0][3] = 0.0;
  out_wt_cum_change[0][3] = 0.0;
  out_wt_change[0][4] = 0.0;
  out_wt_cum_change[0][4] = 0.0;
  out_wt_change[0][5] = 0.0;
  out_wt_cum_change[0][5] = 0.0;
  out_wt_change[0][6] = 0.0;
  out_wt_cum_change[0][6] = 0.0;
  out_wt_change[0][7] = 0.0;
  out_wt_cum_change[0][7] = 0.0;
  out_wt_change[1][0] = 0.0;
  out_wt_cum_change[1][0] = 0.0;
  out_wt_change[1][1] = 0.0;
  out_wt_cum_change[1][1] = 0.0;
  out_wt_change[1][2] = 0.0;
  out_wt_cum_change[1][2] = 0.0;
  out_wt_change[1][3] = 0.0;
  out_wt_cum_change[1][3] = 0.0;
  out_wt_change[1][4] = 0.0;
  out_wt_cum_change[1][4] = 0.0;
  out_wt_change[1][5] = 0.0;
  out_wt_cum_change[1][5] = 0.0;
  out_wt_change[1][6] = 0.0;
  out_wt_cum_change[1][6] = 0.0;
  out_wt_change[1][7] = 0.0;
  out_wt_cum_change[1][7] = 0.0;
  out_wt_change[2][0] = 0.0;
  out_wt_cum_change[2][0] = 0.0;
  out_wt_change[2][1] = 0.0;
  out_wt_cum_change[2][1] = 0.0;
  out_wt_change[2][2] = 0.0;
  out_wt_cum_change[2][2] = 0.0;
  out_wt_change[2][3] = 0.0;
  out_wt_cum_change[2][3] = 0.0;
  out_wt_change[2][4] = 0.0;
  out_wt_cum_change[2][4] = 0.0;
  out_wt_change[2][5] = 0.0;
  out_wt_cum_change[2][5] = 0.0;
  out_wt_change[2][6] = 0.0;
  out_wt_cum_change[2][6] = 0.0;
  out_wt_change[2][7] = 0.0;
  out_wt_cum_change[2][7] = 0.0;
  out_wt_change[3][0] = 0.0;
  out_wt_cum_change[3][0] = 0.0;
  out_wt_change[3][1] = 0.0;
  out_wt_cum_change[3][1] = 0.0;
  out_wt_change[3][2] = 0.0;
  out_wt_cum_change[3][2] = 0.0;
  out_wt_change[3][3] = 0.0;
  out_wt_cum_change[3][3] = 0.0;
  out_wt_change[3][4] = 0.0;
  out_wt_cum_change[3][4] = 0.0;
  out_wt_change[3][5] = 0.0;
  out_wt_cum_change[3][5] = 0.0;
  out_wt_change[3][6] = 0.0;
  out_wt_cum_change[3][6] = 0.0;
  out_wt_change[3][7] = 0.0;
  out_wt_cum_change[3][7] = 0.0;
  out_wt_change[4][0] = 0.0;
  out_wt_cum_change[4][0] = 0.0;
  out_wt_change[4][1] = 0.0;
  out_wt_cum_change[4][1] = 0.0;
  out_wt_change[4][2] = 0.0;
  out_wt_cum_change[4][2] = 0.0;
  out_wt_change[4][3] = 0.0;
  out_wt_cum_change[4][3] = 0.0;
  out_wt_change[4][4] = 0.0;
  out_wt_cum_change[4][4] = 0.0;
  out_wt_change[4][5] = 0.0;
  out_wt_cum_change[4][5] = 0.0;
  out_wt_change[4][6] = 0.0;
  out_wt_cum_change[4][6] = 0.0;
  out_wt_change[4][7] = 0.0;
  out_wt_cum_change[4][7] = 0.0;
  out_wt_change[5][0] = 0.0;
  out_wt_cum_change[5][0] = 0.0;
  out_wt_change[5][1] = 0.0;
  out_wt_cum_change[5][1] = 0.0;
  out_wt_change[5][2] = 0.0;
  out_wt_cum_change[5][2] = 0.0;
  out_wt_change[5][3] = 0.0;
  out_wt_cum_change[5][3] = 0.0;
  out_wt_change[5][4] = 0.0;
  out_wt_cum_change[5][4] = 0.0;
  out_wt_change[5][5] = 0.0;
  out_wt_cum_change[5][5] = 0.0;
  out_wt_change[5][6] = 0.0;
  out_wt_cum_change[5][6] = 0.0;
  out_wt_change[5][7] = 0.0;
  out_wt_cum_change[5][7] = 0.0;
  out_wt_change[6][0] = 0.0;
  out_wt_cum_change[6][0] = 0.0;
  out_wt_change[6][1] = 0.0;
  out_wt_cum_change[6][1] = 0.0;
  out_wt_change[6][2] = 0.0;
  out_wt_cum_change[6][2] = 0.0;
  out_wt_change[6][3] = 0.0;
  out_wt_cum_change[6][3] = 0.0;
  out_wt_change[6][4] = 0.0;
  out_wt_cum_change[6][4] = 0.0;
  out_wt_change[6][5] = 0.0;
  out_wt_cum_change[6][5] = 0.0;
  out_wt_change[6][6] = 0.0;
  out_wt_cum_change[6][6] = 0.0;
  out_wt_change[6][7] = 0.0;
  out_wt_cum_change[6][7] = 0.0;
  out_wt_change[7][0] = 0.0;
  out_wt_cum_change[7][0] = 0.0;
  out_wt_change[7][1] = 0.0;
  out_wt_cum_change[7][1] = 0.0;
  out_wt_change[7][2] = 0.0;
  out_wt_cum_change[7][2] = 0.0;
  out_wt_change[7][3] = 0.0;
  out_wt_cum_change[7][3] = 0.0;
  out_wt_change[7][4] = 0.0;
  out_wt_cum_change[7][4] = 0.0;
  out_wt_change[7][5] = 0.0;
  out_wt_cum_change[7][5] = 0.0;
  out_wt_change[7][6] = 0.0;
  out_wt_cum_change[7][6] = 0.0;
  out_wt_change[7][7] = 0.0;
  out_wt_cum_change[7][7] = 0.0;
  iteration_count = 1;
  learned = 0;
  numpasses = 0;
  goto <bb 142>; [100.00%]

  <bb 13> [0.35%]:
  # patt_235 = PHI <patt_32(68), 0(142)>
  worst_error = 0.0;
  goto <bb 16>; [100.00%]

  <bb 14> [97.22%]:
  # j_1371 = PHI <j_106(14), 0(16)>
  _105 = mid_wt_cum_change[i_819][j_1371];
  mid_wt_change[i_819][j_1371] = _105;
  mid_wt_cum_change[i_819][j_1371] = 0.0;
  j_106 = j_1371 + 1;
  if (j_106 != 35)
    goto <bb 14>; [97.14%]
  else
    goto <bb 15>; [2.86%]

  <bb 15> [2.78%]:
  i_107 = i_819 + 1;
  if (i_107 != 8)
    goto <bb 16>; [87.49%]
  else
    goto <bb 17>; [12.51%]

  <bb 16> [2.78%]:
  # i_819 = PHI <i_107(15), 0(13)>
  goto <bb 14>; [100.00%]

  <bb 17> [0.35%]:
  _1148 = out_wt_cum_change[0][0];
  out_wt_change[0][0] = _1148;
  out_wt_cum_change[0][0] = 0.0;
  _1151 = out_wt_cum_change[0][1];
  out_wt_change[0][1] = _1151;
  out_wt_cum_change[0][1] = 0.0;
  _1154 = out_wt_cum_change[0][2];
  out_wt_change[0][2] = _1154;
  out_wt_cum_change[0][2] = 0.0;
  _1157 = out_wt_cum_change[0][3];
  out_wt_change[0][3] = _1157;
  out_wt_cum_change[0][3] = 0.0;
  _1160 = out_wt_cum_change[0][4];
  out_wt_change[0][4] = _1160;
  out_wt_cum_change[0][4] = 0.0;
  _1163 = out_wt_cum_change[0][5];
  out_wt_change[0][5] = _1163;
  out_wt_cum_change[0][5] = 0.0;
  _1166 = out_wt_cum_change[0][6];
  out_wt_change[0][6] = _1166;
  out_wt_cum_change[0][6] = 0.0;
  _1169 = out_wt_cum_change[0][7];
  out_wt_change[0][7] = _1169;
  out_wt_cum_change[0][7] = 0.0;
  _1176 = out_wt_cum_change[1][0];
  out_wt_change[1][0] = _1176;
  out_wt_cum_change[1][0] = 0.0;
  _1179 = out_wt_cum_change[1][1];
  out_wt_change[1][1] = _1179;
  out_wt_cum_change[1][1] = 0.0;
  _1182 = out_wt_cum_change[1][2];
  out_wt_change[1][2] = _1182;
  out_wt_cum_change[1][2] = 0.0;
  _1185 = out_wt_cum_change[1][3];
  out_wt_change[1][3] = _1185;
  out_wt_cum_change[1][3] = 0.0;
  _1188 = out_wt_cum_change[1][4];
  out_wt_change[1][4] = _1188;
  out_wt_cum_change[1][4] = 0.0;
  _1191 = out_wt_cum_change[1][5];
  out_wt_change[1][5] = _1191;
  out_wt_cum_change[1][5] = 0.0;
  _1194 = out_wt_cum_change[1][6];
  out_wt_change[1][6] = _1194;
  out_wt_cum_change[1][6] = 0.0;
  _1197 = out_wt_cum_change[1][7];
  out_wt_change[1][7] = _1197;
  out_wt_cum_change[1][7] = 0.0;
  _1204 = out_wt_cum_change[2][0];
  out_wt_change[2][0] = _1204;
  out_wt_cum_change[2][0] = 0.0;
  _1207 = out_wt_cum_change[2][1];
  out_wt_change[2][1] = _1207;
  out_wt_cum_change[2][1] = 0.0;
  _1210 = out_wt_cum_change[2][2];
  out_wt_change[2][2] = _1210;
  out_wt_cum_change[2][2] = 0.0;
  _1213 = out_wt_cum_change[2][3];
  out_wt_change[2][3] = _1213;
  out_wt_cum_change[2][3] = 0.0;
  _1216 = out_wt_cum_change[2][4];
  out_wt_change[2][4] = _1216;
  out_wt_cum_change[2][4] = 0.0;
  _1219 = out_wt_cum_change[2][5];
  out_wt_change[2][5] = _1219;
  out_wt_cum_change[2][5] = 0.0;
  _1222 = out_wt_cum_change[2][6];
  out_wt_change[2][6] = _1222;
  out_wt_cum_change[2][6] = 0.0;
  _1225 = out_wt_cum_change[2][7];
  out_wt_change[2][7] = _1225;
  out_wt_cum_change[2][7] = 0.0;
  _1232 = out_wt_cum_change[3][0];
  out_wt_change[3][0] = _1232;
  out_wt_cum_change[3][0] = 0.0;
  _1235 = out_wt_cum_change[3][1];
  out_wt_change[3][1] = _1235;
  out_wt_cum_change[3][1] = 0.0;
  _1238 = out_wt_cum_change[3][2];
  out_wt_change[3][2] = _1238;
  out_wt_cum_change[3][2] = 0.0;
  _1241 = out_wt_cum_change[3][3];
  out_wt_change[3][3] = _1241;
  out_wt_cum_change[3][3] = 0.0;
  _1244 = out_wt_cum_change[3][4];
  out_wt_change[3][4] = _1244;
  out_wt_cum_change[3][4] = 0.0;
  _1247 = out_wt_cum_change[3][5];
  out_wt_change[3][5] = _1247;
  out_wt_cum_change[3][5] = 0.0;
  _1250 = out_wt_cum_change[3][6];
  out_wt_change[3][6] = _1250;
  out_wt_cum_change[3][6] = 0.0;
  _1253 = out_wt_cum_change[3][7];
  out_wt_change[3][7] = _1253;
  out_wt_cum_change[3][7] = 0.0;
  _1260 = out_wt_cum_change[4][0];
  out_wt_change[4][0] = _1260;
  out_wt_cum_change[4][0] = 0.0;
  _1263 = out_wt_cum_change[4][1];
  out_wt_change[4][1] = _1263;
  out_wt_cum_change[4][1] = 0.0;
  _1266 = out_wt_cum_change[4][2];
  out_wt_change[4][2] = _1266;
  out_wt_cum_change[4][2] = 0.0;
  _1269 = out_wt_cum_change[4][3];
  out_wt_change[4][3] = _1269;
  out_wt_cum_change[4][3] = 0.0;
  _1272 = out_wt_cum_change[4][4];
  out_wt_change[4][4] = _1272;
  out_wt_cum_change[4][4] = 0.0;
  _1275 = out_wt_cum_change[4][5];
  out_wt_change[4][5] = _1275;
  out_wt_cum_change[4][5] = 0.0;
  _1278 = out_wt_cum_change[4][6];
  out_wt_change[4][6] = _1278;
  out_wt_cum_change[4][6] = 0.0;
  _1281 = out_wt_cum_change[4][7];
  out_wt_change[4][7] = _1281;
  out_wt_cum_change[4][7] = 0.0;
  _1288 = out_wt_cum_change[5][0];
  out_wt_change[5][0] = _1288;
  out_wt_cum_change[5][0] = 0.0;
  _1291 = out_wt_cum_change[5][1];
  out_wt_change[5][1] = _1291;
  out_wt_cum_change[5][1] = 0.0;
  _1294 = out_wt_cum_change[5][2];
  out_wt_change[5][2] = _1294;
  out_wt_cum_change[5][2] = 0.0;
  _1297 = out_wt_cum_change[5][3];
  out_wt_change[5][3] = _1297;
  out_wt_cum_change[5][3] = 0.0;
  _1300 = out_wt_cum_change[5][4];
  out_wt_change[5][4] = _1300;
  out_wt_cum_change[5][4] = 0.0;
  _1303 = out_wt_cum_change[5][5];
  out_wt_change[5][5] = _1303;
  out_wt_cum_change[5][5] = 0.0;
  _1306 = out_wt_cum_change[5][6];
  out_wt_change[5][6] = _1306;
  out_wt_cum_change[5][6] = 0.0;
  _1309 = out_wt_cum_change[5][7];
  out_wt_change[5][7] = _1309;
  out_wt_cum_change[5][7] = 0.0;
  _1316 = out_wt_cum_change[6][0];
  out_wt_change[6][0] = _1316;
  out_wt_cum_change[6][0] = 0.0;
  _1319 = out_wt_cum_change[6][1];
  out_wt_change[6][1] = _1319;
  out_wt_cum_change[6][1] = 0.0;
  _1322 = out_wt_cum_change[6][2];
  out_wt_change[6][2] = _1322;
  out_wt_cum_change[6][2] = 0.0;
  _1325 = out_wt_cum_change[6][3];
  out_wt_change[6][3] = _1325;
  out_wt_cum_change[6][3] = 0.0;
  _1328 = out_wt_cum_change[6][4];
  out_wt_change[6][4] = _1328;
  out_wt_cum_change[6][4] = 0.0;
  _1331 = out_wt_cum_change[6][5];
  out_wt_change[6][5] = _1331;
  out_wt_cum_change[6][5] = 0.0;
  _1334 = out_wt_cum_change[6][6];
  out_wt_change[6][6] = _1334;
  out_wt_cum_change[6][6] = 0.0;
  _1337 = out_wt_cum_change[6][7];
  out_wt_change[6][7] = _1337;
  out_wt_cum_change[6][7] = 0.0;
  _1344 = out_wt_cum_change[7][0];
  out_wt_change[7][0] = _1344;
  out_wt_cum_change[7][0] = 0.0;
  _1347 = out_wt_cum_change[7][1];
  out_wt_change[7][1] = _1347;
  out_wt_cum_change[7][1] = 0.0;
  _1350 = out_wt_cum_change[7][2];
  out_wt_change[7][2] = _1350;
  out_wt_cum_change[7][2] = 0.0;
  _1353 = out_wt_cum_change[7][3];
  out_wt_change[7][3] = _1353;
  out_wt_cum_change[7][3] = 0.0;
  _1356 = out_wt_cum_change[7][4];
  out_wt_change[7][4] = _1356;
  out_wt_cum_change[7][4] = 0.0;
  _1359 = out_wt_cum_change[7][5];
  out_wt_change[7][5] = _1359;
  out_wt_cum_change[7][5] = 0.0;
  _1362 = out_wt_cum_change[7][6];
  out_wt_change[7][6] = _1362;
  out_wt_cum_change[7][6] = 0.0;
  _1365 = out_wt_cum_change[7][7];
  out_wt_change[7][7] = _1365;
  out_wt_cum_change[7][7] = 0.0;
  goto <bb 20>; [100.00%]

  <bb 18> [97.22%]:
  # i_860 = PHI <i_96(18), 0(20)>
  # sum_859 = PHI <sum_95(18), 0.0(20)>
  _91 = mid_wts[neurode_900][i_860];
  _92 = in_pats[patt_235][i_860];
  _93 = _91 * _92;
  sum_95 = _93 + sum_859;
  i_96 = i_860 + 1;
  if (i_96 != 35)
    goto <bb 18>; [97.14%]
  else
    goto <bb 19>; [2.86%]

  <bb 19> [2.78%]:
  _98 = -sum_95;
  _99 = exp (_98);
  _100 = _99 + 1.0e+0;
  sum_101 = 1.0e+0 / _100;
  mid_out[neurode_900] = sum_101;
  neurode_102 = neurode_900 + 1;
  if (neurode_102 != 8)
    goto <bb 20>; [87.49%]
  else
    goto <bb 21>; [12.51%]

  <bb 20> [2.78%]:
  # neurode_900 = PHI <neurode_102(19), 0(17)>
  goto <bb 18>; [100.00%]

  <bb 21> [2.78%]:
  # neurode_901 = PHI <neurode_88(21), 0(19)>
  _674 = out_wts[neurode_901][0];
  _675 = mid_out[0];
  _676 = _674 * _675;
  sum_677 = _676 + 0.0;
  _681 = out_wts[neurode_901][1];
  _682 = mid_out[1];
  _683 = _681 * _682;
  sum_684 = sum_677 + _683;
  _688 = out_wts[neurode_901][2];
  _689 = mid_out[2];
  _690 = _688 * _689;
  sum_691 = sum_684 + _690;
  _695 = out_wts[neurode_901][3];
  _696 = mid_out[3];
  _697 = _695 * _696;
  sum_698 = sum_691 + _697;
  _702 = out_wts[neurode_901][4];
  _703 = mid_out[4];
  _704 = _702 * _703;
  sum_705 = sum_698 + _704;
  _709 = out_wts[neurode_901][5];
  _710 = mid_out[5];
  _711 = _709 * _710;
  sum_712 = sum_705 + _711;
  _716 = out_wts[neurode_901][6];
  _717 = mid_out[6];
  _718 = _716 * _717;
  sum_719 = sum_712 + _718;
  _723 = out_wts[neurode_901][7];
  _724 = mid_out[7];
  _725 = _723 * _724;
  sum_726 = sum_719 + _725;
  _84 = -sum_726;
  _85 = exp (_84);
  _86 = _85 + 1.0e+0;
  sum_87 = 1.0e+0 / _86;
  out_out[neurode_901] = sum_87;
  neurode_88 = neurode_901 + 1;
  if (neurode_88 != 8)
    goto <bb 21>; [87.49%]
  else
    goto <bb 22>; [12.51%]

  <bb 22> [0.35%]:
  _564 = out_pats[patt_235][0];
  _565 = out_out[0];
  _566 = _564 - _565;
  out_error[0] = _566;
  if (_566 < 0.0)
    goto <bb 25>; [36.00%]
  else
    goto <bb 23>; [64.00%]

  <bb 23> [0.22%]:
  sum_568 = _566 + 0.0;
  if (_566 > 0.0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 24> [0.11%]:
  goto <bb 26>; [100.00%]

  <bb 25> [0.13%]:
  sum_569 = 0.0 - _566;
  _570 = -_566;

  <bb 26> [0.35%]:
  # tot_error_571 = PHI <0.0(24), _566(23), _570(25)>
  # sum_572 = PHI <sum_568(24), sum_568(23), sum_569(25)>
  _578 = out_pats[patt_235][1];
  _579 = out_out[1];
  _580 = _578 - _579;
  out_error[1] = _580;
  if (_580 < 0.0)
    goto <bb 29>; [36.00%]
  else
    goto <bb 27>; [64.00%]

  <bb 27> [0.22%]:
  sum_582 = sum_572 + _580;
  if (tot_error_571 < _580)
    goto <bb 31>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 28> [0.11%]:
  goto <bb 31>; [100.00%]

  <bb 29> [0.13%]:
  sum_583 = sum_572 - _580;
  _584 = -_580;
  if (tot_error_571 < _584)
    goto <bb 31>; [50.00%]
  else
    goto <bb 30>; [50.00%]

  <bb 30> [0.07%]:

  <bb 31> [0.35%]:
  # tot_error_585 = PHI <tot_error_571(28), _580(27), tot_error_571(30), _584(29)>
  # sum_586 = PHI <sum_582(28), sum_582(27), sum_583(30), sum_583(29)>
  _592 = out_pats[patt_235][2];
  _593 = out_out[2];
  _594 = _592 - _593;
  out_error[2] = _594;
  if (_594 < 0.0)
    goto <bb 34>; [36.00%]
  else
    goto <bb 32>; [64.00%]

  <bb 32> [0.22%]:
  sum_596 = sum_586 + _594;
  if (tot_error_585 < _594)
    goto <bb 36>; [50.00%]
  else
    goto <bb 33>; [50.00%]

  <bb 33> [0.11%]:
  goto <bb 36>; [100.00%]

  <bb 34> [0.13%]:
  sum_597 = sum_586 - _594;
  _598 = -_594;
  if (tot_error_585 < _598)
    goto <bb 36>; [50.00%]
  else
    goto <bb 35>; [50.00%]

  <bb 35> [0.07%]:

  <bb 36> [0.35%]:
  # tot_error_599 = PHI <tot_error_585(33), _594(32), tot_error_585(35), _598(34)>
  # sum_600 = PHI <sum_596(33), sum_596(32), sum_597(35), sum_597(34)>
  _606 = out_pats[patt_235][3];
  _607 = out_out[3];
  _608 = _606 - _607;
  out_error[3] = _608;
  if (_608 < 0.0)
    goto <bb 39>; [36.00%]
  else
    goto <bb 37>; [64.00%]

  <bb 37> [0.22%]:
  sum_610 = sum_600 + _608;
  if (tot_error_599 < _608)
    goto <bb 41>; [50.00%]
  else
    goto <bb 38>; [50.00%]

  <bb 38> [0.11%]:
  goto <bb 41>; [100.00%]

  <bb 39> [0.13%]:
  sum_611 = sum_600 - _608;
  _612 = -_608;
  if (tot_error_599 < _612)
    goto <bb 41>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 40> [0.07%]:

  <bb 41> [0.35%]:
  # tot_error_613 = PHI <tot_error_599(38), _608(37), tot_error_599(40), _612(39)>
  # sum_614 = PHI <sum_610(38), sum_610(37), sum_611(40), sum_611(39)>
  _620 = out_pats[patt_235][4];
  _621 = out_out[4];
  _622 = _620 - _621;
  out_error[4] = _622;
  if (_622 < 0.0)
    goto <bb 44>; [36.00%]
  else
    goto <bb 42>; [64.00%]

  <bb 42> [0.22%]:
  sum_624 = sum_614 + _622;
  if (tot_error_613 < _622)
    goto <bb 46>; [50.00%]
  else
    goto <bb 43>; [50.00%]

  <bb 43> [0.11%]:
  goto <bb 46>; [100.00%]

  <bb 44> [0.13%]:
  sum_625 = sum_614 - _622;
  _626 = -_622;
  if (tot_error_613 < _626)
    goto <bb 46>; [50.00%]
  else
    goto <bb 45>; [50.00%]

  <bb 45> [0.07%]:

  <bb 46> [0.35%]:
  # tot_error_627 = PHI <tot_error_613(43), _622(42), tot_error_613(45), _626(44)>
  # sum_628 = PHI <sum_624(43), sum_624(42), sum_625(45), sum_625(44)>
  _634 = out_pats[patt_235][5];
  _635 = out_out[5];
  _636 = _634 - _635;
  out_error[5] = _636;
  if (_636 < 0.0)
    goto <bb 49>; [36.00%]
  else
    goto <bb 47>; [64.00%]

  <bb 47> [0.22%]:
  sum_638 = sum_628 + _636;
  if (tot_error_627 < _636)
    goto <bb 51>; [50.00%]
  else
    goto <bb 48>; [50.00%]

  <bb 48> [0.11%]:
  goto <bb 51>; [100.00%]

  <bb 49> [0.13%]:
  sum_639 = sum_628 - _636;
  _640 = -_636;
  if (tot_error_627 < _640)
    goto <bb 51>; [50.00%]
  else
    goto <bb 50>; [50.00%]

  <bb 50> [0.07%]:

  <bb 51> [0.35%]:
  # tot_error_641 = PHI <tot_error_627(48), _636(47), tot_error_627(50), _640(49)>
  # sum_642 = PHI <sum_638(48), sum_638(47), sum_639(50), sum_639(49)>
  _648 = out_pats[patt_235][6];
  _649 = out_out[6];
  _650 = _648 - _649;
  out_error[6] = _650;
  if (_650 < 0.0)
    goto <bb 54>; [36.00%]
  else
    goto <bb 52>; [64.00%]

  <bb 52> [0.22%]:
  sum_652 = sum_642 + _650;
  if (tot_error_641 < _650)
    goto <bb 56>; [50.00%]
  else
    goto <bb 53>; [50.00%]

  <bb 53> [0.11%]:
  goto <bb 56>; [100.00%]

  <bb 54> [0.13%]:
  sum_653 = sum_642 - _650;
  _654 = -_650;
  if (tot_error_641 < _654)
    goto <bb 56>; [50.00%]
  else
    goto <bb 55>; [50.00%]

  <bb 55> [0.07%]:

  <bb 56> [0.35%]:
  # tot_error_655 = PHI <tot_error_641(53), _650(52), tot_error_641(55), _654(54)>
  # sum_656 = PHI <sum_652(53), sum_652(52), sum_653(55), sum_653(54)>
  _662 = out_pats[patt_235][7];
  _663 = out_out[7];
  _664 = _662 - _663;
  out_error[7] = _664;
  if (_664 < 0.0)
    goto <bb 59>; [36.00%]
  else
    goto <bb 57>; [64.00%]

  <bb 57> [0.22%]:
  sum_666 = sum_656 + _664;
  if (tot_error_655 < _664)
    goto <bb 61>; [50.00%]
  else
    goto <bb 58>; [50.00%]

  <bb 58> [0.11%]:
  goto <bb 61>; [100.00%]

  <bb 59> [0.13%]:
  sum_667 = sum_656 - _664;
  _668 = -_664;
  if (tot_error_655 < _668)
    goto <bb 61>; [50.00%]
  else
    goto <bb 60>; [50.00%]

  <bb 60> [0.07%]:

  <bb 61> [0.35%]:
  # tot_error_669 = PHI <tot_error_655(58), _664(57), tot_error_655(60), _668(59)>
  # sum_670 = PHI <sum_666(58), sum_666(57), sum_667(60), sum_667(59)>
  _124 = sum_670 * 1.25e-1;
  avg_out_error[patt_235] = _124;
  tot_out_error[patt_235] = tot_error_669;
  _820 = out_wts[0][0];
  _822 = _566 * _820;
  sum_823 = _822 + 0.0;
  _824 = out_wts[1][0];
  _826 = _580 * _824;
  sum_827 = sum_823 + _826;
  _828 = out_wts[2][0];
  _830 = _594 * _828;
  sum_831 = sum_827 + _830;
  _832 = out_wts[3][0];
  _834 = _608 * _832;
  sum_835 = sum_831 + _834;
  _836 = out_wts[4][0];
  _838 = _622 * _836;
  sum_839 = sum_835 + _838;
  _840 = out_wts[5][0];
  _842 = _636 * _840;
  sum_843 = sum_839 + _842;
  _844 = out_wts[6][0];
  _846 = _650 * _844;
  sum_847 = sum_843 + _846;
  _848 = out_wts[7][0];
  _850 = _664 * _848;
  sum_851 = sum_847 + _850;
  _852 = mid_out[0];
  _853 = 1.0e+0 - _852;
  _854 = _852 * _853;
  _855 = sum_851 * _854;
  mid_error[0] = _855;
  _861 = out_wts[0][1];
  _863 = _566 * _861;
  sum_864 = _863 + 0.0;
  _865 = out_wts[1][1];
  _867 = _580 * _865;
  sum_868 = sum_864 + _867;
  _869 = out_wts[2][1];
  _871 = _594 * _869;
  sum_872 = sum_868 + _871;
  _873 = out_wts[3][1];
  _875 = _608 * _873;
  sum_876 = sum_872 + _875;
  _877 = out_wts[4][1];
  _879 = _622 * _877;
  sum_880 = sum_876 + _879;
  _881 = out_wts[5][1];
  _883 = _636 * _881;
  sum_884 = sum_880 + _883;
  _885 = out_wts[6][1];
  _887 = _650 * _885;
  sum_888 = sum_884 + _887;
  _889 = out_wts[7][1];
  _891 = _664 * _889;
  sum_892 = sum_888 + _891;
  _893 = mid_out[1];
  _894 = 1.0e+0 - _893;
  _895 = _893 * _894;
  _896 = sum_892 * _895;
  mid_error[1] = _896;
  _902 = out_wts[0][2];
  _904 = _566 * _902;
  sum_905 = _904 + 0.0;
  _906 = out_wts[1][2];
  _908 = _580 * _906;
  sum_909 = sum_905 + _908;
  _910 = out_wts[2][2];
  _912 = _594 * _910;
  sum_913 = sum_909 + _912;
  _914 = out_wts[3][2];
  _916 = _608 * _914;
  sum_917 = sum_913 + _916;
  _918 = out_wts[4][2];
  _920 = _622 * _918;
  sum_921 = sum_917 + _920;
  _922 = out_wts[5][2];
  _924 = _636 * _922;
  sum_925 = sum_921 + _924;
  _926 = out_wts[6][2];
  _928 = _650 * _926;
  sum_929 = sum_925 + _928;
  _930 = out_wts[7][2];
  _932 = _664 * _930;
  sum_933 = sum_929 + _932;
  _934 = mid_out[2];
  _935 = 1.0e+0 - _934;
  _936 = _934 * _935;
  _937 = sum_933 * _936;
  mid_error[2] = _937;
  _943 = out_wts[0][3];
  _945 = _566 * _943;
  sum_946 = _945 + 0.0;
  _947 = out_wts[1][3];
  _949 = _580 * _947;
  sum_950 = sum_946 + _949;
  _951 = out_wts[2][3];
  _953 = _594 * _951;
  sum_954 = sum_950 + _953;
  _955 = out_wts[3][3];
  _957 = _608 * _955;
  sum_958 = sum_954 + _957;
  _959 = out_wts[4][3];
  _961 = _622 * _959;
  sum_962 = sum_958 + _961;
  _963 = out_wts[5][3];
  _965 = _636 * _963;
  sum_966 = sum_962 + _965;
  _967 = out_wts[6][3];
  _969 = _650 * _967;
  sum_970 = sum_966 + _969;
  _971 = out_wts[7][3];
  _973 = _664 * _971;
  sum_974 = sum_970 + _973;
  _975 = mid_out[3];
  _976 = 1.0e+0 - _975;
  _977 = _975 * _976;
  _978 = sum_974 * _977;
  mid_error[3] = _978;
  _984 = out_wts[0][4];
  _986 = _566 * _984;
  sum_987 = _986 + 0.0;
  _988 = out_wts[1][4];
  _990 = _580 * _988;
  sum_991 = sum_987 + _990;
  _992 = out_wts[2][4];
  _994 = _594 * _992;
  sum_995 = sum_991 + _994;
  _996 = out_wts[3][4];
  _998 = _608 * _996;
  sum_999 = sum_995 + _998;
  _1000 = out_wts[4][4];
  _1002 = _622 * _1000;
  sum_1003 = sum_999 + _1002;
  _1004 = out_wts[5][4];
  _1006 = _636 * _1004;
  sum_1007 = sum_1003 + _1006;
  _1008 = out_wts[6][4];
  _1010 = _650 * _1008;
  sum_1011 = sum_1007 + _1010;
  _1012 = out_wts[7][4];
  _1014 = _664 * _1012;
  sum_1015 = sum_1011 + _1014;
  _1016 = mid_out[4];
  _1017 = 1.0e+0 - _1016;
  _1018 = _1016 * _1017;
  _1019 = sum_1015 * _1018;
  mid_error[4] = _1019;
  _1025 = out_wts[0][5];
  _1027 = _566 * _1025;
  sum_1028 = _1027 + 0.0;
  _1029 = out_wts[1][5];
  _1031 = _580 * _1029;
  sum_1032 = sum_1028 + _1031;
  _1033 = out_wts[2][5];
  _1035 = _594 * _1033;
  sum_1036 = sum_1032 + _1035;
  _1037 = out_wts[3][5];
  _1039 = _608 * _1037;
  sum_1040 = sum_1036 + _1039;
  _1041 = out_wts[4][5];
  _1043 = _622 * _1041;
  sum_1044 = sum_1040 + _1043;
  _1045 = out_wts[5][5];
  _1047 = _636 * _1045;
  sum_1048 = sum_1044 + _1047;
  _1049 = out_wts[6][5];
  _1051 = _650 * _1049;
  sum_1052 = sum_1048 + _1051;
  _1053 = out_wts[7][5];
  _1055 = _664 * _1053;
  sum_1056 = sum_1052 + _1055;
  _1057 = mid_out[5];
  _1058 = 1.0e+0 - _1057;
  _1059 = _1057 * _1058;
  _1060 = sum_1056 * _1059;
  mid_error[5] = _1060;
  _1066 = out_wts[0][6];
  _1068 = _566 * _1066;
  sum_1069 = _1068 + 0.0;
  _1070 = out_wts[1][6];
  _1072 = _580 * _1070;
  sum_1073 = sum_1069 + _1072;
  _1074 = out_wts[2][6];
  _1076 = _594 * _1074;
  sum_1077 = sum_1073 + _1076;
  _1078 = out_wts[3][6];
  _1080 = _608 * _1078;
  sum_1081 = sum_1077 + _1080;
  _1082 = out_wts[4][6];
  _1084 = _622 * _1082;
  sum_1085 = sum_1081 + _1084;
  _1086 = out_wts[5][6];
  _1088 = _636 * _1086;
  sum_1089 = sum_1085 + _1088;
  _1090 = out_wts[6][6];
  _1092 = _650 * _1090;
  sum_1093 = sum_1089 + _1092;
  _1094 = out_wts[7][6];
  _1096 = _664 * _1094;
  sum_1097 = sum_1093 + _1096;
  _1098 = mid_out[6];
  _1099 = 1.0e+0 - _1098;
  _1100 = _1098 * _1099;
  _1101 = sum_1097 * _1100;
  mid_error[6] = _1101;
  _1107 = out_wts[0][7];
  _1109 = _566 * _1107;
  sum_1110 = _1109 + 0.0;
  _1111 = out_wts[1][7];
  _1113 = _580 * _1111;
  sum_1114 = sum_1110 + _1113;
  _1115 = out_wts[2][7];
  _1117 = _594 * _1115;
  sum_1118 = sum_1114 + _1117;
  _1119 = out_wts[3][7];
  _1121 = _608 * _1119;
  sum_1122 = sum_1118 + _1121;
  _1123 = out_wts[4][7];
  _1125 = _622 * _1123;
  sum_1126 = sum_1122 + _1125;
  _1127 = out_wts[5][7];
  _1129 = _636 * _1127;
  sum_1130 = sum_1126 + _1129;
  _1131 = out_wts[6][7];
  _1133 = _650 * _1131;
  sum_1134 = sum_1130 + _1133;
  _1135 = out_wts[7][7];
  _1137 = _664 * _1135;
  sum_1138 = sum_1134 + _1137;
  _1139 = mid_out[7];
  _1140 = 1.0e+0 - _1139;
  _1141 = _1139 * _1140;
  _1142 = sum_1138 * _1141;
  mid_error[7] = _1142;

  <bb 62> [2.78%]:
  # neurode_504 = PHI <neurode_157(63), 0(61)>
  _378 = out_error[neurode_504];
  _379 = _378 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_381 = _379 * _852;
  _382 = out_wt_change[neurode_504][0];
  _383 = _382 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_384 = delta_381 + _383;
  _385 = out_wts[neurode_504][0];
  _386 = delta_384 + _385;
  out_wts[neurode_504][0] = _386;
  _388 = out_wt_cum_change[neurode_504][0];
  _389 = delta_384 + _388;
  out_wt_cum_change[neurode_504][0] = _389;
  delta_397 = _379 * _893;
  _398 = out_wt_change[neurode_504][1];
  _399 = _398 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_400 = delta_397 + _399;
  _401 = out_wts[neurode_504][1];
  _402 = delta_400 + _401;
  out_wts[neurode_504][1] = _402;
  _404 = out_wt_cum_change[neurode_504][1];
  _405 = delta_400 + _404;
  out_wt_cum_change[neurode_504][1] = _405;
  delta_413 = _379 * _934;
  _414 = out_wt_change[neurode_504][2];
  _415 = _414 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_416 = delta_413 + _415;
  _417 = out_wts[neurode_504][2];
  _418 = delta_416 + _417;
  out_wts[neurode_504][2] = _418;
  _420 = out_wt_cum_change[neurode_504][2];
  _421 = delta_416 + _420;
  out_wt_cum_change[neurode_504][2] = _421;
  delta_429 = _379 * _975;
  _430 = out_wt_change[neurode_504][3];
  _431 = _430 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_432 = delta_429 + _431;
  _433 = out_wts[neurode_504][3];
  _434 = delta_432 + _433;
  out_wts[neurode_504][3] = _434;
  _436 = out_wt_cum_change[neurode_504][3];
  _437 = delta_432 + _436;
  out_wt_cum_change[neurode_504][3] = _437;
  delta_445 = _379 * _1016;
  _446 = out_wt_change[neurode_504][4];
  _447 = _446 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_448 = delta_445 + _447;
  _449 = out_wts[neurode_504][4];
  _450 = delta_448 + _449;
  out_wts[neurode_504][4] = _450;
  _452 = out_wt_cum_change[neurode_504][4];
  _453 = delta_448 + _452;
  out_wt_cum_change[neurode_504][4] = _453;
  delta_461 = _379 * _1057;
  _462 = out_wt_change[neurode_504][5];
  _463 = _462 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_464 = delta_461 + _463;
  _465 = out_wts[neurode_504][5];
  _466 = delta_464 + _465;
  out_wts[neurode_504][5] = _466;
  _468 = out_wt_cum_change[neurode_504][5];
  _469 = delta_464 + _468;
  out_wt_cum_change[neurode_504][5] = _469;
  delta_477 = _379 * _1098;
  _478 = out_wt_change[neurode_504][6];
  _479 = _478 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_480 = delta_477 + _479;
  _481 = out_wts[neurode_504][6];
  _482 = delta_480 + _481;
  out_wts[neurode_504][6] = _482;
  _484 = out_wt_cum_change[neurode_504][6];
  _485 = delta_480 + _484;
  out_wt_cum_change[neurode_504][6] = _485;
  delta_493 = _379 * _1139;
  _494 = out_wt_change[neurode_504][7];
  _495 = _494 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_496 = delta_493 + _495;
  _497 = out_wts[neurode_504][7];
  _498 = delta_496 + _497;
  out_wts[neurode_504][7] = _498;
  _500 = out_wt_cum_change[neurode_504][7];
  _501 = delta_496 + _500;
  out_wt_cum_change[neurode_504][7] = _501;
  neurode_157 = neurode_504 + 1;
  if (neurode_157 != 8)
    goto <bb 63>; [87.49%]
  else
    goto <bb 67>; [12.51%]

  <bb 63> [2.43%]:
  pretmp_808 = out_error[neurode_157];
  pretmp_813 = out_wts[neurode_157][0];
  goto <bb 62>; [100.00%]

  <bb 64> [97.22%]:
  # weight_818 = PHI <weight_141(64), 0(67)>
  _132 = in_pats[patt_235][weight_818];
  delta_133 = _130 * _132;
  _134 = mid_wt_change[neurode_1147][weight_818];
  _135 = _134 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_136 = delta_133 + _135;
  _137 = mid_wts[neurode_1147][weight_818];
  _138 = delta_136 + _137;
  mid_wts[neurode_1147][weight_818] = _138;
  _139 = mid_wt_cum_change[neurode_1147][weight_818];
  _140 = delta_136 + _139;
  mid_wt_cum_change[neurode_1147][weight_818] = _140;
  weight_141 = weight_818 + 1;
  if (weight_141 != 35)
    goto <bb 64>; [97.14%]
  else
    goto <bb 65>; [2.86%]

  <bb 65> [2.78%]:
  neurode_142 = neurode_1147 + 1;
  if (neurode_142 != 8)
    goto <bb 66>; [87.49%]
  else
    goto <bb 68>; [12.51%]

  <bb 66> [2.43%]:
  pretmp_1257 = mid_error[neurode_142];

  <bb 67> [2.78%]:
  # neurode_1147 = PHI <neurode_142(66), 0(62)>
  _129 = mid_error[neurode_1147];
  _130 = _129 * 8.99999999999999966693309261245303787291049957275390625e-2;
  goto <bb 64>; [100.00%]

  <bb 68> [0.35%]:
  iteration_count.186_1 = iteration_count;
  _2 = iteration_count.186_1 + 1;
  iteration_count = _2;
  patt_32 = patt_235 + 1;
  numpats.187_3 = numpats;
  if (numpats.187_3 > patt_32)
    goto <bb 13>; [85.00%]
  else
    goto <bb 69>; [15.00%]

  <bb 69> [0.05%]:
  numpasses.188_4 = numpasses;
  _5 = numpasses.188_4 + 1;
  numpasses = _5;
  if (numpats.187_3 > 0)
    goto <bb 70>; [100.00%]
  else
    goto <bb 147>; [0.00%]

  <bb 70> [0.05%]:
  _290 = tot_out_error[0];
  if (_290 > 0.0)
    goto <bb 72>; [50.00%]
  else
    goto <bb 71>; [50.00%]

  <bb 71> [0.03%]:

  <bb 72> [0.05%]:
  # error_291 = PHI <0.0(71), _290(70)>
  _292 = avg_out_error[0];
  sum_293 = _292 + 0.0;
  _1528 = (double) numpats.187_3;
  if (numpats.187_3 != 1)
    goto <bb 73>; [85.00%]
  else
    goto <bb 154>; [15.00%]

  <bb 73> [0.04%]:
  _299 = tot_out_error[1];
  if (error_291 < _299)
    goto <bb 75>; [50.00%]
  else
    goto <bb 74>; [50.00%]

  <bb 74> [0.02%]:

  <bb 75> [0.04%]:
  # error_300 = PHI <error_291(74), _299(73)>
  _301 = avg_out_error[1];
  sum_302 = sum_293 + _301;
  if (numpats.187_3 != 2)
    goto <bb 76>; [85.00%]
  else
    goto <bb 152>; [15.00%]

  <bb 76> [0.04%]:
  _308 = tot_out_error[2];
  if (error_300 < _308)
    goto <bb 78>; [50.00%]
  else
    goto <bb 77>; [50.00%]

  <bb 77> [0.02%]:

  <bb 78> [0.04%]:
  # error_309 = PHI <error_300(77), _308(76)>
  _310 = avg_out_error[2];
  sum_311 = sum_302 + _310;
  if (numpats.187_3 != 3)
    goto <bb 79>; [85.00%]
  else
    goto <bb 152>; [15.00%]

  <bb 79> [0.03%]:
  _317 = tot_out_error[3];
  if (error_309 < _317)
    goto <bb 81>; [50.00%]
  else
    goto <bb 80>; [50.00%]

  <bb 80> [0.02%]:

  <bb 81> [0.03%]:
  # error_318 = PHI <error_309(80), _317(79)>
  _319 = avg_out_error[3];
  sum_320 = sum_311 + _319;
  if (numpats.187_3 != 4)
    goto <bb 82>; [85.00%]
  else
    goto <bb 152>; [15.00%]

  <bb 82> [0.03%]:
  _326 = tot_out_error[4];
  if (error_318 < _326)
    goto <bb 84>; [50.00%]
  else
    goto <bb 83>; [50.00%]

  <bb 83> [0.02%]:

  <bb 84> [0.03%]:
  # error_327 = PHI <error_318(83), _326(82)>
  _328 = avg_out_error[4];
  sum_329 = sum_320 + _328;
  if (numpats.187_3 != 5)
    goto <bb 85>; [85.00%]
  else
    goto <bb 152>; [15.00%]

  <bb 85> [0.02%]:
  _335 = tot_out_error[5];
  if (error_327 < _335)
    goto <bb 87>; [50.00%]
  else
    goto <bb 86>; [50.00%]

  <bb 86> [0.01%]:

  <bb 87> [0.02%]:
  # error_336 = PHI <error_327(86), _335(85)>
  _337 = avg_out_error[5];
  sum_338 = sum_329 + _337;
  if (numpats.187_3 != 6)
    goto <bb 88>; [85.00%]
  else
    goto <bb 152>; [15.00%]

  <bb 88> [0.02%]:
  _344 = tot_out_error[6];
  if (error_336 < _344)
    goto <bb 90>; [50.00%]
  else
    goto <bb 89>; [50.00%]

  <bb 89> [0.01%]:

  <bb 90> [0.02%]:
  # error_345 = PHI <error_336(89), _344(88)>
  _346 = avg_out_error[6];
  sum_347 = sum_338 + _346;
  if (numpats.187_3 != 7)
    goto <bb 91>; [85.00%]
  else
    goto <bb 152>; [15.00%]

  <bb 91> [0.02%]:
  _353 = tot_out_error[7];
  if (error_345 < _353)
    goto <bb 93>; [50.00%]
  else
    goto <bb 92>; [50.00%]

  <bb 92> [0.01%]:

  <bb 93> [0.02%]:
  # error_354 = PHI <error_345(92), _353(91)>
  _355 = avg_out_error[7];
  sum_356 = sum_347 + _355;
  if (numpats.187_3 != 8)
    goto <bb 94>; [85.00%]
  else
    goto <bb 152>; [15.00%]

  <bb 94> [0.01%]:
  _362 = tot_out_error[8];
  if (error_354 < _362)
    goto <bb 96>; [50.00%]
  else
    goto <bb 95>; [50.00%]

  <bb 95> [0.01%]:

  <bb 96> [0.01%]:
  # error_363 = PHI <error_354(95), _362(94)>
  _364 = avg_out_error[8];
  sum_365 = sum_356 + _364;
  if (numpats.187_3 == 10)
    goto <bb 97>; [85.00%]
  else
    goto <bb 152>; [15.00%]

  <bb 97> [0.01%]:
  _371 = tot_out_error[9];
  if (error_363 < _371)
    goto <bb 146>; [50.00%]
  else
    goto <bb 145>; [50.00%]

  <bb 98> [0.00%]:
  goto <bb 140>; [100.00%]

  <bb 99> [0.04%]:
  # error_907 = PHI <0(152), 1(153)>
  # _104 = PHI <_1391(152), _1391(153)>
  # _1286 = PHI <_1451(152), _1451(153)>
  # prephitmp_1508 = PHI <_299(152), _299(153)>
  if (_104 != 0)
    goto <bb 101>; [50.00%]
  else
    goto <bb 100>; [50.00%]

  <bb 100> [0.02%]:

  <bb 101> [0.04%]:
  # result_30 = PHI <_1286(100), 0(99)>
  if (prephitmp_1508 >= 1.6e+1)
    goto <bb 102>; [50.00%]
  else
    goto <bb 103>; [50.00%]

  <bb 102> [0.02%]:
  if (numpats.187_3 != 2)
    goto <bb 104>; [85.00%]
  else
    goto <bb 98>; [15.00%]

  <bb 103> [0.02%]:
  if (numpats.187_3 != 2)
    goto <bb 104>; [85.00%]
  else
    goto <bb 139>; [15.00%]

  <bb 104> [0.04%]:
  # error_903 = PHI <error_907(103), 1(102)>
  if (_104 != 0)
    goto <bb 106>; [50.00%]
  else
    goto <bb 105>; [50.00%]

  <bb 105> [0.02%]:

  <bb 106> [0.04%]:
  # result_233 = PHI <result_30(105), 0(104)>
  _234 = tot_out_error[2];
  if (_234 >= 1.6e+1)
    goto <bb 107>; [50.00%]
  else
    goto <bb 108>; [50.00%]

  <bb 107> [0.02%]:
  if (numpats.187_3 != 3)
    goto <bb 109>; [85.00%]
  else
    goto <bb 98>; [15.00%]

  <bb 108> [0.02%]:
  if (numpats.187_3 != 3)
    goto <bb 109>; [85.00%]
  else
    goto <bb 139>; [15.00%]

  <bb 109> [0.03%]:
  # error_911 = PHI <error_903(108), 1(107)>
  if (_104 != 0)
    goto <bb 111>; [50.00%]
  else
    goto <bb 110>; [50.00%]

  <bb 110> [0.02%]:

  <bb 111> [0.03%]:
  # result_240 = PHI <result_233(110), 0(109)>
  _241 = tot_out_error[3];
  if (_241 >= 1.6e+1)
    goto <bb 112>; [50.00%]
  else
    goto <bb 113>; [50.00%]

  <bb 112> [0.02%]:
  if (numpats.187_3 != 4)
    goto <bb 114>; [85.00%]
  else
    goto <bb 98>; [15.00%]

  <bb 113> [0.01%]:
  if (numpats.187_3 != 4)
    goto <bb 114>; [85.00%]
  else
    goto <bb 139>; [15.00%]

  <bb 114> [0.03%]:
  # error_915 = PHI <error_911(113), 1(112)>
  if (_104 != 0)
    goto <bb 116>; [50.00%]
  else
    goto <bb 115>; [50.00%]

  <bb 115> [0.02%]:

  <bb 116> [0.03%]:
  # result_247 = PHI <result_240(115), 0(114)>
  _248 = tot_out_error[4];
  if (_248 >= 1.6e+1)
    goto <bb 117>; [50.00%]
  else
    goto <bb 118>; [50.00%]

  <bb 117> [0.01%]:
  if (numpats.187_3 != 5)
    goto <bb 119>; [85.00%]
  else
    goto <bb 98>; [15.00%]

  <bb 118> [0.02%]:
  if (numpats.187_3 != 5)
    goto <bb 119>; [85.00%]
  else
    goto <bb 139>; [15.00%]

  <bb 119> [0.02%]:
  # error_919 = PHI <error_915(118), 1(117)>
  if (_104 != 0)
    goto <bb 121>; [50.00%]
  else
    goto <bb 120>; [50.00%]

  <bb 120> [0.01%]:

  <bb 121> [0.02%]:
  # result_254 = PHI <result_247(120), 0(119)>
  _255 = tot_out_error[5];
  if (_255 >= 1.6e+1)
    goto <bb 122>; [50.00%]
  else
    goto <bb 123>; [50.00%]

  <bb 122> [0.01%]:
  if (numpats.187_3 != 6)
    goto <bb 124>; [85.00%]
  else
    goto <bb 98>; [15.00%]

  <bb 123> [0.01%]:
  if (numpats.187_3 != 6)
    goto <bb 124>; [85.00%]
  else
    goto <bb 139>; [15.00%]

  <bb 124> [0.02%]:
  # error_923 = PHI <error_919(123), 1(122)>
  if (_104 != 0)
    goto <bb 126>; [50.00%]
  else
    goto <bb 125>; [50.00%]

  <bb 125> [0.01%]:

  <bb 126> [0.02%]:
  # result_261 = PHI <result_254(125), 0(124)>
  _262 = tot_out_error[6];
  if (_262 >= 1.6e+1)
    goto <bb 127>; [50.00%]
  else
    goto <bb 128>; [50.00%]

  <bb 127> [0.01%]:
  if (numpats.187_3 != 7)
    goto <bb 129>; [85.00%]
  else
    goto <bb 98>; [15.00%]

  <bb 128> [0.01%]:
  if (numpats.187_3 != 7)
    goto <bb 129>; [85.00%]
  else
    goto <bb 139>; [15.00%]

  <bb 129> [0.02%]:
  # error_927 = PHI <error_923(128), 1(127)>
  if (_104 != 0)
    goto <bb 131>; [50.00%]
  else
    goto <bb 130>; [50.00%]

  <bb 130> [0.01%]:

  <bb 131> [0.02%]:
  # result_268 = PHI <result_261(130), 0(129)>
  _269 = tot_out_error[7];
  if (_269 >= 1.6e+1)
    goto <bb 132>; [50.00%]
  else
    goto <bb 133>; [50.00%]

  <bb 132> [0.01%]:
  if (numpats.187_3 != 8)
    goto <bb 134>; [85.00%]
  else
    goto <bb 98>; [15.00%]

  <bb 133> [0.01%]:
  if (numpats.187_3 != 8)
    goto <bb 134>; [85.00%]
  else
    goto <bb 139>; [15.00%]

  <bb 134> [0.01%]:
  # error_931 = PHI <error_927(133), 1(132)>
  if (_104 != 0)
    goto <bb 136>; [50.00%]
  else
    goto <bb 135>; [50.00%]

  <bb 135> [0.01%]:

  <bb 136> [0.01%]:
  # result_275 = PHI <result_268(135), 0(134)>
  _276 = tot_out_error[8];
  if (_276 >= 1.6e+1)
    goto <bb 148>; [50.00%]
  else
    goto <bb 137>; [50.00%]

  <bb 137> [0.00%]:
  if (numpats.187_3 == 10)
    goto <bb 138>; [85.00%]
  else
    goto <bb 139>; [15.00%]

  <bb 138> [0.01%]:
  # error_529 = PHI <error_931(137), 1(148)>
  if (_104 != 0)
    goto <bb 150>; [50.00%]
  else
    goto <bb 149>; [50.00%]

  <bb 139> [0.05%]:
  # result_181 = PHI <result_1471(150), result_275(137), result_268(133), result_30(103), result_233(108), result_240(113), result_247(118), result_254(123), result_261(128)>
  # error_174 = PHI <error_529(150), error_931(137), error_927(133), error_907(103), error_903(108), error_911(113), error_915(118), error_919(123), error_923(128)>
  if (error_174 == 1)
    goto <bb 98>; [1.30%]
  else
    goto <bb 141>; [98.70%]

  <bb 140> [0.00%]:

  <bb 141> [0.06%]:
  # result_175 = PHI <result_181(139), -1(140), 1(147), _94(154)>
  learned = result_175;
  if (result_175 == 0)
    goto <bb 142>; [85.00%]
  else
    goto <bb 143>; [15.00%]

  <bb 142> [0.06%]:
  numpats.187_878 = numpats;
  if (numpats.187_878 > 0)
    goto <bb 13>; [85.00%]
  else
    goto <bb 151>; [15.00%]

  <bb 143> [0.01%]:
  # nloops_8 = PHI <nloops_16(D)(2), nloops_17(141)>
  nloops_17 = nloops_8 + 18446744073709551615;
  if (nloops_8 != 0)
    goto <bb 5>; [85.00%]
  else
    goto <bb 144>; [15.00%]

  <bb 144> [0.00%]:
  _19 = StopStopwatch (elapsed_15);
  return _19;

  <bb 145> [0.01%]:

  <bb 146> [0.02%]:
  # error_442 = PHI <_371(97), error_363(145)>
  _443 = avg_out_error[9];
  sum_444 = sum_365 + _443;
  goto <bb 152>; [100.00%]

  <bb 147> [0.01%]:
  # numpats.187_1314 = PHI <numpats.187_3(69), numpats.187_878(151)>
  worst_error = 0.0;
  _474 = (double) numpats.187_1314;
  _475 = 0.0 / _474;
  average_error = _475;
  goto <bb 141>; [100.00%]

  <bb 148> [0.01%]:
  if (numpats.187_3 == 10)
    goto <bb 138>; [100.00%]
  else
    goto <bb 140>; [0.00%]

  <bb 149> [0.01%]:

  <bb 150> [0.02%]:
  # result_1471 = PHI <0(138), result_275(149)>
  _1470 = tot_out_error[9];
  if (_1470 >= 1.6e+1)
    goto <bb 98>; [15.00%]
  else
    goto <bb 139>; [85.00%]

  <bb 151> [0.01%]:
  numpasses.188_11 = numpasses;
  _10 = numpasses.188_11 + 1;
  numpasses = _10;
  goto <bb 147>; [100.00%]

  <bb 152> [0.04%]:
  # error_72 = PHI <error_442(146), error_300(75), error_309(78), error_318(81), error_327(84), error_336(87), error_345(90), error_354(93), error_363(96)>
  # sum_270 = PHI <sum_444(146), sum_302(75), sum_311(78), sum_320(81), sum_329(84), sum_338(87), sum_347(90), sum_356(93), sum_365(96)>
  worst_error = error_72;
  _284 = sum_270 / _1528;
  average_error = _284;
  _1391 = error_72 >= 1.000000000000000055511151231257827021181583404541015625e-1;
  _1431 = ~_1391;
  _1451 = (int) _1431;
  if (_290 >= 1.6e+1)
    goto <bb 153>; [42.50%]
  else
    goto <bb 99>; [57.50%]

  <bb 153> [0.02%]:
  goto <bb 99>; [100.00%]

  <bb 154> [0.01%]:
  worst_error = error_291;
  _1343 = sum_293 / _1528;
  average_error = _1343;
  _89 = error_291 >= 1.000000000000000055511151231257827021181583404541015625e-1;
  _90 = ~_89;
  _94 = (int) _90;
  if (_290 >= 1.6e+1)
    goto <bb 98>; [40.00%]
  else
    goto <bb 141>; [60.00%]

}



;; Function lusolve.constprop (lusolve.constprop.6, funcdef_no=135, decl_uid=6548, cgraph_uid=62, symbol_order=202)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
a = &NONLOCAL
b = &NONLOCAL
LUtempvv = NONLOCAL
LUtempvv.215_21 = LUtempvv
j_272 = j_19
j_272 = &NULL
big_273 = big_110
big_273 = &NONLOCAL
_16 = *_14 + UNKNOWN
_17 = _16
big_110 = big_273
big_110 = _17
j_19 = j_272
j_19 = &NONLOCAL
_23 = _12
_23 = &NONLOCAL
_24 = LUtempvv.215_21 + UNKNOWN
_25 = &NONLOCAL
_25 = big_110
*_24 = _25
i_26 = i_271
i_26 = &NONLOCAL
i_271 = i_26
i_271 = &NULL
_12 = i_271
_13 = _12
_13 = &NONLOCAL
_14 = a + UNKNOWN
_29 = i_44
_30 = _29
_30 = &NONLOCAL
_31 = a + UNKNOWN
sum_32 = *_31 + UNKNOWN
k_276 = k_42
k_276 = &NULL
sum_277 = sum_41
sum_277 = sum_32
_34 = *_31 + UNKNOWN
_35 = k_276
_36 = _35
_36 = &NONLOCAL
_37 = a + UNKNOWN
_38 = *_37 + UNKNOWN
_39 = _34
_39 = _38
sum_41 = sum_277
sum_41 = _39
k_42 = k_276
k_42 = &NONLOCAL
sum_117 = sum_32
sum_117 = sum_41
sum_43 = sum_117
sum_43 = sum_73
_28 = _31
_28 = a
i_40 = i_44
i_40 = &NULL
*_28 + UNKNOWN = sum_43
i_44 = i_40
i_44 = &NONLOCAL
i_57 = j_108
i_57 = &NULL
i_69 = i_57
i_69 = &NULL
j_33 = j_108
j_33 = &NULL
imax_268 = imax_116
imax_268 = &NULL
i_278 = i_69
i_278 = i_68
big_281 = &NONLOCAL
big_281 = big_115
imax_285 = imax_268
imax_285 = imax_116
_46 = i_278
_47 = _46
_47 = &NONLOCAL
_48 = a + UNKNOWN
sum_49 = *_48 + UNKNOWN
k_279 = k_59
k_279 = &NULL
sum_280 = sum_58
sum_280 = sum_49
_51 = *_48 + UNKNOWN
_52 = k_279
_53 = _52
_53 = &NONLOCAL
_54 = a + UNKNOWN
_55 = *_54 + UNKNOWN
_56 = _51
_56 = _55
sum_58 = sum_280
sum_58 = _56
k_59 = k_279
k_59 = &NONLOCAL
sum_60 = sum_49
sum_60 = sum_58
*_48 + UNKNOWN = sum_60
_62 = _46
_62 = &NONLOCAL
_63 = LUtempvv.215_21 + UNKNOWN
_64 = *_63
_65 = sum_60
dum_66 = _64
dum_66 = _65
big_115 = big_281
big_115 = dum_66
imax_116 = imax_285
imax_116 = i_278
i_68 = i_278
i_68 = &NONLOCAL
_70 = imax_116
_71 = _70
_71 = &NONLOCAL
_72 = a + UNKNOWN
_75 = j_33
_76 = _75
_76 = &NONLOCAL
_77 = a + UNKNOWN
k_282 = k_79
k_282 = &NULL
dum_74 = *_72 + UNKNOWN
_78 = *_77 + UNKNOWN
*_72 + UNKNOWN = _78
*_77 + UNKNOWN = dum_74
k_79 = k_282
k_79 = &NONLOCAL
_84 = _70
_84 = &NONLOCAL
_85 = LUtempvv.215_21 + UNKNOWN
dum_86 = *_85
_88 = _75
_88 = &NONLOCAL
_89 = LUtempvv.215_21 + UNKNOWN
_90 = *_89
*_85 = _90
*_89 = dum_86
_91 = j_33
_92 = _91
_92 = &NONLOCAL
_93 = &indx
*_93 = imax_116
_94 = _91
_94 = &NONLOCAL
_95 = a + UNKNOWN
_96 = *_95 + UNKNOWN
derefaddrtmp(100) = &NONLOCAL
*_95 + UNKNOWN = derefaddrtmp(100)
_98 = *_95 + UNKNOWN
dum_99 = &NONLOCAL
dum_99 = _98
i_100 = j_33
i_100 = &NONLOCAL
i_283 = i_107
i_283 = i_100
_102 = i_283
_103 = _102
_103 = &NONLOCAL
_104 = a + UNKNOWN
_105 = *_104 + UNKNOWN
_106 = dum_99
_106 = _105
*_104 + UNKNOWN = _106
i_107 = i_283
i_107 = &NONLOCAL
j_108 = j_33
j_108 = &NONLOCAL
i_113 = i_144
i_113 = &NULL
ii_253 = ii_170
ii_253 = &NONLOCAL
_119 = i_113
_120 = _119
_120 = &NONLOCAL
_121 = &indx
ip_122 = *_121
_123 = ip_122
_124 = _123
_124 = &NONLOCAL
_125 = b + UNKNOWN
sum_126 = *_125
_127 = _119
_127 = &NONLOCAL
_128 = b + UNKNOWN
_129 = *_128
*_125 = _129
_131 = _119
_131 = &NONLOCAL
_132 = a + UNKNOWN
j_254 = j_142
j_254 = ii_253
sum_203 = sum_141
sum_203 = sum_126
_134 = *_132 + UNKNOWN
_135 = j_254
_136 = _135
_136 = &NONLOCAL
_137 = b + UNKNOWN
_138 = *_137
_139 = _134
_139 = _138
sum_141 = sum_203
sum_141 = _139
j_142 = j_254
j_142 = &NONLOCAL
ii_170 = ii_253
ii_170 = &NONLOCAL
ii_170 = i_113
ii_170 = ii_253
sum_143 = sum_141
sum_143 = sum_126
sum_143 = sum_126
sum_143 = sum_126
*_128 = sum_143
i_144 = i_113
i_144 = &NONLOCAL
i_22 = i_246
i_22 = i_169
i_286 = i_22
i_286 = &NONLOCAL
_147 = i_286
_148 = _147
_148 = &NONLOCAL
_149 = b + UNKNOWN
sum_150 = *_149
j_151 = i_286
j_151 = &NONLOCAL
_152 = _147
_152 = &NONLOCAL
_153 = a + UNKNOWN
j_287 = j_163
j_287 = j_151
sum_288 = sum_162
sum_288 = sum_150
_155 = *_153 + UNKNOWN
_156 = j_287
_157 = _156
_157 = &NONLOCAL
_158 = b + UNKNOWN
_159 = *_158
_160 = _155
_160 = _159
sum_162 = sum_288
sum_162 = _160
j_163 = j_287
j_163 = &NONLOCAL
_164 = _147
_164 = &NONLOCAL
_165 = a + UNKNOWN
_166 = *_165 + UNKNOWN
_168 = sum_162
_168 = _166
*_149 = _168
i_169 = i_286
i_169 = &NONLOCAL
_4 = &NULL
_4 = &NONLOCAL
ESCAPED = _4
_140 = _147
_140 = &NONLOCAL
_133 = a + UNKNOWN
_146 = *_133 + UNKNOWN
_161 = sum_150
_161 = _146
*_149 = _161
i_246 = i_286
i_246 = &NONLOCAL
sum_73 = *a + UNKNOWN

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED";
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"a"[label="a = { 5 }"];
"b"[label="b = { 5 }"];
"LUtempvv.215_21";
"LUtempvv";
"j_272"[label="j_272 = { 1 5 }"];
"big_273"[label="big_273 = { 5 }"];
"_16";
"_14";
"_17";
"_23"[label="_23 = { 5 }"];
"_12";
"_24";
"_25"[label="_25 = { 5 }"];
"i_271"[label="i_271 = { 1 5 }"];
"_13"[label="_13 = { 5 }"];
"_29";
"i_44"[label="i_44 = { 1 5 }"];
"_30"[label="_30 = { 5 }"];
"_31";
"sum_32";
"k_276"[label="k_276 = { 1 5 }"];
"sum_277";
"_34";
"_35";
"_36"[label="_36 = { 5 }"];
"_37";
"_38";
"_39";
"sum_117";
"sum_43";
"sum_73";
"_28";
"i_57"[label="i_57 = { 1 }"];
"j_108"[label="j_108 = { 1 5 }"];
"i_69"[label="i_69 = { 1 }"];
"imax_268"[label="imax_268 = { 1 }"];
"i_278"[label="i_278 = { 5 }"];
"big_281"[label="big_281 = { 5 }"];
"_46";
"_47"[label="_47 = { 5 }"];
"_48";
"sum_49";
"k_279"[label="k_279 = { 1 5 }"];
"sum_58";
"_51";
"_52";
"_53"[label="_53 = { 5 }"];
"_54";
"_55";
"_56";
"sum_60";
"_62"[label="_62 = { 5 }"];
"_63";
"_64";
"_65";
"dum_66";
"_70";
"_71"[label="_71 = { 5 }"];
"_72";
"_75";
"_76"[label="_76 = { 5 }"];
"_77";
"k_282"[label="k_282 = { 1 5 }"];
"dum_74";
"_78";
"_84"[label="_84 = { 5 }"];
"_85";
"dum_86";
"_88"[label="_88 = { 5 }"];
"_89";
"_91";
"_92"[label="_92 = { 5 }"];
"_93"[label="_93 = { 96 }"];
"indx";
"_94"[label="_94 = { 5 }"];
"_95";
"_96";
"derefaddrtmp(100)"[label="derefaddrtmp(100) = { 5 }"];
"_98";
"dum_99"[label="dum_99 = { 5 }"];
"i_100"[label="i_100 = { 5 }"];
"i_283"[label="i_283 = { 5 }"];
"_102";
"_103"[label="_103 = { 5 }"];
"_104";
"_105";
"_106";
"i_113"[label="i_113 = { 1 5 }"];
"ii_253"[label="ii_253 = { 5 }"];
"_119";
"_120"[label="_120 = { 5 }"];
"_121"[label="_121 = { 96 }"];
"ip_122";
"_123";
"_124"[label="_124 = { 5 }"];
"_125";
"sum_126";
"_127"[label="_127 = { 5 }"];
"_128";
"_131"[label="_131 = { 5 }"];
"_132";
"j_254"[label="j_254 = { 5 }"];
"_134";
"_135";
"_136"[label="_136 = { 5 }"];
"_137";
"_138";
"_139";
"i_22"[label="i_22 = { 5 }"];
"_147";
"_148"[label="_148 = { 5 }"];
"_149";
"sum_150";
"j_151"[label="j_151 = { 5 }"];
"_152"[label="_152 = { 5 }"];
"_153";
"j_287"[label="j_287 = { 5 }"];
"_155";
"_156";
"_157"[label="_157 = { 5 }"];
"_158";
"_159";
"_160";
"_164"[label="_164 = { 5 }"];
"_165";
"_166";
"_4"[label="_4 = { 1 5 }"];
"_140"[label="_140 = { 5 }"];
"_133";
"_146";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*a";
"*b";
"*LUtempvv.215_21";
"*LUtempvv";
"*j_272";
"*j_19";
"*big_273";
"*big_110";
"*_16";
"*_14";
"*_17";
"*_23";
"*_12";
"*_24";
"*_25";
"*i_26";
"*i_271";
"*_13";
"*_29";
"*i_44";
"*_30";
"*_31";
"*sum_32";
"*k_276";
"*k_42";
"*sum_277";
"*sum_41";
"*_34";
"*_35";
"*_36";
"*_37";
"*_38";
"*_39";
"*sum_117";
"*sum_43";
"*sum_73";
"*_28";
"*i_40";
"*i_57";
"*j_108";
"*i_69";
"*j_33";
"*imax_268";
"*imax_116";
"*i_278";
"*i_68";
"*big_281";
"*big_115";
"*imax_285";
"*_46";
"*_47";
"*_48";
"*sum_49";
"*k_279";
"*k_59";
"*sum_280";
"*sum_58";
"*_51";
"*_52";
"*_53";
"*_54";
"*_55";
"*_56";
"*sum_60";
"*_62";
"*_63";
"*_64";
"*_65";
"*dum_66";
"*_70";
"*_71";
"*_72";
"*_75";
"*_76";
"*_77";
"*k_282";
"*k_79";
"*dum_74";
"*_78";
"*_84";
"*dum_86";
"*_88";
"*_90";
"*_91";
"*_92";
"*_93";
"*indx";
"*_94";
"*_95";
"*_96";
"*derefaddrtmp(100)";
"*_98";
"*dum_99";
"*i_100";
"*i_283";
"*i_107";
"*_102";
"*_103";
"*_104";
"*_105";
"*_106";
"*i_113";
"*i_144";
"*ii_253";
"*ii_170";
"*_119";
"*_120";
"*_121";
"*ip_122";
"*_123";
"*_124";
"*sum_126";
"*_127";
"*_129";
"*_131";
"*_132";
"*j_254";
"*j_142";
"*sum_203";
"*sum_141";
"*_134";
"*_135";
"*_136";
"*_137";
"*_138";
"*_139";
"*sum_143";
"*i_22";
"*i_246";
"*i_169";
"*i_286";
"*_147";
"*_148";
"*sum_150";
"*j_151";
"*_152";
"*_153";
"*j_287";
"*j_163";
"*sum_288";
"*sum_162";
"*_155";
"*_156";
"*_157";
"*_158";
"*_159";
"*_160";
"*_164";
"*_165";
"*_166";
"*_168";
"*_4";
"*_140";
"*_133";
"*_146";
"*_161";

  // Edges in the constraint graph:
"_4" -> "ESCAPED";
"*ESCAPED" -> "ESCAPED";
"LUtempvv" -> "LUtempvv.215_21";
"NONLOCAL" -> "LUtempvv";
"j_272" -> "j_272";
"j_272" -> "j_272";
"big_273" -> "big_273";
"big_273" -> "big_273";
"_17" -> "big_273";
"_16" -> "_17";
"_12" -> "_23";
"i_271" -> "_12";
"big_273" -> "_25";
"i_271" -> "i_271";
"i_271" -> "i_271";
"_12" -> "_13";
"i_44" -> "_29";
"i_44" -> "i_44";
"i_44" -> "i_44";
"_29" -> "_30";
"k_276" -> "k_276";
"k_276" -> "k_276";
"sum_32" -> "sum_277";
"sum_277" -> "sum_277";
"sum_277" -> "sum_277";
"_39" -> "sum_277";
"k_276" -> "_35";
"_35" -> "_36";
"_34" -> "_39";
"_38" -> "_39";
"sum_32" -> "sum_117";
"sum_277" -> "sum_117";
"sum_117" -> "sum_43";
"sum_73" -> "sum_43";
"a" -> "_28";
"_31" -> "_28";
"j_108" -> "i_57";
"j_108" -> "j_108";
"j_108" -> "j_108";
"i_57" -> "i_69";
"imax_268" -> "imax_268";
"imax_268" -> "imax_268";
"i_278" -> "imax_268";
"imax_268" -> "imax_268";
"i_69" -> "i_278";
"i_278" -> "i_278";
"i_278" -> "i_278";
"big_281" -> "big_281";
"big_281" -> "big_281";
"dum_66" -> "big_281";
"i_278" -> "_46";
"_46" -> "_47";
"k_279" -> "k_279";
"k_279" -> "k_279";
"sum_49" -> "sum_58";
"sum_58" -> "sum_58";
"sum_58" -> "sum_58";
"_56" -> "sum_58";
"k_279" -> "_52";
"_52" -> "_53";
"_51" -> "_56";
"_55" -> "_56";
"sum_49" -> "sum_60";
"sum_58" -> "sum_60";
"_46" -> "_62";
"*_63" -> "_64";
"sum_60" -> "_65";
"_64" -> "dum_66";
"_65" -> "dum_66";
"imax_268" -> "_70";
"_70" -> "_71";
"j_108" -> "_75";
"_75" -> "_76";
"k_282" -> "k_282";
"k_282" -> "k_282";
"_70" -> "_84";
"dum_86" -> "dum_86";
"dum_86" -> "dum_86";
"dum_86" -> "dum_86";
"dum_86" -> "dum_86";
"_75" -> "_88";
"j_108" -> "_91";
"_91" -> "_92";
"_91" -> "_94";
"_98" -> "dum_99";
"j_108" -> "i_100";
"i_100" -> "i_283";
"i_283" -> "i_283";
"i_283" -> "i_283";
"i_283" -> "_102";
"_102" -> "_103";
"dum_99" -> "_106";
"_105" -> "_106";
"i_113" -> "i_113";
"i_113" -> "i_113";
"i_113" -> "ii_253";
"ii_253" -> "ii_253";
"ii_253" -> "ii_253";
"i_113" -> "_119";
"_119" -> "_120";
"*_121" -> "ip_122";
"ip_122" -> "_123";
"_123" -> "_124";
"sum_126" -> "sum_126";
"sum_126" -> "sum_126";
"sum_126" -> "sum_126";
"sum_126" -> "sum_126";
"_139" -> "sum_126";
"sum_126" -> "sum_126";
"sum_126" -> "sum_126";
"sum_126" -> "sum_126";
"_119" -> "_127";
"_119" -> "_131";
"ii_253" -> "j_254";
"j_254" -> "j_254";
"j_254" -> "j_254";
"j_254" -> "_135";
"_135" -> "_136";
"*_137" -> "_138";
"_134" -> "_139";
"_138" -> "_139";
"i_22" -> "i_22";
"i_22" -> "i_22";
"i_22" -> "i_22";
"i_22" -> "i_22";
"i_22" -> "_147";
"_147" -> "_148";
"sum_150" -> "sum_150";
"sum_150" -> "sum_150";
"sum_150" -> "sum_150";
"_160" -> "sum_150";
"_166" -> "sum_150";
"sum_150" -> "sum_150";
"_146" -> "sum_150";
"sum_150" -> "sum_150";
"sum_150" -> "sum_150";
"i_22" -> "j_151";
"_147" -> "_152";
"j_151" -> "j_287";
"j_287" -> "j_287";
"j_287" -> "j_287";
"j_287" -> "_156";
"_156" -> "_157";
"*_158" -> "_159";
"_155" -> "_160";
"_159" -> "_160";
"_147" -> "_164";
"_147" -> "_140";
"NONLOCAL" -> "*ESCAPED";
"_25" -> "*_24";
"imax_268" -> "*_93";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"a" [label="\N\n_14 = a + UNKNOWN\l_31 = a + UNKNOWN\l_37 = a + UNKNOWN\lsum_73 = *a + UNKNOWN\l_48 = a + UNKNOWN\l_54 = a + UNKNOWN\l_72 = a + UNKNOWN\l_77 = a + UNKNOWN\l_95 = a + UNKNOWN\l_104 = a + UNKNOWN\l_125 = a + UNKNOWN\l_128 = a + UNKNOWN\l_132 = a + UNKNOWN\l_137 = a + UNKNOWN\l_149 = a + UNKNOWN\l_153 = a + UNKNOWN\l_158 = a + UNKNOWN\l_165 = a + UNKNOWN\l_133 = a + UNKNOWN\l"];
"LUtempvv" [label="\N\n_24 = LUtempvv + UNKNOWN\l_63 = LUtempvv + UNKNOWN\l_85 = LUtempvv + UNKNOWN\l_89 = LUtempvv + UNKNOWN\l"];
"j_272";
"big_273";
"_16";
"_14" [label="\N\n_16 = *_14 + UNKNOWN\l"];
"_24" [label="\N\n*_24 = big_273\l"];
"_31" [label="\N\nsum_32 = *_31 + UNKNOWN\l_34 = *_31 + UNKNOWN\l"];
"sum_32";
"sum_277";
"_34";
"_37" [label="\N\n_38 = *_37 + UNKNOWN\l"];
"_38";
"_39";
"sum_43";
"sum_73";
"_28" [label="\N\n*_28 + UNKNOWN = sum_43\l"];
"big_281";
"_48" [label="\N\nsum_49 = *_48 + UNKNOWN\l_51 = *_48 + UNKNOWN\l*_48 + UNKNOWN = sum_280\l"];
"sum_49";
"sum_280";
"_51";
"_54" [label="\N\n_55 = *_54 + UNKNOWN\l"];
"_55";
"_56";
"_63" [label="\N\n_64 = *_63\l"];
"_64";
"dum_66";
"_72" [label="\N\ndum_74 = *_72 + UNKNOWN\l*_72 + UNKNOWN = _78\l"];
"_77" [label="\N\n_78 = *_77 + UNKNOWN\l*_77 + UNKNOWN = dum_74\l"];
"dum_74";
"_78";
"_85" [label="\N\ndum_86 = *_85\l*_85 = dum_86\l"];
"dum_86";
"_89" [label="\N\ndum_86 = *_89\l*_89 = dum_86\l"];
"_93" [label="\N\nip_122 = *_93\l*_93 = j_272\l"];
"indx";
"_95" [label="\N\n_96 = *_95 + UNKNOWN\l_98 = *_95 + UNKNOWN\l*_95 + UNKNOWN = a\l"];
"_96";
"_98";
"dum_99";
"_104" [label="\N\n_105 = *_104 + UNKNOWN\l*_104 + UNKNOWN = _106\l"];
"_105";
"_106";
"ip_122";
"_124";
"_125" [label="\N\nsum_126 = *_125\l*_125 = sum_126\l"];
"sum_126";
"_128" [label="\N\nsum_126 = *_128\l*_128 = sum_126\l"];
"_132" [label="\N\n_134 = *_132 + UNKNOWN\l"];
"_134";
"_137" [label="\N\n_138 = *_137\l"];
"_138";
"_139";
"_149" [label="\N\nsum_150 = *_149\l*_149 = sum_150\l"];
"sum_150";
"_153" [label="\N\n_155 = *_153 + UNKNOWN\l"];
"_155";
"_158" [label="\N\n_159 = *_158\l"];
"_159";
"_160";
"_165" [label="\N\n_166 = *_165 + UNKNOWN\l"];
"_166";
"_133" [label="\N\n_146 = *_133 + UNKNOWN\l"];
"_146";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_24";
"STOREDANYTHING" -> "_31";
"STOREDANYTHING" -> "sum_32";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_37";
"STOREDANYTHING" -> "_38";
"STOREDANYTHING" -> "sum_73";
"STOREDANYTHING" -> "_48";
"STOREDANYTHING" -> "sum_49";
"STOREDANYTHING" -> "_51";
"STOREDANYTHING" -> "_54";
"STOREDANYTHING" -> "_55";
"STOREDANYTHING" -> "_63";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "_77";
"STOREDANYTHING" -> "dum_74";
"STOREDANYTHING" -> "_78";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "dum_86";
"STOREDANYTHING" -> "_89";
"STOREDANYTHING" -> "indx";
"STOREDANYTHING" -> "_95";
"STOREDANYTHING" -> "_96";
"STOREDANYTHING" -> "_98";
"STOREDANYTHING" -> "_104";
"STOREDANYTHING" -> "_105";
"STOREDANYTHING" -> "_125";
"STOREDANYTHING" -> "sum_126";
"STOREDANYTHING" -> "_128";
"STOREDANYTHING" -> "_132";
"STOREDANYTHING" -> "_134";
"STOREDANYTHING" -> "_137";
"STOREDANYTHING" -> "_149";
"STOREDANYTHING" -> "sum_150";
"STOREDANYTHING" -> "_153";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_158";
"STOREDANYTHING" -> "_165";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_133";
"STOREDANYTHING" -> "_146";
"a" -> "_28";
"j_272" -> "ESCAPED";
"_16" -> "big_273";
"_31" -> "_28";
"sum_32" -> "sum_277";
"sum_277" -> "sum_43";
"_34" -> "_39";
"_38" -> "_39";
"_39" -> "sum_277";
"sum_73" -> "sum_43";
"sum_49" -> "sum_280";
"sum_280" -> "dum_66";
"_51" -> "_56";
"_55" -> "_56";
"_56" -> "sum_280";
"_64" -> "dum_66";
"dum_66" -> "big_281";
"_98" -> "dum_99";
"dum_99" -> "_106";
"_105" -> "_106";
"ip_122" -> "_124";
"_134" -> "_139";
"_138" -> "_139";
"_139" -> "sum_126";
"_155" -> "_160";
"_159" -> "_160";
"_160" -> "sum_150";
"_166" -> "sum_150";
"_146" -> "sum_150";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"STOREDANYTHING";
"INTEGER";
"a" [label="\N\n_14 = a + UNKNOWN\l_31 = a + UNKNOWN\l_37 = a + UNKNOWN\lsum_73 = *a + UNKNOWN\l_48 = a + UNKNOWN\l_54 = a + UNKNOWN\l_72 = a + UNKNOWN\l_77 = a + UNKNOWN\l_95 = a + UNKNOWN\l_104 = a + UNKNOWN\l_125 = a + UNKNOWN\l_128 = a + UNKNOWN\l_132 = a + UNKNOWN\l_137 = a + UNKNOWN\l_149 = a + UNKNOWN\l_153 = a + UNKNOWN\l_158 = a + UNKNOWN\l_165 = a + UNKNOWN\l_133 = a + UNKNOWN\l"];
"LUtempvv" [label="\N\n_24 = LUtempvv + UNKNOWN\l_63 = LUtempvv + UNKNOWN\l_85 = LUtempvv + UNKNOWN\l_89 = LUtempvv + UNKNOWN\l"];
"j_272";
"big_273";
"_16";
"_14" [label="\N\n_16 = *_14 + UNKNOWN\l"];
"_24" [label="\N\n*_24 = big_273\l"];
"_31" [label="\N\nsum_32 = *_31 + UNKNOWN\l_34 = *_31 + UNKNOWN\l"];
"sum_32";
"sum_277";
"_34";
"_37" [label="\N\n_38 = *_37 + UNKNOWN\l"];
"_38";
"_39";
"sum_43";
"sum_73";
"_28" [label="\N\n*_28 + UNKNOWN = sum_43\l"];
"big_281";
"_48" [label="\N\nsum_49 = *_48 + UNKNOWN\l_51 = *_48 + UNKNOWN\l*_48 + UNKNOWN = sum_280\l"];
"sum_49";
"sum_280";
"_51";
"_54" [label="\N\n_55 = *_54 + UNKNOWN\l"];
"_55";
"_56";
"_63" [label="\N\n_64 = *_63\l"];
"_64";
"dum_66";
"_72" [label="\N\ndum_74 = *_72 + UNKNOWN\l*_72 + UNKNOWN = _78\l"];
"_77" [label="\N\n_78 = *_77 + UNKNOWN\l*_77 + UNKNOWN = dum_74\l"];
"dum_74";
"_78";
"_85" [label="\N\ndum_86 = *_85\l*_85 = dum_86\l"];
"dum_86" [label="\N\ndum_86 = dum_86 + UNKNOWN\ldum_86 = *dum_86\l*dum_86 = LUtempvv\l"];
"_89" [label="\N\ndum_86 = *_89\l*_89 = dum_86\l"];
"_93" [label="\N\nip_122 = *_93\l*_93 = j_272\l"];
"indx";
"_95" [label="\N\n_96 = *_95 + UNKNOWN\l_98 = *_95 + UNKNOWN\l*_95 + UNKNOWN = a\l"];
"_96";
"_98";
"dum_99";
"_104" [label="\N\n_105 = *_104 + UNKNOWN\l*_104 + UNKNOWN = _106\l"];
"_105";
"_106";
"ip_122";
"_124";
"_125" [label="\N\nsum_126 = *_125\l*_125 = sum_126\l"];
"sum_126";
"_128" [label="\N\nsum_126 = *_128\l*_128 = sum_126\l"];
"_132" [label="\N\n_134 = *_132 + UNKNOWN\l"];
"_134";
"_137" [label="\N\n_138 = *_137\l"];
"_138";
"_139";
"_149" [label="\N\nsum_150 = *_149\l*_149 = sum_150\l"];
"sum_150";
"_153" [label="\N\n_155 = *_153 + UNKNOWN\l"];
"_155";
"_158" [label="\N\n_159 = *_158\l"];
"_159";
"_160";
"_165" [label="\N\n_166 = *_165 + UNKNOWN\l"];
"_166";
"_133" [label="\N\n_146 = *_133 + UNKNOWN\l"];
"_146";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "dum_86";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_24";
"STOREDANYTHING" -> "_31";
"STOREDANYTHING" -> "sum_32";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_37";
"STOREDANYTHING" -> "_38";
"STOREDANYTHING" -> "sum_73";
"STOREDANYTHING" -> "_48";
"STOREDANYTHING" -> "sum_49";
"STOREDANYTHING" -> "_51";
"STOREDANYTHING" -> "_54";
"STOREDANYTHING" -> "_55";
"STOREDANYTHING" -> "_63";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "_77";
"STOREDANYTHING" -> "dum_74";
"STOREDANYTHING" -> "_78";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "dum_86";
"STOREDANYTHING" -> "_89";
"STOREDANYTHING" -> "indx";
"STOREDANYTHING" -> "_95";
"STOREDANYTHING" -> "_96";
"STOREDANYTHING" -> "_98";
"STOREDANYTHING" -> "_104";
"STOREDANYTHING" -> "_105";
"STOREDANYTHING" -> "_125";
"STOREDANYTHING" -> "sum_126";
"STOREDANYTHING" -> "_128";
"STOREDANYTHING" -> "_132";
"STOREDANYTHING" -> "_134";
"STOREDANYTHING" -> "_137";
"STOREDANYTHING" -> "_149";
"STOREDANYTHING" -> "sum_150";
"STOREDANYTHING" -> "_153";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_158";
"STOREDANYTHING" -> "_165";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_133";
"STOREDANYTHING" -> "_146";
"a" -> "dum_86";
"a" -> "_28";
"LUtempvv" -> "_16";
"LUtempvv" -> "sum_32";
"LUtempvv" -> "_34";
"LUtempvv" -> "_38";
"LUtempvv" -> "sum_73";
"LUtempvv" -> "sum_49";
"LUtempvv" -> "_51";
"LUtempvv" -> "_55";
"LUtempvv" -> "_64";
"LUtempvv" -> "dum_74";
"LUtempvv" -> "_78";
"LUtempvv" -> "dum_86";
"LUtempvv" -> "_96";
"LUtempvv" -> "_98";
"LUtempvv" -> "_105";
"LUtempvv" -> "sum_126";
"LUtempvv" -> "_134";
"LUtempvv" -> "_138";
"LUtempvv" -> "sum_150";
"LUtempvv" -> "_155";
"LUtempvv" -> "_159";
"LUtempvv" -> "_166";
"LUtempvv" -> "_146";
"j_272" -> "dum_86";
"j_272" -> "indx";
"big_273" -> "dum_86";
"_16" -> "big_273";
"_31" -> "_28";
"sum_32" -> "sum_277";
"sum_277" -> "sum_43";
"_34" -> "_39";
"_38" -> "_39";
"_39" -> "sum_277";
"sum_43" -> "dum_86";
"sum_73" -> "sum_43";
"sum_49" -> "sum_280";
"sum_280" -> "dum_66";
"sum_280" -> "dum_86";
"_51" -> "_56";
"_55" -> "_56";
"_56" -> "sum_280";
"_64" -> "dum_66";
"dum_66" -> "big_281";
"dum_74" -> "dum_86";
"_78" -> "dum_86";
"indx" -> "ip_122";
"_98" -> "dum_99";
"dum_99" -> "_106";
"_105" -> "_106";
"_106" -> "dum_86";
"ip_122" -> "_124";
"sum_126" -> "dum_86";
"_134" -> "_139";
"_138" -> "_139";
"_139" -> "sum_126";
"sum_150" -> "dum_86";
"_155" -> "_160";
"_159" -> "_160";
"_160" -> "sum_150";
"_166" -> "sum_150";
"_146" -> "sum_150";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL } same as dum_86
NONLOCAL = { ESCAPED NONLOCAL } same as LUtempvv
STOREDANYTHING = { }
INTEGER = { ANYTHING }
a = { NONLOCAL }
b = { NONLOCAL } same as a
LUtempvv.215_21 = { ESCAPED NONLOCAL } same as LUtempvv
LUtempvv = { ESCAPED NONLOCAL }
j_272 = { NULL NONLOCAL }
j_19 = { NULL NONLOCAL } same as j_272
big_273 = { ESCAPED NONLOCAL }
big_110 = { ESCAPED NONLOCAL } same as big_273
_16 = { ESCAPED NONLOCAL }
_14 = { NONLOCAL }
_17 = { ESCAPED NONLOCAL } same as _16
_23 = { NULL NONLOCAL } same as j_272
_12 = { NULL NONLOCAL } same as j_272
_24 = { ESCAPED NONLOCAL }
_25 = { ESCAPED NONLOCAL } same as big_273
i_26 = { NULL NONLOCAL } same as j_272
i_271 = { NULL NONLOCAL } same as j_272
_13 = { NULL NONLOCAL } same as j_272
_29 = { NULL NONLOCAL } same as j_272
i_44 = { NULL NONLOCAL } same as j_272
_30 = { NULL NONLOCAL } same as j_272
_31 = { NONLOCAL }
sum_32 = { ESCAPED NONLOCAL }
k_276 = { NULL NONLOCAL } same as j_272
k_42 = { NULL NONLOCAL } same as j_272
sum_277 = { ESCAPED NONLOCAL }
sum_41 = { ESCAPED NONLOCAL } same as sum_277
_34 = { ESCAPED NONLOCAL }
_35 = { NULL NONLOCAL } same as j_272
_36 = { NULL NONLOCAL } same as j_272
_37 = { NONLOCAL }
_38 = { ESCAPED NONLOCAL }
_39 = { ESCAPED NONLOCAL }
sum_117 = { ESCAPED NONLOCAL } same as sum_277
sum_43 = { ESCAPED NONLOCAL }
sum_73 = { ESCAPED NONLOCAL }
_28 = { NONLOCAL }
i_40 = { NULL NONLOCAL } same as j_272
i_57 = { NULL NONLOCAL } same as j_272
j_108 = { NULL NONLOCAL } same as j_272
i_69 = { NULL NONLOCAL } same as j_272
j_33 = { NULL NONLOCAL } same as j_272
imax_268 = { NULL NONLOCAL } same as j_272
imax_116 = { NULL NONLOCAL } same as j_272
i_278 = { NULL NONLOCAL } same as j_272
i_68 = { NULL NONLOCAL } same as j_272
big_281 = { ESCAPED NONLOCAL }
big_115 = { ESCAPED NONLOCAL } same as big_281
imax_285 = { NULL NONLOCAL } same as j_272
_46 = { NULL NONLOCAL } same as j_272
_47 = { NULL NONLOCAL } same as j_272
_48 = { NONLOCAL }
sum_49 = { ESCAPED NONLOCAL }
k_279 = { NULL NONLOCAL } same as j_272
k_59 = { NULL NONLOCAL } same as j_272
sum_280 = { ESCAPED NONLOCAL }
sum_58 = { ESCAPED NONLOCAL } same as sum_280
_51 = { ESCAPED NONLOCAL }
_52 = { NULL NONLOCAL } same as j_272
_53 = { NULL NONLOCAL } same as j_272
_54 = { NONLOCAL }
_55 = { ESCAPED NONLOCAL }
_56 = { ESCAPED NONLOCAL }
sum_60 = { ESCAPED NONLOCAL } same as sum_280
_62 = { NULL NONLOCAL } same as j_272
_63 = { ESCAPED NONLOCAL }
_64 = { ESCAPED NONLOCAL }
_65 = { ESCAPED NONLOCAL } same as sum_280
dum_66 = { ESCAPED NONLOCAL }
_70 = { NULL NONLOCAL } same as j_272
_71 = { NULL NONLOCAL } same as j_272
_72 = { NONLOCAL }
_75 = { NULL NONLOCAL } same as j_272
_76 = { NULL NONLOCAL } same as j_272
_77 = { NONLOCAL }
k_282 = { NULL NONLOCAL } same as j_272
k_79 = { NULL NONLOCAL } same as j_272
dum_74 = { ESCAPED NONLOCAL }
_78 = { ESCAPED NONLOCAL }
_84 = { NULL NONLOCAL } same as j_272
_85 = { ESCAPED NONLOCAL }
dum_86 = { NULL ESCAPED NONLOCAL }
_88 = { NULL NONLOCAL } same as j_272
_89 = { ESCAPED NONLOCAL }
_90 = { NULL ESCAPED NONLOCAL } same as dum_86
_91 = { NULL NONLOCAL } same as j_272
_92 = { NULL NONLOCAL } same as j_272
_93 = { indx }
indx = { NULL NONLOCAL }
_94 = { NULL NONLOCAL } same as j_272
_95 = { NONLOCAL }
_96 = { ESCAPED NONLOCAL }
derefaddrtmp(100) = { NONLOCAL } same as a
_98 = { ESCAPED NONLOCAL }
dum_99 = { ESCAPED NONLOCAL }
i_100 = { NULL NONLOCAL } same as j_272
i_283 = { NULL NONLOCAL } same as j_272
i_107 = { NULL NONLOCAL } same as j_272
_102 = { NULL NONLOCAL } same as j_272
_103 = { NULL NONLOCAL } same as j_272
_104 = { NONLOCAL }
_105 = { ESCAPED NONLOCAL }
_106 = { ESCAPED NONLOCAL }
i_113 = { NULL NONLOCAL } same as j_272
i_144 = { NULL NONLOCAL } same as j_272
ii_253 = { NULL NONLOCAL } same as j_272
ii_170 = { NULL NONLOCAL } same as j_272
_119 = { NULL NONLOCAL } same as j_272
_120 = { NULL NONLOCAL } same as j_272
_121 = { indx } same as _93
ip_122 = { NULL NONLOCAL }
_123 = { NULL NONLOCAL } same as ip_122
_124 = { NULL NONLOCAL }
_125 = { NONLOCAL }
sum_126 = { ESCAPED NONLOCAL }
_127 = { NULL NONLOCAL } same as j_272
_128 = { NONLOCAL }
_129 = { ESCAPED NONLOCAL } same as sum_126
_131 = { NULL NONLOCAL } same as j_272
_132 = { NONLOCAL }
j_254 = { NULL NONLOCAL } same as j_272
j_142 = { NULL NONLOCAL } same as j_272
sum_203 = { ESCAPED NONLOCAL } same as sum_126
sum_141 = { ESCAPED NONLOCAL } same as sum_126
_134 = { ESCAPED NONLOCAL }
_135 = { NULL NONLOCAL } same as j_272
_136 = { NULL NONLOCAL } same as j_272
_137 = { NONLOCAL }
_138 = { ESCAPED NONLOCAL }
_139 = { ESCAPED NONLOCAL }
sum_143 = { ESCAPED NONLOCAL } same as sum_126
i_22 = { NONLOCAL } same as a
i_246 = { NONLOCAL } same as a
i_169 = { NONLOCAL } same as a
i_286 = { NONLOCAL } same as a
_147 = { NONLOCAL } same as a
_148 = { NONLOCAL } same as a
_149 = { NONLOCAL }
sum_150 = { ESCAPED NONLOCAL }
j_151 = { NONLOCAL } same as a
_152 = { NONLOCAL } same as a
_153 = { NONLOCAL }
j_287 = { NONLOCAL } same as a
j_163 = { NONLOCAL } same as a
sum_288 = { ESCAPED NONLOCAL } same as sum_150
sum_162 = { ESCAPED NONLOCAL } same as sum_150
_155 = { ESCAPED NONLOCAL }
_156 = { NONLOCAL } same as a
_157 = { NONLOCAL } same as a
_158 = { NONLOCAL }
_159 = { ESCAPED NONLOCAL }
_160 = { ESCAPED NONLOCAL }
_164 = { NONLOCAL } same as a
_165 = { NONLOCAL }
_166 = { ESCAPED NONLOCAL }
_168 = { ESCAPED NONLOCAL } same as sum_150
_4 = { NULL NONLOCAL } same as j_272
_140 = { NONLOCAL } same as a
_133 = { NONLOCAL }
_146 = { ESCAPED NONLOCAL }
_161 = { ESCAPED NONLOCAL } same as sum_150


Alias information for lusolve.constprop

Aliased symbols

indx, UID D.6674, int[101], is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

a_1(D), points-to non-local, points-to NULL, points-to vars: { }
b_3(D), points-to non-local, points-to NULL, points-to vars: { }
_14, points-to non-local, points-to NULL, points-to vars: { }
LUtempvv.215_21, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_24, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_28, points-to non-local, points-to NULL, points-to vars: { }
_31, points-to non-local, points-to NULL, points-to vars: { }
_37, points-to non-local, points-to NULL, points-to vars: { }
_48, points-to non-local, points-to NULL, points-to vars: { }
_54, points-to non-local, points-to NULL, points-to vars: { }
_63, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_72, points-to non-local, points-to NULL, points-to vars: { }
_77, points-to non-local, points-to NULL, points-to vars: { }
_85, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_89, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_93, points-to NULL, points-to vars: { D.6674 }
_95, points-to non-local, points-to NULL, points-to vars: { }
_104, points-to non-local, points-to NULL, points-to vars: { }
_121, points-to NULL, points-to vars: { D.6674 }
_125, points-to non-local, points-to NULL, points-to vars: { }
_128, points-to non-local, points-to NULL, points-to vars: { }
_132, points-to non-local, points-to NULL, points-to vars: { }
_133, points-to non-local, points-to NULL, points-to vars: { }
_137, points-to non-local, points-to NULL, points-to vars: { }
_149, points-to non-local, points-to NULL, points-to vars: { }
_153, points-to non-local, points-to NULL, points-to vars: { }
_158, points-to non-local, points-to NULL, points-to vars: { }
_165, points-to non-local, points-to NULL, points-to vars: { }

;; 14 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 60 3 61 4 5 6 62 7 47 59 8 9 63 10 48 11 65 54 64 12 13 66 14 15 16 50 17 68 58 67 18 69 19 20 57 21 70 49 22 56 23 24 71 25 26 72 27 28 55 29 73 30 31 32 74 46 33 75 53 34 76 35 36 52 45 77 37 44 38 39 51 40 78 41 42 43
;;
;; Loop 10
;;  header 44, latch 37
;;  depth 1, outer 0
;;  nodes: 44 37 42 77 40 39 51 38
;;
;; Loop 11
;;  header 39, latch 51
;;  depth 2, outer 10
;;  nodes: 39 51
;;
;; Loop 12
;;  header 31, latch 52
;;  depth 1, outer 0
;;  nodes: 31 52 36 75 76 35 74 32 34 33 53 46
;;
;; Loop 13
;;  header 33, latch 53
;;  depth 2, outer 12
;;  nodes: 33 53
;;
;; Loop 1
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14 66 63 9 29 28 55 27 26 71 25 24 70 23 22 56 49 21 20 69 19 18 67 68 17 58 50 16 57 13 12 43 64 65 11 54 48 10
;;
;; Loop 6
;;  header 13, latch 12
;;  depth 2, outer 1
;;  nodes: 13 12 64 65 11 54 48 10
;;
;; Loop 7
;;  header 11, latch 54
;;  depth 3, outer 6
;;  nodes: 11 54
;;
;; Loop 2
;;  header 28, latch 55
;;  depth 2, outer 1
;;  nodes: 28 55
;;
;; Loop 3
;;  header 22, latch 56
;;  depth 2, outer 1
;;  nodes: 22 56
;;
;; Loop 4
;;  header 16, latch 57
;;  depth 2, outer 1
;;  nodes: 16 57 20 69 19 18 67 68 17 58 50
;;
;; Loop 5
;;  header 17, latch 58
;;  depth 3, outer 4
;;  nodes: 17 58
;;
;; Loop 8
;;  header 8, latch 59
;;  depth 1, outer 0
;;  nodes: 8 59 7 6 5 61 4 3 60
;;
;; Loop 9
;;  header 3, latch 60
;;  depth 2, outer 8
;;  nodes: 3 60 5 61 4
;; 2 succs { 8 }
;; 60 succs { 3 }
;; 3 succs { 4 61 }
;; 61 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 60 6 }
;; 6 succs { 62 7 }
;; 62 succs { 41 }
;; 7 succs { 59 47 }
;; 47 succs { 15 }
;; 59 succs { 8 }
;; 8 succs { 3 }
;; 9 succs { 43 63 }
;; 63 succs { 14 }
;; 10 succs { 48 64 }
;; 48 succs { 11 }
;; 11 succs { 54 65 }
;; 65 succs { 12 }
;; 54 succs { 11 }
;; 64 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 10 66 }
;; 66 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 50 67 }
;; 50 succs { 17 }
;; 17 succs { 58 68 }
;; 68 succs { 18 }
;; 58 succs { 17 }
;; 67 succs { 18 }
;; 18 succs { 19 69 }
;; 69 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 57 21 }
;; 57 succs { 16 }
;; 21 succs { 49 70 }
;; 70 succs { 24 }
;; 49 succs { 22 }
;; 22 succs { 56 23 }
;; 56 succs { 22 }
;; 23 succs { 24 }
;; 24 succs { 25 71 }
;; 71 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 72 }
;; 72 succs { 30 }
;; 27 succs { 28 }
;; 28 succs { 55 29 }
;; 55 succs { 28 }
;; 29 succs { 9 73 }
;; 73 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 32 34 }
;; 32 succs { 46 74 }
;; 74 succs { 36 }
;; 46 succs { 33 }
;; 33 succs { 53 75 }
;; 75 succs { 36 }
;; 53 succs { 33 }
;; 34 succs { 35 76 }
;; 76 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 52 45 }
;; 52 succs { 31 }
;; 45 succs { 44 }
;; 77 succs { 37 }
;; 37 succs { 44 }
;; 44 succs { 38 42 }
;; 38 succs { 39 }
;; 39 succs { 51 40 }
;; 51 succs { 39 }
;; 40 succs { 77 78 }
;; 78 succs { 41 }
;; 41 succs { 1 }
;; 42 succs { 37 }
;; 43 succs { 13 }
find_duplicates: <bb 72> duplicate of <bb 73>
Removing basic block 73

Symbols to be put in SSA form
{ D.6670 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 79
Number of blocks to update: 77 ( 97%)


Removing basic block 4
Removing basic block 19
Removing basic block 35
Removing basic block 43
Removing basic block 45
Removing basic block 47
Removing basic block 48
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 66
Removing basic block 67
Removing basic block 68
Removing basic block 70
Removing basic block 71
Merging blocks 72 and 30
Removing basic block 74
Removing basic block 75
Removing basic block 77
Removing basic block 78
lusolve.constprop (double[101] * a, double * b)
{
  double sum;
  int ii;
  int ip;
  int j;
  int i;
  int imax;
  int k;
  int j;
  int i;
  double dum;
  double sum;
  double big;
  int D.7508;
  int indx[101];
  int d;
  int _4;
  long unsigned int _12;
  long unsigned int _13;
  double[101] * _14;
  double _16;
  double _17;
  fardouble * LUtempvv.215_21;
  long unsigned int _23;
  fardouble * _24;
  double _25;
  double[101] * _28;
  long unsigned int _29;
  long unsigned int _30;
  double[101] * _31;
  double _34;
  long unsigned int _35;
  long unsigned int _36;
  double[101] * _37;
  double _38;
  double _39;
  long unsigned int _46;
  long unsigned int _47;
  double[101] * _48;
  double _51;
  long unsigned int _52;
  long unsigned int _53;
  double[101] * _54;
  double _55;
  double _56;
  long unsigned int _62;
  fardouble * _63;
  double _64;
  double _65;
  long unsigned int _70;
  long unsigned int _71;
  double[101] * _72;
  double _78;
  long unsigned int _84;
  fardouble * _85;
  long unsigned int _88;
  fardouble * _89;
  double _90;
  long unsigned int _92;
  int * _93;
  double _96;
  long unsigned int _102;
  long unsigned int _103;
  double[101] * _104;
  double _105;
  double _106;
  long unsigned int _119;
  long unsigned int _120;
  int * _121;
  long unsigned int _123;
  long unsigned int _124;
  double * _125;
  long unsigned int _127;
  double * _128;
  double _129;
  long unsigned int _131;
  double[101] * _132;
  double _134;
  long unsigned int _135;
  long unsigned int _136;
  double * _137;
  double _138;
  double _139;
  long unsigned int _147;
  long unsigned int _148;
  double * _149;
  double _155;
  long unsigned int _156;
  long unsigned int _157;
  double * _158;
  double _159;
  double _160;
  double _161;
  double _168;
  long unsigned int _353;
  long unsigned int _354;
  double[101] * _355;
  double prephitmp_357;
  long unsigned int _376;
  double[101] * _377;
  double pretmp_378;
  int _379;
  double pretmp_398;

  <bb 2> [0.93%]:
  LUtempvv.215_21 = LUtempvv;
  goto <bb 8>; [100.00%]

  <bb 3> [33.94%]:
  # j_272 = PHI <j_19(5), 0(8)>
  # big_273 = PHI <big_110(5), 0.0(8)>
  _16 = *_14[j_272];
  _17 = ABS_EXPR <_16>;
  if (_17 > big_273)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [16.97%]:

  <bb 5> [33.94%]:
  # big_110 = PHI <big_273(4), _17(3)>
  j_19 = j_272 + 1;
  if (j_19 != 101)
    goto <bb 3>; [82.35%]
  else
    goto <bb 6>; [17.65%]

  <bb 6> [5.99%]:
  if (big_110 == 0.0)
    goto <bb 44>; [7.50%]
  else
    goto <bb 7>; [92.50%]

  <bb 7> [5.55%]:
  _23 = _12 * 8;
  _24 = LUtempvv.215_21 + _23;
  _25 = 1.0e+0 / big_110;
  *_24 = _25;
  i_26 = i_271 + 1;
  if (i_26 != 101)
    goto <bb 8>; [91.24%]
  else
    goto <bb 15>; [8.76%]

  <bb 8> [5.99%]:
  # i_271 = PHI <i_26(7), 0(2)>
  _12 = (long unsigned int) i_271;
  _13 = _12 * 808;
  _14 = a_1(D) + _13;
  goto <bb 3>; [100.00%]

  <bb 9> [2.26%]:
  pretmp_398 = *a_1(D)[i_100];
  if (i_100 != 0)
    goto <bb 13>; [100.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 10> [12.35%]:
  _29 = (long unsigned int) i_44;
  _30 = _29 * 808;
  _31 = a_1(D) + _30;
  sum_32 = *_31[i_100];
  if (i_44 != 0)
    goto <bb 11>; [100.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 11> [81.76%]:
  # k_276 = PHI <k_42(11), 0(10)>
  # sum_277 = PHI <sum_41(11), sum_32(10)>
  _34 = *_31[k_276];
  _35 = (long unsigned int) k_276;
  _36 = _35 * 808;
  _37 = a_1(D) + _36;
  _38 = *_37[i_100];
  _39 = _34 * _38;
  sum_41 = sum_277 - _39;
  k_42 = k_276 + 1;
  if (k_42 < i_44)
    goto <bb 11>; [82.35%]
  else
    goto <bb 12>; [17.65%]

  <bb 12> [14.43%]:
  # sum_117 = PHI <sum_32(10), sum_41(11)>

  <bb 13> [15.00%]:
  # sum_43 = PHI <sum_117(12), pretmp_398(9)>
  # _28 = PHI <_31(12), a_1(D)(9)>
  # i_40 = PHI <i_44(12), 0(9)>
  *_28[i_100] = sum_43;
  i_44 = i_40 + 1;
  if (i_44 < i_100)
    goto <bb 10>; [82.35%]
  else
    goto <bb 14>; [17.65%]

  <bb 14> [2.65%]:
  # i_57 = PHI <i_100(13), 0(9)>

  <bb 15> [2.75%]:
  # i_69 = PHI <i_57(14), 0(7)>
  # j_33 = PHI <i_100(14), 0(7)>
  # imax_268 = PHI <imax_116(14), 0(7)>

  <bb 16> [15.59%]:
  # i_278 = PHI <i_69(15), i_68(20)>
  # big_281 = PHI <0.0(15), big_115(20)>
  # imax_285 = PHI <imax_268(15), imax_116(20)>
  _46 = (long unsigned int) i_278;
  _47 = _46 * 808;
  _48 = a_1(D) + _47;
  sum_49 = *_48[j_33];
  if (j_33 != 0)
    goto <bb 17>; [96.19%]
  else
    goto <bb 18>; [3.81%]

  <bb 17> [85.00%]:
  # k_279 = PHI <k_59(17), 0(16)>
  # sum_280 = PHI <sum_58(17), sum_49(16)>
  _51 = *_48[k_279];
  _52 = (long unsigned int) k_279;
  _53 = _52 * 808;
  _54 = a_1(D) + _53;
  _55 = *_54[j_33];
  _56 = _51 * _55;
  sum_58 = sum_280 - _56;
  k_59 = k_279 + 1;
  if (j_33 > k_59)
    goto <bb 17>; [82.35%]
  else
    goto <bb 18>; [17.65%]

  <bb 18> [15.59%]:
  # sum_60 = PHI <sum_49(16), sum_58(17)>
  *_48[j_33] = sum_60;
  _62 = _46 * 8;
  _63 = LUtempvv.215_21 + _62;
  _64 = *_63;
  _65 = ABS_EXPR <sum_60>;
  dum_66 = _64 * _65;
  if (dum_66 >= big_281)
    goto <bb 20>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 19> [7.80%]:

  <bb 20> [15.60%]:
  # big_115 = PHI <big_281(19), dum_66(18)>
  # imax_116 = PHI <imax_285(19), i_278(18)>
  i_68 = i_278 + 1;
  if (i_68 <= 100)
    goto <bb 16>; [82.36%]
  else
    goto <bb 21>; [17.64%]

  <bb 21> [2.75%]:
  _353 = (long unsigned int) j_33;
  _354 = _353 * 808;
  _355 = a_1(D) + _354;
  if (j_33 != imax_116)
    goto <bb 22>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 22> [1.38%]:
  _70 = (long unsigned int) imax_116;
  _71 = _70 * 808;
  _72 = a_1(D) + _71;

  <bb 23> [7.80%]:
  # k_282 = PHI <k_79(23), 0(22)>
  dum_74 = *_72[k_282];
  _78 = *_355[k_282];
  *_72[k_282] = _78;
  *_355[k_282] = dum_74;
  k_79 = k_282 + 1;
  if (k_79 != 101)
    goto <bb 23>; [82.34%]
  else
    goto <bb 24>; [17.66%]

  <bb 24> [1.38%]:
  _84 = _70 * 8;
  _85 = LUtempvv.215_21 + _84;
  dum_86 = *_85;
  _88 = _353 * 8;
  _89 = LUtempvv.215_21 + _88;
  _90 = *_89;
  *_85 = _90;
  *_89 = dum_86;

  <bb 25> [2.75%]:
  _92 = _353 * 4;
  _93 = &indx + _92;
  *_93 = imax_116;
  _96 = *_355[j_33];
  if (_96 == 0.0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 26> [1.38%]:
  *_355[j_33] = 9.99999999999999945153271454209571651729503702787392447108e-21;

  <bb 27> [2.75%]:
  # prephitmp_357 = PHI <_96(25), 9.99999999999999945153271454209571651729503702787392447108e-21(26)>
  if (j_33 != 100)
    goto <bb 29>; [98.00%]
  else
    goto <bb 28>; [2.00%]

  <bb 28> [0.49%]:
  goto <bb 32>; [100.00%]

  <bb 29> [2.70%]:
  dum_99 = 1.0e+0 / prephitmp_357;
  i_100 = j_33 + 1;

  <bb 30> [15.28%]:
  # i_283 = PHI <i_107(30), i_100(29)>
  _102 = (long unsigned int) i_283;
  _103 = _102 * 808;
  _104 = a_1(D) + _103;
  _105 = *_104[j_33];
  _106 = dum_99 * _105;
  *_104[j_33] = _106;
  i_107 = i_283 + 1;
  if (i_107 <= 100)
    goto <bb 30>; [82.35%]
  else
    goto <bb 31>; [17.65%]

  <bb 31> [2.69%]:
  if (i_100 != 101)
    goto <bb 9>; [84.01%]
  else
    goto <bb 28>; [15.99%]

  <bb 32> [1.94%]:
  # i_113 = PHI <i_144(38), 0(28)>
  # ii_253 = PHI <ii_170(38), -1(28)>
  _119 = (long unsigned int) i_113;
  _120 = _119 * 4;
  _121 = &indx + _120;
  ip_122 = *_121;
  _123 = (long unsigned int) ip_122;
  _124 = _123 * 8;
  _125 = b_3(D) + _124;
  sum_126 = *_125;
  _127 = _119 * 8;
  _128 = b_3(D) + _127;
  _129 = *_128;
  *_125 = _129;
  if (ii_253 != -1)
    goto <bb 33>; [50.00%]
  else
    goto <bb 36>; [50.00%]

  <bb 33> [0.97%]:
  if (i_113 > ii_253)
    goto <bb 34>; [85.00%]
  else
    goto <bb 38>; [15.00%]

  <bb 34> [0.82%]:
  _131 = _119 * 808;
  _132 = a_1(D) + _131;

  <bb 35> [5.50%]:
  # j_254 = PHI <j_142(35), ii_253(34)>
  # sum_203 = PHI <sum_141(35), sum_126(34)>
  _134 = *_132[j_254];
  _135 = (long unsigned int) j_254;
  _136 = _135 * 8;
  _137 = b_3(D) + _136;
  _138 = *_137;
  _139 = _134 * _138;
  sum_141 = sum_203 - _139;
  j_142 = j_254 + 1;
  if (i_113 > j_142)
    goto <bb 35>; [85.00%]
  else
    goto <bb 38>; [15.00%]

  <bb 36> [0.97%]:
  if (sum_126 != 0.0)
    goto <bb 38>; [50.00%]
  else
    goto <bb 37>; [50.00%]

  <bb 37> [0.49%]:

  <bb 38> [1.94%]:
  # ii_170 = PHI <ii_253(35), -1(37), i_113(36), ii_253(33)>
  # sum_143 = PHI <sum_141(35), sum_126(37), sum_126(36), sum_126(33)>
  *_128 = sum_143;
  i_144 = i_113 + 1;
  if (i_144 != 101)
    goto <bb 32>; [85.00%]
  else
    goto <bb 40>; [15.00%]

  <bb 39> [1.60%]:

  <bb 40> [1.94%]:
  # i_286 = PHI <_379(39), 100(38)>
  _147 = (long unsigned int) i_286;
  _148 = _147 * 8;
  _149 = b_3(D) + _148;
  sum_150 = *_149;
  _376 = _147 * 808;
  _377 = a_1(D) + _376;
  pretmp_378 = *_377[i_286];
  _379 = i_286 + -1;
  if (i_286 != 100)
    goto <bb 41>; [98.00%]
  else
    goto <bb 45>; [2.00%]

  <bb 41> [1.90%]:
  j_151 = i_286 + 1;

  <bb 42> [10.78%]:
  # j_287 = PHI <j_163(42), j_151(41)>
  # sum_288 = PHI <sum_162(42), sum_150(41)>
  _155 = *_377[j_287];
  _156 = (long unsigned int) j_287;
  _157 = _156 * 8;
  _158 = b_3(D) + _157;
  _159 = *_158;
  _160 = _155 * _159;
  sum_162 = sum_288 - _160;
  j_163 = j_287 + 1;
  if (j_163 != 101)
    goto <bb 42>; [82.36%]
  else
    goto <bb 43>; [17.64%]

  <bb 43> [1.90%]:
  _168 = sum_162 / pretmp_378;
  *_149 = _168;
  if (_379 != -1)
    goto <bb 39>; [82.01%]
  else
    goto <bb 44>; [17.99%]

  <bb 44> [0.93%]:
  # _4 = PHI <0(6), 1(43)>
  indx ={v} {CLOBBER};
  return _4;

  <bb 45> [0.04%]:
  _161 = sum_150 / pretmp_378;
  *_149 = _161;
  goto <bb 39>; [100.00%]

}



;; Function DoFPUTransIteration (DoFPUTransIteration, funcdef_no=70, decl_uid=4582, cgraph_uid=70, symbol_order=95)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
abase = &NONLOCAL
bbase = &NONLOCAL
arraysize = &NONLOCAL
elapsed_14 = NONLOCAL
x_89 = x_34
x_89 = &NONLOCAL
rvalue_224 = rvalue_37
rvalue_224 = &NONLOCAL
nsteps_225 = nsteps_39
nsteps_225 = &NONLOCAL
x_34 = x_89
x_34 = &NONLOCAL
_57 = x_34
_57 = &NONLOCAL
ESCAPED = _57
ESCAPED = x_34
_58 = NONLOCAL
rvalue_37 = _58
rvalue_37 = rvalue_224
nsteps_39 = nsteps_225
nsteps_39 = &NONLOCAL
_43 = rvalue_37
_43 = &NONLOCAL
rvalue_44 = _43
rvalue_44 = &NONLOCAL
_2 = rvalue_44
_2 = &NONLOCAL
*abase = _2
i_219 = i_26
i_219 = &NONLOCAL
_3 = i_219
_4 = _3
_4 = &NONLOCAL
_5 = i_219
_5 = &NONLOCAL
_6 = abase + UNKNOWN
_131 = _4
_131 = &NONLOCAL
callarg(33) = _131
sincostmp_198 = callarg(33) + UNKNOWN
sincostmp_198 = &NONLOCAL
_132 = sincostmp_198
rvalue_103 = _132
rvalue_103 = &NONLOCAL
x_28 = x_106
x_28 = &NONLOCAL
rvalue_29 = rvalue_109
rvalue_29 = rvalue_103
nsteps_46 = nsteps_111
nsteps_46 = &NONLOCAL
x_106 = x_28
x_106 = &NONLOCAL
_147 = x_106
_147 = &NONLOCAL
ESCAPED = _147
ESCAPED = x_106
_148 = NONLOCAL
_149 = _4
_149 = x_106
callarg(47) = _149
_150 = callarg(47) + UNKNOWN
_150 = &NONLOCAL
_151 = _148
_151 = _150
rvalue_109 = rvalue_29
rvalue_109 = _151
nsteps_111 = nsteps_46
nsteps_111 = &NONLOCAL
_167 = _4
_167 = &NONLOCAL
callarg(51) = _167
sincostmp_176 = callarg(51) + UNKNOWN
sincostmp_176 = &NONLOCAL
_168 = sincostmp_176
_169 = _168
_169 = &NONLOCAL
_113 = _169
_113 = &NONLOCAL
_115 = rvalue_109
_115 = _113
rvalue_116 = _115
rvalue_116 = &NONLOCAL
*_6 = rvalue_116
_8 = bbase + UNKNOWN
_177 = sincostmp_198
rvalue_85 = _177
rvalue_85 = &NONLOCAL
x_107 = x_88
x_107 = &NONLOCAL
rvalue_227 = rvalue_91
rvalue_227 = rvalue_85
nsteps_27 = nsteps_93
nsteps_27 = &NONLOCAL
x_88 = x_107
x_88 = &NONLOCAL
_185 = x_88
_185 = &NONLOCAL
ESCAPED = _185
ESCAPED = x_88
_186 = NONLOCAL
_187 = _4
_187 = x_88
callarg(71) = _187
_188 = callarg(71) + UNKNOWN
_188 = &NONLOCAL
_189 = _186
_189 = _188
rvalue_91 = _189
rvalue_91 = rvalue_227
nsteps_93 = nsteps_27
nsteps_93 = &NONLOCAL
_199 = sincostmp_176
_200 = _199
_200 = &NONLOCAL
_95 = _200
_95 = &NONLOCAL
_97 = rvalue_91
_97 = _95
rvalue_98 = _97
rvalue_98 = &NONLOCAL
*_8 = rvalue_98
i_26 = i_219
i_26 = &NONLOCAL
ESCAPED = elapsed_14
_20 = NONLOCAL
ESCAPED = _20

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED";
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"abase"[label="abase = { 5 }"];
"bbase"[label="bbase = { 5 }"];
"arraysize"[label="arraysize = { 5 }"];
"StartStopwatch";
"elapsed_14";
"x_34"[label="x_34 = { 5 }"];
"rvalue_224"[label="rvalue_224 = { 5 }"];
"nsteps_225"[label="nsteps_225 = { 5 }"];
"_57"[label="_57 = { 5 }"];
"pow";
"_58";
"_43"[label="_43 = { 5 }"];
"rvalue_44"[label="rvalue_44 = { 5 }"];
"_2"[label="_2 = { 5 }"];
"i_219"[label="i_219 = { 5 }"];
"_3";
"_4"[label="_4 = { 5 }"];
"_5"[label="_5 = { 5 }"];
"_6";
"_131"[label="_131 = { 5 }"];
"__builtin_cexpi";
"callarg(33)";
"sincostmp_198"[label="sincostmp_198 = { 5 }"];
"_132";
"rvalue_103"[label="rvalue_103 = { 5 }"];
"x_106"[label="x_106 = { 5 }"];
"rvalue_29";
"nsteps_46"[label="nsteps_46 = { 5 }"];
"_147"[label="_147 = { 5 }"];
"_148";
"_149";
"cos";
"callarg(47)";
"_150"[label="_150 = { 5 }"];
"_151";
"_167"[label="_167 = { 5 }"];
"callarg(51)";
"sincostmp_176"[label="sincostmp_176 = { 5 }"];
"_168";
"_169"[label="_169 = { 5 }"];
"_113"[label="_113 = { 5 }"];
"_115";
"rvalue_116"[label="rvalue_116 = { 5 }"];
"_8";
"_177";
"rvalue_85"[label="rvalue_85 = { 5 }"];
"x_88"[label="x_88 = { 5 }"];
"rvalue_227";
"nsteps_27"[label="nsteps_27 = { 5 }"];
"_185"[label="_185 = { 5 }"];
"_186";
"_187";
"sin";
"callarg(71)";
"_188"[label="_188 = { 5 }"];
"_189";
"_199";
"_200"[label="_200 = { 5 }"];
"_95"[label="_95 = { 5 }"];
"_97";
"rvalue_98"[label="rvalue_98 = { 5 }"];
"StopStopwatch";
"_20";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*abase";
"*bbase";
"*arraysize";
"*StartStopwatch";
"*x_34";
"*rvalue_224";
"*rvalue_37";
"*nsteps_225";
"*nsteps_39";
"*_57";
"*pow";
"*_58";
"*_43";
"*rvalue_44";
"*_2";
"*i_219";
"*i_26";
"*_3";
"*_4";
"*_5";
"*_6";
"*_131";
"*__builtin_cexpi";
"*callarg(33)";
"*sincostmp_198";
"*_132";
"*rvalue_103";
"*x_106";
"*rvalue_29";
"*rvalue_109";
"*nsteps_46";
"*nsteps_111";
"*_147";
"*_148";
"*_149";
"*cos";
"*callarg(47)";
"*_150";
"*_151";
"*_167";
"*callarg(51)";
"*sincostmp_176";
"*_168";
"*_169";
"*_113";
"*_115";
"*rvalue_116";
"*_8";
"*_177";
"*rvalue_85";
"*x_88";
"*rvalue_227";
"*rvalue_91";
"*nsteps_27";
"*nsteps_93";
"*_185";
"*_186";
"*_187";
"*sin";
"*callarg(71)";
"*_188";
"*_189";
"*_199";
"*_200";
"*_95";
"*_97";
"*rvalue_98";
"*StopStopwatch";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"elapsed_14" -> "ESCAPED";
"x_34" -> "ESCAPED";
"_57" -> "ESCAPED";
"x_106" -> "ESCAPED";
"_147" -> "ESCAPED";
"x_88" -> "ESCAPED";
"_185" -> "ESCAPED";
"_20" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"NONLOCAL" -> "elapsed_14";
"x_34" -> "x_34";
"x_34" -> "x_34";
"rvalue_224" -> "rvalue_224";
"rvalue_224" -> "rvalue_224";
"_58" -> "rvalue_224";
"nsteps_225" -> "nsteps_225";
"nsteps_225" -> "nsteps_225";
"x_34" -> "_57";
"NONLOCAL" -> "_58";
"rvalue_224" -> "_43";
"_43" -> "rvalue_44";
"rvalue_44" -> "_2";
"i_219" -> "i_219";
"i_219" -> "i_219";
"i_219" -> "_3";
"_3" -> "_4";
"i_219" -> "_5";
"_4" -> "_131";
"_131" -> "callarg(33)";
"sincostmp_198" -> "_132";
"_132" -> "rvalue_103";
"x_106" -> "x_106";
"x_106" -> "x_106";
"rvalue_103" -> "rvalue_29";
"rvalue_29" -> "rvalue_29";
"rvalue_29" -> "rvalue_29";
"_151" -> "rvalue_29";
"nsteps_46" -> "nsteps_46";
"nsteps_46" -> "nsteps_46";
"x_106" -> "_147";
"NONLOCAL" -> "_148";
"_4" -> "_149";
"x_106" -> "_149";
"_149" -> "callarg(47)";
"_148" -> "_151";
"_150" -> "_151";
"_4" -> "_167";
"_167" -> "callarg(51)";
"sincostmp_176" -> "_168";
"_168" -> "_169";
"_169" -> "_113";
"rvalue_29" -> "_115";
"_113" -> "_115";
"_115" -> "rvalue_116";
"sincostmp_198" -> "_177";
"_177" -> "rvalue_85";
"x_88" -> "x_88";
"x_88" -> "x_88";
"rvalue_85" -> "rvalue_227";
"rvalue_227" -> "rvalue_227";
"rvalue_227" -> "rvalue_227";
"_189" -> "rvalue_227";
"nsteps_27" -> "nsteps_27";
"nsteps_27" -> "nsteps_27";
"x_88" -> "_185";
"NONLOCAL" -> "_186";
"_4" -> "_187";
"x_88" -> "_187";
"_187" -> "callarg(71)";
"_186" -> "_189";
"_188" -> "_189";
"sincostmp_176" -> "_199";
"_199" -> "_200";
"_200" -> "_95";
"rvalue_227" -> "_97";
"_95" -> "_97";
"_97" -> "rvalue_98";
"NONLOCAL" -> "_20";
"_2" -> "*abase";
"rvalue_116" -> "*_6";
"rvalue_98" -> "*_8";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_6 = abase + UNKNOWN\lsincostmp_198 = abase + UNKNOWN\l_150 = abase + UNKNOWN\lsincostmp_176 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l_188 = abase + UNKNOWN\l*abase = elapsed_14\l"];
"StartStopwatch";
"elapsed_14";
"pow";
"_6" [label="\N\n*_6 = _115\l"];
"__builtin_cexpi";
"sincostmp_198";
"rvalue_29";
"cos";
"_150";
"_151";
"sincostmp_176";
"_115";
"_8" [label="\N\n*_8 = _97\l"];
"rvalue_227";
"sin";
"_188";
"_189";
"_97";
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_6";
"STOREDANYTHING" -> "sincostmp_198";
"STOREDANYTHING" -> "_150";
"STOREDANYTHING" -> "sincostmp_176";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_188";
"abase" -> "ESCAPED";
"elapsed_14" -> "ESCAPED";
"elapsed_14" -> "_151";
"elapsed_14" -> "_189";
"sincostmp_198" -> "rvalue_29";
"sincostmp_198" -> "rvalue_227";
"rvalue_29" -> "_115";
"_150" -> "_151";
"_151" -> "rvalue_29";
"sincostmp_176" -> "_115";
"sincostmp_176" -> "_97";
"rvalue_227" -> "_97";
"_188" -> "_189";
"_189" -> "rvalue_227";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = elapsed_14\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_6 = abase + UNKNOWN\lsincostmp_198 = abase + UNKNOWN\l_150 = abase + UNKNOWN\lsincostmp_176 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l_188 = abase + UNKNOWN\l*abase = elapsed_14\l"];
"StartStopwatch";
"elapsed_14";
"pow";
"_6" [label="\N\n*_6 = _115\l"];
"__builtin_cexpi";
"sincostmp_198";
"rvalue_29";
"cos";
"_150";
"_151";
"sincostmp_176";
"_115";
"_8" [label="\N\n*_8 = _97\l"];
"rvalue_227";
"sin";
"_188";
"_189";
"_97";
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_6";
"STOREDANYTHING" -> "sincostmp_198";
"STOREDANYTHING" -> "_150";
"STOREDANYTHING" -> "sincostmp_176";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_188";
"abase" -> "ESCAPED";
"elapsed_14" -> "ESCAPED";
"elapsed_14" -> "_151";
"elapsed_14" -> "_189";
"sincostmp_198" -> "rvalue_29";
"sincostmp_198" -> "rvalue_227";
"rvalue_29" -> "_115";
"_150" -> "_151";
"_151" -> "rvalue_29";
"sincostmp_176" -> "_115";
"sincostmp_176" -> "_97";
"_115" -> "ESCAPED";
"rvalue_227" -> "_97";
"_188" -> "_189";
"_189" -> "rvalue_227";
"_97" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as elapsed_14
STOREDANYTHING = { }
INTEGER = { ANYTHING }
abase = { NONLOCAL }
bbase = { NONLOCAL } same as abase
arraysize = { NONLOCAL } same as abase
StartStopwatch = { }
elapsed_14 = { ESCAPED NONLOCAL }
x_89 = { NONLOCAL } same as abase
x_34 = { NONLOCAL } same as abase
rvalue_224 = { ESCAPED NONLOCAL } same as elapsed_14
rvalue_37 = { ESCAPED NONLOCAL } same as elapsed_14
nsteps_225 = { NONLOCAL } same as abase
nsteps_39 = { NONLOCAL } same as abase
_57 = { NONLOCAL } same as abase
pow = { }
_58 = { ESCAPED NONLOCAL } same as elapsed_14
_43 = { ESCAPED NONLOCAL } same as elapsed_14
rvalue_44 = { ESCAPED NONLOCAL } same as elapsed_14
_2 = { ESCAPED NONLOCAL } same as elapsed_14
i_219 = { NONLOCAL } same as abase
i_26 = { NONLOCAL } same as abase
_3 = { NONLOCAL } same as abase
_4 = { NONLOCAL } same as abase
_5 = { NONLOCAL } same as abase
_6 = { NONLOCAL }
_131 = { NONLOCAL } same as abase
__builtin_cexpi = { }
callarg(33) = { NONLOCAL } same as abase
sincostmp_198 = { NONLOCAL }
_132 = { NONLOCAL } same as sincostmp_198
rvalue_103 = { NONLOCAL } same as sincostmp_198
x_28 = { NONLOCAL } same as abase
x_106 = { NONLOCAL } same as abase
rvalue_29 = { ESCAPED NONLOCAL }
rvalue_109 = { ESCAPED NONLOCAL } same as rvalue_29
nsteps_46 = { NONLOCAL } same as abase
nsteps_111 = { NONLOCAL } same as abase
_147 = { NONLOCAL } same as abase
_148 = { ESCAPED NONLOCAL } same as elapsed_14
_149 = { NONLOCAL } same as abase
cos = { }
callarg(47) = { NONLOCAL } same as abase
_150 = { NONLOCAL }
_151 = { ESCAPED NONLOCAL }
_167 = { NONLOCAL } same as abase
callarg(51) = { NONLOCAL } same as abase
sincostmp_176 = { NONLOCAL }
_168 = { NONLOCAL } same as sincostmp_176
_169 = { NONLOCAL } same as sincostmp_176
_113 = { NONLOCAL } same as sincostmp_176
_115 = { ESCAPED NONLOCAL }
rvalue_116 = { ESCAPED NONLOCAL } same as _115
_8 = { NONLOCAL }
_177 = { NONLOCAL } same as sincostmp_198
rvalue_85 = { NONLOCAL } same as sincostmp_198
x_107 = { NONLOCAL } same as abase
x_88 = { NONLOCAL } same as abase
rvalue_227 = { ESCAPED NONLOCAL }
rvalue_91 = { ESCAPED NONLOCAL } same as rvalue_227
nsteps_27 = { NONLOCAL } same as abase
nsteps_93 = { NONLOCAL } same as abase
_185 = { NONLOCAL } same as abase
_186 = { ESCAPED NONLOCAL } same as elapsed_14
_187 = { NONLOCAL } same as abase
sin = { }
callarg(71) = { NONLOCAL } same as abase
_188 = { NONLOCAL }
_189 = { ESCAPED NONLOCAL }
_199 = { NONLOCAL } same as sincostmp_176
_200 = { NONLOCAL } same as sincostmp_176
_95 = { NONLOCAL } same as sincostmp_176
_97 = { ESCAPED NONLOCAL }
rvalue_98 = { ESCAPED NONLOCAL } same as _97
StopStopwatch = { }
_20 = { ESCAPED NONLOCAL } same as elapsed_14


Alias information for DoFPUTransIteration

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { }

Flow-insensitive points-to information

_6, points-to non-local, points-to NULL, points-to vars: { }
_8, points-to non-local, points-to NULL, points-to vars: { }
abase_16(D), points-to non-local, points-to NULL, points-to vars: { }
bbase_23(D), points-to non-local, points-to NULL, points-to vars: { }

;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 15 4 11 5 6 14 7 8 13 9 17 12 16 10
;;
;; Loop 1
;;  header 5, latch 12
;;  depth 1, outer 0
;;  nodes: 5 12 9 8 13 7 6 14
;;
;; Loop 3
;;  header 8, latch 13
;;  depth 2, outer 1
;;  nodes: 8 13
;;
;; Loop 4
;;  header 6, latch 14
;;  depth 2, outer 1
;;  nodes: 6 14
;;
;; Loop 2
;;  header 3, latch 15
;;  depth 1, outer 0
;;  nodes: 3 15
;; 2 succs { 3 }
;; 3 succs { 15 4 }
;; 15 succs { 3 }
;; 4 succs { 11 16 }
;; 11 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 14 7 }
;; 14 succs { 6 }
;; 7 succs { 8 }
;; 8 succs { 13 9 }
;; 13 succs { 8 }
;; 9 succs { 12 17 }
;; 17 succs { 10 }
;; 12 succs { 5 }
;; 16 succs { 10 }
;; 10 succs { 1 }
find_duplicates: <bb 16> duplicate of <bb 17>
Removing basic block 17

Symbols to be put in SSA form
{ D.6326 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 18
Number of blocks to update: 16 ( 89%)


Removing basic block 11
Removing basic block 13
Removing basic block 14
Removing basic block 15
Merging blocks 16 and 10
DoFPUTransIteration (fardouble * abase, fardouble * bbase, long unsigned int arraysize)
{
  double D.7821;
  double D.7811;
  double D.7801;
  double D.7795;
  double D.7784;
  double D.7778;
  double D.7767;
  double D.7761;
  double D.7750;
  int nsteps;
  double rvalue;
  double dx;
  double x;
  double D.7746;
  int nsteps;
  double rvalue;
  double dx;
  double x;
  double D.7737;
  double D.7721;
  double D.7710;
  double D.7699;
  int nsteps;
  double rvalue;
  double dx;
  double x;
  double D.7695;
  long unsigned int elapsed;
  long unsigned int i;
  double _2;
  double _3;
  double _4;
  long unsigned int _5;
  fardouble * _6;
  fardouble * _8;
  long unsigned int _20;
  double _43;
  double _57;
  double _58;
  double _92;
  double _95;
  double _97;
  complex double prephitmp_108;
  double _113;
  double _115;
  double _119;
  double _131;
  double _132;
  double _133;
  double _147;
  double _148;
  double _149;
  double _150;
  double _151;
  double _167;
  double _168;
  double _169;
  complex double sincostmp_176;
  double _177;
  double _185;
  double _186;
  double _187;
  double _188;
  double _189;
  double _199;
  double _200;
  complex double _205;

  <bb 2> [2.65%]:
  elapsed_14 = StartStopwatch ();

  <bb 3> [15.00%]:
  # x_89 = PHI <x_34(3), 0.0(2)>
  # rvalue_224 = PHI <rvalue_37(3), 5.0e-1(2)>
  # nsteps_225 = PHI <nsteps_39(3), 198(2)>
  x_34 = x_89 + 1.00000000000000002081668171172168513294309377670288085938e-2;
  _57 = x_34 + 1.0e+0;
  _58 = pow (_57, x_34);
  rvalue_37 = _58 + rvalue_224;
  nsteps_39 = nsteps_225 + -1;
  if (nsteps_39 != 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 4> [2.65%]:
  _43 = rvalue_37 + 4.5e+0;
  rvalue_44 = _43 * 1.00000000000000002081668171172168513294309377670288085938e-2;
  _2 = rvalue_44 * 5.0e-1;
  *abase_16(D) = _2;
  if (arraysize_18(D) > 1)
    goto <bb 5>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 5> [15.00%]:
  # i_219 = PHI <i_26(10), 1(4)>
  # prephitmp_108 = PHI <_205(10), __complex__ (1.0e+0, 0.0)(4)>
  _3 = (double) i_219;
  _4 = _3 * 3.141592653589793115997963468544185161590576171875e+0;
  _5 = i_219 * 8;
  _6 = abase_16(D) + _5;
  _131 = _4 * 0.0;
  _132 = REALPART_EXPR <prephitmp_108>;
  rvalue_103 = _132 * 5.0e-1;

  <bb 6> [85.00%]:
  # x_28 = PHI <x_106(6), 0.0(5)>
  # rvalue_29 = PHI <rvalue_109(6), rvalue_103(5)>
  # nsteps_46 = PHI <nsteps_111(6), 198(5)>
  x_106 = x_28 + 1.00000000000000002081668171172168513294309377670288085938e-2;
  _147 = x_106 + 1.0e+0;
  _148 = pow (_147, x_106);
  _149 = _4 * x_106;
  _150 = cos (_149);
  _151 = _148 * _150;
  rvalue_109 = rvalue_29 + _151;
  nsteps_111 = nsteps_46 + -1;
  if (nsteps_111 != 0)
    goto <bb 6>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 7> [15.00%]:
  _167 = _4 * 2.0e+0;
  sincostmp_176 = __builtin_cexpi (_167);
  _168 = REALPART_EXPR <sincostmp_176>;
  _169 = _168 * 9.0e+0;
  _113 = _169 * 5.0e-1;
  _115 = rvalue_109 + _113;
  rvalue_116 = _115 * 1.00000000000000002081668171172168513294309377670288085938e-2;
  *_6 = rvalue_116;
  _8 = bbase_23(D) + _5;
  _177 = IMAGPART_EXPR <prephitmp_108>;
  rvalue_85 = _177 * 5.0e-1;

  <bb 8> [85.00%]:
  # x_107 = PHI <x_88(8), 0.0(7)>
  # rvalue_227 = PHI <rvalue_91(8), rvalue_85(7)>
  # nsteps_27 = PHI <nsteps_93(8), 198(7)>
  x_88 = x_107 + 1.00000000000000002081668171172168513294309377670288085938e-2;
  _185 = x_88 + 1.0e+0;
  _186 = pow (_185, x_88);
  _187 = _4 * x_88;
  _188 = sin (_187);
  _189 = _186 * _188;
  rvalue_91 = _189 + rvalue_227;
  nsteps_93 = nsteps_27 + -1;
  if (nsteps_93 != 0)
    goto <bb 8>; [85.00%]
  else
    goto <bb 9>; [15.00%]

  <bb 9> [15.00%]:
  _199 = IMAGPART_EXPR <sincostmp_176>;
  _200 = _199 * 9.0e+0;
  _95 = _200 * 5.0e-1;
  _97 = rvalue_91 + _95;
  rvalue_98 = _97 * 1.00000000000000002081668171172168513294309377670288085938e-2;
  *_8 = rvalue_98;
  i_26 = i_219 + 1;
  if (arraysize_18(D) > i_26)
    goto <bb 10>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 10> [12.75%]:
  _92 = (double) i_26;
  _119 = _92 * 3.141592653589793115997963468544185161590576171875e+0;
  _133 = _119 * 0.0;
  _205 = __builtin_cexpi (_133);
  goto <bb 5>; [100.00%]

  <bb 11> [2.65%]:
  _20 = StopStopwatch (elapsed_14);
  return _20;

}



;; Function cipher_idea (cipher_idea, funcdef_no=88, decl_uid=4647, cgraph_uid=88, symbol_order=113)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
in = &NONLOCAL
out = &NONLOCAL
Z = &NONLOCAL
x1_34 = *in
x2_35 = *in + 16
x3_36 = *in + 32
x4_37 = *in + 48
Z_25 = Z
Z_25 = Z_47
x1_26 = x1_34
x1_26 = x1_49
x2_27 = x2_35
x2_27 = x2_52
x3_28 = x3_36
x3_28 = t2_51
x4_29 = x4_37
x4_29 = x4_50
r_30 = &NONLOCAL
r_30 = r_53
_2 = *Z_25
_3 = _2
_4 = x1_26
_93 = _3
_93 = _4
p_94 = _93
b_95 = _93
_96 = p_94
_96 = &NONLOCAL
a_97 = _96
_98 = b_95
_98 = a_97
_100 = _99
_101 = _98
_101 = _100
_78 = &NONLOCAL
_78 = x1_26
_79 = &NONLOCAL
_79 = _2
_80 = _101
_80 = _78
_80 = _79
_40 = *Z_25 + 16
x2_41 = x2_27
x2_41 = _40
_42 = *Z_25 + 32
x3_43 = x3_28
x3_43 = _42
_5 = *Z_25 + 48
_6 = _5
_7 = x4_29
_107 = _6
_107 = _7
p_108 = _107
b_109 = _107
_110 = p_108
_110 = &NONLOCAL
a_111 = _110
_112 = b_109
_112 = a_111
_114 = _113
_115 = _112
_115 = _114
_71 = &NONLOCAL
_71 = x4_29
_72 = &NONLOCAL
_72 = _5
_73 = _115
_73 = _71
_73 = _72
t2_45 = x3_43
t2_45 = _80
_8 = *Z_25 + 64
_9 = _8
_10 = t2_45
_121 = _9
_121 = _10
p_122 = _121
b_123 = _121
_124 = p_122
_124 = &NONLOCAL
a_125 = _124
_126 = b_123
_126 = a_125
_128 = _127
_129 = _126
_129 = _128
_64 = &NONLOCAL
_64 = t2_45
_65 = &NONLOCAL
_65 = _8
_66 = _129
_66 = _64
_66 = _65
_11 = x2_41
_11 = _73
t1_46 = _11
t1_46 = _66
Z_47 = Z_25 + 96
_12 = *Z_25 + 80
_13 = _12
_14 = t1_46
_135 = _13
_135 = _14
p_136 = _135
b_137 = _135
_138 = p_136
_138 = &NONLOCAL
a_139 = _138
_140 = b_137
_140 = a_139
_142 = _141
_143 = _140
_143 = _142
_39 = &NONLOCAL
_39 = t1_46
_59 = &NONLOCAL
_59 = _12
_60 = _143
_60 = _39
_60 = _59
t2_48 = _60
t2_48 = _66
x1_49 = _60
x1_49 = _80
x4_50 = t2_48
x4_50 = _73
t2_51 = x2_41
t2_51 = t2_48
x2_52 = x3_43
x2_52 = _60
r_53 = r_30
r_53 = &NONLOCAL
_15 = *Z_25 + 96
_16 = _15
_17 = x1_49
_149 = _16
_149 = _17
p_150 = _149
b_151 = _149
_152 = p_150
_152 = &NONLOCAL
a_153 = _152
_154 = b_151
_154 = a_153
_156 = _155
_157 = _154
_157 = _156
_86 = &NONLOCAL
_86 = x1_49
_87 = &NONLOCAL
_87 = _15
_88 = _157
_88 = _86
_88 = _87
*out = _88
_18 = *Z_25 + 112
_19 = _18
_19 = t2_51
*out + 16 = _19
_20 = *Z_25 + 128
_21 = _20
_21 = x2_52
*out + 32 = _21
_22 = *Z_25 + 144
_23 = _22
_24 = x4_50
_163 = _23
_163 = _24
p_164 = _163
b_165 = _163
_166 = p_164
_166 = &NONLOCAL
a_167 = _166
_168 = b_165
_168 = a_167
_170 = _169
_171 = _168
_171 = _170
_82 = &NONLOCAL
_82 = x4_50
_83 = &NONLOCAL
_83 = _22
_84 = _171
_84 = _82
_84 = _83
*out + 48 = _84

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED";
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"in"[label="in = { 5 }"];
"out"[label="out = { 5 }"];
"Z"[label="Z = { 5 }"];
"x1_34";
"x2_35";
"x3_36";
"x4_37";
"Z_25";
"Z_47";
"x1_26"[label="x1_26 = { 5 }"];
"r_30"[label="r_30 = { 5 }"];
"_2";
"_3";
"_99";
"_100";
"_79"[label="_79 = { 5 }"];
"_40";
"_42";
"_5";
"_6";
"_113";
"_114";
"_72"[label="_72 = { 5 }"];
"_8";
"_9";
"_127";
"_128";
"_65"[label="_65 = { 5 }"];
"_12";
"_13";
"_141";
"_142";
"_59"[label="_59 = { 5 }"];
"_15";
"_16";
"_17";
"_149";
"p_150";
"b_151";
"_152"[label="_152 = { 5 }"];
"a_153";
"_154";
"_155";
"_156";
"_157";
"_86"[label="_86 = { 5 }"];
"_87"[label="_87 = { 5 }"];
"_88";
"_18";
"_19";
"_20";
"_21";
"_22";
"_23";
"_24";
"_163";
"p_164";
"b_165";
"_166"[label="_166 = { 5 }"];
"a_167";
"_168";
"_169";
"_170";
"_171";
"_82"[label="_82 = { 5 }"];
"_83"[label="_83 = { 5 }"];
"_84";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*in";
"*out";
"*Z";
"*x1_34";
"*x2_35";
"*x3_36";
"*x4_37";
"*Z_25";
"*Z_47";
"*x1_26";
"*x1_49";
"*x2_27";
"*x2_52";
"*x3_28";
"*t2_51";
"*x4_29";
"*x4_50";
"*r_30";
"*r_53";
"*_2";
"*_3";
"*_4";
"*_93";
"*p_94";
"*b_95";
"*_96";
"*a_97";
"*_98";
"*_99";
"*_100";
"*_101";
"*_78";
"*_79";
"*_80";
"*_40";
"*x2_41";
"*_42";
"*x3_43";
"*_5";
"*_6";
"*_7";
"*_107";
"*p_108";
"*b_109";
"*_110";
"*a_111";
"*_112";
"*_113";
"*_114";
"*_115";
"*_71";
"*_72";
"*_73";
"*t2_45";
"*_8";
"*_9";
"*_10";
"*_121";
"*p_122";
"*b_123";
"*_124";
"*a_125";
"*_126";
"*_127";
"*_128";
"*_129";
"*_64";
"*_65";
"*_66";
"*_11";
"*t1_46";
"*_12";
"*_13";
"*_14";
"*_135";
"*p_136";
"*b_137";
"*_138";
"*a_139";
"*_140";
"*_141";
"*_142";
"*_143";
"*_39";
"*_59";
"*_60";
"*t2_48";
"*_15";
"*_16";
"*_17";
"*_149";
"*p_150";
"*b_151";
"*_152";
"*a_153";
"*_154";
"*_155";
"*_156";
"*_157";
"*_86";
"*_87";
"*_88";
"*_18";
"*_19";
"*_20";
"*_21";
"*_22";
"*_23";
"*_24";
"*_163";
"*p_164";
"*b_165";
"*_166";
"*a_167";
"*_168";
"*_169";
"*_170";
"*_171";
"*_82";
"*_83";
"*_84";

  // Edges in the constraint graph:
"*ESCAPED" -> "ESCAPED";
"*in" -> "x1_34";
"Z" -> "Z_25";
"Z_47" -> "Z_25";
"x1_34" -> "x1_26";
"x2_35" -> "x1_26";
"x3_36" -> "x1_26";
"x4_37" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_3" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_100" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_79" -> "x1_26";
"x1_26" -> "x1_26";
"_40" -> "x1_26";
"x1_26" -> "x1_26";
"_42" -> "x1_26";
"x1_26" -> "x1_26";
"_6" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_114" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_72" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_9" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_128" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_65" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_13" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_142" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"_59" -> "x1_26";
"x1_26" -> "x1_26";
"x1_26" -> "x1_26";
"r_30" -> "r_30";
"r_30" -> "r_30";
"*Z_25" -> "_2";
"_2" -> "_3";
"_99" -> "_100";
"_2" -> "_79";
"_5" -> "_6";
"_113" -> "_114";
"_5" -> "_72";
"_8" -> "_9";
"_127" -> "_128";
"_8" -> "_65";
"_12" -> "_13";
"_141" -> "_142";
"_12" -> "_59";
"_15" -> "_16";
"x1_26" -> "_17";
"_16" -> "_149";
"_17" -> "_149";
"_149" -> "p_150";
"_149" -> "b_151";
"p_150" -> "_152";
"_152" -> "a_153";
"b_151" -> "_154";
"a_153" -> "_154";
"_155" -> "_156";
"_154" -> "_157";
"_156" -> "_157";
"x1_26" -> "_86";
"_15" -> "_87";
"_157" -> "_88";
"_86" -> "_88";
"_87" -> "_88";
"x1_26" -> "_19";
"_18" -> "_19";
"x1_26" -> "_21";
"_20" -> "_21";
"_22" -> "_23";
"x1_26" -> "_24";
"_23" -> "_163";
"_24" -> "_163";
"_163" -> "p_164";
"_163" -> "b_165";
"p_164" -> "_166";
"_166" -> "a_167";
"b_165" -> "_168";
"a_167" -> "_168";
"_169" -> "_170";
"_168" -> "_171";
"_170" -> "_171";
"x1_26" -> "_82";
"_22" -> "_83";
"_171" -> "_84";
"_82" -> "_84";
"_83" -> "_84";
"NONLOCAL" -> "*ESCAPED";
"_88" -> "*out";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"in" [label="\N\nx1_34 = *in\lx2_35 = *in + 16\lx3_36 = *in + 32\lx4_37 = *in + 48\l*in = _149\l*in + 16 = _19\l*in + 32 = _21\l*in + 48 = _163\l"];
"x1_34";
"x2_35";
"Z_25" [label="\N\nZ_47 = Z_25 + 96\l_2 = *Z_25\l_40 = *Z_25 + 16\l_42 = *Z_25 + 32\l_5 = *Z_25 + 48\l_8 = *Z_25 + 64\l_12 = *Z_25 + 80\l_15 = *Z_25 + 96\l_18 = *Z_25 + 112\l_20 = *Z_25 + 128\l_22 = *Z_25 + 144\l"];
"Z_47";
"_2";
"_99";
"_100";
"_79";
"_113";
"_114";
"_127";
"_128";
"_141";
"_142";
"_155";
"_156";
"_18";
"_19";
"_20";
"_21";
"_22";
"_163";
"_169";
"_170";
"_83";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "x2_35";
"STOREDANYTHING" -> "Z_47";
"STOREDANYTHING" -> "x1_34";
"STOREDANYTHING" -> "x1_34";
"STOREDANYTHING" -> "_18";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_22";
"in" -> "Z_25";
"x1_34" -> "_19";
"x1_34" -> "_21";
"x1_34" -> "_163";
"x2_35" -> "x1_34";
"Z_47" -> "Z_25";
"_2" -> "x1_34";
"_2" -> "_79";
"_79" -> "x1_34";
"_18" -> "_19";
"_20" -> "_21";
"_22" -> "_163";
"_22" -> "_83";
"_83" -> "_163";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = x1_34\l"];
"STOREDANYTHING";
"INTEGER";
"in" [label="\N\nx1_34 = *in\lx2_35 = *in + 16\lSTOREDANYTHING = *in + 32\lSTOREDANYTHING = *in + 48\l*in = x1_34\l*in + 16 = _19\l*in + 32 = _21\l*in + 48 = _163\l"];
"x1_34";
"x2_35";
"Z_25" [label="\N\nZ_47 = Z_25 + 96\l_2 = *Z_25\lSTOREDANYTHING = *Z_25 + 16\lSTOREDANYTHING = *Z_25 + 32\lSTOREDANYTHING = *Z_25 + 48\lSTOREDANYTHING = *Z_25 + 64\lSTOREDANYTHING = *Z_25 + 80\lSTOREDANYTHING = *Z_25 + 96\l_18 = *Z_25 + 112\l_20 = *Z_25 + 128\l_22 = *Z_25 + 144\l"];
"Z_47";
"_2";
"_99";
"_100";
"_79";
"_113";
"_114";
"_127";
"_128";
"_141";
"_142";
"_155";
"_156";
"_18";
"_19";
"_20";
"_21";
"_22";
"_163";
"_169";
"_170";
"_83";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "x2_35";
"STOREDANYTHING" -> "Z_47";
"STOREDANYTHING" -> "x1_34";
"STOREDANYTHING" -> "x1_34";
"STOREDANYTHING" -> "_18";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_22";
"in" -> "Z_25";
"x1_34" -> "ESCAPED";
"x1_34" -> "STOREDANYTHING";
"x1_34" -> "x2_35";
"x1_34" -> "_2";
"x1_34" -> "_18";
"x1_34" -> "_19";
"x1_34" -> "_20";
"x1_34" -> "_21";
"x1_34" -> "_22";
"x1_34" -> "_163";
"x2_35" -> "x1_34";
"Z_47" -> "Z_25";
"_2" -> "x1_34";
"_2" -> "_79";
"_79" -> "x1_34";
"_18" -> "_19";
"_19" -> "ESCAPED";
"_20" -> "_21";
"_21" -> "ESCAPED";
"_22" -> "_163";
"_22" -> "_83";
"_163" -> "ESCAPED";
"_83" -> "_163";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as x1_34
STOREDANYTHING = { ESCAPED NONLOCAL }
INTEGER = { ANYTHING }
in = { NONLOCAL }
out = { NONLOCAL } same as in
Z = { NONLOCAL } same as in
x1_34 = { ESCAPED NONLOCAL }
x2_35 = { ESCAPED NONLOCAL }
x3_36 = { ESCAPED NONLOCAL } same as STOREDANYTHING
x4_37 = { ESCAPED NONLOCAL } same as STOREDANYTHING
Z_25 = { ESCAPED NONLOCAL }
Z_47 = { ESCAPED NONLOCAL }
x1_26 = { ESCAPED NONLOCAL } same as x1_34
x1_49 = { ESCAPED NONLOCAL } same as x1_34
x2_27 = { ESCAPED NONLOCAL } same as x1_34
x2_52 = { ESCAPED NONLOCAL } same as x1_34
x3_28 = { ESCAPED NONLOCAL } same as x1_34
t2_51 = { ESCAPED NONLOCAL } same as x1_34
x4_29 = { ESCAPED NONLOCAL } same as x1_34
x4_50 = { ESCAPED NONLOCAL } same as x1_34
r_30 = { NONLOCAL } same as in
r_53 = { NONLOCAL } same as in
_2 = { ESCAPED NONLOCAL }
_3 = { ESCAPED NONLOCAL } same as _2
_4 = { ESCAPED NONLOCAL } same as x1_34
_93 = { ESCAPED NONLOCAL } same as x1_34
p_94 = { ESCAPED NONLOCAL } same as x1_34
b_95 = { ESCAPED NONLOCAL } same as x1_34
_96 = { ESCAPED NONLOCAL } same as x1_34
a_97 = { ESCAPED NONLOCAL } same as x1_34
_98 = { ESCAPED NONLOCAL } same as x1_34
_99 = { }
_100 = { }
_101 = { ESCAPED NONLOCAL } same as x1_34
_78 = { ESCAPED NONLOCAL } same as x1_34
_79 = { ESCAPED NONLOCAL }
_80 = { ESCAPED NONLOCAL } same as x1_34
_40 = { ESCAPED NONLOCAL } same as STOREDANYTHING
x2_41 = { ESCAPED NONLOCAL } same as x1_34
_42 = { ESCAPED NONLOCAL } same as STOREDANYTHING
x3_43 = { ESCAPED NONLOCAL } same as x1_34
_5 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_6 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_7 = { ESCAPED NONLOCAL } same as x1_34
_107 = { ESCAPED NONLOCAL } same as x1_34
p_108 = { ESCAPED NONLOCAL } same as x1_34
b_109 = { ESCAPED NONLOCAL } same as x1_34
_110 = { ESCAPED NONLOCAL } same as x1_34
a_111 = { ESCAPED NONLOCAL } same as x1_34
_112 = { ESCAPED NONLOCAL } same as x1_34
_113 = { }
_114 = { }
_115 = { ESCAPED NONLOCAL } same as x1_34
_71 = { ESCAPED NONLOCAL } same as x1_34
_72 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_73 = { ESCAPED NONLOCAL } same as x1_34
t2_45 = { ESCAPED NONLOCAL } same as x1_34
_8 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_9 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_10 = { ESCAPED NONLOCAL } same as x1_34
_121 = { ESCAPED NONLOCAL } same as x1_34
p_122 = { ESCAPED NONLOCAL } same as x1_34
b_123 = { ESCAPED NONLOCAL } same as x1_34
_124 = { ESCAPED NONLOCAL } same as x1_34
a_125 = { ESCAPED NONLOCAL } same as x1_34
_126 = { ESCAPED NONLOCAL } same as x1_34
_127 = { }
_128 = { }
_129 = { ESCAPED NONLOCAL } same as x1_34
_64 = { ESCAPED NONLOCAL } same as x1_34
_65 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_66 = { ESCAPED NONLOCAL } same as x1_34
_11 = { ESCAPED NONLOCAL } same as x1_34
t1_46 = { ESCAPED NONLOCAL } same as x1_34
_12 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_13 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_14 = { ESCAPED NONLOCAL } same as x1_34
_135 = { ESCAPED NONLOCAL } same as x1_34
p_136 = { ESCAPED NONLOCAL } same as x1_34
b_137 = { ESCAPED NONLOCAL } same as x1_34
_138 = { ESCAPED NONLOCAL } same as x1_34
a_139 = { ESCAPED NONLOCAL } same as x1_34
_140 = { ESCAPED NONLOCAL } same as x1_34
_141 = { }
_142 = { }
_143 = { ESCAPED NONLOCAL } same as x1_34
_39 = { ESCAPED NONLOCAL } same as x1_34
_59 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_60 = { ESCAPED NONLOCAL } same as x1_34
t2_48 = { ESCAPED NONLOCAL } same as x1_34
_15 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_16 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_17 = { ESCAPED NONLOCAL } same as x1_34
_149 = { ESCAPED NONLOCAL } same as x1_34
p_150 = { ESCAPED NONLOCAL } same as x1_34
b_151 = { ESCAPED NONLOCAL } same as x1_34
_152 = { ESCAPED NONLOCAL } same as x1_34
a_153 = { ESCAPED NONLOCAL } same as x1_34
_154 = { ESCAPED NONLOCAL } same as x1_34
_155 = { }
_156 = { }
_157 = { ESCAPED NONLOCAL } same as x1_34
_86 = { ESCAPED NONLOCAL } same as x1_34
_87 = { ESCAPED NONLOCAL } same as STOREDANYTHING
_88 = { ESCAPED NONLOCAL } same as x1_34
_18 = { ESCAPED NONLOCAL }
_19 = { ESCAPED NONLOCAL }
_20 = { ESCAPED NONLOCAL }
_21 = { ESCAPED NONLOCAL }
_22 = { ESCAPED NONLOCAL }
_23 = { ESCAPED NONLOCAL } same as _22
_24 = { ESCAPED NONLOCAL } same as x1_34
_163 = { ESCAPED NONLOCAL }
p_164 = { ESCAPED NONLOCAL } same as _163
b_165 = { ESCAPED NONLOCAL } same as _163
_166 = { ESCAPED NONLOCAL } same as _163
a_167 = { ESCAPED NONLOCAL } same as _163
_168 = { ESCAPED NONLOCAL } same as _163
_169 = { }
_170 = { }
_171 = { ESCAPED NONLOCAL } same as _163
_82 = { ESCAPED NONLOCAL } same as x1_34
_83 = { ESCAPED NONLOCAL }
_84 = { ESCAPED NONLOCAL } same as _163


Alias information for cipher_idea

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { }

Flow-insensitive points-to information

Z_25, points-to non-local, points-to escaped, points-to vars: { }
in_32(D), points-to non-local, points-to NULL, points-to vars: { }
Z_38(D), points-to non-local, points-to vars: { }
Z_47, points-to non-local, points-to escaped, points-to vars: { }
out_54(D), points-to non-local, points-to NULL, points-to vars: { }

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 35 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 3, latch 35
;;  depth 1, outer 0
;;  nodes: 3 35 23 20 21 22 18 15 16 17 13 10 11 12 8 5 6 7 4 9 14 19
;; 2 succs { 3 }
;; 3 succs { 4 7 }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 12 }
;; 9 succs { 10 11 }
;; 10 succs { 13 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 17 }
;; 14 succs { 15 16 }
;; 15 succs { 18 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 22 }
;; 19 succs { 20 21 }
;; 20 succs { 23 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 35 24 }
;; 35 succs { 3 }
;; 24 succs { 25 28 }
;; 25 succs { 26 27 }
;; 26 succs { 29 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 30 33 }
;; 30 succs { 31 32 }
;; 31 succs { 34 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 1 }
cipher_idea (u16 * in, u16 * out, u16 * Z)
{
  register u32 p;
  u16 D.7896;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7892;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7888;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7884;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7880;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7876;
  u16 a;
  u16 b;
  int r;
  register u16 t2;
  register u16 t1;
  register u16 x4;
  register u16 x3;
  register u16 x2;
  register u16 x1;
  short unsigned int _2;
  int _3;
  int _4;
  short unsigned int _5;
  int _6;
  int _7;
  short unsigned int _8;
  int _9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  int _13;
  int _14;
  short unsigned int _15;
  int _16;
  int _17;
  short unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  int _23;
  int _24;
  short unsigned int _39;
  short unsigned int _40;
  short unsigned int _42;
  short unsigned int _59;
  short unsigned int _60;
  short unsigned int _64;
  short unsigned int _65;
  short unsigned int _66;
  short unsigned int _71;
  short unsigned int _72;
  short unsigned int _73;
  short unsigned int _78;
  short unsigned int _79;
  short unsigned int _80;
  short unsigned int _82;
  short unsigned int _83;
  short unsigned int _84;
  short unsigned int _86;
  short unsigned int _87;
  short unsigned int _88;
  int _93;
  unsigned int _96;
  short unsigned int _98;
  _Bool _99;
  short unsigned int _100;
  short unsigned int _101;
  int _107;
  unsigned int _110;
  short unsigned int _112;
  _Bool _113;
  short unsigned int _114;
  short unsigned int _115;
  int _121;
  unsigned int _124;
  short unsigned int _126;
  _Bool _127;
  short unsigned int _128;
  short unsigned int _129;
  int _135;
  unsigned int _138;
  short unsigned int _140;
  _Bool _141;
  short unsigned int _142;
  short unsigned int _143;
  int _149;
  unsigned int _152;
  short unsigned int _154;
  _Bool _155;
  short unsigned int _156;
  short unsigned int _157;
  int _163;
  unsigned int _166;
  short unsigned int _168;
  _Bool _169;
  short unsigned int _170;
  short unsigned int _171;

  <bb 2> [12.50%]:
  x1_34 = *in_32(D);
  x2_35 = MEM[(u16 *)in_32(D) + 2B];
  x3_36 = MEM[(u16 *)in_32(D) + 4B];
  x4_37 = MEM[(u16 *)in_32(D) + 6B];

  <bb 3> [100.00%]:
  # Z_25 = PHI <Z_38(D)(2), Z_47(35)>
  # x1_26 = PHI <x1_34(2), x1_49(35)>
  # x2_27 = PHI <x2_35(2), x2_52(35)>
  # x3_28 = PHI <x3_36(2), t2_51(35)>
  # x4_29 = PHI <x4_37(2), x4_50(35)>
  # r_30 = PHI <8(2), r_53(35)>
  _2 = *Z_25;
  _3 = (int) _2;
  _4 = (int) x1_26;
  if (x1_26 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [50.00%]:
  if (_2 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [25.00%]:
  _93 = _3 * _4;
  p_94 = (u32) _93;
  b_95 = (u16) _93;
  _96 = p_94 >> 16;
  a_97 = (u16) _96;
  _98 = b_95 - a_97;
  _99 = b_95 < a_97;
  _100 = (short unsigned int) _99;
  _101 = _98 + _100;
  goto <bb 8>; [100.00%]

  <bb 6> [25.00%]:
  _78 = 1 - x1_26;
  goto <bb 8>; [100.00%]

  <bb 7> [50.00%]:
  _79 = 1 - _2;

  <bb 8> [100.00%]:
  # _80 = PHI <_101(5), _78(6), _79(7)>
  _40 = MEM[(u16 *)Z_25 + 2B];
  x2_41 = x2_27 + _40;
  _42 = MEM[(u16 *)Z_25 + 4B];
  x3_43 = x3_28 + _42;
  _5 = MEM[(u16 *)Z_25 + 6B];
  _6 = (int) _5;
  _7 = (int) x4_29;
  if (x4_29 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 9> [50.00%]:
  if (_5 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [25.00%]:
  _107 = _6 * _7;
  p_108 = (u32) _107;
  b_109 = (u16) _107;
  _110 = p_108 >> 16;
  a_111 = (u16) _110;
  _112 = b_109 - a_111;
  _113 = b_109 < a_111;
  _114 = (short unsigned int) _113;
  _115 = _112 + _114;
  goto <bb 13>; [100.00%]

  <bb 11> [25.00%]:
  _71 = 1 - x4_29;
  goto <bb 13>; [100.00%]

  <bb 12> [50.00%]:
  _72 = 1 - _5;

  <bb 13> [100.00%]:
  # _73 = PHI <_115(10), _71(11), _72(12)>
  t2_45 = x3_43 ^ _80;
  _8 = MEM[(u16 *)Z_25 + 8B];
  _9 = (int) _8;
  _10 = (int) t2_45;
  if (x3_43 != _80)
    goto <bb 14>; [66.00%]
  else
    goto <bb 17>; [34.00%]

  <bb 14> [66.00%]:
  if (_8 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [33.00%]:
  _121 = _9 * _10;
  p_122 = (u32) _121;
  b_123 = (u16) _121;
  _124 = p_122 >> 16;
  a_125 = (u16) _124;
  _126 = b_123 - a_125;
  _127 = b_123 < a_125;
  _128 = (short unsigned int) _127;
  _129 = _126 + _128;
  goto <bb 18>; [100.00%]

  <bb 16> [33.00%]:
  _64 = 1 - t2_45;
  goto <bb 18>; [100.00%]

  <bb 17> [34.00%]:
  _65 = 1 - _8;

  <bb 18> [100.00%]:
  # _66 = PHI <_129(15), _64(16), _65(17)>
  _11 = x2_41 ^ _73;
  t1_46 = _11 + _66;
  Z_47 = &MEM[(void *)Z_25 + 12B];
  _12 = MEM[(u16 *)Z_25 + 10B];
  _13 = (int) _12;
  _14 = (int) t1_46;
  if (t1_46 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 19> [50.00%]:
  if (_12 != 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 20> [25.00%]:
  _135 = _13 * _14;
  p_136 = (u32) _135;
  b_137 = (u16) _135;
  _138 = p_136 >> 16;
  a_139 = (u16) _138;
  _140 = b_137 - a_139;
  _141 = b_137 < a_139;
  _142 = (short unsigned int) _141;
  _143 = _140 + _142;
  goto <bb 23>; [100.00%]

  <bb 21> [25.00%]:
  _39 = 1 - t1_46;
  goto <bb 23>; [100.00%]

  <bb 22> [50.00%]:
  _59 = 1 - _12;

  <bb 23> [100.00%]:
  # _60 = PHI <_143(20), _39(21), _59(22)>
  t2_48 = _60 + _66;
  x1_49 = _60 ^ _80;
  x4_50 = t2_48 ^ _73;
  t2_51 = x2_41 ^ t2_48;
  x2_52 = x3_43 ^ _60;
  r_53 = r_30 + -1;
  if (r_53 != 0)
    goto <bb 35>; [87.50%]
  else
    goto <bb 24>; [12.50%]

  <bb 35> [87.50%]:
  goto <bb 3>; [100.00%]

  <bb 24> [12.50%]:
  _15 = MEM[(u16 *)Z_25 + 12B];
  _16 = (int) _15;
  _17 = (int) x1_49;
  if (_60 != _80)
    goto <bb 25>; [66.00%]
  else
    goto <bb 28>; [34.00%]

  <bb 25> [8.25%]:
  if (_15 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 26> [4.12%]:
  _149 = _16 * _17;
  p_150 = (u32) _149;
  b_151 = (u16) _149;
  _152 = p_150 >> 16;
  a_153 = (u16) _152;
  _154 = b_151 - a_153;
  _155 = b_151 < a_153;
  _156 = (short unsigned int) _155;
  _157 = _154 + _156;
  goto <bb 29>; [100.00%]

  <bb 27> [4.12%]:
  _86 = 1 - x1_49;
  goto <bb 29>; [100.00%]

  <bb 28> [4.25%]:
  _87 = 1 - _15;

  <bb 29> [12.50%]:
  # _88 = PHI <_157(26), _86(27), _87(28)>
  *out_54(D) = _88;
  _18 = MEM[(u16 *)Z_25 + 14B];
  _19 = _18 + t2_51;
  MEM[(u16 *)out_54(D) + 2B] = _19;
  _20 = MEM[(u16 *)Z_25 + 16B];
  _21 = _20 + x2_52;
  MEM[(u16 *)out_54(D) + 4B] = _21;
  _22 = MEM[(u16 *)Z_25 + 18B];
  _23 = (int) _22;
  _24 = (int) x4_50;
  if (t2_48 != _73)
    goto <bb 30>; [66.00%]
  else
    goto <bb 33>; [34.00%]

  <bb 30> [8.25%]:
  if (_22 != 0)
    goto <bb 31>; [50.00%]
  else
    goto <bb 32>; [50.00%]

  <bb 31> [4.12%]:
  _163 = _23 * _24;
  p_164 = (u32) _163;
  b_165 = (u16) _163;
  _166 = p_164 >> 16;
  a_167 = (u16) _166;
  _168 = b_165 - a_167;
  _169 = b_165 < a_167;
  _170 = (short unsigned int) _169;
  _171 = _168 + _170;
  goto <bb 34>; [100.00%]

  <bb 32> [4.12%]:
  _82 = 1 - x4_50;
  goto <bb 34>; [100.00%]

  <bb 33> [4.25%]:
  _83 = 1 - _22;

  <bb 34> [12.50%]:
  # _84 = PHI <_171(31), _82(32), _83(33)>
  MEM[(u16 *)out_54(D) + 6B] = _84;
  return;

}



;; Function DoNumSortIteration (DoNumSortIteration, funcdef_no=53, decl_uid=4494, cgraph_uid=53, symbol_order=78)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
arraybase = &NONLOCAL
arraysize = &NONLOCAL
numarrays = &NONLOCAL
ESCAPED = &NONLOCAL
i.9_114 = i.9_20
i.9_114 = &NULL
i_125 = i_25
i_125 = &NULL
ESCAPED = &NULL
_19 = NONLOCAL
_21 = i.9_114
_21 = &NONLOCAL
_22 = arraybase + UNKNOWN
_23 = _19
*_22 = _23
i_25 = i_125
i_25 = &NONLOCAL
i.9_20 = i_25
_26 = arraysize
_26 = &NONLOCAL
darray_28 = darray_27 + UNKNOWN
i.12_112 = i.12_29
i.12_112 = &NULL
i_111 = i_35
i_111 = &NULL
_30 = i.12_112
_30 = &NONLOCAL
_31 = arraybase + UNKNOWN
_32 = darray_28 + UNKNOWN
_33 = *_31
*_32 = _33
i_35 = i_111
i_35 = &NONLOCAL
i.12_29 = i_35
numarrays_36 = numarrays
numarrays_36 = numarrays_37
darray_27 = arraybase
darray_27 = darray_28
numarrays_37 = numarrays_36
numarrays_37 = &NONLOCAL
elapsed_14 = NONLOCAL
_12 = numarrays
_1 = arraysize
_1 = &NONLOCAL
_7 = arraysize
_7 = &NONLOCAL
i_38 = _1
i_38 = &NONLOCAL
i_126 = i_18
i_126 = &NULL
_3 = _7
_3 = i_126
_4 = arraybase + UNKNOWN
_48 = _47
_48 = &NONLOCAL
_49 = _4 + UNKNOWN
_50 = *_49
_51 = _47
_51 = &NONLOCAL
_52 = _51
_52 = &NONLOCAL
_53 = _4 + UNKNOWN
_54 = *_53
k_59 = _47
k_59 = _47
k_59 = _51
_56 = i_55
_56 = &NONLOCAL
_57 = _4 + UNKNOWN
_58 = *_57
_60 = k_59
_60 = &NONLOCAL
_61 = _4 + UNKNOWN
_62 = *_61
*_61 = _58
*_57 = _62
i_89 = i_124
i_89 = k_59
i_55 = i_89
i_55 = arraysize
_47 = i_55
_47 = &NONLOCAL
i_40 = i_124
i_40 = &NONLOCAL
i_124 = i_40
i_124 = i_38
_6 = _65
_6 = &NULL
i_91 = i_64
i_91 = &NULL
_66 = _6
_66 = &NONLOCAL
_67 = _4 + UNKNOWN
_68 = *_67
_69 = _6
_69 = &NONLOCAL
_70 = _69
_70 = &NONLOCAL
_71 = _4 + UNKNOWN
_72 = *_71
k_77 = _6
k_77 = _6
k_77 = _69
_74 = i_91
_74 = &NONLOCAL
_75 = _4 + UNKNOWN
_76 = *_75
_78 = k_77
_78 = &NONLOCAL
_79 = _4 + UNKNOWN
_80 = *_79
*_79 = _76
*_75 = _80
i_81 = i_122
i_81 = &NONLOCAL
i_64 = i_81
i_64 = k_77
_65 = i_64
_65 = &NONLOCAL
_42 = *_4
_43 = i_122
_43 = &NONLOCAL
_44 = _4 + UNKNOWN
_45 = *_44
*_4 = _45
*_44 = _42
i_46 = i_122
i_46 = &NONLOCAL
i_122 = i_46
i_122 = _1
i_18 = i_126
i_18 = &NONLOCAL
ESCAPED = elapsed_14
elapsed_16 = NONLOCAL
ESCAPED = elapsed_16

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 1 5 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"arraybase"[label="arraybase = { 5 }"];
"arraysize"[label="arraysize = { 5 }"];
"numarrays"[label="numarrays = { 5 }"];
"randnum";
"i.9_114"[label="i.9_114 = { 1 }"];
"i.9_20";
"i_25"[label="i_25 = { 1 5 }"];
"_19";
"_21"[label="_21 = { 5 }"];
"_22";
"_23";
"_26"[label="_26 = { 5 }"];
"darray_28";
"darray_27";
"i.12_112"[label="i.12_112 = { 1 }"];
"i.12_29";
"i_35"[label="i_35 = { 1 5 }"];
"_30"[label="_30 = { 5 }"];
"_31";
"_32";
"_33";
"numarrays_36"[label="numarrays_36 = { 5 }"];
"StartStopwatch";
"elapsed_14";
"_12";
"_1"[label="_1 = { 5 }"];
"_7"[label="_7 = { 5 }"];
"i_38"[label="i_38 = { 5 }"];
"i_126"[label="i_126 = { 1 5 }"];
"_3";
"_4";
"_48"[label="_48 = { 5 }"];
"_47"[label="_47 = { 5 }"];
"_49";
"_50";
"_52"[label="_52 = { 5 }"];
"_53";
"_54";
"_56"[label="_56 = { 5 }"];
"_57";
"_58";
"_60"[label="_60 = { 5 }"];
"_61";
"i_124"[label="i_124 = { 5 }"];
"_6"[label="_6 = { 1 5 }"];
"i_91"[label="i_91 = { 1 }"];
"_66"[label="_66 = { 5 }"];
"_67";
"_68";
"_70"[label="_70 = { 5 }"];
"_71";
"_72";
"_74"[label="_74 = { 5 }"];
"_75";
"_76";
"_78"[label="_78 = { 5 }"];
"_79";
"i_81"[label="i_81 = { 5 }"];
"i_122"[label="i_122 = { 5 }"];
"_42";
"_43"[label="_43 = { 5 }"];
"_44";
"StopStopwatch";
"elapsed_16";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*arraybase";
"*arraysize";
"*numarrays";
"*randnum";
"*i.9_114";
"*i.9_20";
"*i_125";
"*i_25";
"*_19";
"*_21";
"*_22";
"*_23";
"*_26";
"*darray_28";
"*darray_27";
"*i.12_112";
"*i.12_29";
"*i_111";
"*i_35";
"*_30";
"*_31";
"*_32";
"*_33";
"*numarrays_36";
"*numarrays_37";
"*StartStopwatch";
"*_12";
"*_1";
"*_7";
"*i_38";
"*i_126";
"*i_18";
"*_3";
"*_48";
"*_47";
"*_49";
"*_50";
"*_51";
"*_52";
"*_53";
"*_54";
"*k_59";
"*_56";
"*i_55";
"*_58";
"*_60";
"*_62";
"*i_89";
"*i_124";
"*i_40";
"*_6";
"*_65";
"*i_91";
"*i_64";
"*_66";
"*_67";
"*_68";
"*_69";
"*_70";
"*_71";
"*_72";
"*k_77";
"*_74";
"*_76";
"*_78";
"*_80";
"*i_81";
"*i_122";
"*_42";
"*_43";
"*_45";
"*i_46";
"*StopStopwatch";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"elapsed_14" -> "ESCAPED";
"elapsed_16" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"i.9_20" -> "i.9_114";
"i_25" -> "i.9_20";
"i_25" -> "i_25";
"i_25" -> "i_25";
"NONLOCAL" -> "_19";
"i.9_114" -> "_21";
"_19" -> "_23";
"arraysize" -> "_26";
"arraybase" -> "darray_27";
"darray_28" -> "darray_27";
"i.12_29" -> "i.12_112";
"i_35" -> "i.12_29";
"i_35" -> "i_35";
"i_35" -> "i_35";
"i.12_112" -> "_30";
"*_31" -> "_33";
"numarrays" -> "numarrays_36";
"numarrays_36" -> "numarrays_36";
"numarrays_36" -> "numarrays_36";
"NONLOCAL" -> "elapsed_14";
"numarrays" -> "_12";
"arraysize" -> "_1";
"arraysize" -> "_7";
"_1" -> "i_38";
"i_126" -> "i_126";
"i_126" -> "i_126";
"_7" -> "_3";
"i_126" -> "_3";
"_47" -> "_48";
"arraysize" -> "_47";
"_47" -> "_47";
"_47" -> "_47";
"_47" -> "_47";
"_47" -> "_47";
"_47" -> "_47";
"i_124" -> "_47";
"*_49" -> "_50";
"_47" -> "_52";
"*_53" -> "_54";
"_47" -> "_56";
"_58" -> "_58";
"_58" -> "_58";
"_58" -> "_58";
"_58" -> "_58";
"_47" -> "_60";
"i_38" -> "i_124";
"i_124" -> "i_124";
"i_124" -> "i_124";
"_6" -> "_6";
"_6" -> "_6";
"_6" -> "_6";
"_6" -> "_6";
"_6" -> "_6";
"i_81" -> "_6";
"_6" -> "i_91";
"_6" -> "_66";
"*_67" -> "_68";
"_6" -> "_70";
"*_71" -> "_72";
"i_91" -> "_74";
"_76" -> "_76";
"_76" -> "_76";
"_76" -> "_76";
"_76" -> "_76";
"_6" -> "_78";
"i_122" -> "i_81";
"_1" -> "i_122";
"i_122" -> "i_122";
"i_122" -> "i_122";
"_42" -> "_42";
"_42" -> "_42";
"_42" -> "_42";
"_42" -> "_42";
"i_122" -> "_43";
"NONLOCAL" -> "elapsed_16";
"_23" -> "*_22";
"_33" -> "*_32";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"arraybase" [label="\N\n_22 = arraybase + UNKNOWN\l_31 = arraybase + UNKNOWN\l_4 = arraybase + UNKNOWN\l"];
"randnum";
"i.9_114";
"_19";
"_22" [label="\N\n*_22 = _19\l"];
"darray_28" [label="\N\n_32 = darray_28 + UNKNOWN\l"];
"darray_27" [label="\N\ndarray_28 = darray_27 + UNKNOWN\l"];
"_31" [label="\N\n_33 = *_31\l"];
"_32" [label="\N\n*_32 = _33\l"];
"_33";
"StartStopwatch";
"_4" [label="\N\n_49 = _4 + UNKNOWN\l_53 = _4 + UNKNOWN\l_57 = _4 + UNKNOWN\l_61 = _4 + UNKNOWN\l_67 = _4 + UNKNOWN\l_71 = _4 + UNKNOWN\l_75 = _4 + UNKNOWN\l_79 = _4 + UNKNOWN\l_42 = *_4\l_44 = _4 + UNKNOWN\l*_4 = _42\l"];
"_49" [label="\N\n_50 = *_49\l"];
"_50";
"_53" [label="\N\n_54 = *_53\l"];
"_54";
"_57" [label="\N\n_58 = *_57\l*_57 = _58\l"];
"_58";
"_61" [label="\N\n_58 = *_61\l*_61 = _58\l"];
"_67" [label="\N\n_68 = *_67\l"];
"_68";
"_71" [label="\N\n_72 = *_71\l"];
"_72";
"_75" [label="\N\n_76 = *_75\l*_75 = _76\l"];
"_76";
"_79" [label="\N\n_76 = *_79\l*_79 = _76\l"];
"_42";
"_44" [label="\N\n_42 = *_44\l*_44 = _42\l"];
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_22";
"STOREDANYTHING" -> "darray_28";
"STOREDANYTHING" -> "_31";
"STOREDANYTHING" -> "_32";
"STOREDANYTHING" -> "_4";
"STOREDANYTHING" -> "_49";
"STOREDANYTHING" -> "_53";
"STOREDANYTHING" -> "_57";
"STOREDANYTHING" -> "_58";
"STOREDANYTHING" -> "_61";
"STOREDANYTHING" -> "_67";
"STOREDANYTHING" -> "_71";
"STOREDANYTHING" -> "_75";
"STOREDANYTHING" -> "_76";
"STOREDANYTHING" -> "_79";
"STOREDANYTHING" -> "_42";
"STOREDANYTHING" -> "_44";
"arraybase" -> "i.9_114";
"arraybase" -> "darray_27";
"_19" -> "ESCAPED";
"darray_28" -> "darray_27";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _19\l"];
"STOREDANYTHING";
"INTEGER";
"arraybase" [label="\N\n_22 = arraybase + UNKNOWN\l_31 = arraybase + UNKNOWN\l_4 = arraybase + UNKNOWN\l"];
"randnum";
"i.9_114";
"_19";
"_22" [label="\N\n*_22 = _19\l"];
"darray_28" [label="\N\n_32 = darray_28 + UNKNOWN\l"];
"darray_27" [label="\N\ndarray_28 = darray_27 + UNKNOWN\l"];
"_31" [label="\N\n_33 = *_31\l"];
"_32" [label="\N\n*_32 = _33\l"];
"_33";
"StartStopwatch";
"_4" [label="\N\n_49 = _4 + UNKNOWN\l_53 = _4 + UNKNOWN\l_57 = _4 + UNKNOWN\l_61 = _4 + UNKNOWN\l_67 = _4 + UNKNOWN\l_71 = _4 + UNKNOWN\l_75 = _4 + UNKNOWN\l_79 = _4 + UNKNOWN\l_42 = *_4\l_44 = _4 + UNKNOWN\l*_4 = _42\l"];
"_49" [label="\N\n_50 = *_49\l"];
"_50";
"_53" [label="\N\n_54 = *_53\l"];
"_54";
"_57" [label="\N\n_58 = *_57\l*_57 = _58\l"];
"_58";
"_61" [label="\N\n_58 = *_61\l*_61 = _58\l"];
"_67" [label="\N\n_68 = *_67\l"];
"_68";
"_71" [label="\N\n_72 = *_71\l"];
"_72";
"_75" [label="\N\n_76 = *_75\l*_75 = _76\l"];
"_76";
"_79" [label="\N\n_76 = *_79\l*_79 = _76\l"];
"_42";
"_44" [label="\N\n_42 = *_44\l*_44 = _42\l"];
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_22";
"STOREDANYTHING" -> "darray_28";
"STOREDANYTHING" -> "_31";
"STOREDANYTHING" -> "_32";
"STOREDANYTHING" -> "_4";
"STOREDANYTHING" -> "_49";
"STOREDANYTHING" -> "_53";
"STOREDANYTHING" -> "_57";
"STOREDANYTHING" -> "_58";
"STOREDANYTHING" -> "_61";
"STOREDANYTHING" -> "_67";
"STOREDANYTHING" -> "_71";
"STOREDANYTHING" -> "_75";
"STOREDANYTHING" -> "_76";
"STOREDANYTHING" -> "_79";
"STOREDANYTHING" -> "_42";
"STOREDANYTHING" -> "_44";
"arraybase" -> "i.9_114";
"arraybase" -> "darray_27";
"_19" -> "ESCAPED";
"_19" -> "_33";
"_19" -> "_50";
"_19" -> "_54";
"_19" -> "_58";
"_19" -> "_68";
"_19" -> "_72";
"_19" -> "_76";
"_19" -> "_42";
"darray_28" -> "darray_27";
"_33" -> "ESCAPED";
"_58" -> "ESCAPED";
"_76" -> "ESCAPED";
"_42" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as _19
STOREDANYTHING = { }
INTEGER = { ANYTHING }
arraybase = { NONLOCAL }
arraysize = { NONLOCAL } same as arraybase
numarrays = { NONLOCAL } same as arraybase
randnum = { }
i.9_114 = { NULL NONLOCAL }
i.9_20 = { NULL NONLOCAL } same as i.9_114
i_125 = { NULL NONLOCAL } same as i.9_114
i_25 = { NULL NONLOCAL } same as i.9_114
_19 = { ESCAPED NONLOCAL }
_21 = { NULL NONLOCAL } same as i.9_114
_22 = { NONLOCAL }
_23 = { ESCAPED NONLOCAL } same as _19
_26 = { NONLOCAL } same as arraybase
darray_28 = { NONLOCAL }
darray_27 = { NONLOCAL }
i.12_112 = { NULL NONLOCAL } same as i.9_114
i.12_29 = { NULL NONLOCAL } same as i.9_114
i_111 = { NULL NONLOCAL } same as i.9_114
i_35 = { NULL NONLOCAL } same as i.9_114
_30 = { NULL NONLOCAL } same as i.9_114
_31 = { NONLOCAL }
_32 = { NONLOCAL }
_33 = { ESCAPED NONLOCAL }
numarrays_36 = { NONLOCAL } same as arraybase
numarrays_37 = { NONLOCAL } same as arraybase
StartStopwatch = { }
elapsed_14 = { ESCAPED NONLOCAL } same as _19
_12 = { NONLOCAL } same as arraybase
_1 = { NONLOCAL } same as arraybase
_7 = { NONLOCAL } same as arraybase
i_38 = { NONLOCAL } same as arraybase
i_126 = { NULL NONLOCAL } same as i.9_114
i_18 = { NULL NONLOCAL } same as i.9_114
_3 = { NULL NONLOCAL } same as i.9_114
_4 = { NONLOCAL }
_48 = { NONLOCAL } same as arraybase
_47 = { NONLOCAL } same as arraybase
_49 = { NONLOCAL }
_50 = { ESCAPED NONLOCAL }
_51 = { NONLOCAL } same as arraybase
_52 = { NONLOCAL } same as arraybase
_53 = { NONLOCAL }
_54 = { ESCAPED NONLOCAL }
k_59 = { NONLOCAL } same as arraybase
_56 = { NONLOCAL } same as arraybase
i_55 = { NONLOCAL } same as arraybase
_57 = { NONLOCAL }
_58 = { ESCAPED NONLOCAL }
_60 = { NONLOCAL } same as arraybase
_61 = { NONLOCAL }
_62 = { ESCAPED NONLOCAL } same as _58
i_89 = { NONLOCAL } same as arraybase
i_124 = { NONLOCAL } same as arraybase
i_40 = { NONLOCAL } same as arraybase
_6 = { NULL NONLOCAL } same as i.9_114
_65 = { NULL NONLOCAL } same as i.9_114
i_91 = { NULL NONLOCAL } same as i.9_114
i_64 = { NULL NONLOCAL } same as i.9_114
_66 = { NULL NONLOCAL } same as i.9_114
_67 = { NONLOCAL }
_68 = { ESCAPED NONLOCAL }
_69 = { NULL NONLOCAL } same as i.9_114
_70 = { NULL NONLOCAL } same as i.9_114
_71 = { NONLOCAL }
_72 = { ESCAPED NONLOCAL }
k_77 = { NULL NONLOCAL } same as i.9_114
_74 = { NULL NONLOCAL } same as i.9_114
_75 = { NONLOCAL }
_76 = { ESCAPED NONLOCAL }
_78 = { NULL NONLOCAL } same as i.9_114
_79 = { NONLOCAL }
_80 = { ESCAPED NONLOCAL } same as _76
i_81 = { NONLOCAL } same as arraybase
i_122 = { NONLOCAL } same as arraybase
_42 = { ESCAPED NONLOCAL }
_43 = { NONLOCAL } same as arraybase
_44 = { NONLOCAL }
_45 = { ESCAPED NONLOCAL } same as _42
i_46 = { NONLOCAL } same as arraybase
StopStopwatch = { }
elapsed_16 = { ESCAPED NONLOCAL } same as _19


Alias information for DoNumSortIteration

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_4, points-to non-local, points-to NULL, points-to vars: { }
arraybase_9(D), points-to non-local, points-to NULL, points-to vars: { }
_22, points-to non-local, points-to NULL, points-to vars: { }
darray_27, points-to non-local, points-to NULL, points-to vars: { }
darray_28, points-to non-local, points-to NULL, points-to vars: { }
_31, points-to non-local, points-to NULL, points-to vars: { }
_32, points-to non-local, points-to NULL, points-to vars: { }
_44, points-to non-local, points-to NULL, points-to vars: { }
_49, points-to non-local, points-to NULL, points-to vars: { }
_53, points-to non-local, points-to NULL, points-to vars: { }
_57, points-to non-local, points-to NULL, points-to vars: { }
_61, points-to non-local, points-to NULL, points-to vars: { }
_67, points-to non-local, points-to NULL, points-to vars: { }
_71, points-to non-local, points-to NULL, points-to vars: { }
_75, points-to non-local, points-to NULL, points-to vars: { }
_79, points-to non-local, points-to NULL, points-to vars: { }

;; 10 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 36 3 45 43 44 4 5 35 6 47 42 46 7 8 9 32 10 34 11 50 12 51 13 14 41 15 16 17 18 52 40 19 49 20 33 39 21 54 22 55 23 24 25 26 27 28 56 38 29 53 30 57 37 48 31
;;
;; Loop 1
;;  header 10, latch 37
;;  depth 1, outer 0
;;  nodes: 10 37 30 56 53 20 52 49 18 17 16 41 14 50 51 13 12 11 19 15 40 34 28 27 26 25 24 54 55 23 22 21 39 29 38 33
;;
;; Loop 5
;;  header 29, latch 38
;;  depth 2, outer 1
;;  nodes: 29 38 28 27 26 25 24 54 55 23 22 21 39
;;
;; Loop 8
;;  header 21, latch 39
;;  depth 3, outer 5
;;  nodes: 21 39 27 26 25 24 54 55 23 22
;;
;; Loop 6
;;  header 19, latch 40
;;  depth 2, outer 1
;;  nodes: 19 40 18 17 16 41 14 50 51 13 12 11 15
;;
;; Loop 7
;;  header 16, latch 15
;;  depth 3, outer 6
;;  nodes: 16 15 14 50 51 13 12 11 17 41
;;
;; Loop 9
;;  header 17, latch 41
;;  depth 4, outer 7
;;  nodes: 17 41 14 50 51 13 12 11
;;
;; Loop 2
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 47 46 5 6 42 35
;;
;; Loop 3
;;  header 6, latch 42
;;  depth 2, outer 2
;;  nodes: 6 42
;;
;; Loop 4
;;  header 3, latch 43
;;  depth 1, outer 0
;;  nodes: 3 43
;; 2 succs { 36 44 }
;; 36 succs { 3 }
;; 3 succs { 43 45 }
;; 45 succs { 4 }
;; 43 succs { 3 }
;; 44 succs { 4 }
;; 4 succs { 8 }
;; 5 succs { 35 46 }
;; 35 succs { 6 }
;; 6 succs { 42 47 }
;; 47 succs { 7 }
;; 42 succs { 6 }
;; 46 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 32 48 }
;; 32 succs { 10 }
;; 10 succs { 34 49 }
;; 34 succs { 19 }
;; 11 succs { 12 50 }
;; 50 succs { 14 }
;; 12 succs { 13 51 }
;; 51 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 41 }
;; 41 succs { 17 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 11 18 }
;; 18 succs { 40 52 }
;; 52 succs { 20 }
;; 40 succs { 19 }
;; 19 succs { 16 }
;; 49 succs { 20 }
;; 20 succs { 33 53 }
;; 33 succs { 29 }
;; 39 succs { 21 }
;; 21 succs { 22 54 }
;; 54 succs { 24 }
;; 22 succs { 23 55 }
;; 55 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 39 28 }
;; 28 succs { 38 56 }
;; 56 succs { 30 }
;; 38 succs { 29 }
;; 29 succs { 21 }
;; 53 succs { 30 }
;; 30 succs { 37 57 }
;; 57 succs { 31 }
;; 37 succs { 10 }
;; 48 succs { 31 }
;; 31 succs { 1 }
find_duplicates: <bb 48> duplicate of <bb 57>
find_duplicates: <bb 53> duplicate of <bb 56>
find_duplicates: <bb 49> duplicate of <bb 52>
find_duplicates: <bb 46> duplicate of <bb 47>
find_duplicates: <bb 44> duplicate of <bb 45>
Removing basic block 57
Removing basic block 56
Removing basic block 52
Removing basic block 47
Removing basic block 45

Symbols to be put in SSA form
{ D.6311 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 58
Number of blocks to update: 52 ( 90%)


Removing basic block 13
Removing basic block 23
Removing basic block 33
Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Merging blocks 44 and 4
Merging blocks 46 and 7
Merging blocks 48 and 31
Merging blocks 49 and 20
Removing basic block 50
Merging blocks 53 and 30
Removing basic block 54
DoNumSortIteration (farlong * arraybase, long unsigned int arraysize, unsigned int numarrays)
{
  long unsigned int k;
  long unsigned int i;
  long unsigned int k;
  long unsigned int i;
  long unsigned int i;
  long int i;
  farlong * darray;
  unsigned int numarrays;
  long unsigned int i;
  long unsigned int elapsed;
  long unsigned int _1;
  long unsigned int _3;
  farlong * _4;
  long unsigned int _6;
  long unsigned int _12;
  int _19;
  long unsigned int i.9_20;
  long unsigned int _21;
  farlong * _22;
  long int _23;
  long unsigned int _26;
  long unsigned int i.12_29;
  long unsigned int _30;
  farlong * _31;
  farlong * _32;
  long int _33;
  long int _42;
  long unsigned int _43;
  farlong * _44;
  long int _45;
  long unsigned int _47;
  sizetype _51;
  sizetype _52;
  farlong * _53;
  long int _54;
  long unsigned int _56;
  farlong * _57;
  long int _58;
  long unsigned int _65;
  sizetype _69;
  sizetype _70;
  farlong * _71;
  long int _72;
  long unsigned int _74;
  farlong * _75;
  long int _76;
  long unsigned int i.12_112;
  long unsigned int i.9_114;
  long unsigned int _136;
  farlong * _137;
  long int pretmp_138;
  farlong * prephitmp_140;
  long int prephitmp_141;
  long unsigned int _149;
  farlong * _150;
  long int pretmp_151;
  farlong * prephitmp_153;
  long int prephitmp_154;

  <bb 2> [0.47%]:
  randnum (13);
  if (arraysize_10(D) != 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 3> [2.65%]:
  # i.9_114 = PHI <i.9_20(3), 0(2)>
  # i_125 = PHI <i_25(3), 0(2)>
  _19 = randnum (0);
  _21 = i.9_114 * 8;
  _22 = arraybase_9(D) + _21;
  _23 = (long int) _19;
  *_22 = _23;
  i_25 = i_125 + 1;
  i.9_20 = (long unsigned int) i_25;
  if (arraysize_10(D) > i.9_20)
    goto <bb 3>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 4> [0.47%]:
  _26 = arraysize_10(D) * 8;
  goto <bb 8>; [100.00%]

  <bb 5> [2.65%]:
  darray_28 = darray_27 + _26;
  if (arraysize_10(D) != 0)
    goto <bb 6>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 6> [15.00%]:
  # i.12_112 = PHI <i.12_29(6), 0(5)>
  # i_111 = PHI <i_35(6), 0(5)>
  _30 = i.12_112 * 8;
  _31 = arraybase_9(D) + _30;
  _32 = darray_28 + _30;
  _33 = *_31;
  *_32 = _33;
  i_35 = i_111 + 1;
  i.12_29 = (long unsigned int) i_35;
  if (arraysize_10(D) > i.12_29)
    goto <bb 6>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 7> [2.65%]:

  <bb 8> [3.11%]:
  # numarrays_36 = PHI <numarrays_11(D)(4), numarrays_37(7)>
  # darray_27 = PHI <arraybase_9(D)(4), darray_28(7)>
  numarrays_37 = numarrays_36 + 4294967295;
  if (numarrays_37 != 0)
    goto <bb 5>; [85.00%]
  else
    goto <bb 9>; [15.00%]

  <bb 9> [0.47%]:
  elapsed_14 = StartStopwatch ();
  _12 = (long unsigned int) numarrays_11(D);
  if (_12 != 0)
    goto <bb 10>; [85.00%]
  else
    goto <bb 32>; [15.00%]

  <bb 10> [0.40%]:
  _1 = arraysize_10(D) + 18446744073709551615;
  i_38 = _1 >> 1;

  <bb 11> [2.65%]:
  # i_126 = PHI <i_18(31), 0(10)>
  _3 = _26 * i_126;
  _4 = arraybase_9(D) + _3;
  if (i_38 != 0)
    goto <bb 20>; [85.00%]
  else
    goto <bb 21>; [15.00%]

  <bb 12> [85.00%]:
  _136 = _47 * 8;
  _137 = _4 + _136;
  pretmp_138 = *_137;
  if (_1 > _47)
    goto <bb 13>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 13> [42.50%]:
  _51 = _47 + 1;
  _52 = _51 * 8;
  _53 = _4 + _52;
  _54 = *_53;
  if (_54 > pretmp_138)
    goto <bb 15>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [21.25%]:

  <bb 15> [85.00%]:
  # k_59 = PHI <_47(12), _47(14), _51(13)>
  # prephitmp_140 = PHI <_137(12), _137(14), _53(13)>
  # prephitmp_141 = PHI <pretmp_138(12), pretmp_138(14), _54(13)>
  _56 = i_55 * 8;
  _57 = _4 + _56;
  _58 = *_57;
  if (_58 < prephitmp_141)
    goto <bb 16>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 16> [42.50%]:
  *prephitmp_140 = _58;
  *_57 = prephitmp_141;

  <bb 17> [57.50%]:
  # i_89 = PHI <i_124(20), k_59(16)>

  <bb 18> [100.00%]:
  # i_55 = PHI <i_89(17), arraysize_10(D)(15)>
  _47 = i_55 * 2;
  if (_1 >= _47)
    goto <bb 12>; [85.00%]
  else
    goto <bb 19>; [15.00%]

  <bb 19> [15.00%]:
  i_40 = i_124 + 18446744073709551615;
  if (i_40 != 0)
    goto <bb 20>; [85.00%]
  else
    goto <bb 21>; [15.00%]

  <bb 20> [15.00%]:
  # i_124 = PHI <i_40(19), i_38(11)>
  goto <bb 17>; [100.00%]

  <bb 21> [2.65%]:
  if (_1 != 0)
    goto <bb 30>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 22> [85.00%]:
  # _6 = PHI <_65(28), 0(30)>
  # i_91 = PHI <i_64(28), 0(30)>
  _149 = _6 * 8;
  _150 = _4 + _149;
  pretmp_151 = *_150;
  if (_6 < i_122)
    goto <bb 23>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 23> [42.50%]:
  _69 = _6 + 1;
  _70 = _69 * 8;
  _71 = _4 + _70;
  _72 = *_71;
  if (_72 > pretmp_151)
    goto <bb 25>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 24> [21.25%]:

  <bb 25> [85.00%]:
  # k_77 = PHI <_6(22), _6(24), _69(23)>
  # prephitmp_153 = PHI <_150(22), _150(24), _71(23)>
  # prephitmp_154 = PHI <pretmp_151(22), pretmp_151(24), _72(23)>
  _74 = i_91 * 8;
  _75 = _4 + _74;
  _76 = *_75;
  if (_76 < prephitmp_154)
    goto <bb 26>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 26> [42.50%]:
  *prephitmp_153 = _76;
  *_75 = prephitmp_154;
  goto <bb 28>; [100.00%]

  <bb 27> [42.50%]:
  i_81 = i_122 + 1;

  <bb 28> [85.00%]:
  # i_64 = PHI <i_81(27), k_77(26)>
  _65 = i_64 * 2;
  if (_65 <= i_122)
    goto <bb 22>; [82.35%]
  else
    goto <bb 29>; [17.65%]

  <bb 29> [15.00%]:
  _42 = *_4;
  _43 = i_122 * 8;
  _44 = _4 + _43;
  _45 = *_44;
  *_4 = _45;
  *_44 = _42;
  i_46 = i_122 + 18446744073709551615;
  if (i_46 != 0)
    goto <bb 30>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 30> [15.00%]:
  # i_122 = PHI <i_46(29), _1(21)>
  goto <bb 22>; [100.00%]

  <bb 31> [2.65%]:
  i_18 = i_126 + 1;
  if (_12 > i_18)
    goto <bb 11>; [85.00%]
  else
    goto <bb 32>; [15.00%]

  <bb 32> [0.47%]:
  elapsed_16 = StopStopwatch (elapsed_14);
  return elapsed_16;

}



;; Function strsift (strsift, funcdef_no=63, decl_uid=4541, cgraph_uid=63, symbol_order=88)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
optrarray = &NONLOCAL
strarray = &NONLOCAL
numstrings = &NONLOCAL
i = &NONLOCAL
j = &NONLOCAL
_1 = _27
_1 = &NONLOCAL
_49 = _27
_49 = &NONLOCAL
_50 = optrarray + UNKNOWN
_51 = *_50
_52 = strarray + UNKNOWN
_53 = *_52
slen_54 = _53
_55 = _1
_55 = &NONLOCAL
_56 = optrarray + UNKNOWN
_57 = *_56
_58 = strarray + UNKNOWN
_59 = *_58
_60 = _59
slen_111 = slen_104
slen_111 = slen_101
k_29 = _27
k_29 = _1
k_29 = _27
k_29 = _27
k_29 = _1
_65 = i_28
_65 = &NONLOCAL
_66 = optrarray + UNKNOWN
_67 = *_66
_68 = strarray + UNKNOWN
_69 = *_68
slen_70 = _69
_71 = k_29
_71 = &NONLOCAL
_72 = optrarray + UNKNOWN
_73 = *_72
_74 = strarray + UNKNOWN
_75 = *_74
_76 = _75
slen_112 = slen_110
slen_112 = slen_107
_9 = _76
_9 = &NONLOCAL
_10 = _9
ESCAPED = &temp
ESCAPED = _74
ESCAPED = _10
_13 = *_66
_14 = strarray + UNKNOWN
tlen_43 = *_14
_15 = tlen_43
ESCAPED = optrarray
ESCAPED = strarray
ESCAPED = numstrings
ESCAPED = k_29
ESCAPED = _15
_16 = _15
_16 = &NONLOCAL
_17 = _16
_18 = *_66
_19 = strarray + UNKNOWN
_20 = *_72
_21 = strarray + UNKNOWN
ESCAPED = _21
ESCAPED = _19
ESCAPED = _17
tlen_46 = temp
_22 = tlen_46
ESCAPED = optrarray
ESCAPED = strarray
ESCAPED = numstrings
ESCAPED = i_28
ESCAPED = _22
_23 = _22
_23 = &NONLOCAL
_24 = _23
_25 = *_66
_26 = strarray + UNKNOWN
ESCAPED = _26
ESCAPED = &temp
ESCAPED = _24
i_40 = j
i_40 = &NONLOCAL
i_39 = k_29
i_39 = i_40
i_28 = i_39
i_28 = i
_27 = i_28
_27 = &NONLOCAL
_100 = _59
CALLUSED(72) = CALLUSED(72) + UNKNOWN
CALLUSED(72) = *CALLUSED(72) + UNKNOWN
CALLUSED(72) = _52
CALLUSED(72) = _58
CALLUSED(72) = _100
slen_101 = CALLUSED(72)
slen_101 = NONLOCAL
_103 = _53
CALLUSED(75) = CALLUSED(75) + UNKNOWN
CALLUSED(75) = *CALLUSED(75) + UNKNOWN
CALLUSED(75) = _52
CALLUSED(75) = _58
CALLUSED(75) = _103
slen_104 = CALLUSED(75)
slen_104 = NONLOCAL
_106 = _75
CALLUSED(78) = CALLUSED(78) + UNKNOWN
CALLUSED(78) = *CALLUSED(78) + UNKNOWN
CALLUSED(78) = _68
CALLUSED(78) = _74
CALLUSED(78) = _106
slen_107 = CALLUSED(78)
slen_107 = NONLOCAL
_109 = _69
CALLUSED(81) = CALLUSED(81) + UNKNOWN
CALLUSED(81) = *CALLUSED(81) + UNKNOWN
CALLUSED(81) = _68
CALLUSED(81) = _74
CALLUSED(81) = _109
slen_110 = CALLUSED(81)
slen_110 = NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 50 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"optrarray"[label="optrarray = { 5 }"];
"strarray"[label="strarray = { 5 }"];
"numstrings"[label="numstrings = { 5 }"];
"i"[label="i = { 5 }"];
"j"[label="j = { 5 }"];
"_49"[label="_49 = { 5 }"];
"_50";
"_51";
"_52";
"_53";
"slen_54";
"_55"[label="_55 = { 5 }"];
"_56";
"_57";
"_58";
"_59";
"_60";
"slen_111";
"slen_104";
"slen_101";
"k_29"[label="k_29 = { 5 }"];
"_65"[label="_65 = { 5 }"];
"_66";
"_67";
"_68";
"_69";
"slen_70";
"_71"[label="_71 = { 5 }"];
"_72";
"_73";
"_74";
"_75";
"_76";
"slen_112";
"slen_110";
"slen_107";
"_9"[label="_9 = { 5 }"];
"_10";
"MoveMemory";
"temp";
"_13";
"_14";
"tlen_43";
"_15";
"stradjust";
"_16"[label="_16 = { 5 }"];
"_17";
"_18";
"_19";
"_20";
"_21";
"tlen_46";
"_22";
"_23"[label="_23 = { 5 }"];
"_24";
"_25";
"_26";
"i_40"[label="i_40 = { 5 }"];
"_100";
"strncmp";
"CALLUSED(72)";
"CALLCLOBBERED(73)";
"_103";
"CALLUSED(75)";
"CALLCLOBBERED(76)";
"_106";
"CALLUSED(78)";
"CALLCLOBBERED(79)";
"_109";
"CALLUSED(81)";
"CALLCLOBBERED(82)";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*optrarray";
"*strarray";
"*numstrings";
"*i";
"*j";
"*_49";
"*_50";
"*_51";
"*_52";
"*_53";
"*slen_54";
"*_55";
"*_56";
"*_57";
"*_58";
"*_59";
"*_60";
"*slen_111";
"*slen_104";
"*slen_101";
"*k_29";
"*_65";
"*_66";
"*_67";
"*_68";
"*_69";
"*slen_70";
"*_71";
"*_72";
"*_73";
"*_74";
"*_75";
"*_76";
"*slen_112";
"*slen_110";
"*slen_107";
"*_9";
"*_10";
"*MoveMemory";
"*temp";
"*_13";
"*_14";
"*tlen_43";
"*_15";
"*stradjust";
"*_16";
"*_17";
"*_18";
"*_19";
"*_20";
"*_21";
"*tlen_46";
"*_22";
"*_23";
"*_24";
"*_25";
"*_26";
"*i_40";
"*_100";
"*strncmp";
"*CALLUSED(72)";
"*CALLCLOBBERED(73)";
"*_103";
"*CALLUSED(75)";
"*CALLCLOBBERED(76)";
"*_106";
"*CALLUSED(78)";
"*CALLCLOBBERED(79)";
"*_109";
"*CALLUSED(81)";
"*CALLCLOBBERED(82)";

  // Edges in the constraint graph:
"optrarray" -> "ESCAPED";
"strarray" -> "ESCAPED";
"numstrings" -> "ESCAPED";
"k_29" -> "ESCAPED";
"k_29" -> "ESCAPED";
"_74" -> "ESCAPED";
"_10" -> "ESCAPED";
"_15" -> "ESCAPED";
"_17" -> "ESCAPED";
"_19" -> "ESCAPED";
"_21" -> "ESCAPED";
"_22" -> "ESCAPED";
"_24" -> "ESCAPED";
"_26" -> "ESCAPED";
"*ESCAPED" -> "ESCAPED";
"k_29" -> "_49";
"*_50" -> "_51";
"*_52" -> "_53";
"_53" -> "slen_54";
"k_29" -> "_55";
"*_56" -> "_57";
"*_58" -> "_59";
"_59" -> "_60";
"slen_104" -> "slen_111";
"slen_101" -> "slen_111";
"NONLOCAL" -> "slen_104";
"CALLUSED(75)" -> "slen_104";
"NONLOCAL" -> "slen_101";
"CALLUSED(72)" -> "slen_101";
"i" -> "k_29";
"k_29" -> "k_29";
"k_29" -> "k_29";
"k_29" -> "k_29";
"k_29" -> "k_29";
"i_40" -> "k_29";
"k_29" -> "k_29";
"k_29" -> "_65";
"*_66" -> "_67";
"*_68" -> "_69";
"_69" -> "slen_70";
"k_29" -> "_71";
"*_72" -> "_73";
"*_74" -> "_75";
"_75" -> "_76";
"slen_110" -> "slen_112";
"slen_107" -> "slen_112";
"NONLOCAL" -> "slen_110";
"CALLUSED(81)" -> "slen_110";
"NONLOCAL" -> "slen_107";
"CALLUSED(78)" -> "slen_107";
"_76" -> "_9";
"_9" -> "_10";
"*_66" -> "_13";
"*_14" -> "tlen_43";
"tlen_43" -> "_15";
"_15" -> "_16";
"_16" -> "_17";
"*_66" -> "_18";
"*_72" -> "_20";
"temp" -> "tlen_46";
"tlen_46" -> "_22";
"_22" -> "_23";
"_23" -> "_24";
"*_66" -> "_25";
"j" -> "i_40";
"_59" -> "_100";
"_52" -> "CALLUSED(72)";
"_58" -> "CALLUSED(72)";
"_100" -> "CALLUSED(72)";
"_53" -> "_103";
"_52" -> "CALLUSED(75)";
"_58" -> "CALLUSED(75)";
"_103" -> "CALLUSED(75)";
"_75" -> "_106";
"_68" -> "CALLUSED(78)";
"_74" -> "CALLUSED(78)";
"_106" -> "CALLUSED(78)";
"_69" -> "_109";
"_68" -> "CALLUSED(81)";
"_74" -> "CALLUSED(81)";
"_109" -> "CALLUSED(81)";
"NONLOCAL" -> "*ESCAPED";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"optrarray" [label="\N\n_50 = optrarray + UNKNOWN\l_52 = optrarray + UNKNOWN\l_56 = optrarray + UNKNOWN\l_58 = optrarray + UNKNOWN\l_66 = optrarray + UNKNOWN\l_68 = optrarray + UNKNOWN\l_72 = optrarray + UNKNOWN\l_74 = optrarray + UNKNOWN\l_14 = optrarray + UNKNOWN\l_19 = optrarray + UNKNOWN\l_21 = optrarray + UNKNOWN\l_26 = optrarray + UNKNOWN\l"];
"_50" [label="\N\n_51 = *_50\l"];
"_51";
"_52" [label="\N\n_53 = *_52\l"];
"_53";
"_56" [label="\N\n_57 = *_56\l"];
"_57";
"_58" [label="\N\n_59 = *_58\l"];
"_59";
"slen_111";
"slen_104";
"slen_101";
"_66" [label="\N\n_67 = *_66\l"];
"_67";
"_68" [label="\N\n_69 = *_68\l"];
"_69";
"_72" [label="\N\n_73 = *_72\l"];
"_73";
"_74" [label="\N\n_75 = *_74\l"];
"_75";
"slen_112";
"slen_110";
"slen_107";
"_9";
"MoveMemory";
"_14" [label="\N\ntlen_43 = *_14\l"];
"tlen_43";
"stradjust";
"_16";
"_19";
"_21";
"tlen_46";
"_23";
"_26";
"strncmp";
"CALLUSED(72)" [label="\N\nCALLUSED(72) = CALLUSED(72) + UNKNOWN\lCALLUSED(72) = *CALLUSED(72) + UNKNOWN\l"];
"CALLCLOBBERED(73)";
"CALLUSED(75)" [label="\N\nCALLUSED(75) = CALLUSED(75) + UNKNOWN\lCALLUSED(75) = *CALLUSED(75) + UNKNOWN\l"];
"CALLCLOBBERED(76)";
"CALLUSED(78)" [label="\N\nCALLUSED(78) = CALLUSED(78) + UNKNOWN\lCALLUSED(78) = *CALLUSED(78) + UNKNOWN\l"];
"CALLCLOBBERED(79)";
"CALLUSED(81)" [label="\N\nCALLUSED(81) = CALLUSED(81) + UNKNOWN\lCALLUSED(81) = *CALLUSED(81) + UNKNOWN\l"];
"CALLCLOBBERED(82)";

  // Edges in the constraint graph:
"NONLOCAL" -> "slen_104";
"NONLOCAL" -> "slen_101";
"NONLOCAL" -> "slen_110";
"NONLOCAL" -> "slen_107";
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_50";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "_56";
"STOREDANYTHING" -> "_58";
"STOREDANYTHING" -> "_66";
"STOREDANYTHING" -> "_68";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "_74";
"STOREDANYTHING" -> "tlen_46";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_19";
"STOREDANYTHING" -> "_21";
"STOREDANYTHING" -> "_26";
"STOREDANYTHING" -> "CALLUSED(72)";
"STOREDANYTHING" -> "CALLUSED(75)";
"STOREDANYTHING" -> "CALLUSED(78)";
"STOREDANYTHING" -> "CALLUSED(81)";
"optrarray" -> "ESCAPED";
"_52" -> "CALLUSED(72)";
"_52" -> "CALLUSED(75)";
"_53" -> "CALLUSED(75)";
"_58" -> "CALLUSED(72)";
"_58" -> "CALLUSED(75)";
"_59" -> "CALLUSED(72)";
"slen_104" -> "slen_111";
"slen_101" -> "slen_111";
"_68" -> "CALLUSED(78)";
"_68" -> "CALLUSED(81)";
"_69" -> "CALLUSED(81)";
"_74" -> "ESCAPED";
"_74" -> "CALLUSED(78)";
"_74" -> "CALLUSED(81)";
"_75" -> "_9";
"_75" -> "CALLUSED(78)";
"slen_110" -> "slen_112";
"slen_107" -> "slen_112";
"_9" -> "ESCAPED";
"tlen_43" -> "ESCAPED";
"tlen_43" -> "_16";
"_16" -> "ESCAPED";
"_19" -> "ESCAPED";
"_21" -> "ESCAPED";
"tlen_46" -> "ESCAPED";
"tlen_46" -> "_23";
"_23" -> "ESCAPED";
"_26" -> "ESCAPED";
"CALLUSED(72)" -> "slen_101";
"CALLUSED(75)" -> "slen_104";
"CALLUSED(78)" -> "slen_107";
"CALLUSED(81)" -> "slen_110";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"optrarray" [label="\N\n_50 = optrarray + UNKNOWN\l_52 = optrarray + UNKNOWN\l_56 = optrarray + UNKNOWN\l_58 = optrarray + UNKNOWN\l_66 = optrarray + UNKNOWN\l_68 = optrarray + UNKNOWN\l_72 = optrarray + UNKNOWN\l_74 = optrarray + UNKNOWN\l_14 = optrarray + UNKNOWN\l_19 = optrarray + UNKNOWN\l_21 = optrarray + UNKNOWN\l_26 = optrarray + UNKNOWN\l"];
"_50" [label="\N\n_51 = *_50\l"];
"_51";
"_52" [label="\N\n_53 = *_52\l"];
"_53";
"_56" [label="\N\n_57 = *_56\l"];
"_57";
"_58" [label="\N\n_59 = *_58\l"];
"_59";
"slen_111";
"slen_104";
"slen_101";
"_66" [label="\N\n_67 = *_66\l"];
"_67";
"_68" [label="\N\n_69 = *_68\l"];
"_69";
"_72" [label="\N\n_73 = *_72\l"];
"_73";
"_74" [label="\N\n_75 = *_74\l"];
"_75";
"slen_112";
"slen_110";
"slen_107";
"_9";
"MoveMemory";
"_14" [label="\N\ntlen_43 = *_14\l"];
"tlen_43";
"stradjust";
"_16";
"_19";
"_21";
"tlen_46";
"_23";
"_26";
"strncmp";
"CALLUSED(72)" [label="\N\nCALLUSED(72) = CALLUSED(72) + UNKNOWN\lCALLUSED(72) = *CALLUSED(72) + UNKNOWN\l"];
"CALLCLOBBERED(73)";
"CALLUSED(75)" [label="\N\nCALLUSED(75) = CALLUSED(75) + UNKNOWN\lCALLUSED(75) = *CALLUSED(75) + UNKNOWN\l"];
"CALLCLOBBERED(76)";
"CALLUSED(78)" [label="\N\nCALLUSED(78) = CALLUSED(78) + UNKNOWN\lCALLUSED(78) = *CALLUSED(78) + UNKNOWN\l"];
"CALLCLOBBERED(79)";
"CALLUSED(81)" [label="\N\nCALLUSED(81) = CALLUSED(81) + UNKNOWN\lCALLUSED(81) = *CALLUSED(81) + UNKNOWN\l"];
"CALLCLOBBERED(82)";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"NONLOCAL" -> "slen_104";
"NONLOCAL" -> "slen_101";
"NONLOCAL" -> "slen_110";
"NONLOCAL" -> "slen_107";
"NONLOCAL" -> "tlen_46";
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_50";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "_56";
"STOREDANYTHING" -> "_58";
"STOREDANYTHING" -> "_66";
"STOREDANYTHING" -> "_68";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "_74";
"STOREDANYTHING" -> "tlen_46";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_19";
"STOREDANYTHING" -> "_21";
"STOREDANYTHING" -> "_26";
"STOREDANYTHING" -> "CALLUSED(72)";
"STOREDANYTHING" -> "CALLUSED(75)";
"STOREDANYTHING" -> "CALLUSED(78)";
"STOREDANYTHING" -> "CALLUSED(81)";
"optrarray" -> "ESCAPED";
"_52" -> "CALLUSED(72)";
"_52" -> "CALLUSED(75)";
"_53" -> "CALLUSED(75)";
"_58" -> "CALLUSED(72)";
"_58" -> "CALLUSED(75)";
"_59" -> "CALLUSED(72)";
"slen_104" -> "slen_111";
"slen_101" -> "slen_111";
"_68" -> "CALLUSED(78)";
"_68" -> "CALLUSED(81)";
"_69" -> "CALLUSED(81)";
"_74" -> "ESCAPED";
"_74" -> "CALLUSED(78)";
"_74" -> "CALLUSED(81)";
"_75" -> "_9";
"_75" -> "CALLUSED(78)";
"slen_110" -> "slen_112";
"slen_107" -> "slen_112";
"_9" -> "ESCAPED";
"tlen_43" -> "ESCAPED";
"tlen_43" -> "_16";
"_16" -> "ESCAPED";
"_19" -> "ESCAPED";
"_21" -> "ESCAPED";
"tlen_46" -> "ESCAPED";
"tlen_46" -> "_23";
"_23" -> "ESCAPED";
"_26" -> "ESCAPED";
"CALLUSED(72)" -> "slen_101";
"CALLUSED(75)" -> "slen_104";
"CALLUSED(78)" -> "slen_107";
"CALLUSED(81)" -> "slen_110";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL temp }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
optrarray = { NONLOCAL }
strarray = { NONLOCAL } same as optrarray
numstrings = { NONLOCAL } same as optrarray
i = { NONLOCAL } same as optrarray
j = { NONLOCAL } same as optrarray
_1 = { NONLOCAL } same as optrarray
_27 = { NONLOCAL } same as optrarray
_49 = { NONLOCAL } same as optrarray
_50 = { NONLOCAL }
_51 = { ESCAPED NONLOCAL }
_52 = { NONLOCAL }
_53 = { ESCAPED NONLOCAL }
slen_54 = { ESCAPED NONLOCAL } same as _53
_55 = { NONLOCAL } same as optrarray
_56 = { NONLOCAL }
_57 = { ESCAPED NONLOCAL }
_58 = { NONLOCAL }
_59 = { ESCAPED NONLOCAL }
_60 = { ESCAPED NONLOCAL } same as _59
slen_111 = { ESCAPED NONLOCAL }
slen_104 = { ESCAPED NONLOCAL }
slen_101 = { ESCAPED NONLOCAL }
k_29 = { NONLOCAL } same as optrarray
_65 = { NONLOCAL } same as optrarray
i_28 = { NONLOCAL } same as optrarray
_66 = { NONLOCAL }
_67 = { ESCAPED NONLOCAL }
_68 = { NONLOCAL }
_69 = { ESCAPED NONLOCAL }
slen_70 = { ESCAPED NONLOCAL } same as _69
_71 = { NONLOCAL } same as optrarray
_72 = { NONLOCAL }
_73 = { ESCAPED NONLOCAL }
_74 = { NONLOCAL }
_75 = { ESCAPED NONLOCAL }
_76 = { ESCAPED NONLOCAL } same as _75
slen_112 = { ESCAPED NONLOCAL }
slen_110 = { ESCAPED NONLOCAL }
slen_107 = { ESCAPED NONLOCAL }
_9 = { ESCAPED NONLOCAL }
_10 = { ESCAPED NONLOCAL } same as _9
MoveMemory = { }
temp = { ESCAPED NONLOCAL } same as tlen_46
_13 = { ESCAPED NONLOCAL } same as _67
_14 = { NONLOCAL }
tlen_43 = { ESCAPED NONLOCAL }
_15 = { ESCAPED NONLOCAL } same as tlen_43
stradjust = { }
_16 = { ESCAPED NONLOCAL }
_17 = { ESCAPED NONLOCAL } same as _16
_18 = { ESCAPED NONLOCAL } same as _67
_19 = { NONLOCAL }
_20 = { ESCAPED NONLOCAL } same as _73
_21 = { NONLOCAL }
tlen_46 = { ESCAPED NONLOCAL }
_22 = { ESCAPED NONLOCAL } same as tlen_46
_23 = { ESCAPED NONLOCAL }
_24 = { ESCAPED NONLOCAL } same as _23
_25 = { ESCAPED NONLOCAL } same as _67
_26 = { NONLOCAL }
i_40 = { NONLOCAL } same as optrarray
i_39 = { NONLOCAL } same as optrarray
_100 = { ESCAPED NONLOCAL } same as _59
strncmp = { }
CALLUSED(72) = { ESCAPED NONLOCAL }
CALLCLOBBERED(73) = { }
_103 = { ESCAPED NONLOCAL } same as _53
CALLUSED(75) = { ESCAPED NONLOCAL }
CALLCLOBBERED(76) = { }
_106 = { ESCAPED NONLOCAL } same as _75
CALLUSED(78) = { ESCAPED NONLOCAL }
CALLCLOBBERED(79) = { }
_109 = { ESCAPED NONLOCAL } same as _69
CALLUSED(81) = { ESCAPED NONLOCAL }
CALLCLOBBERED(82) = { }


Alias information for strsift

Aliased symbols

temp, UID D.4936, unsigned char[80], is addressable

Call clobber information

ESCAPED, points-to non-local, points-to vars: { D.4936 } (escaped)

Flow-insensitive points-to information

_14, points-to non-local, points-to NULL, points-to vars: { }
_19, points-to non-local, points-to NULL, points-to vars: { }
_21, points-to non-local, points-to NULL, points-to vars: { }
_26, points-to non-local, points-to NULL, points-to vars: { }
optrarray_36(D), points-to non-local, points-to NULL, points-to vars: { }
strarray_37(D), points-to non-local, points-to NULL, points-to vars: { }
_50, points-to non-local, points-to NULL, points-to vars: { }
_52, points-to non-local, points-to NULL, points-to vars: { }
_56, points-to non-local, points-to NULL, points-to vars: { }
_58, points-to non-local, points-to NULL, points-to vars: { }
_66, points-to non-local, points-to NULL, points-to vars: { }
_68, points-to non-local, points-to NULL, points-to vars: { }
_72, points-to non-local, points-to NULL, points-to vars: { }
_74, points-to non-local, points-to NULL, points-to vars: { }

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 18 4 23 5 19 6 7 27 8 20 9 21 10 11 12 13 14 22 15 25 24 16 26 17 29 28
;;
;; Loop 1
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 9 10 28 21 8 29 27 16 7 18 22 24 19 6 5 25 23 14 4 3 15 17 26 20
;; 2 succs { 12 }
;; 3 succs { 4 18 }
;; 18 succs { 7 }
;; 4 succs { 14 15 }
;; 23 succs { 5 }
;; 5 succs { 6 19 }
;; 19 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 16 17 }
;; 27 succs { 8 }
;; 8 succs { 20 21 }
;; 20 succs { 9 }
;; 9 succs { 11 }
;; 21 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 3 13 }
;; 13 succs { 1 }
;; 14 succs { 22 23 }
;; 22 succs { 7 }
;; 15 succs { 24 25 }
;; 25 succs { 5 }
;; 24 succs { 7 }
;; 16 succs { 26 27 }
;; 26 succs { 9 }
;; 17 succs { 28 29 }
;; 29 succs { 8 }
;; 28 succs { 10 }
find_duplicates: <bb 21> duplicate of <bb 28>
find_duplicates: <bb 20> duplicate of <bb 26>
Removing basic block 28
Removing basic block 26

Symbols to be put in SSA form
{ D.6321 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 30
Number of blocks to update: 27 ( 90%)


Removing basic block 6
Removing basic block 18
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
Removing basic block 27
Removing basic block 29
strsift (farulong * optrarray, faruchar * strarray, long unsigned int numstrings, long unsigned int i, long unsigned int j)
{
  int slen;
  int D.7998;
  int slen;
  int D.7992;
  unsigned char tlen;
  unsigned char temp[80];
  long unsigned int k;
  long unsigned int _1;
  int prephitmp_8;
  int _9;
  long unsigned int _10;
  farulong * prephitmp_11;
  faruchar * prephitmp_12;
  long unsigned int _13;
  faruchar * _14;
  int _15;
  int _16;
  long unsigned int _17;
  long unsigned int _18;
  faruchar * _19;
  long unsigned int _20;
  faruchar * _21;
  int _22;
  int _23;
  long unsigned int _24;
  long unsigned int _25;
  faruchar * _26;
  long unsigned int _27;
  unsigned char prephitmp_41;
  long unsigned int _55;
  farulong * _56;
  long unsigned int _57;
  faruchar * _58;
  unsigned char _59;
  int _60;
  long unsigned int _65;
  farulong * _66;
  long unsigned int _67;
  faruchar * _68;
  unsigned char _69;
  long unsigned int pretmp_84;
  unsigned char pretmp_85;
  int _86;
  farulong * _87;
  faruchar * _88;
  long unsigned int _89;
  long unsigned int _100;
  long unsigned int _103;
  long unsigned int _106;
  long unsigned int _109;

  <bb 2> [15.00%]:
  goto <bb 12>; [100.00%]

  <bb 3> [85.00%]:
  _89 = _27 * 8;
  _87 = optrarray_36(D) + _89;
  pretmp_84 = *_87;
  _88 = strarray_37(D) + pretmp_84;
  pretmp_85 = *_88;
  _86 = (int) pretmp_85;
  if (_27 < j_33(D))
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [42.50%]:
  _1 = _27 + 1;
  _55 = _1 * 8;
  _56 = optrarray_36(D) + _55;
  _57 = *_56;
  _58 = strarray_37(D) + _57;
  _59 = *_58;
  _60 = (int) _59;
  if (_59 < pretmp_85)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 5> [21.25%]:
  # slen_111 = PHI <slen_104(15), slen_101(14)>
  if (slen_111 < 0)
    goto <bb 7>; [32.39%]
  else
    goto <bb 6>; [67.61%]

  <bb 6> [14.37%]:

  <bb 7> [85.00%]:
  # k_29 = PHI <_27(3), _1(14), _27(15), _27(6), _1(5)>
  # prephitmp_11 = PHI <_87(3), _56(14), _87(15), _87(6), _56(5)>
  # prephitmp_12 = PHI <_88(3), _58(14), _88(15), _88(6), _58(5)>
  # prephitmp_41 = PHI <pretmp_85(3), _59(14), pretmp_85(15), pretmp_85(6), _59(5)>
  # prephitmp_8 = PHI <_86(3), _60(14), _86(15), _86(6), _60(5)>
  _65 = i_28 * 8;
  _66 = optrarray_36(D) + _65;
  _67 = *_66;
  _68 = strarray_37(D) + _67;
  _69 = *_68;
  slen_70 = (int) _69;
  if (prephitmp_41 < _69)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 8> [42.50%]:
  # slen_112 = PHI <slen_110(17), slen_107(16)>
  if (slen_112 < 0)
    goto <bb 9>; [32.39%]
  else
    goto <bb 10>; [67.61%]

  <bb 9> [28.05%]:
  _9 = prephitmp_8 + 1;
  _10 = (long unsigned int) _9;
  MoveMemory (&temp[0], prephitmp_12, _10);
  _13 = *_66;
  _14 = strarray_37(D) + _13;
  tlen_43 = *_14;
  _15 = (int) tlen_43;
  stradjust (optrarray_36(D), strarray_37(D), numstrings_38(D), k_29, _15);
  _16 = _15 + 1;
  _17 = (long unsigned int) _16;
  _18 = *_66;
  _19 = strarray_37(D) + _18;
  _20 = *prephitmp_11;
  _21 = strarray_37(D) + _20;
  MoveMemory (_21, _19, _17);
  tlen_46 = temp[0];
  _22 = (int) tlen_46;
  stradjust (optrarray_36(D), strarray_37(D), numstrings_38(D), i_28, _22);
  _23 = _22 + 1;
  _24 = (long unsigned int) _23;
  _25 = *_66;
  _26 = strarray_37(D) + _25;
  MoveMemory (_26, &temp[0], _24);
  goto <bb 11>; [100.00%]

  <bb 10> [56.95%]:
  i_40 = j_33(D) + 1;

  <bb 11> [85.00%]:
  # i_39 = PHI <k_29(9), i_40(10)>

  <bb 12> [100.00%]:
  # i_28 = PHI <i_39(11), i_31(D)(2)>
  _27 = i_28 * 2;
  if (_27 <= j_33(D))
    goto <bb 3>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 13> [15.00%]:
  temp ={v} {CLOBBER};
  return;

  <bb 14> [21.25%]:
  _100 = (long unsigned int) _59;
  slen_101 = strncmp (_88, _58, _100);
  if (slen_101 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 15> [21.25%]:
  _103 = (long unsigned int) pretmp_85;
  slen_104 = strncmp (_88, _58, _103);
  if (slen_104 == 0)
    goto <bb 7>; [49.98%]
  else
    goto <bb 5>; [50.02%]

  <bb 16> [42.50%]:
  _106 = (long unsigned int) prephitmp_41;
  slen_107 = strncmp (_68, prephitmp_12, _106);
  if (slen_107 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 17> [42.50%]:
  _109 = (long unsigned int) _69;
  slen_110 = strncmp (_68, prephitmp_12, _109);
  if (slen_110 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

}



;; Function DoStringSortIteration (DoStringSortIteration, funcdef_no=58, decl_uid=4512, cgraph_uid=58, symbol_order=83)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
arraybase = &NONLOCAL
numarrays = &NONLOCAL
arraysize = &NONLOCAL
ESCAPED = &NONLOCAL
curroffset_31 = &NULL
curroffset_31 = curroffset_218
nstrings_208 = &NULL
nstrings_208 = _49
ESCAPED = &NONLOCAL
_27 = NONLOCAL
_28 = _27
stringlength_29 = _28
stringlength_29 = &NONLOCAL
_30 = stringlength_29
_143 = curroffset_31
_143 = &NONLOCAL
_33 = _30
_33 = _143
_34 = arraysize
_35 = curroffset_31
_2 = _34
_2 = &NONLOCAL
stringlength_37 = _2
stringlength_37 = _35
fullflag_50 = &NULL
fullflag_50 = &NONLOCAL
stringlength_39 = stringlength_29
stringlength_39 = stringlength_37
_38 = arraybase + UNKNOWN
*_38 = stringlength_39
curroffset_40 = curroffset_31
curroffset_40 = &NONLOCAL
curroffset_217 = curroffset_45
curroffset_217 = curroffset_40
i_219 = i_47
i_219 = &NULL
ESCAPED = &NONLOCAL
_41 = NONLOCAL
_43 = arraybase + UNKNOWN
_44 = _41
*_43 = _44
curroffset_45 = curroffset_217
curroffset_45 = &NONLOCAL
i_47 = i_219
i_47 = &NONLOCAL
curroffset_218 = curroffset_45
curroffset_218 = curroffset_40
_49 = nstrings_208
_49 = &NONLOCAL
tempsbase_220 = tempsbase_53
tempsbase_220 = arraybase
k_223 = k_61
k_223 = &NONLOCAL
_51 = arraysize
_51 = &NONLOCAL
tempsbase_53 = tempsbase_220 + UNKNOWN
_221 = _54
_221 = &NULL
l_222 = l_59
l_222 = &NULL
_55 = arraybase + UNKNOWN
_56 = tempsbase_53 + UNKNOWN
_57 = *_55
*_56 = _57
l_59 = l_222
l_59 = &NONLOCAL
_54 = l_59
k_61 = k_223
k_61 = &NONLOCAL
_63 = numarrays
_198 = _63
_198 = &NONLOCAL
_65 = _49
_65 = _198
ESCAPED = _65
ESCAPED = &systemerror
optrarray_66 = NONLOCAL
systemerror.26_67 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.26_67
ESCAPED = arraybase
ESCAPED = &systemerror
j_224 = j_77
j_224 = &NULL
curroffset_225 = curroffset_76
curroffset_225 = &NULL
_69 = j_224
_69 = &NONLOCAL
_70 = optrarray_66 + UNKNOWN
*_70 = curroffset_225
_72 = arraybase + UNKNOWN
_73 = *_72
_74 = _73
_178 = _74
_178 = &NONLOCAL
curroffset_76 = _178
curroffset_76 = curroffset_225
j_77 = j_224
j_77 = &NONLOCAL
_80 = _49
_80 = &NONLOCAL
tempobase_226 = tempobase_82
tempobase_226 = optrarray_66
k_229 = k_92
k_229 = &NONLOCAL
tempobase_82 = tempobase_226 + UNKNOWN
_227 = _83
_227 = &NULL
l_228 = l_89
l_228 = &NULL
_84 = _227
_84 = &NONLOCAL
_85 = optrarray_66 + UNKNOWN
_86 = tempobase_82 + UNKNOWN
_87 = *_85
*_86 = _87
l_89 = l_228
l_89 = &NONLOCAL
_83 = l_89
k_92 = k_229
k_92 = &NONLOCAL
elapsed_17 = NONLOCAL
i_97 = nstrings_208
i_97 = &NONLOCAL
_134 = _49
_134 = &NONLOCAL
_135 = _134
_135 = &NONLOCAL
_4 = _49
_4 = &NONLOCAL
i_212 = i_26
i_212 = &NULL
tempobase_213 = tempobase_24
tempobase_213 = optrarray_66
tempsbase_214 = tempsbase_25
tempsbase_214 = arraybase
i_230 = i_99
i_230 = i_97
ESCAPED = tempobase_213
ESCAPED = tempsbase_214
ESCAPED = _49
ESCAPED = i_230
ESCAPED = nstrings_208
i_99 = i_230
i_99 = &NONLOCAL
_136 = tempobase_213 + UNKNOWN
i_231 = i_121
i_231 = nstrings_208
ESCAPED = tempobase_213
ESCAPED = tempsbase_214
ESCAPED = _49
ESCAPED = &NULL
ESCAPED = i_231
tlen_101 = *tempsbase_214
_102 = tlen_101
_103 = _102
_103 = &NONLOCAL
_104 = _103
ESCAPED = &temp
ESCAPED = tempsbase_214
ESCAPED = _104
_105 = i_231
_105 = &NONLOCAL
_106 = tempobase_213 + UNKNOWN
_107 = *_106
_108 = tempsbase_214 + UNKNOWN
tlen_109 = *_108
_110 = tlen_109
_126 = *tempobase_213
_127 = tempsbase_214 + UNKNOWN
_128 = *_127
_129 = _128
direction_130 = _110
direction_130 = _129
_131 = direction_130
_137 = *_136
_138 = tempsbase_214 + UNKNOWN
_139 = *_138
_140 = _139
_145 = *tempobase_213 + 64
_190 = _137
_190 = _145
_144 = _190
_144 = &NONLOCAL
nbytes_147 = _140
nbytes_147 = _144
_148 = tempsbase_214 + UNKNOWN
_149 = tlen_109
_15 = _126
_15 = &NONLOCAL
_151 = _15
_151 = _149
_152 = tempsbase_214 + UNKNOWN
ESCAPED = _152
ESCAPED = _148
ESCAPED = nbytes_147
j_232 = j_164
j_232 = &NONLOCAL
_154 = j_232
_154 = &NONLOCAL
_155 = tempobase_213 + UNKNOWN
_156 = *_155
_157 = _131
_158 = _156
_158 = _157
*_155 = _158
_159 = j_232
_159 = &NONLOCAL
_160 = tempobase_213 + UNKNOWN
_161 = *_160
_162 = _131
_163 = _161
_163 = _162
*_160 = _163
j_164 = j_232
j_164 = &NONLOCAL
_165 = *tempobase_213
_166 = tempsbase_214 + UNKNOWN
*_166 = tlen_109
_111 = _110
_111 = &NONLOCAL
_112 = _111
_113 = *_106
_114 = tempsbase_214 + UNKNOWN
ESCAPED = tempsbase_214
ESCAPED = _114
ESCAPED = _112
tlen_115 = temp
_116 = tlen_115
ESCAPED = tempobase_213
ESCAPED = tempsbase_214
ESCAPED = _49
ESCAPED = i_231
ESCAPED = _116
_117 = _116
_117 = &NONLOCAL
_118 = _117
_119 = *_106
_120 = tempsbase_214 + UNKNOWN
ESCAPED = _120
ESCAPED = &temp
ESCAPED = _118
i_121 = i_231
i_121 = &NONLOCAL
tempobase_24 = tempobase_213 + UNKNOWN
_5 = arraysize
_5 = &NONLOCAL
tempsbase_25 = tempsbase_214 + UNKNOWN
i_26 = i_212
i_26 = &NONLOCAL
ESCAPED = elapsed_17
elapsed_19 = NONLOCAL
ESCAPED = optrarray_66
ESCAPED = &syserror
ESCAPED = elapsed_19

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 1 3 5 54 106 160 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"arraybase"[label="arraybase = { 5 }"];
"numarrays"[label="numarrays = { 5 }"];
"arraysize"[label="arraysize = { 5 }"];
"randnum";
"curroffset_31"[label="curroffset_31 = { 1 5 }"];
"nstrings_208"[label="nstrings_208 = { 1 5 }"];
"abs_randwc";
"_27";
"_28";
"stringlength_29"[label="stringlength_29 = { 5 }"];
"_30";
"_143"[label="_143 = { 5 }"];
"_33";
"_34";
"_35";
"_2"[label="_2 = { 5 }"];
"stringlength_37";
"fullflag_50"[label="fullflag_50 = { 1 5 }"];
"stringlength_39";
"_38";
"i_219"[label="i_219 = { 1 5 }"];
"_41";
"_43";
"_44";
"tempsbase_220";
"tempsbase_53";
"k_223"[label="k_223 = { 5 }"];
"_51"[label="_51 = { 5 }"];
"_221"[label="_221 = { 1 }"];
"_54";
"l_59"[label="l_59 = { 1 5 }"];
"_55";
"_56";
"_57";
"_63";
"_198"[label="_198 = { 5 }"];
"_65";
"AllocateMemory";
"systemerror";
"optrarray_66";
"systemerror.26_67";
"ReportError";
"FreeMemory";
"ErrorExit";
"j_224"[label="j_224 = { 1 5 }"];
"curroffset_225"[label="curroffset_225 = { 1 }"];
"_69"[label="_69 = { 5 }"];
"_70";
"_72";
"_73";
"_74";
"_178"[label="_178 = { 5 }"];
"_80"[label="_80 = { 5 }"];
"tempobase_226";
"tempobase_82";
"k_229"[label="k_229 = { 5 }"];
"_227"[label="_227 = { 1 }"];
"_83";
"l_89"[label="l_89 = { 1 5 }"];
"_84"[label="_84 = { 5 }"];
"_85";
"_86";
"_87";
"StartStopwatch";
"elapsed_17";
"i_97"[label="i_97 = { 5 }"];
"_134"[label="_134 = { 5 }"];
"_135"[label="_135 = { 5 }"];
"_4"[label="_4 = { 5 }"];
"i_212"[label="i_212 = { 1 5 }"];
"tempobase_213";
"tempobase_24";
"tempsbase_214";
"tempsbase_25";
"i_230"[label="i_230 = { 5 }"];
"strsift";
"_136";
"i_231"[label="i_231 = { 5 }"];
"tlen_101";
"_102";
"_103"[label="_103 = { 5 }"];
"_104";
"MoveMemory";
"temp";
"_105"[label="_105 = { 5 }"];
"_106";
"_107";
"_108";
"tlen_109";
"_110";
"_126";
"_127";
"_128";
"_129";
"direction_130";
"_131";
"_137";
"_138";
"_139";
"_140";
"_145";
"_190";
"_144"[label="_144 = { 5 }"];
"nbytes_147";
"_148";
"_149";
"_15"[label="_15 = { 5 }"];
"_151";
"_152";
"j_232"[label="j_232 = { 5 }"];
"_154"[label="_154 = { 5 }"];
"_155";
"_156";
"_157";
"_159"[label="_159 = { 5 }"];
"_160";
"_161";
"_162";
"_165";
"_166";
"_111"[label="_111 = { 5 }"];
"_112";
"_113";
"_114";
"tlen_115";
"_116";
"stradjust";
"_117"[label="_117 = { 5 }"];
"_118";
"_119";
"_120";
"_5"[label="_5 = { 5 }"];
"StopStopwatch";
"elapsed_19";
"syserror";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*arraybase";
"*numarrays";
"*arraysize";
"*randnum";
"*curroffset_31";
"*curroffset_218";
"*nstrings_208";
"*abs_randwc";
"*_27";
"*_28";
"*stringlength_29";
"*_30";
"*_143";
"*_33";
"*_34";
"*_35";
"*_2";
"*stringlength_37";
"*fullflag_50";
"*stringlength_39";
"*_38";
"*curroffset_40";
"*curroffset_217";
"*curroffset_45";
"*i_219";
"*i_47";
"*_41";
"*_43";
"*_44";
"*tempsbase_220";
"*tempsbase_53";
"*k_223";
"*k_61";
"*_51";
"*_221";
"*_54";
"*l_222";
"*l_59";
"*_55";
"*_56";
"*_57";
"*_63";
"*_198";
"*_65";
"*AllocateMemory";
"*systemerror";
"*systemerror.26_67";
"*ReportError";
"*FreeMemory";
"*ErrorExit";
"*j_224";
"*j_77";
"*curroffset_225";
"*curroffset_76";
"*_69";
"*_70";
"*_72";
"*_73";
"*_74";
"*_178";
"*_80";
"*tempobase_226";
"*tempobase_82";
"*k_229";
"*k_92";
"*_227";
"*_83";
"*l_228";
"*l_89";
"*_84";
"*_85";
"*_86";
"*_87";
"*StartStopwatch";
"*i_97";
"*_134";
"*_135";
"*_4";
"*i_212";
"*i_26";
"*tempobase_24";
"*tempsbase_214";
"*tempsbase_25";
"*i_230";
"*strsift";
"*_136";
"*i_231";
"*tlen_101";
"*_102";
"*_103";
"*_104";
"*MoveMemory";
"*temp";
"*_105";
"*_106";
"*_107";
"*_108";
"*tlen_109";
"*_110";
"*_126";
"*_127";
"*_128";
"*_129";
"*direction_130";
"*_131";
"*_137";
"*_138";
"*_139";
"*_140";
"*_145";
"*_190";
"*_144";
"*nbytes_147";
"*_148";
"*_149";
"*_15";
"*_151";
"*_152";
"*j_232";
"*j_164";
"*_154";
"*_156";
"*_157";
"*_158";
"*_159";
"*_161";
"*_162";
"*_163";
"*_165";
"*_166";
"*_111";
"*_112";
"*_113";
"*_114";
"*tlen_115";
"*_116";
"*stradjust";
"*_117";
"*_118";
"*_119";
"*_120";
"*_5";
"*StopStopwatch";
"*syserror";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"arraybase" -> "ESCAPED";
"nstrings_208" -> "ESCAPED";
"nstrings_208" -> "ESCAPED";
"_65" -> "ESCAPED";
"optrarray_66" -> "ESCAPED";
"systemerror.26_67" -> "ESCAPED";
"elapsed_17" -> "ESCAPED";
"tempobase_213" -> "ESCAPED";
"tempsbase_214" -> "ESCAPED";
"i_230" -> "ESCAPED";
"i_231" -> "ESCAPED";
"_104" -> "ESCAPED";
"nbytes_147" -> "ESCAPED";
"_148" -> "ESCAPED";
"_152" -> "ESCAPED";
"_112" -> "ESCAPED";
"_114" -> "ESCAPED";
"_116" -> "ESCAPED";
"_118" -> "ESCAPED";
"_120" -> "ESCAPED";
"elapsed_19" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"curroffset_31" -> "curroffset_31";
"curroffset_31" -> "curroffset_31";
"curroffset_31" -> "curroffset_31";
"curroffset_31" -> "curroffset_31";
"curroffset_31" -> "curroffset_31";
"nstrings_208" -> "nstrings_208";
"nstrings_208" -> "nstrings_208";
"NONLOCAL" -> "_27";
"_27" -> "_28";
"_28" -> "stringlength_29";
"stringlength_29" -> "_30";
"curroffset_31" -> "_143";
"_30" -> "_33";
"_143" -> "_33";
"arraysize" -> "_34";
"curroffset_31" -> "_35";
"_34" -> "_2";
"_35" -> "stringlength_37";
"_2" -> "stringlength_37";
"stringlength_29" -> "stringlength_39";
"stringlength_37" -> "stringlength_39";
"i_219" -> "i_219";
"i_219" -> "i_219";
"NONLOCAL" -> "_41";
"_41" -> "_44";
"arraybase" -> "tempsbase_220";
"tempsbase_53" -> "tempsbase_220";
"k_223" -> "k_223";
"k_223" -> "k_223";
"arraysize" -> "_51";
"_54" -> "_221";
"l_59" -> "_54";
"l_59" -> "l_59";
"l_59" -> "l_59";
"*_55" -> "_57";
"numarrays" -> "_63";
"_63" -> "_198";
"nstrings_208" -> "_65";
"_198" -> "_65";
"NONLOCAL" -> "optrarray_66";
"systemerror" -> "systemerror.26_67";
"j_224" -> "j_224";
"j_224" -> "j_224";
"curroffset_225" -> "curroffset_225";
"curroffset_225" -> "curroffset_225";
"_178" -> "curroffset_225";
"j_224" -> "_69";
"*_72" -> "_73";
"_73" -> "_74";
"_74" -> "_178";
"nstrings_208" -> "_80";
"optrarray_66" -> "tempobase_226";
"tempobase_82" -> "tempobase_226";
"k_229" -> "k_229";
"k_229" -> "k_229";
"_83" -> "_227";
"l_89" -> "_83";
"l_89" -> "l_89";
"l_89" -> "l_89";
"_227" -> "_84";
"*_85" -> "_87";
"NONLOCAL" -> "elapsed_17";
"nstrings_208" -> "i_97";
"nstrings_208" -> "_134";
"_134" -> "_135";
"nstrings_208" -> "_4";
"i_212" -> "i_212";
"i_212" -> "i_212";
"optrarray_66" -> "tempobase_213";
"tempobase_24" -> "tempobase_213";
"arraybase" -> "tempsbase_214";
"tempsbase_25" -> "tempsbase_214";
"i_97" -> "i_230";
"i_230" -> "i_230";
"i_230" -> "i_230";
"nstrings_208" -> "i_231";
"i_231" -> "i_231";
"i_231" -> "i_231";
"*tempsbase_214" -> "tlen_101";
"tlen_101" -> "_102";
"_102" -> "_103";
"_103" -> "_104";
"i_231" -> "_105";
"*_106" -> "_107";
"*_108" -> "tlen_109";
"tlen_109" -> "_110";
"ESCAPED" -> "_126";
"*_127" -> "_128";
"_128" -> "_129";
"_110" -> "direction_130";
"_129" -> "direction_130";
"direction_130" -> "_131";
"*_136" -> "_137";
"*_138" -> "_139";
"_139" -> "_140";
"_137" -> "_190";
"_145" -> "_190";
"_190" -> "_144";
"_140" -> "nbytes_147";
"_144" -> "nbytes_147";
"tlen_109" -> "_149";
"_126" -> "_15";
"_149" -> "_151";
"_15" -> "_151";
"j_232" -> "j_232";
"j_232" -> "j_232";
"j_232" -> "_154";
"_156" -> "_156";
"_157" -> "_156";
"_156" -> "_156";
"_156" -> "_156";
"_131" -> "_157";
"j_232" -> "_159";
"_161" -> "_161";
"_162" -> "_161";
"_161" -> "_161";
"_161" -> "_161";
"_131" -> "_162";
"ESCAPED" -> "_165";
"_110" -> "_111";
"_111" -> "_112";
"*_106" -> "_113";
"temp" -> "tlen_115";
"tlen_115" -> "_116";
"_116" -> "_117";
"_117" -> "_118";
"*_106" -> "_119";
"arraysize" -> "_5";
"NONLOCAL" -> "elapsed_19";
"stringlength_39" -> "*_38";
"_44" -> "*_43";
"_57" -> "*_56";
"curroffset_225" -> "*_70";
"_87" -> "*_86";
"tlen_109" -> "*_166";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"STOREDANYTHING";
"INTEGER";
"arraybase" [label="\N\n_38 = arraybase + UNKNOWN\l_43 = arraybase + UNKNOWN\l_55 = arraybase + UNKNOWN\l_72 = arraybase + UNKNOWN\l"];
"randnum";
"curroffset_31";
"abs_randwc";
"_27" [label="\N\n_70 = _27 + UNKNOWN\l_85 = _27 + UNKNOWN\l"];
"_33";
"_38" [label="\N\n*_38 = _33\l"];
"_43" [label="\N\n*_43 = _27\l"];
"tempsbase_220" [label="\N\ntempsbase_53 = tempsbase_220 + UNKNOWN\l"];
"tempsbase_53" [label="\N\n_56 = tempsbase_53 + UNKNOWN\l"];
"_55" [label="\N\n_57 = *_55\l"];
"_56" [label="\N\n*_56 = _57\l"];
"_57";
"AllocateMemory";
"systemerror.26_67";
"ReportError";
"FreeMemory";
"ErrorExit";
"curroffset_225";
"_70" [label="\N\n*_70 = curroffset_225\l"];
"_72" [label="\N\n_73 = *_72\l"];
"_73";
"_178";
"tempobase_226" [label="\N\ntempobase_82 = tempobase_226 + UNKNOWN\l"];
"tempobase_82" [label="\N\n_86 = tempobase_82 + UNKNOWN\l"];
"_85" [label="\N\n_87 = *_85\l"];
"_86" [label="\N\n*_86 = _87\l"];
"_87";
"StartStopwatch";
"tempobase_213" [label="\N\ntempobase_24 = tempobase_213 + UNKNOWN\l_136 = tempobase_213 + UNKNOWN\l_106 = tempobase_213 + UNKNOWN\l_126 = *tempobase_213\l_145 = *tempobase_213 + 64\l_155 = tempobase_213 + UNKNOWN\l_160 = tempobase_213 + UNKNOWN\l"];
"tempobase_24";
"tempsbase_214" [label="\N\ntempsbase_25 = tempsbase_214 + UNKNOWN\ltlen_101 = *tempsbase_214\l_108 = tempsbase_214 + UNKNOWN\l_127 = tempsbase_214 + UNKNOWN\l_138 = tempsbase_214 + UNKNOWN\l_148 = tempsbase_214 + UNKNOWN\l_152 = tempsbase_214 + UNKNOWN\l_166 = tempsbase_214 + UNKNOWN\l_114 = tempsbase_214 + UNKNOWN\l_120 = tempsbase_214 + UNKNOWN\l"];
"tempsbase_25";
"strsift";
"_136" [label="\N\n_137 = *_136\l"];
"tlen_101";
"_103";
"MoveMemory";
"_106" [label="\N\n_107 = *_106\l"];
"_107";
"_108" [label="\N\ntlen_109 = *_108\l"];
"tlen_109";
"_126" [label="\N\nESCAPED = _126 + UNKNOWN\lESCAPED = *_126\l*_126 = NONLOCAL\l"];
"_127" [label="\N\n_128 = *_127\l"];
"_128";
"direction_130";
"_137";
"_138" [label="\N\n_139 = *_138\l"];
"_139";
"_145";
"_190";
"_144";
"nbytes_147";
"_148";
"_152";
"_155" [label="\N\n_156 = *_155\l*_155 = _156\l"];
"_156";
"_160" [label="\N\n_161 = *_160\l*_160 = _161\l"];
"_161";
"_166" [label="\N\n*_166 = tlen_109\l"];
"_111";
"_114";
"tlen_115";
"stradjust";
"_117";
"_120";
"StopStopwatch";
"syserror";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "_126";
"STOREDANYTHING" -> "_38";
"STOREDANYTHING" -> "_43";
"STOREDANYTHING" -> "tempsbase_53";
"STOREDANYTHING" -> "_55";
"STOREDANYTHING" -> "_56";
"STOREDANYTHING" -> "systemerror.26_67";
"STOREDANYTHING" -> "_70";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "tempobase_82";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "_86";
"STOREDANYTHING" -> "tempobase_24";
"STOREDANYTHING" -> "tempsbase_25";
"STOREDANYTHING" -> "_136";
"STOREDANYTHING" -> "tlen_115";
"STOREDANYTHING" -> "_106";
"STOREDANYTHING" -> "_108";
"STOREDANYTHING" -> "_127";
"STOREDANYTHING" -> "_138";
"STOREDANYTHING" -> "_145";
"STOREDANYTHING" -> "_148";
"STOREDANYTHING" -> "_152";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_156";
"STOREDANYTHING" -> "_160";
"STOREDANYTHING" -> "_161";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_114";
"STOREDANYTHING" -> "_120";
"STOREDANYTHING" -> "syserror";
"arraybase" -> "_126";
"arraybase" -> "curroffset_31";
"arraybase" -> "tempsbase_220";
"arraybase" -> "tempsbase_214";
"curroffset_31" -> "_126";
"curroffset_31" -> "_33";
"_27" -> "_126";
"_27" -> "_33";
"_27" -> "tempobase_226";
"_27" -> "tempobase_213";
"tempsbase_53" -> "tempsbase_220";
"systemerror.26_67" -> "_126";
"_73" -> "_178";
"_178" -> "curroffset_225";
"tempobase_82" -> "tempobase_226";
"tempobase_213" -> "_126";
"tempobase_24" -> "tempobase_213";
"tempsbase_214" -> "_126";
"tempsbase_25" -> "tempsbase_214";
"tlen_101" -> "_103";
"_103" -> "_126";
"tlen_109" -> "_126";
"tlen_109" -> "direction_130";
"tlen_109" -> "_111";
"_128" -> "direction_130";
"direction_130" -> "_156";
"direction_130" -> "_161";
"_137" -> "_190";
"_139" -> "nbytes_147";
"_145" -> "_190";
"_190" -> "_144";
"_144" -> "nbytes_147";
"nbytes_147" -> "_126";
"_148" -> "_126";
"_152" -> "_126";
"_111" -> "_126";
"_114" -> "_126";
"tlen_115" -> "_126";
"tlen_115" -> "_117";
"_117" -> "_126";
"_120" -> "_126";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"STOREDANYTHING";
"INTEGER";
"arraybase" [label="\N\n_38 = arraybase + UNKNOWN\l_43 = arraybase + UNKNOWN\l_55 = arraybase + UNKNOWN\l_72 = arraybase + UNKNOWN\l"];
"randnum";
"curroffset_31";
"abs_randwc";
"_27" [label="\N\n_70 = _27 + UNKNOWN\l_85 = _27 + UNKNOWN\l"];
"_33";
"_38" [label="\N\n*_38 = _33\l"];
"_43" [label="\N\n*_43 = _27\l"];
"tempsbase_220" [label="\N\ntempsbase_53 = tempsbase_220 + UNKNOWN\l"];
"tempsbase_53" [label="\N\n_56 = tempsbase_53 + UNKNOWN\l"];
"_55" [label="\N\n_57 = *_55\l"];
"_56" [label="\N\n*_56 = _57\l"];
"_57";
"AllocateMemory";
"systemerror.26_67";
"ReportError";
"FreeMemory";
"ErrorExit";
"curroffset_225";
"_70" [label="\N\n*_70 = curroffset_225\l"];
"_72" [label="\N\n_73 = *_72\l"];
"_73";
"_178";
"tempobase_226" [label="\N\ntempobase_82 = tempobase_226 + UNKNOWN\l"];
"tempobase_82" [label="\N\n_86 = tempobase_82 + UNKNOWN\l"];
"_85" [label="\N\n_87 = *_85\l"];
"_86" [label="\N\n*_86 = _87\l"];
"_87";
"StartStopwatch";
"tempobase_213" [label="\N\ntempobase_24 = tempobase_213 + UNKNOWN\l_136 = tempobase_213 + UNKNOWN\l_106 = tempobase_213 + UNKNOWN\l_126 = *tempobase_213\l_145 = *tempobase_213 + 64\l_155 = tempobase_213 + UNKNOWN\l_160 = tempobase_213 + UNKNOWN\l"];
"tempobase_24";
"tempsbase_214" [label="\N\ntempsbase_25 = tempsbase_214 + UNKNOWN\ltlen_101 = *tempsbase_214\l_108 = tempsbase_214 + UNKNOWN\l_127 = tempsbase_214 + UNKNOWN\l_138 = tempsbase_214 + UNKNOWN\l_148 = tempsbase_214 + UNKNOWN\l_152 = tempsbase_214 + UNKNOWN\l_166 = tempsbase_214 + UNKNOWN\l_114 = tempsbase_214 + UNKNOWN\l_120 = tempsbase_214 + UNKNOWN\l"];
"tempsbase_25";
"strsift";
"_136" [label="\N\n_137 = *_136\l"];
"tlen_101";
"_103";
"MoveMemory";
"_106" [label="\N\n_107 = *_106\l"];
"_107";
"_108" [label="\N\ntlen_109 = *_108\l"];
"tlen_109";
"_126" [label="\N\n_126 = _126 + UNKNOWN\l_126 = *_126\l*_126 = _27\l"];
"_127" [label="\N\n_128 = *_127\l"];
"_128";
"direction_130";
"_137";
"_138" [label="\N\n_139 = *_138\l"];
"_139";
"_145";
"_190";
"_144";
"nbytes_147";
"_148";
"_152";
"_155" [label="\N\n_156 = *_155\l*_155 = _156\l"];
"_156";
"_160" [label="\N\n_161 = *_160\l*_160 = _161\l"];
"_161";
"_166" [label="\N\n*_166 = tlen_109\l"];
"_111";
"_114";
"tlen_115";
"stradjust";
"_117";
"_120";
"StopStopwatch";
"syserror";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "_126";
"STOREDANYTHING" -> "_38";
"STOREDANYTHING" -> "_43";
"STOREDANYTHING" -> "tempsbase_53";
"STOREDANYTHING" -> "_55";
"STOREDANYTHING" -> "_56";
"STOREDANYTHING" -> "systemerror.26_67";
"STOREDANYTHING" -> "_70";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "tempobase_82";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "_86";
"STOREDANYTHING" -> "tempobase_24";
"STOREDANYTHING" -> "tempsbase_25";
"STOREDANYTHING" -> "_136";
"STOREDANYTHING" -> "tlen_115";
"STOREDANYTHING" -> "_106";
"STOREDANYTHING" -> "_108";
"STOREDANYTHING" -> "_127";
"STOREDANYTHING" -> "_138";
"STOREDANYTHING" -> "_145";
"STOREDANYTHING" -> "_148";
"STOREDANYTHING" -> "_152";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_156";
"STOREDANYTHING" -> "_160";
"STOREDANYTHING" -> "_161";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_114";
"STOREDANYTHING" -> "_120";
"STOREDANYTHING" -> "syserror";
"arraybase" -> "_126";
"arraybase" -> "curroffset_31";
"arraybase" -> "tempsbase_220";
"arraybase" -> "tempsbase_214";
"curroffset_31" -> "_126";
"curroffset_31" -> "_33";
"_27" -> "_126";
"_27" -> "_33";
"_27" -> "_57";
"_27" -> "systemerror.26_67";
"_27" -> "_73";
"_27" -> "tempobase_226";
"_27" -> "_87";
"_27" -> "tempobase_213";
"_27" -> "tlen_101";
"_27" -> "_107";
"_27" -> "tlen_109";
"_27" -> "_126";
"_27" -> "_128";
"_27" -> "_137";
"_27" -> "_139";
"_27" -> "_145";
"_27" -> "_156";
"_27" -> "_161";
"_27" -> "tlen_115";
"_27" -> "syserror";
"_33" -> "_126";
"tempsbase_53" -> "tempsbase_220";
"_57" -> "_126";
"systemerror.26_67" -> "_126";
"systemerror.26_67" -> "_126";
"curroffset_225" -> "_126";
"_73" -> "_178";
"_178" -> "curroffset_225";
"tempobase_82" -> "tempobase_226";
"_87" -> "_126";
"tempobase_213" -> "_126";
"tempobase_24" -> "tempobase_213";
"tempsbase_214" -> "_126";
"tempsbase_25" -> "tempsbase_214";
"tlen_101" -> "_103";
"_103" -> "_126";
"tlen_109" -> "_126";
"tlen_109" -> "direction_130";
"tlen_109" -> "_111";
"_128" -> "direction_130";
"direction_130" -> "_156";
"direction_130" -> "_161";
"_137" -> "_190";
"_139" -> "nbytes_147";
"_145" -> "_190";
"_190" -> "_144";
"_144" -> "nbytes_147";
"nbytes_147" -> "_126";
"_148" -> "_126";
"_152" -> "_126";
"_156" -> "_126";
"_161" -> "_126";
"_111" -> "_126";
"_114" -> "_126";
"tlen_115" -> "_126";
"tlen_115" -> "_126";
"tlen_115" -> "_117";
"_117" -> "_126";
"_120" -> "_126";
"syserror" -> "_126";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL systemerror temp syserror } same as _126
NONLOCAL = { ESCAPED NONLOCAL } same as _27
STOREDANYTHING = { }
INTEGER = { ANYTHING }
arraybase = { NONLOCAL }
numarrays = { NONLOCAL } same as arraybase
arraysize = { NONLOCAL } same as arraybase
randnum = { }
curroffset_31 = { NULL NONLOCAL }
curroffset_218 = { NULL NONLOCAL } same as curroffset_31
nstrings_208 = { NULL NONLOCAL } same as curroffset_31
_49 = { NULL NONLOCAL } same as curroffset_31
abs_randwc = { }
_27 = { ESCAPED NONLOCAL }
_28 = { ESCAPED NONLOCAL } same as _27
stringlength_29 = { ESCAPED NONLOCAL } same as _27
_30 = { ESCAPED NONLOCAL } same as _27
_143 = { NULL NONLOCAL } same as curroffset_31
_33 = { NULL ESCAPED NONLOCAL }
_34 = { NONLOCAL } same as arraybase
_35 = { NULL NONLOCAL } same as curroffset_31
_2 = { NONLOCAL } same as arraybase
stringlength_37 = { NULL NONLOCAL } same as curroffset_31
fullflag_50 = { NULL NONLOCAL } same as curroffset_31
stringlength_39 = { NULL ESCAPED NONLOCAL } same as _33
_38 = { NONLOCAL }
curroffset_40 = { NULL NONLOCAL } same as curroffset_31
curroffset_217 = { NULL NONLOCAL } same as curroffset_31
curroffset_45 = { NULL NONLOCAL } same as curroffset_31
i_219 = { NULL NONLOCAL } same as curroffset_31
i_47 = { NULL NONLOCAL } same as curroffset_31
_41 = { ESCAPED NONLOCAL } same as _27
_43 = { NONLOCAL }
_44 = { ESCAPED NONLOCAL } same as _27
tempsbase_220 = { NONLOCAL }
tempsbase_53 = { NONLOCAL }
k_223 = { NONLOCAL } same as arraybase
k_61 = { NONLOCAL } same as arraybase
_51 = { NONLOCAL } same as arraybase
_221 = { NULL NONLOCAL } same as curroffset_31
_54 = { NULL NONLOCAL } same as curroffset_31
l_222 = { NULL NONLOCAL } same as curroffset_31
l_59 = { NULL NONLOCAL } same as curroffset_31
_55 = { NONLOCAL }
_56 = { NONLOCAL }
_57 = { ESCAPED NONLOCAL }
_63 = { NONLOCAL } same as arraybase
_198 = { NONLOCAL } same as arraybase
_65 = { NULL NONLOCAL } same as curroffset_31
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.26_67
optrarray_66 = { ESCAPED NONLOCAL } same as _27
systemerror.26_67 = { ESCAPED NONLOCAL }
ReportError = { }
FreeMemory = { }
ErrorExit = { }
j_224 = { NULL NONLOCAL } same as curroffset_31
j_77 = { NULL NONLOCAL } same as curroffset_31
curroffset_225 = { NULL ESCAPED NONLOCAL }
curroffset_76 = { NULL ESCAPED NONLOCAL } same as curroffset_225
_69 = { NULL NONLOCAL } same as curroffset_31
_70 = { ESCAPED NONLOCAL }
_72 = { NONLOCAL }
_73 = { ESCAPED NONLOCAL }
_74 = { ESCAPED NONLOCAL } same as _73
_178 = { ESCAPED NONLOCAL }
_80 = { NULL NONLOCAL } same as curroffset_31
tempobase_226 = { ESCAPED NONLOCAL }
tempobase_82 = { ESCAPED NONLOCAL }
k_229 = { NONLOCAL } same as arraybase
k_92 = { NONLOCAL } same as arraybase
_227 = { NULL NONLOCAL } same as curroffset_31
_83 = { NULL NONLOCAL } same as curroffset_31
l_228 = { NULL NONLOCAL } same as curroffset_31
l_89 = { NULL NONLOCAL } same as curroffset_31
_84 = { NULL NONLOCAL } same as curroffset_31
_85 = { ESCAPED NONLOCAL }
_86 = { ESCAPED NONLOCAL }
_87 = { ESCAPED NONLOCAL }
StartStopwatch = { }
elapsed_17 = { ESCAPED NONLOCAL } same as _27
i_97 = { NULL NONLOCAL } same as curroffset_31
_134 = { NULL NONLOCAL } same as curroffset_31
_135 = { NULL NONLOCAL } same as curroffset_31
_4 = { NULL NONLOCAL } same as curroffset_31
i_212 = { NULL NONLOCAL } same as curroffset_31
i_26 = { NULL NONLOCAL } same as curroffset_31
tempobase_213 = { ESCAPED NONLOCAL }
tempobase_24 = { ESCAPED NONLOCAL }
tempsbase_214 = { NONLOCAL }
tempsbase_25 = { NONLOCAL }
i_230 = { NULL NONLOCAL } same as curroffset_31
i_99 = { NULL NONLOCAL } same as curroffset_31
strsift = { }
_136 = { ESCAPED NONLOCAL }
i_231 = { NULL NONLOCAL } same as curroffset_31
i_121 = { NULL NONLOCAL } same as curroffset_31
tlen_101 = { ESCAPED NONLOCAL }
_102 = { ESCAPED NONLOCAL } same as tlen_101
_103 = { ESCAPED NONLOCAL }
_104 = { ESCAPED NONLOCAL } same as _103
MoveMemory = { }
temp = { ESCAPED NONLOCAL } same as tlen_115
_105 = { NULL NONLOCAL } same as curroffset_31
_106 = { ESCAPED NONLOCAL }
_107 = { ESCAPED NONLOCAL }
_108 = { NONLOCAL }
tlen_109 = { ESCAPED NONLOCAL }
_110 = { ESCAPED NONLOCAL } same as tlen_109
_126 = { NULL STRING ESCAPED NONLOCAL systemerror temp syserror }
_127 = { NONLOCAL }
_128 = { ESCAPED NONLOCAL }
_129 = { ESCAPED NONLOCAL } same as _128
direction_130 = { ESCAPED NONLOCAL }
_131 = { ESCAPED NONLOCAL } same as direction_130
_137 = { ESCAPED NONLOCAL }
_138 = { NONLOCAL }
_139 = { ESCAPED NONLOCAL }
_140 = { ESCAPED NONLOCAL } same as _139
_145 = { ESCAPED NONLOCAL }
_190 = { ESCAPED NONLOCAL }
_144 = { ESCAPED NONLOCAL }
nbytes_147 = { ESCAPED NONLOCAL }
_148 = { NONLOCAL }
_149 = { ESCAPED NONLOCAL } same as tlen_109
_15 = { NULL STRING ESCAPED NONLOCAL systemerror temp syserror } same as _126
_151 = { NULL STRING ESCAPED NONLOCAL systemerror temp syserror } same as _126
_152 = { NONLOCAL }
j_232 = { NONLOCAL } same as arraybase
j_164 = { NONLOCAL } same as arraybase
_154 = { NONLOCAL } same as arraybase
_155 = { ESCAPED NONLOCAL }
_156 = { ESCAPED NONLOCAL }
_157 = { ESCAPED NONLOCAL } same as direction_130
_158 = { ESCAPED NONLOCAL } same as _156
_159 = { NONLOCAL } same as arraybase
_160 = { ESCAPED NONLOCAL }
_161 = { ESCAPED NONLOCAL }
_162 = { ESCAPED NONLOCAL } same as direction_130
_163 = { ESCAPED NONLOCAL } same as _161
_165 = { NULL STRING ESCAPED NONLOCAL systemerror temp syserror } same as _126
_166 = { NONLOCAL }
_111 = { ESCAPED NONLOCAL }
_112 = { ESCAPED NONLOCAL } same as _111
_113 = { ESCAPED NONLOCAL } same as _107
_114 = { NONLOCAL }
tlen_115 = { ESCAPED NONLOCAL }
_116 = { ESCAPED NONLOCAL } same as tlen_115
stradjust = { }
_117 = { ESCAPED NONLOCAL }
_118 = { ESCAPED NONLOCAL } same as _117
_119 = { ESCAPED NONLOCAL } same as _107
_120 = { NONLOCAL }
_5 = { NONLOCAL } same as arraybase
StopStopwatch = { }
elapsed_19 = { ESCAPED NONLOCAL } same as _27
syserror = { ESCAPED NONLOCAL }


Alias information for DoStringSortIteration

Aliased symbols

temp, UID D.8022, unsigned char[80], is addressable
systemerror, UID D.8016, int, is addressable
syserror, UID D.4846, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.4846 D.8016 D.8022 } (escaped)

Flow-insensitive points-to information

arraybase_11(D), points-to non-local, points-to NULL, points-to vars: { }
tempobase_24, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
tempsbase_25, points-to non-local, points-to NULL, points-to vars: { }
_38, points-to non-local, points-to NULL, points-to vars: { }
_43, points-to non-local, points-to NULL, points-to vars: { }
tempsbase_53, points-to non-local, points-to NULL, points-to vars: { }
_55, points-to non-local, points-to NULL, points-to vars: { }
_56, points-to non-local, points-to NULL, points-to vars: { }
optrarray_66, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_70, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_72, points-to non-local, points-to NULL, points-to vars: { }
tempobase_82, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_85, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_86, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_106, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_108, points-to non-local, points-to NULL, points-to vars: { }
_114, points-to non-local, points-to NULL, points-to vars: { }
_120, points-to non-local, points-to NULL, points-to vars: { }
_127, points-to non-local, points-to NULL, points-to vars: { }
_136, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_138, points-to non-local, points-to NULL, points-to vars: { }
_148, points-to non-local, points-to NULL, points-to vars: { }
_152, points-to non-local, points-to NULL, points-to vars: { }
_155, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_160, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_166, points-to non-local, points-to NULL, points-to vars: { }
tempobase_213, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
tempsbase_214, points-to non-local, points-to NULL, points-to vars: { }
tempsbase_220, points-to non-local, points-to NULL, points-to vars: { }
tempobase_226, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 12 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 53 4 5 41 6 55 52 54 7 51 8 39 9 40 10 58 50 57 11 59 49 56 12 60 13 14 38 15 62 48 61 16 36 17 37 18 65 47 64 19 66 46 63 20 32 21 35 22 69 45 68 23 33 24 34 25 26 27 28 72 44 71 29 73 43 70 30 74 42 67 31
;;
;; Loop 1
;;  header 21, latch 42
;;  depth 1, outer 0
;;  nodes: 21 42 30 73 70 23 69 68 22 45 35 29 72 71 24 43 33 28 26 27 25 44 34
;;
;; Loop 9
;;  header 24, latch 43
;;  depth 2, outer 1
;;  nodes: 24 43 29 72 71 28 26 27 25 44 34
;;
;; Loop 11
;;  header 25, latch 44
;;  depth 3, outer 9
;;  nodes: 25 44 28 26 27
;;
;; Loop 10
;;  header 22, latch 45
;;  depth 2, outer 1
;;  nodes: 22 45
;;
;; Loop 2
;;  header 17, latch 46
;;  depth 1, outer 0
;;  nodes: 17 46 19 65 64 18 47 37
;;
;; Loop 3
;;  header 18, latch 47
;;  depth 2, outer 2
;;  nodes: 18 47
;;
;; Loop 4
;;  header 15, latch 48
;;  depth 1, outer 0
;;  nodes: 15 48
;;
;; Loop 5
;;  header 9, latch 49
;;  depth 1, outer 0
;;  nodes: 9 49 11 58 57 10 50 40
;;
;; Loop 6
;;  header 10, latch 50
;;  depth 2, outer 5
;;  nodes: 10 50
;;
;; Loop 7
;;  header 3, latch 51
;;  depth 1, outer 0
;;  nodes: 3 51 7 55 54 5 53 4 6 52 41
;;
;; Loop 8
;;  header 6, latch 52
;;  depth 2, outer 7
;;  nodes: 6 52
;; 2 succs { 3 }
;; 3 succs { 4 53 }
;; 53 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 41 54 }
;; 41 succs { 6 }
;; 6 succs { 52 55 }
;; 55 succs { 7 }
;; 52 succs { 6 }
;; 54 succs { 7 }
;; 7 succs { 51 8 }
;; 51 succs { 3 }
;; 8 succs { 39 56 }
;; 39 succs { 9 }
;; 9 succs { 40 57 }
;; 40 succs { 10 }
;; 10 succs { 50 58 }
;; 58 succs { 11 }
;; 50 succs { 10 }
;; 57 succs { 11 }
;; 11 succs { 49 59 }
;; 59 succs { 12 }
;; 49 succs { 9 }
;; 56 succs { 12 }
;; 12 succs { 13 60 }
;; 60 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 38 61 }
;; 38 succs { 15 }
;; 15 succs { 48 62 }
;; 62 succs { 16 }
;; 48 succs { 15 }
;; 61 succs { 16 }
;; 16 succs { 36 63 }
;; 36 succs { 17 }
;; 17 succs { 37 64 }
;; 37 succs { 18 }
;; 18 succs { 47 65 }
;; 65 succs { 19 }
;; 47 succs { 18 }
;; 64 succs { 19 }
;; 19 succs { 46 66 }
;; 66 succs { 20 }
;; 46 succs { 17 }
;; 63 succs { 20 }
;; 20 succs { 32 67 }
;; 32 succs { 21 }
;; 21 succs { 35 68 }
;; 35 succs { 22 }
;; 22 succs { 45 69 }
;; 69 succs { 23 }
;; 45 succs { 22 }
;; 68 succs { 23 }
;; 23 succs { 33 70 }
;; 33 succs { 24 }
;; 24 succs { 34 71 }
;; 34 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 44 72 }
;; 72 succs { 29 }
;; 44 succs { 25 }
;; 71 succs { 29 }
;; 29 succs { 43 73 }
;; 73 succs { 30 }
;; 43 succs { 24 }
;; 70 succs { 30 }
;; 30 succs { 42 74 }
;; 74 succs { 31 }
;; 42 succs { 21 }
;; 67 succs { 31 }
;; 31 succs { 1 }
find_duplicates: <bb 67> duplicate of <bb 74>
find_duplicates: <bb 70> duplicate of <bb 73>
find_duplicates: <bb 71> duplicate of <bb 72>
find_duplicates: <bb 68> duplicate of <bb 69>
find_duplicates: <bb 63> duplicate of <bb 66>
find_duplicates: <bb 64> duplicate of <bb 65>
find_duplicates: <bb 61> duplicate of <bb 62>
find_duplicates: <bb 56> duplicate of <bb 59>
find_duplicates: <bb 57> duplicate of <bb 58>
Removing basic block 74
Removing basic block 73
Removing basic block 72
Removing basic block 69
Removing basic block 66
Removing basic block 65
Removing basic block 62
Removing basic block 59
Removing basic block 58

Symbols to be put in SSA form
{ D.6323 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 75
Number of blocks to update: 65 ( 87%)


Removing basic block 35
Removing basic block 37
Removing basic block 38
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 44
Removing basic block 45
Removing basic block 46
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Merging blocks 56 and 12
Merging blocks 57 and 11
Removing basic block 60
Merging blocks 61 and 16
Merging blocks 63 and 20
Merging blocks 64 and 19
Merging blocks 67 and 31
Merging blocks 68 and 23
Merging blocks 70 and 30
Merging blocks 71 and 29
DoStringSortIteration (faruchar * arraybase, unsigned int numarrays, long unsigned int arraysize)
{
  unsigned char adjamount;
  int direction;
  long unsigned int j;
  long unsigned int nbytes;
  unsigned char l;
  long unsigned int i;
  unsigned char tlen;
  unsigned char temp[80];
  faruchar * tempsbase;
  farulong * optrarray;
  farulong * tempobase;
  long unsigned int curroffset;
  int fullflag;
  unsigned char stringlength;
  unsigned char i;
  long unsigned int j;
  unsigned int k;
  unsigned int l;
  int systemerror;
  farulong * D.8017;
  faruchar * tempsbase;
  farulong * tempobase;
  unsigned int i;
  int syserror;
  long unsigned int nstrings;
  long unsigned int elapsed;
  farulong * optrarray;
  unsigned char _2;
  sizetype _15;
  unsigned int _27;
  unsigned char _28;
  long unsigned int _30;
  long unsigned int _33;
  unsigned char _34;
  unsigned char _35;
  faruchar * _38;
  unsigned int _41;
  faruchar * _43;
  unsigned char _44;
  long unsigned int _46;
  long unsigned int _49;
  long unsigned int _54;
  faruchar * _55;
  faruchar * _56;
  unsigned char _57;
  long unsigned int _58;
  long unsigned int _63;
  long unsigned int _65;
  int systemerror.26_67;
  long unsigned int _69;
  farulong * _70;
  sizetype _71;
  faruchar * _72;
  unsigned char _73;
  long unsigned int _74;
  long unsigned int _80;
  long unsigned int _83;
  long unsigned int _84;
  farulong * _85;
  farulong * _86;
  long unsigned int _87;
  farulong * _94;
  long unsigned int pretmp_96;
  int _102;
  int _103;
  long unsigned int _104;
  long unsigned int _105;
  farulong * _106;
  long unsigned int _107;
  faruchar * _108;
  int _110;
  int _111;
  long unsigned int _112;
  long unsigned int _113;
  faruchar * _114;
  int _116;
  int _117;
  long unsigned int _118;
  long unsigned int _119;
  faruchar * _120;
  long unsigned int _126;
  faruchar * _127;
  unsigned char _128;
  int _129;
  int _131;
  long unsigned int _134;
  sizetype _135;
  farulong * _136;
  long unsigned int _137;
  faruchar * _138;
  unsigned char _139;
  long unsigned int _140;
  long unsigned int _143;
  long unsigned int _144;
  long unsigned int _145;
  faruchar * _148;
  sizetype _149;
  sizetype _151;
  faruchar * _152;
  sizetype _153;
  long unsigned int _158;
  long unsigned int _163;
  long unsigned int _165;
  faruchar * _166;
  long unsigned int _178;
  long unsigned int _190;
  long unsigned int _198;
  long unsigned int _221;
  long unsigned int _227;

  <bb 2> [0.88%]:
  randnum (13);

  <bb 3> [1.06%]:
  # curroffset_31 = PHI <0(2), curroffset_218(7)>
  # nstrings_208 = PHI <0(2), _49(7)>
  _27 = abs_randwc (76);
  _28 = (unsigned char) _27;
  stringlength_29 = _28 + 1;
  _30 = (long unsigned int) stringlength_29;
  _143 = curroffset_31 + 1;
  _33 = _30 + _143;
  if (arraysize_13(D) <= _33)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [0.53%]:
  _34 = (unsigned char) arraysize_13(D);
  _35 = (unsigned char) curroffset_31;
  _2 = _34 + 255;
  stringlength_37 = _2 - _35;

  <bb 5> [1.06%]:
  # fullflag_50 = PHI <0(3), 1(4)>
  # stringlength_39 = PHI <stringlength_29(3), stringlength_37(4)>
  _38 = arraybase_11(D) + curroffset_31;
  *_38 = stringlength_39;
  if (stringlength_39 != 0)
    goto <bb 6>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 6> [6.04%]:
  # curroffset_217 = PHI <curroffset_45(6), _143(5)>
  # i_219 = PHI <i_47(6), 0(5)>
  _41 = abs_randwc (254);
  _43 = arraybase_11(D) + curroffset_217;
  _44 = (unsigned char) _41;
  *_43 = _44;
  curroffset_45 = curroffset_217 + 1;
  i_47 = i_219 + 1;
  if (stringlength_39 > i_47)
    goto <bb 6>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 7> [1.06%]:
  # curroffset_218 = PHI <curroffset_45(6), _143(5)>
  _49 = nstrings_208 + 1;
  if (fullflag_50 == 0)
    goto <bb 3>; [17.00%]
  else
    goto <bb 8>; [83.00%]

  <bb 8> [0.88%]:
  if (numarrays_12(D) > 1)
    goto <bb 9>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 9> [0.75%]:
  _153 = arraysize_13(D) + 100;

  <bb 10> [5.01%]:
  # tempsbase_220 = PHI <tempsbase_53(12), arraybase_11(D)(9)>
  # k_223 = PHI <k_61(12), 1(9)>
  tempsbase_53 = tempsbase_220 + _153;
  if (arraysize_13(D) != 0)
    goto <bb 11>; [85.00%]
  else
    goto <bb 12>; [15.00%]

  <bb 11> [28.37%]:
  # _221 = PHI <_54(11), 0(10)>
  # l_222 = PHI <l_59(11), 0(10)>
  _55 = arraybase_11(D) + _221;
  _56 = tempsbase_53 + _221;
  _57 = *_55;
  *_56 = _57;
  l_59 = l_222 + 1;
  _54 = (long unsigned int) l_59;
  if (arraysize_13(D) > _54)
    goto <bb 11>; [85.00%]
  else
    goto <bb 12>; [15.00%]

  <bb 12> [5.01%]:
  k_61 = k_223 + 1;
  if (numarrays_12(D) > k_61)
    goto <bb 10>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 13> [0.88%]:
  _63 = (long unsigned int) numarrays_12(D);
  _198 = _63 * 8;
  _65 = _49 * _198;
  optrarray_66 = AllocateMemory (_65, &systemerror);
  systemerror.26_67 = systemerror;
  if (systemerror.26_67 != 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 14> [0.29%]:
  ReportError ("CPU:Stringsort", systemerror.26_67);
  FreeMemory (arraybase_11(D), &systemerror);
  ErrorExit ();

  <bb 15> [0.88%]:
  if (_49 != 0)
    goto <bb 16>; [85.00%]
  else
    goto <bb 17>; [15.00%]

  <bb 16> [5.01%]:
  # j_224 = PHI <j_77(16), 0(15)>
  # curroffset_225 = PHI <curroffset_76(16), 0(15)>
  _69 = j_224 * 8;
  _70 = optrarray_66 + _69;
  *_70 = curroffset_225;
  _72 = arraybase_11(D) + curroffset_225;
  _73 = *_72;
  _74 = (long unsigned int) _73;
  _178 = _74 + 1;
  curroffset_76 = _178 + curroffset_225;
  j_77 = j_224 + 1;
  if (_49 > j_77)
    goto <bb 16>; [85.00%]
  else
    goto <bb 17>; [15.00%]

  <bb 17> [0.88%]:
  if (numarrays_12(D) > 1)
    goto <bb 18>; [85.00%]
  else
    goto <bb 22>; [15.00%]

  <bb 18> [0.75%]:
  _80 = _49 * 8;

  <bb 19> [5.01%]:
  # tempobase_226 = PHI <tempobase_82(21), optrarray_66(18)>
  # k_229 = PHI <k_92(21), 1(18)>
  tempobase_82 = tempobase_226 + _80;
  if (_49 != 0)
    goto <bb 20>; [85.00%]
  else
    goto <bb 21>; [15.00%]

  <bb 20> [28.37%]:
  # _227 = PHI <_83(20), 0(19)>
  # l_228 = PHI <l_89(20), 0(19)>
  _84 = _227 * 8;
  _85 = optrarray_66 + _84;
  _86 = tempobase_82 + _84;
  _87 = *_85;
  *_86 = _87;
  l_89 = l_228 + 1;
  _83 = (long unsigned int) l_89;
  if (_49 > _83)
    goto <bb 20>; [85.00%]
  else
    goto <bb 21>; [15.00%]

  <bb 21> [5.01%]:
  k_92 = k_229 + 1;
  if (numarrays_12(D) > k_92)
    goto <bb 19>; [85.00%]
  else
    goto <bb 22>; [15.00%]

  <bb 22> [0.88%]:
  systemerror ={v} {CLOBBER};
  elapsed_17 = StartStopwatch ();
  if (numarrays_12(D) != 0)
    goto <bb 23>; [85.00%]
  else
    goto <bb 36>; [15.00%]

  <bb 23> [0.75%]:
  i_97 = nstrings_208 >> 1;
  _134 = _49 * 8;
  _135 = _134 + 18446744073709551608;
  _71 = arraysize_13(D) + 100;

  <bb 24> [5.01%]:
  # i_212 = PHI <i_26(35), 0(23)>
  # tempobase_213 = PHI <tempobase_24(35), optrarray_66(23)>
  # tempsbase_214 = PHI <tempsbase_25(35), arraybase_11(D)(23)>
  if (i_97 != 0)
    goto <bb 25>; [85.00%]
  else
    goto <bb 26>; [15.00%]

  <bb 25> [28.37%]:
  # i_230 = PHI <i_99(25), i_97(24)>
  strsift (tempobase_213, tempsbase_214, _49, i_230, nstrings_208);
  i_99 = i_230 + 18446744073709551615;
  if (i_99 != 0)
    goto <bb 25>; [85.00%]
  else
    goto <bb 26>; [15.00%]

  <bb 26> [5.01%]:
  if (nstrings_208 != 0)
    goto <bb 27>; [85.00%]
  else
    goto <bb 35>; [15.00%]

  <bb 27> [4.26%]:
  _136 = tempobase_213 + _135;

  <bb 28> [28.37%]:
  # i_231 = PHI <i_121(34), nstrings_208(27)>
  strsift (tempobase_213, tempsbase_214, _49, 0, i_231);
  tlen_101 = *tempsbase_214;
  _102 = (int) tlen_101;
  _103 = _102 + 1;
  _104 = (long unsigned int) _103;
  MoveMemory (&temp[0], tempsbase_214, _104);
  _105 = i_231 * 8;
  _106 = tempobase_213 + _105;
  _107 = *_106;
  _108 = tempsbase_214 + _107;
  tlen_109 = *_108;
  _110 = (int) tlen_109;
  _126 = *tempobase_213;
  _127 = tempsbase_214 + _126;
  _128 = *_127;
  _129 = (int) _128;
  direction_130 = _110 - _129;
  _131 = ABS_EXPR <direction_130>;
  _137 = *_136;
  _138 = tempsbase_214 + _137;
  _139 = *_138;
  _140 = (long unsigned int) _139;
  _145 = MEM[(farulong *)tempobase_213 + 8B];
  _190 = _137 - _145;
  _144 = _190 + 1;
  nbytes_147 = _140 + _144;
  _148 = tempsbase_214 + _145;
  _149 = (sizetype) tlen_109;
  _15 = _126 + 1;
  _151 = _15 + _149;
  _152 = tempsbase_214 + _151;
  MoveMemory (_152, _148, nbytes_147);
  if (_49 > 1)
    goto <bb 29>; [85.00%]
  else
    goto <bb 34>; [15.00%]

  <bb 29> [24.11%]:
  _46 = (long unsigned int) _131;

  <bb 30> [85.00%]:
  # j_232 = PHI <j_164(33), 1(29)>
  _58 = j_232 * 8;
  _94 = tempobase_213 + _58;
  pretmp_96 = *_94;
  if (direction_130 < 0)
    goto <bb 31>; [36.00%]
  else
    goto <bb 32>; [64.00%]

  <bb 31> [30.60%]:
  _158 = pretmp_96 - _46;
  *_94 = _158;
  goto <bb 33>; [100.00%]

  <bb 32> [54.40%]:
  _163 = _46 + pretmp_96;
  *_94 = _163;

  <bb 33> [85.00%]:
  j_164 = j_232 + 1;
  if (_49 > j_164)
    goto <bb 30>; [85.00%]
  else
    goto <bb 34>; [15.00%]

  <bb 34> [28.37%]:
  _165 = *tempobase_213;
  _166 = tempsbase_214 + _165;
  *_166 = tlen_109;
  _111 = _110 + 1;
  _112 = (long unsigned int) _111;
  _113 = *_106;
  _114 = tempsbase_214 + _113;
  MoveMemory (tempsbase_214, _114, _112);
  tlen_115 = temp[0];
  _116 = (int) tlen_115;
  stradjust (tempobase_213, tempsbase_214, _49, i_231, _116);
  _117 = _116 + 1;
  _118 = (long unsigned int) _117;
  _119 = *_106;
  _120 = tempsbase_214 + _119;
  MoveMemory (_120, &temp[0], _118);
  i_121 = i_231 + 18446744073709551615;
  if (i_121 != 0)
    goto <bb 28>; [85.00%]
  else
    goto <bb 35>; [15.00%]

  <bb 35> [5.01%]:
  temp ={v} {CLOBBER};
  tempobase_24 = tempobase_213 + _134;
  tempsbase_25 = tempsbase_214 + _71;
  i_26 = i_212 + 1;
  if (numarrays_12(D) > i_26)
    goto <bb 24>; [85.00%]
  else
    goto <bb 36>; [15.00%]

  <bb 36> [0.88%]:
  elapsed_19 = StopStopwatch (elapsed_17);
  FreeMemory (optrarray_66, &syserror);
  syserror ={v} {CLOBBER};
  return elapsed_19;

}



;; Function DoNumSort (DoNumSort, funcdef_no=52, decl_uid=4490, cgraph_uid=52, symbol_order=77)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
global_numsortstruct.0+32 = NONLOCAL
global_numsortstruct.64+144 = NONLOCAL
global_numsortstruct.256+64 = NONLOCAL
_1 = global_numsortstruct.0+32
global_numsortstruct.64+144 = &NONLOCAL
ESCAPED = &NONLOCAL
_2 = global_numsortstruct.64+144
_3 = _2
_4 = global_numsortstruct.256+64
_28 = _4
_28 = &NONLOCAL
_6 = _3
_6 = _28
ESCAPED = _6
ESCAPED = &systemerror
arraybase_53 = NONLOCAL
systemerror.0_7 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.0_7
ESCAPED = arraybase_53
ESCAPED = &systemerror
_9 = global_numsortstruct.64+144
_10 = _9
_11 = global_numsortstruct.256+64
ESCAPED = arraybase_53
ESCAPED = _11
ESCAPED = _10
_12 = NONLOCAL
global_min_ticks = NONLOCAL
global_min_ticks.2_13 = global_min_ticks
ESCAPED = arraybase_53
ESCAPED = &systemerror
_14 = global_numsortstruct.64+144
_15 = _14
_15 = &NONLOCAL
global_numsortstruct.64+144 = _15
ESCAPED = _15
ESCAPED = &STRING
_16 = global_numsortstruct.64+144
_17 = _16
_18 = global_numsortstruct.256+64
_8 = _18
_8 = &NONLOCAL
_20 = _8
_20 = _17
ESCAPED = _20
ESCAPED = &systemerror
arraybase_47 = NONLOCAL
systemerror.3_21 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.3_21
ESCAPED = arraybase_47
ESCAPED = &systemerror
arraybase_37 = arraybase_53
arraybase_37 = arraybase_47
arraybase_37 = arraybase_47
accumtime_38 = &NULL
accumtime_38 = accumtime_63
iterations_39 = &NONLOCAL
iterations_39 = iterations_64
_23 = global_numsortstruct.64+144
_24 = _23
_25 = global_numsortstruct.256+64
ESCAPED = arraybase_37
ESCAPED = _25
ESCAPED = _24
_62 = NONLOCAL
accumtime.5_26 = accumtime_38
_27 = accumtime.5_26
_27 = _62
accumtime_63 = _27
iterations_64 = iterations_39
iterations_64 = &NONLOCAL
ESCAPED = _27
_29 = NONLOCAL
_30 = global_numsortstruct.64+144
ESCAPED = arraybase_37
ESCAPED = &systemerror
_31 = global_numsortstruct.64+144
_32 = _31
_33 = _32
_33 = iterations_64
ESCAPED = _27
_34 = NONLOCAL
_35 = _33
_35 = _34
global_numsortstruct.64+144 = _35
ESCAPED = _35
_36 = global_numsortstruct.0+32
global_numsortstruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 5 18 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"_1";
"global_numsortstruct.0+32"[label="global_numsortstruct.0+32 = { 5 }"];
"global_numsortstruct.64+144"[label="global_numsortstruct.64+144 = { 5 }"];
"global_numsortstruct.256+64";
"_2";
"_3";
"_4";
"_28"[label="_28 = { 5 }"];
"_6";
"AllocateMemory";
"systemerror";
"arraybase_53";
"systemerror.0_7";
"ReportError";
"FreeMemory";
"ErrorExit";
"_9";
"_10";
"_11";
"DoNumSortIteration";
"_12";
"global_min_ticks.2_13";
"global_min_ticks";
"puts";
"_16";
"_17";
"_18";
"_8"[label="_8 = { 5 }"];
"_20";
"arraybase_47";
"systemerror.3_21";
"arraybase_37";
"iterations_64"[label="iterations_64 = { 5 }"];
"_23";
"_24";
"_25";
"_62";
"_27"[label="_27 = { 1 }"];
"TicksToSecs";
"_29";
"_30";
"TicksToFracSecs";
"_34";
"_36";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*_1";
"*global_numsortstruct.0+32";
"*AllocateMemory";
"*systemerror";
"*systemerror.0_7";
"*ReportError";
"*FreeMemory";
"*ErrorExit";
"*DoNumSortIteration";
"*_12";
"*global_min_ticks.2_13";
"*global_min_ticks";
"*puts";
"*systemerror.3_21";
"*iterations_64";
"*TicksToSecs";
"*_29";
"*_30";
"*TicksToFracSecs";
"*_36";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"_6" -> "ESCAPED";
"arraybase_53" -> "ESCAPED";
"systemerror.0_7" -> "ESCAPED";
"_10" -> "ESCAPED";
"_11" -> "ESCAPED";
"global_numsortstruct.64+144" -> "ESCAPED";
"_20" -> "ESCAPED";
"arraybase_47" -> "ESCAPED";
"systemerror.3_21" -> "ESCAPED";
"arraybase_37" -> "ESCAPED";
"_24" -> "ESCAPED";
"_25" -> "ESCAPED";
"_27" -> "ESCAPED";
"global_numsortstruct.64+144" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"global_numsortstruct.0+32" -> "_1";
"NONLOCAL" -> "global_numsortstruct.0+32";
"NONLOCAL" -> "global_numsortstruct.64+144";
"global_numsortstruct.64+144" -> "global_numsortstruct.64+144";
"global_numsortstruct.64+144" -> "global_numsortstruct.64+144";
"global_numsortstruct.64+144" -> "global_numsortstruct.64+144";
"iterations_64" -> "global_numsortstruct.64+144";
"global_numsortstruct.64+144" -> "global_numsortstruct.64+144";
"global_numsortstruct.64+144" -> "global_numsortstruct.64+144";
"global_numsortstruct.64+144" -> "global_numsortstruct.64+144";
"_34" -> "global_numsortstruct.64+144";
"global_numsortstruct.64+144" -> "global_numsortstruct.64+144";
"NONLOCAL" -> "global_numsortstruct.256+64";
"global_numsortstruct.64+144" -> "_2";
"_2" -> "_3";
"global_numsortstruct.256+64" -> "_4";
"_4" -> "_28";
"_3" -> "_6";
"_28" -> "_6";
"NONLOCAL" -> "arraybase_53";
"systemerror" -> "systemerror.0_7";
"global_numsortstruct.64+144" -> "_9";
"_9" -> "_10";
"global_numsortstruct.256+64" -> "_11";
"NONLOCAL" -> "_12";
"global_min_ticks" -> "global_min_ticks.2_13";
"NONLOCAL" -> "global_min_ticks";
"global_numsortstruct.64+144" -> "_16";
"_16" -> "_17";
"global_numsortstruct.256+64" -> "_18";
"_18" -> "_8";
"_17" -> "_20";
"_8" -> "_20";
"NONLOCAL" -> "arraybase_47";
"systemerror" -> "systemerror.3_21";
"arraybase_53" -> "arraybase_37";
"arraybase_47" -> "arraybase_37";
"iterations_64" -> "iterations_64";
"iterations_64" -> "iterations_64";
"global_numsortstruct.64+144" -> "_23";
"_23" -> "_24";
"global_numsortstruct.256+64" -> "_25";
"NONLOCAL" -> "_62";
"_27" -> "_27";
"_27" -> "_27";
"_62" -> "_27";
"_27" -> "_27";
"_27" -> "_27";
"NONLOCAL" -> "_29";
"global_numsortstruct.64+144" -> "_30";
"NONLOCAL" -> "_34";
"global_numsortstruct.0+32" -> "_36";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"global_numsortstruct.0+32";
"AllocateMemory";
"systemerror.0_7";
"ReportError";
"FreeMemory";
"ErrorExit";
"DoNumSortIteration";
"puts";
"accumtime_38";
"iterations_39";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.0_7";
"global_numsortstruct.0+32" -> "ESCAPED";
"global_numsortstruct.0+32" -> "accumtime_38";
"systemerror.0_7" -> "ESCAPED";
"accumtime_38" -> "ESCAPED";
"iterations_39" -> "global_numsortstruct.0+32";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = global_numsortstruct.0+32\l"];
"STOREDANYTHING";
"INTEGER";
"global_numsortstruct.0+32";
"AllocateMemory";
"systemerror.0_7";
"ReportError";
"FreeMemory";
"ErrorExit";
"DoNumSortIteration";
"puts";
"accumtime_38";
"iterations_39";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.0_7";
"global_numsortstruct.0+32" -> "ESCAPED";
"global_numsortstruct.0+32" -> "systemerror.0_7";
"global_numsortstruct.0+32" -> "accumtime_38";
"systemerror.0_7" -> "ESCAPED";
"accumtime_38" -> "ESCAPED";
"iterations_39" -> "global_numsortstruct.0+32";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL systemerror }
NONLOCAL = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
STOREDANYTHING = { }
INTEGER = { ANYTHING }
_1 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
global_numsortstruct.0+32 = { ESCAPED NONLOCAL }
global_numsortstruct.64+144 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
global_numsortstruct.256+64 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_2 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_3 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_4 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_28 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_6 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.0_7
arraybase_53 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
systemerror.0_7 = { ESCAPED NONLOCAL }
ReportError = { }
FreeMemory = { }
ErrorExit = { }
_9 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_10 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_11 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
DoNumSortIteration = { }
_12 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
global_min_ticks.2_13 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
global_min_ticks = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_14 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_15 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
puts = { }
_16 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_17 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_18 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_8 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_20 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
arraybase_47 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
systemerror.3_21 = { ESCAPED NONLOCAL } same as systemerror.0_7
arraybase_37 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
accumtime_38 = { NULL ESCAPED NONLOCAL }
accumtime_63 = { NULL ESCAPED NONLOCAL } same as accumtime_38
iterations_39 = { NONLOCAL }
iterations_64 = { NONLOCAL } same as iterations_39
_23 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_24 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_25 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_62 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
accumtime.5_26 = { NULL ESCAPED NONLOCAL } same as accumtime_38
_27 = { NULL ESCAPED NONLOCAL } same as accumtime_38
TicksToSecs = { }
_29 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_30 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_31 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_32 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_33 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
TicksToFracSecs = { }
_34 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_35 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32
_36 = { ESCAPED NONLOCAL } same as global_numsortstruct.0+32


Alias information for DoNumSort

Aliased symbols

systemerror, UID D.4771, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.4771 } (escaped)

Flow-insensitive points-to information

arraybase_37, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
arraybase_47, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
arraybase_53, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 19 6 7 20 8 18 9 10 21 11 12 13 17 14 22 15 16
;;
;; Loop 2
;;  header 13, latch 17
;;  depth 1, outer 0
;;  nodes: 13 17
;;
;; Loop 1
;;  header 4, latch 9
;;  depth 1, outer 0
;;  nodes: 4 9 8 7 19 6 5 18
;;
;; Loop 3
;;  header 5, latch 18
;;  depth 2, outer 1
;;  nodes: 5 18 8 7 19 6
;; 2 succs { 3 10 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 6 19 }
;; 19 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 20 8 }
;; 20 succs { 12 }
;; 8 succs { 9 18 }
;; 18 succs { 5 }
;; 9 succs { 4 }
;; 10 succs { 11 21 }
;; 21 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 17 14 }
;; 17 succs { 13 }
;; 14 succs { 15 22 }
;; 22 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 1 }
Removing basic block 17
Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
DoNumSort ()
{
  int systemerror;
  double iterations;
  long int accumtime;
  farlong * arraybase;
  int _1;
  long unsigned int _3;
  long unsigned int _6;
  int systemerror.0_7;
  short unsigned int _9;
  unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int global_min_ticks.2_13;
  short unsigned int _14;
  short unsigned int _15;
  short unsigned int _16;
  long unsigned int _17;
  long unsigned int _20;
  int systemerror.3_21;
  short unsigned int _23;
  unsigned int _24;
  long unsigned int _25;
  long unsigned int accumtime.5_26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  short unsigned int _31;
  double _32;
  double _33;
  double _34;
  double _35;
  int _36;
  long unsigned int _62;
  long unsigned int pretmp_89;
  short unsigned int pretmp_91;
  short unsigned int prephitmp_92;
  long unsigned int pretmp_94;
  long unsigned int prephitmp_95;
  short unsigned int prephitmp_96;
  long unsigned int pretmp_97;
  long unsigned int prephitmp_98;
  long unsigned int _99;

  <bb 2> [11.19%]:
  _1 = global_numsortstruct.adjust;
  pretmp_89 = global_numsortstruct.arraysize;
  _99 = pretmp_89 * 8;
  if (_1 == 0)
    goto <bb 3>; [67.00%]
  else
    goto <bb 11>; [33.00%]

  <bb 3> [7.50%]:
  global_numsortstruct.numarrays = 1;

  <bb 4> [14.44%]:
  # prephitmp_92 = PHI <1(3), pretmp_91(10)>
  # prephitmp_95 = PHI <pretmp_89(3), pretmp_94(10)>

  <bb 5> [100.00%]:
  # prephitmp_96 = PHI <prephitmp_92(4), _15(9)>
  # prephitmp_98 = PHI <prephitmp_95(4), pretmp_97(9)>
  _3 = (long unsigned int) prephitmp_96;
  _28 = prephitmp_98 * 8;
  _6 = _3 * _28;
  arraybase_53 = AllocateMemory (_6, &systemerror);
  systemerror.0_7 = systemerror;
  if (systemerror.0_7 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [33.00%]:
  ReportError ("CPU:Numeric Sort", systemerror.0_7);
  FreeMemory (arraybase_53, &systemerror);
  ErrorExit ();

  <bb 7> [100.00%]:
  _9 = global_numsortstruct.numarrays;
  _10 = (unsigned int) _9;
  _11 = global_numsortstruct.arraysize;
  _12 = DoNumSortIteration (arraybase_53, _11, _10);
  global_min_ticks.2_13 = global_min_ticks;
  if (_12 > global_min_ticks.2_13)
    goto <bb 13>; [7.50%]
  else
    goto <bb 8>; [92.50%]

  <bb 8> [92.50%]:
  FreeMemory (arraybase_53, &systemerror);
  _14 = global_numsortstruct.numarrays;
  _15 = _14 + 1;
  global_numsortstruct.numarrays = _15;
  if (_14 > 10000)
    goto <bb 10>; [7.50%]
  else
    goto <bb 9>; [92.50%]

  <bb 9> [85.56%]:
  pretmp_97 = global_numsortstruct.arraysize;
  goto <bb 5>; [100.00%]

  <bb 10> [6.94%]:
  __builtin_puts (&"CPU:NSORT -- NUMNUMARRAYS hit."[0]);
  ErrorExit ();
  pretmp_91 = global_numsortstruct.numarrays;
  pretmp_94 = global_numsortstruct.arraysize;
  goto <bb 4>; [100.00%]

  <bb 11> [3.69%]:
  _16 = global_numsortstruct.numarrays;
  _17 = (long unsigned int) _16;
  _20 = _17 * _99;
  arraybase_47 = AllocateMemory (_20, &systemerror);
  systemerror.3_21 = systemerror;
  if (systemerror.3_21 != 0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 13>; [67.00%]

  <bb 12> [1.22%]:
  ReportError ("CPU:Numeric Sort", systemerror.3_21);
  FreeMemory (arraybase_47, &systemerror);
  ErrorExit ();

  <bb 13> [11.19%]:
  # arraybase_37 = PHI <arraybase_53(7), arraybase_47(11), arraybase_47(12)>

  <bb 14> [74.63%]:
  # accumtime_38 = PHI <0(13), accumtime_63(14)>
  # iterations_39 = PHI <0.0(13), iterations_64(14)>
  _23 = global_numsortstruct.numarrays;
  _24 = (unsigned int) _23;
  _25 = global_numsortstruct.arraysize;
  _62 = DoNumSortIteration (arraybase_37, _25, _24);
  accumtime.5_26 = (long unsigned int) accumtime_38;
  _27 = accumtime.5_26 + _62;
  accumtime_63 = (long int) _27;
  iterations_64 = iterations_39 + 1.0e+0;
  _29 = TicksToSecs (_27);
  _30 = global_numsortstruct.request_secs;
  if (_29 < _30)
    goto <bb 14>; [85.00%]
  else
    goto <bb 15>; [15.00%]

  <bb 15> [11.19%]:
  FreeMemory (arraybase_37, &systemerror);
  _31 = global_numsortstruct.numarrays;
  _32 = (double) _31;
  _33 = _32 * iterations_64;
  _34 = TicksToFracSecs (_27);
  _35 = _33 / _34;
  global_numsortstruct.sortspersec = _35;
  _36 = global_numsortstruct.adjust;
  if (_36 == 0)
    goto <bb 16>; [54.00%]
  else
    goto <bb 17>; [46.00%]

  <bb 16> [6.04%]:
  global_numsortstruct.adjust = 1;

  <bb 17> [11.19%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoStringSort (DoStringSort, funcdef_no=57, decl_uid=4508, cgraph_uid=57, symbol_order=82)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
global_strsortstruct.0+32 = NONLOCAL
global_strsortstruct.64+144 = NONLOCAL
global_strsortstruct.256+64 = NONLOCAL
_1 = global_strsortstruct.0+32
global_strsortstruct.64+144 = &NONLOCAL
ESCAPED = &NONLOCAL
_2 = global_strsortstruct.256+64
_3 = _2
_3 = &NONLOCAL
_4 = global_strsortstruct.64+144
_5 = _4
_6 = _3
_6 = _5
ESCAPED = _6
ESCAPED = &systemerror
arraybase_50 = NONLOCAL
systemerror.14_7 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.14_7
_9 = global_strsortstruct.256+64
_10 = global_strsortstruct.64+144
_11 = _10
ESCAPED = arraybase_50
ESCAPED = _11
ESCAPED = _9
_12 = NONLOCAL
global_min_ticks = NONLOCAL
global_min_ticks.16_13 = global_min_ticks
ESCAPED = arraybase_50
ESCAPED = &systemerror
_14 = global_strsortstruct.64+144
_15 = _14
_15 = &NONLOCAL
global_strsortstruct.64+144 = _15
ESCAPED = _15
_16 = global_strsortstruct.256+64
_17 = _16
_17 = &NONLOCAL
_18 = global_strsortstruct.64+144
_19 = _18
_20 = _17
_20 = _19
ESCAPED = _20
ESCAPED = &systemerror
arraybase_45 = NONLOCAL
systemerror.17_21 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.17_21
arraybase_35 = arraybase_50
arraybase_35 = arraybase_45
arraybase_35 = arraybase_45
accumtime_36 = &NULL
accumtime_36 = accumtime_58
iterations_37 = &NONLOCAL
iterations_37 = iterations_59
_23 = global_strsortstruct.256+64
_24 = global_strsortstruct.64+144
_25 = _24
ESCAPED = arraybase_35
ESCAPED = _25
ESCAPED = _23
_57 = NONLOCAL
accumtime.19_26 = accumtime_36
_27 = accumtime.19_26
_27 = _57
accumtime_58 = _27
_28 = global_strsortstruct.64+144
_29 = _28
iterations_59 = _29
iterations_59 = iterations_37
ESCAPED = _27
_30 = NONLOCAL
_31 = global_strsortstruct.64+144
ESCAPED = arraybase_35
ESCAPED = &systemerror
ESCAPED = _27
_32 = NONLOCAL
_33 = iterations_59
_33 = _32
global_strsortstruct.64+144 = _33
ESCAPED = _33
_34 = global_strsortstruct.0+32
global_strsortstruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 5 18 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"_1";
"global_strsortstruct.0+32"[label="global_strsortstruct.0+32 = { 5 }"];
"global_strsortstruct.64+144"[label="global_strsortstruct.64+144 = { 5 }"];
"global_strsortstruct.256+64";
"_2";
"_3"[label="_3 = { 5 }"];
"_4";
"_5";
"_6";
"AllocateMemory";
"systemerror";
"arraybase_50";
"systemerror.14_7";
"ReportError";
"ErrorExit";
"_9";
"_10";
"_11";
"DoStringSortIteration";
"_12";
"global_min_ticks.16_13";
"global_min_ticks";
"FreeMemory";
"_16";
"_17"[label="_17 = { 5 }"];
"_18";
"_19";
"_20";
"arraybase_45";
"systemerror.17_21";
"arraybase_35";
"_23";
"_24";
"_25";
"_57";
"_27"[label="_27 = { 1 }"];
"TicksToSecs";
"_30";
"_31";
"TicksToFracSecs";
"_32";
"_34";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*_1";
"*global_strsortstruct.0+32";
"*AllocateMemory";
"*systemerror";
"*systemerror.14_7";
"*ReportError";
"*ErrorExit";
"*DoStringSortIteration";
"*_12";
"*global_min_ticks.16_13";
"*global_min_ticks";
"*FreeMemory";
"*systemerror.17_21";
"*TicksToSecs";
"*_30";
"*_31";
"*TicksToFracSecs";
"*_34";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"_6" -> "ESCAPED";
"arraybase_50" -> "ESCAPED";
"systemerror.14_7" -> "ESCAPED";
"_9" -> "ESCAPED";
"_11" -> "ESCAPED";
"global_strsortstruct.64+144" -> "ESCAPED";
"_20" -> "ESCAPED";
"systemerror.17_21" -> "ESCAPED";
"arraybase_35" -> "ESCAPED";
"_23" -> "ESCAPED";
"_25" -> "ESCAPED";
"_27" -> "ESCAPED";
"global_strsortstruct.64+144" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"global_strsortstruct.0+32" -> "_1";
"NONLOCAL" -> "global_strsortstruct.0+32";
"NONLOCAL" -> "global_strsortstruct.64+144";
"global_strsortstruct.64+144" -> "global_strsortstruct.64+144";
"global_strsortstruct.64+144" -> "global_strsortstruct.64+144";
"global_strsortstruct.64+144" -> "global_strsortstruct.64+144";
"global_strsortstruct.64+144" -> "global_strsortstruct.64+144";
"global_strsortstruct.64+144" -> "global_strsortstruct.64+144";
"global_strsortstruct.64+144" -> "global_strsortstruct.64+144";
"global_strsortstruct.64+144" -> "global_strsortstruct.64+144";
"_32" -> "global_strsortstruct.64+144";
"global_strsortstruct.64+144" -> "global_strsortstruct.64+144";
"NONLOCAL" -> "global_strsortstruct.256+64";
"global_strsortstruct.256+64" -> "_2";
"_2" -> "_3";
"global_strsortstruct.64+144" -> "_4";
"_4" -> "_5";
"_3" -> "_6";
"_5" -> "_6";
"NONLOCAL" -> "arraybase_50";
"systemerror" -> "systemerror.14_7";
"global_strsortstruct.256+64" -> "_9";
"global_strsortstruct.64+144" -> "_10";
"_10" -> "_11";
"NONLOCAL" -> "_12";
"global_min_ticks" -> "global_min_ticks.16_13";
"NONLOCAL" -> "global_min_ticks";
"global_strsortstruct.256+64" -> "_16";
"_16" -> "_17";
"global_strsortstruct.64+144" -> "_18";
"_18" -> "_19";
"_17" -> "_20";
"_19" -> "_20";
"NONLOCAL" -> "arraybase_45";
"systemerror" -> "systemerror.17_21";
"arraybase_50" -> "arraybase_35";
"arraybase_45" -> "arraybase_35";
"global_strsortstruct.256+64" -> "_23";
"global_strsortstruct.64+144" -> "_24";
"_24" -> "_25";
"NONLOCAL" -> "_57";
"_27" -> "_27";
"_27" -> "_27";
"_57" -> "_27";
"_27" -> "_27";
"_27" -> "_27";
"NONLOCAL" -> "_30";
"global_strsortstruct.64+144" -> "_31";
"NONLOCAL" -> "_32";
"global_strsortstruct.0+32" -> "_34";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"global_strsortstruct.0+32";
"AllocateMemory";
"systemerror.14_7";
"ReportError";
"ErrorExit";
"DoStringSortIteration";
"FreeMemory";
"accumtime_36";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.14_7";
"global_strsortstruct.0+32" -> "ESCAPED";
"global_strsortstruct.0+32" -> "accumtime_36";
"systemerror.14_7" -> "ESCAPED";
"accumtime_36" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = global_strsortstruct.0+32\l"];
"STOREDANYTHING";
"INTEGER";
"global_strsortstruct.0+32";
"AllocateMemory";
"systemerror.14_7";
"ReportError";
"ErrorExit";
"DoStringSortIteration";
"FreeMemory";
"accumtime_36";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.14_7";
"global_strsortstruct.0+32" -> "ESCAPED";
"global_strsortstruct.0+32" -> "systemerror.14_7";
"global_strsortstruct.0+32" -> "accumtime_36";
"systemerror.14_7" -> "ESCAPED";
"accumtime_36" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL systemerror }
NONLOCAL = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
STOREDANYTHING = { }
INTEGER = { ANYTHING }
_1 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
global_strsortstruct.0+32 = { ESCAPED NONLOCAL }
global_strsortstruct.64+144 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
global_strsortstruct.256+64 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_2 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_3 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_4 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_5 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_6 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.14_7
arraybase_50 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
systemerror.14_7 = { ESCAPED NONLOCAL }
ReportError = { }
ErrorExit = { }
_9 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_10 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_11 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
DoStringSortIteration = { }
_12 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
global_min_ticks.16_13 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
global_min_ticks = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
FreeMemory = { }
_14 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_15 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_16 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_17 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_18 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_19 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_20 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
arraybase_45 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
systemerror.17_21 = { ESCAPED NONLOCAL } same as systemerror.14_7
arraybase_35 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
accumtime_36 = { NULL ESCAPED NONLOCAL }
accumtime_58 = { NULL ESCAPED NONLOCAL } same as accumtime_36
iterations_37 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
iterations_59 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_23 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_24 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_25 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_57 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
accumtime.19_26 = { NULL ESCAPED NONLOCAL } same as accumtime_36
_27 = { NULL ESCAPED NONLOCAL } same as accumtime_36
_28 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_29 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
TicksToSecs = { }
_30 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_31 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
TicksToFracSecs = { }
_32 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_33 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32
_34 = { ESCAPED NONLOCAL } same as global_strsortstruct.0+32


Alias information for DoStringSort

Aliased symbols

systemerror, UID D.4833, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.4833 } (escaped)

Flow-insensitive points-to information

arraybase_35, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
arraybase_45, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
arraybase_50, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 16 5 6 17 7 8 18 9 10 11 15 12 19 13 14
;;
;; Loop 2
;;  header 11, latch 15
;;  depth 1, outer 0
;;  nodes: 11 15
;;
;; Loop 1
;;  header 4, latch 7
;;  depth 1, outer 0
;;  nodes: 4 7 6 16 5
;; 2 succs { 3 8 }
;; 3 succs { 4 }
;; 4 succs { 5 16 }
;; 16 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 17 7 }
;; 17 succs { 10 }
;; 7 succs { 4 }
;; 8 succs { 9 18 }
;; 18 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 15 12 }
;; 15 succs { 11 }
;; 12 succs { 13 19 }
;; 19 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
Removing basic block 15
Removing basic block 16
Removing basic block 17
Removing basic block 18
Removing basic block 19
DoStringSort ()
{
  int systemerror;
  double iterations;
  long int accumtime;
  faruchar * arraybase;
  int _1;
  long unsigned int _3;
  long unsigned int _5;
  long unsigned int _6;
  int systemerror.14_7;
  long unsigned int _9;
  short unsigned int _10;
  unsigned int _11;
  long unsigned int _12;
  long unsigned int global_min_ticks.16_13;
  short unsigned int _14;
  short unsigned int _15;
  short unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  int systemerror.17_21;
  long unsigned int _23;
  short unsigned int _24;
  unsigned int _25;
  long unsigned int accumtime.19_26;
  long unsigned int _27;
  short unsigned int _28;
  double _29;
  long unsigned int _30;
  long unsigned int _31;
  double _32;
  double _33;
  int _34;
  long unsigned int _57;
  long unsigned int pretmp_75;
  long unsigned int _76;
  long unsigned int pretmp_78;
  long unsigned int prephitmp_79;
  short unsigned int prephitmp_81;

  <bb 2> [15.00%]:
  _1 = global_strsortstruct.adjust;
  pretmp_75 = global_strsortstruct.arraysize;
  _76 = pretmp_75 + 100;
  if (_1 == 0)
    goto <bb 3>; [67.00%]
  else
    goto <bb 8>; [33.00%]

  <bb 3> [10.05%]:
  global_strsortstruct.numarrays = 1;

  <bb 4> [67.00%]:
  # prephitmp_79 = PHI <pretmp_75(3), pretmp_78(7)>
  # prephitmp_81 = PHI <1(3), _15(7)>
  _3 = prephitmp_79 + 100;
  _5 = (long unsigned int) prephitmp_81;
  _6 = _3 * _5;
  arraybase_50 = AllocateMemory (_6, &systemerror);
  systemerror.14_7 = systemerror;
  if (systemerror.14_7 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [22.11%]:
  ReportError ("CPU:String Sort", systemerror.14_7);
  ErrorExit ();

  <bb 6> [67.00%]:
  _9 = global_strsortstruct.arraysize;
  _10 = global_strsortstruct.numarrays;
  _11 = (unsigned int) _10;
  _12 = DoStringSortIteration (arraybase_50, _11, _9);
  global_min_ticks.16_13 = global_min_ticks;
  if (_12 > global_min_ticks.16_13)
    goto <bb 10>; [15.00%]
  else
    goto <bb 7>; [85.00%]

  <bb 7> [56.95%]:
  FreeMemory (arraybase_50, &systemerror);
  _14 = global_strsortstruct.numarrays;
  _15 = _14 + 1;
  global_strsortstruct.numarrays = _15;
  pretmp_78 = global_strsortstruct.arraysize;
  goto <bb 4>; [100.00%]

  <bb 8> [4.95%]:
  _18 = global_strsortstruct.numarrays;
  _19 = (long unsigned int) _18;
  _20 = _19 * _76;
  arraybase_45 = AllocateMemory (_20, &systemerror);
  systemerror.17_21 = systemerror;
  if (systemerror.17_21 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [1.63%]:
  ReportError ("CPU:String Sort", systemerror.17_21);
  ErrorExit ();

  <bb 10> [15.00%]:
  # arraybase_35 = PHI <arraybase_50(6), arraybase_45(8), arraybase_45(9)>

  <bb 11> [100.00%]:
  # accumtime_36 = PHI <0(10), accumtime_58(11)>
  # iterations_37 = PHI <0.0(10), iterations_59(11)>
  _23 = global_strsortstruct.arraysize;
  _24 = global_strsortstruct.numarrays;
  _25 = (unsigned int) _24;
  _57 = DoStringSortIteration (arraybase_35, _25, _23);
  accumtime.19_26 = (long unsigned int) accumtime_36;
  _27 = accumtime.19_26 + _57;
  accumtime_58 = (long int) _27;
  _28 = global_strsortstruct.numarrays;
  _29 = (double) _28;
  iterations_59 = _29 + iterations_37;
  _30 = TicksToSecs (_27);
  _31 = global_strsortstruct.request_secs;
  if (_30 < _31)
    goto <bb 11>; [85.00%]
  else
    goto <bb 12>; [15.00%]

  <bb 12> [15.00%]:
  FreeMemory (arraybase_35, &systemerror);
  _32 = TicksToFracSecs (_27);
  _33 = iterations_59 / _32;
  global_strsortstruct.sortspersec = _33;
  _34 = global_strsortstruct.adjust;
  if (_34 == 0)
    goto <bb 13>; [54.00%]
  else
    goto <bb 14>; [46.00%]

  <bb 13> [8.10%]:
  global_strsortstruct.adjust = 1;

  <bb 14> [15.00%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoBitops (DoBitops, funcdef_no=64, decl_uid=4543, cgraph_uid=64, symbol_order=89)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
global_bitopstruct.0+32 = NONLOCAL
global_bitopstruct.64+256 = NONLOCAL
_1 = global_bitopstruct.0+32
_2 = global_bitopstruct.64+256
_3 = _2
_3 = &NONLOCAL
ESCAPED = _3
ESCAPED = &systemerror
bitarraybase_54 = NONLOCAL
systemerror.28_4 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.28_4
global_bitopstruct.64+256 = &NONLOCAL
ESCAPED = &NONLOCAL
_5 = global_bitopstruct.64+256
_6 = _5
_6 = &NONLOCAL
ESCAPED = _6
ESCAPED = &systemerror
bitoparraybase_59 = NONLOCAL
systemerror.30_7 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.30_7
ESCAPED = bitarraybase_54
ESCAPED = &systemerror
_8 = global_bitopstruct.64+256
_9 = _8
ESCAPED = bitarraybase_54
ESCAPED = bitoparraybase_59
ESCAPED = _9
ESCAPED = &nbitops
_10 = NONLOCAL
ticks_64 = _10
_11 = ticks_64
global_min_ticks = NONLOCAL
global_min_ticks.32_12 = global_min_ticks
ESCAPED = bitoparraybase_59
ESCAPED = &systemerror
_13 = global_bitopstruct.64+256
_14 = _13
_14 = &NONLOCAL
global_bitopstruct.64+256 = _14
ESCAPED = _14
_15 = global_bitopstruct.64+256
_16 = _15
_16 = &NONLOCAL
ESCAPED = _16
ESCAPED = &systemerror
bitarraybase_45 = NONLOCAL
systemerror.33_17 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.33_17
_19 = global_bitopstruct.64+256
_20 = _19
_20 = &NONLOCAL
ESCAPED = _20
ESCAPED = &systemerror
bitoparraybase_49 = NONLOCAL
systemerror.35_21 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.35_21
ESCAPED = bitarraybase_45
ESCAPED = &systemerror
bitarraybase_32 = bitarraybase_54
bitarraybase_32 = bitarraybase_45
bitarraybase_32 = bitarraybase_45
bitoparraybase_33 = bitoparraybase_59
bitoparraybase_33 = bitoparraybase_49
bitoparraybase_33 = bitoparraybase_49
accumtime_34 = &NULL
accumtime_34 = accumtime_69
iterations_35 = &NONLOCAL
iterations_35 = iterations_70
_23 = global_bitopstruct.64+256
_24 = _23
ESCAPED = bitarraybase_32
ESCAPED = bitoparraybase_33
ESCAPED = _24
ESCAPED = &nbitops
_68 = NONLOCAL
accumtime_69 = accumtime_34
accumtime_69 = _68
nbitops.37_25 = nbitops
_26 = nbitops.37_25
iterations_70 = _26
iterations_70 = iterations_35
ESCAPED = accumtime_69
_27 = NONLOCAL
_28 = global_bitopstruct.64+256
ESCAPED = bitarraybase_32
ESCAPED = &systemerror
ESCAPED = bitoparraybase_33
ESCAPED = &systemerror
ESCAPED = accumtime_69
_29 = NONLOCAL
_30 = iterations_70
_30 = _29
global_bitopstruct.64+256 = _30
ESCAPED = _30
_31 = global_bitopstruct.0+32
global_bitopstruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 5 14 27 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"_1";
"global_bitopstruct.0+32"[label="global_bitopstruct.0+32 = { 5 }"];
"global_bitopstruct.64+256"[label="global_bitopstruct.64+256 = { 5 }"];
"_2";
"_3"[label="_3 = { 5 }"];
"AllocateMemory";
"systemerror";
"bitarraybase_54";
"systemerror.28_4";
"ReportError";
"ErrorExit";
"_5";
"_6"[label="_6 = { 5 }"];
"bitoparraybase_59";
"systemerror.30_7";
"FreeMemory";
"_8";
"_9";
"DoBitfieldIteration";
"nbitops";
"_10";
"ticks_64";
"_11";
"global_min_ticks.32_12";
"global_min_ticks";
"_15";
"_16"[label="_16 = { 5 }"];
"bitarraybase_45";
"systemerror.33_17";
"_19";
"_20"[label="_20 = { 5 }"];
"bitoparraybase_49";
"systemerror.35_21";
"bitarraybase_32";
"bitoparraybase_33";
"accumtime_69"[label="accumtime_69 = { 1 }"];
"iterations_70"[label="iterations_70 = { 5 }"];
"_23";
"_24";
"_68";
"nbitops.37_25";
"_26";
"TicksToSecs";
"_27";
"_28";
"TicksToFracSecs";
"_29";
"_30";
"_31";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*_1";
"*global_bitopstruct.0+32";
"*AllocateMemory";
"*systemerror";
"*systemerror.28_4";
"*ReportError";
"*ErrorExit";
"*systemerror.30_7";
"*FreeMemory";
"*DoBitfieldIteration";
"*nbitops";
"*_10";
"*ticks_64";
"*_11";
"*global_min_ticks.32_12";
"*global_min_ticks";
"*systemerror.33_17";
"*systemerror.35_21";
"*iterations_70";
"*nbitops.37_25";
"*_26";
"*TicksToSecs";
"*_27";
"*_28";
"*TicksToFracSecs";
"*_31";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"_3" -> "ESCAPED";
"bitarraybase_54" -> "ESCAPED";
"systemerror.28_4" -> "ESCAPED";
"_6" -> "ESCAPED";
"bitoparraybase_59" -> "ESCAPED";
"systemerror.30_7" -> "ESCAPED";
"_9" -> "ESCAPED";
"global_bitopstruct.64+256" -> "ESCAPED";
"_16" -> "ESCAPED";
"bitarraybase_45" -> "ESCAPED";
"systemerror.33_17" -> "ESCAPED";
"_20" -> "ESCAPED";
"systemerror.35_21" -> "ESCAPED";
"bitarraybase_32" -> "ESCAPED";
"bitoparraybase_33" -> "ESCAPED";
"accumtime_69" -> "ESCAPED";
"_24" -> "ESCAPED";
"_30" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"global_bitopstruct.0+32" -> "_1";
"NONLOCAL" -> "global_bitopstruct.0+32";
"NONLOCAL" -> "global_bitopstruct.64+256";
"global_bitopstruct.64+256" -> "global_bitopstruct.64+256";
"global_bitopstruct.64+256" -> "global_bitopstruct.64+256";
"global_bitopstruct.64+256" -> "global_bitopstruct.64+256";
"_30" -> "global_bitopstruct.64+256";
"global_bitopstruct.64+256" -> "_2";
"_2" -> "_3";
"NONLOCAL" -> "bitarraybase_54";
"systemerror" -> "systemerror.28_4";
"global_bitopstruct.64+256" -> "_5";
"_5" -> "_6";
"NONLOCAL" -> "bitoparraybase_59";
"systemerror" -> "systemerror.30_7";
"global_bitopstruct.64+256" -> "_8";
"_8" -> "_9";
"NONLOCAL" -> "_10";
"_10" -> "ticks_64";
"ticks_64" -> "_11";
"global_min_ticks" -> "global_min_ticks.32_12";
"NONLOCAL" -> "global_min_ticks";
"global_bitopstruct.64+256" -> "_15";
"_15" -> "_16";
"NONLOCAL" -> "bitarraybase_45";
"systemerror" -> "systemerror.33_17";
"global_bitopstruct.64+256" -> "_19";
"_19" -> "_20";
"NONLOCAL" -> "bitoparraybase_49";
"systemerror" -> "systemerror.35_21";
"bitarraybase_54" -> "bitarraybase_32";
"bitarraybase_45" -> "bitarraybase_32";
"bitoparraybase_59" -> "bitoparraybase_33";
"bitoparraybase_49" -> "bitoparraybase_33";
"accumtime_69" -> "accumtime_69";
"accumtime_69" -> "accumtime_69";
"_68" -> "accumtime_69";
"iterations_70" -> "iterations_70";
"iterations_70" -> "iterations_70";
"_26" -> "iterations_70";
"global_bitopstruct.64+256" -> "_23";
"_23" -> "_24";
"NONLOCAL" -> "_68";
"nbitops" -> "nbitops.37_25";
"nbitops.37_25" -> "_26";
"NONLOCAL" -> "_27";
"global_bitopstruct.64+256" -> "_28";
"NONLOCAL" -> "_29";
"iterations_70" -> "_30";
"_29" -> "_30";
"global_bitopstruct.0+32" -> "_31";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"global_bitopstruct.0+32";
"global_bitopstruct.64+256";
"AllocateMemory";
"systemerror.28_4";
"ReportError";
"ErrorExit";
"FreeMemory";
"DoBitfieldIteration";
"accumtime_34";
"iterations_35";
"nbitops.37_25";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.28_4";
"STOREDANYTHING" -> "nbitops.37_25";
"global_bitopstruct.0+32" -> "ESCAPED";
"global_bitopstruct.0+32" -> "global_bitopstruct.64+256";
"global_bitopstruct.0+32" -> "accumtime_34";
"global_bitopstruct.64+256" -> "ESCAPED";
"systemerror.28_4" -> "ESCAPED";
"accumtime_34" -> "ESCAPED";
"iterations_35" -> "global_bitopstruct.64+256";
"nbitops.37_25" -> "iterations_35";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = global_bitopstruct.0+32\l"];
"STOREDANYTHING";
"INTEGER";
"global_bitopstruct.0+32";
"global_bitopstruct.64+256";
"AllocateMemory";
"systemerror.28_4";
"ReportError";
"ErrorExit";
"FreeMemory";
"DoBitfieldIteration";
"accumtime_34";
"iterations_35";
"nbitops.37_25";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.28_4";
"STOREDANYTHING" -> "nbitops.37_25";
"global_bitopstruct.0+32" -> "ESCAPED";
"global_bitopstruct.0+32" -> "global_bitopstruct.64+256";
"global_bitopstruct.0+32" -> "systemerror.28_4";
"global_bitopstruct.0+32" -> "accumtime_34";
"global_bitopstruct.0+32" -> "nbitops.37_25";
"global_bitopstruct.64+256" -> "ESCAPED";
"systemerror.28_4" -> "ESCAPED";
"accumtime_34" -> "ESCAPED";
"iterations_35" -> "global_bitopstruct.64+256";
"nbitops.37_25" -> "ESCAPED";
"nbitops.37_25" -> "iterations_35";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL systemerror nbitops }
NONLOCAL = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
STOREDANYTHING = { }
INTEGER = { ANYTHING }
_1 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
global_bitopstruct.0+32 = { ESCAPED NONLOCAL }
global_bitopstruct.64+256 = { ESCAPED NONLOCAL }
_2 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_3 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.28_4
bitarraybase_54 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
systemerror.28_4 = { ESCAPED NONLOCAL }
ReportError = { }
ErrorExit = { }
_5 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_6 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
bitoparraybase_59 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
systemerror.30_7 = { ESCAPED NONLOCAL } same as systemerror.28_4
FreeMemory = { }
_8 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_9 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
DoBitfieldIteration = { }
nbitops = { ESCAPED NONLOCAL } same as nbitops.37_25
_10 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
ticks_64 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
_11 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
global_min_ticks.32_12 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
global_min_ticks = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
_13 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_14 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_15 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_16 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
bitarraybase_45 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
systemerror.33_17 = { ESCAPED NONLOCAL } same as systemerror.28_4
_19 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_20 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
bitoparraybase_49 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
systemerror.35_21 = { ESCAPED NONLOCAL } same as systemerror.28_4
bitarraybase_32 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
bitoparraybase_33 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
accumtime_34 = { NULL ESCAPED NONLOCAL }
accumtime_69 = { NULL ESCAPED NONLOCAL } same as accumtime_34
iterations_35 = { ESCAPED NONLOCAL }
iterations_70 = { ESCAPED NONLOCAL } same as iterations_35
_23 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_24 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_68 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
nbitops.37_25 = { ESCAPED NONLOCAL }
_26 = { ESCAPED NONLOCAL } same as nbitops.37_25
TicksToSecs = { }
_27 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
_28 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
TicksToFracSecs = { }
_29 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32
_30 = { ESCAPED NONLOCAL } same as global_bitopstruct.64+256
_31 = { ESCAPED NONLOCAL } same as global_bitopstruct.0+32


Alias information for DoBitops

Aliased symbols

systemerror, UID D.4951, int, is addressable
nbitops, UID D.4947, long unsigned int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.4947 D.4951 } (escaped)

Flow-insensitive points-to information

bitarraybase_32, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bitoparraybase_33, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bitarraybase_45, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bitoparraybase_49, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bitarraybase_54, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bitoparraybase_59, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 20 4 5 6 21 7 8 22 9 10 23 11 12 24 13 14 15 19 16 25 17 18
;;
;; Loop 2
;;  header 15, latch 19
;;  depth 1, outer 0
;;  nodes: 15 19
;;
;; Loop 1
;;  header 6, latch 9
;;  depth 1, outer 0
;;  nodes: 6 9 8 21 7
;; 2 succs { 3 10 }
;; 3 succs { 4 20 }
;; 20 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 7 21 }
;; 21 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 22 9 }
;; 22 succs { 14 }
;; 9 succs { 6 }
;; 10 succs { 11 23 }
;; 23 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 24 }
;; 24 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 19 16 }
;; 19 succs { 15 }
;; 16 succs { 17 25 }
;; 25 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 1 }
Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
DoBitops ()
{
  int ticks;
  int systemerror;
  double iterations;
  long unsigned int accumtime;
  long unsigned int nbitops;
  farulong * bitoparraybase;
  farulong * bitarraybase;
  int _1;
  int systemerror.28_4;
  long unsigned int _6;
  int systemerror.30_7;
  long unsigned int _8;
  long int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int global_min_ticks.32_12;
  long unsigned int _13;
  long unsigned int _14;
  int systemerror.33_17;
  long unsigned int _19;
  long unsigned int _20;
  int systemerror.35_21;
  long unsigned int _23;
  long int _24;
  long unsigned int nbitops.37_25;
  double _26;
  long unsigned int _27;
  long unsigned int _28;
  double _29;
  double _30;
  int _31;
  long unsigned int _68;
  long unsigned int pretmp_86;
  long unsigned int _87;
  long unsigned int prephitmp_88;

  <bb 2> [15.00%]:
  _1 = global_bitopstruct.adjust;
  pretmp_86 = global_bitopstruct.bitfieldarraysize;
  _87 = pretmp_86 * 8;
  if (_1 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 3> [7.50%]:
  bitarraybase_54 = AllocateMemory (_87, &systemerror);
  systemerror.28_4 = systemerror;
  if (systemerror.28_4 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [2.48%]:
  ReportError ("CPU:Bitfields", systemerror.28_4);
  ErrorExit ();

  <bb 5> [7.50%]:
  global_bitopstruct.bitoparraysize = 30;

  <bb 6> [50.00%]:
  # prephitmp_88 = PHI <30(5), _14(9)>
  _6 = prephitmp_88 * 16;
  bitoparraybase_59 = AllocateMemory (_6, &systemerror);
  systemerror.30_7 = systemerror;
  if (systemerror.30_7 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [16.50%]:
  ReportError ("CPU:Bitfields", systemerror.30_7);
  FreeMemory (bitarraybase_54, &systemerror);
  ErrorExit ();

  <bb 8> [50.00%]:
  _8 = global_bitopstruct.bitoparraysize;
  _9 = (long int) _8;
  _10 = DoBitfieldIteration (bitarraybase_54, bitoparraybase_59, _9, &nbitops);
  ticks_64 = (int) _10;
  _11 = (long unsigned int) ticks_64;
  global_min_ticks.32_12 = global_min_ticks;
  if (_11 > global_min_ticks.32_12)
    goto <bb 14>; [15.00%]
  else
    goto <bb 9>; [85.00%]

  <bb 9> [42.50%]:
  FreeMemory (bitoparraybase_59, &systemerror);
  _13 = global_bitopstruct.bitoparraysize;
  _14 = _13 + 100;
  global_bitopstruct.bitoparraysize = _14;
  goto <bb 6>; [100.00%]

  <bb 10> [7.50%]:
  bitarraybase_45 = AllocateMemory (_87, &systemerror);
  systemerror.33_17 = systemerror;
  if (systemerror.33_17 != 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 12>; [67.00%]

  <bb 11> [2.48%]:
  ReportError ("CPU:Bitfields", systemerror.33_17);
  ErrorExit ();

  <bb 12> [7.50%]:
  _19 = global_bitopstruct.bitoparraysize;
  _20 = _19 * 16;
  bitoparraybase_49 = AllocateMemory (_20, &systemerror);
  systemerror.35_21 = systemerror;
  if (systemerror.35_21 != 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 13> [2.48%]:
  ReportError ("CPU:Bitfields", systemerror.35_21);
  FreeMemory (bitarraybase_45, &systemerror);
  ErrorExit ();

  <bb 14> [15.00%]:
  # bitarraybase_32 = PHI <bitarraybase_54(8), bitarraybase_45(12), bitarraybase_45(13)>
  # bitoparraybase_33 = PHI <bitoparraybase_59(8), bitoparraybase_49(12), bitoparraybase_49(13)>

  <bb 15> [100.00%]:
  # accumtime_34 = PHI <0(14), accumtime_69(15)>
  # iterations_35 = PHI <0.0(14), iterations_70(15)>
  _23 = global_bitopstruct.bitoparraysize;
  _24 = (long int) _23;
  _68 = DoBitfieldIteration (bitarraybase_32, bitoparraybase_33, _24, &nbitops);
  accumtime_69 = accumtime_34 + _68;
  nbitops.37_25 = nbitops;
  _26 = (double) nbitops.37_25;
  iterations_70 = _26 + iterations_35;
  _27 = TicksToSecs (accumtime_69);
  _28 = global_bitopstruct.request_secs;
  if (_27 < _28)
    goto <bb 15>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 16> [15.00%]:
  FreeMemory (bitarraybase_32, &systemerror);
  FreeMemory (bitoparraybase_33, &systemerror);
  _29 = TicksToFracSecs (accumtime_69);
  _30 = iterations_70 / _29;
  global_bitopstruct.bitopspersec = _30;
  _31 = global_bitopstruct.adjust;
  if (_31 == 0)
    goto <bb 17>; [54.00%]
  else
    goto <bb 18>; [46.00%]

  <bb 17> [8.10%]:
  global_bitopstruct.adjust = 1;

  <bb 18> [15.00%]:
  nbitops ={v} {CLOBBER};
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoEmFloat (DoEmFloat, funcdef_no=68, decl_uid=4565, cgraph_uid=68, symbol_order=93)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
global_emfloatstruct.0+32 = NONLOCAL
global_emfloatstruct.64+256 = NONLOCAL
_1 = global_emfloatstruct.64+256
_2 = _1
_2 = &NONLOCAL
ESCAPED = _2
ESCAPED = &systemerror
abase_43 = NONLOCAL
systemerror.50_3 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.50_3
_5 = global_emfloatstruct.64+256
_6 = _5
_6 = &NONLOCAL
ESCAPED = _6
ESCAPED = &systemerror
bbase_47 = NONLOCAL
systemerror.52_7 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.52_7
ESCAPED = abase_43
ESCAPED = &systemerror
_9 = global_emfloatstruct.64+256
_10 = _9
_10 = &NONLOCAL
ESCAPED = _10
ESCAPED = &systemerror
cbase_52 = NONLOCAL
systemerror.54_11 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.54_11
ESCAPED = abase_43
ESCAPED = &systemerror
ESCAPED = bbase_47
ESCAPED = &systemerror
_13 = global_emfloatstruct.64+256
ESCAPED = abase_43
ESCAPED = bbase_47
ESCAPED = cbase_52
ESCAPED = _13
_14 = global_emfloatstruct.0+32
global_emfloatstruct.64+256 = &NULL
ESCAPED = &NULL
loops_86 = loops_61
loops_86 = &NONLOCAL
_15 = global_emfloatstruct.64+256
ESCAPED = abase_43
ESCAPED = bbase_47
ESCAPED = cbase_52
ESCAPED = _15
ESCAPED = loops_86
tickcount_60 = NONLOCAL
global_min_ticks = NONLOCAL
global_min_ticks.56_16 = global_min_ticks
global_emfloatstruct.64+256 = loops_86
ESCAPED = loops_86
loops_61 = loops_86
loops_61 = &NONLOCAL
_17 = global_emfloatstruct.64+256
ESCAPED = &STRING
ESCAPED = abase_43
ESCAPED = &systemerror
ESCAPED = bbase_47
ESCAPED = &systemerror
ESCAPED = cbase_52
ESCAPED = &systemerror
accumtime_28 = &NULL
accumtime_28 = accumtime_69
iterations_29 = &NONLOCAL
iterations_29 = iterations_70
_18 = global_emfloatstruct.64+256
_19 = global_emfloatstruct.64+256
ESCAPED = abase_43
ESCAPED = bbase_47
ESCAPED = cbase_52
ESCAPED = _19
ESCAPED = _18
_68 = NONLOCAL
accumtime_69 = accumtime_28
accumtime_69 = _68
iterations_70 = iterations_29
iterations_70 = &NONLOCAL
ESCAPED = accumtime_69
_20 = NONLOCAL
_21 = global_emfloatstruct.64+256
ESCAPED = abase_43
ESCAPED = &systemerror
ESCAPED = bbase_47
ESCAPED = &systemerror
ESCAPED = cbase_52
ESCAPED = &systemerror
_22 = global_emfloatstruct.64+256
_23 = _22
_24 = _23
_24 = iterations_70
ESCAPED = accumtime_69
_25 = NONLOCAL
_26 = _24
_26 = _25
global_emfloatstruct.64+256 = _26
ESCAPED = _26
_27 = global_emfloatstruct.0+32
global_emfloatstruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 1 3 5 13 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"_1";
"global_emfloatstruct.0+32"[label="global_emfloatstruct.0+32 = { 5 }"];
"global_emfloatstruct.64+256"[label="global_emfloatstruct.64+256 = { 1 }"];
"_2"[label="_2 = { 5 }"];
"AllocateMemory";
"systemerror";
"abase_43";
"systemerror.50_3";
"ReportError";
"ErrorExit";
"_5";
"_6"[label="_6 = { 5 }"];
"bbase_47";
"systemerror.52_7";
"FreeMemory";
"_9";
"_10"[label="_10 = { 5 }"];
"cbase_52";
"systemerror.54_11";
"_13";
"SetupCPUEmFloatArrays";
"_14";
"loops_86"[label="loops_86 = { 5 }"];
"_15";
"DoEmFloatIteration";
"tickcount_60";
"global_min_ticks.56_16";
"global_min_ticks";
"_17";
"puts";
"accumtime_69"[label="accumtime_69 = { 1 }"];
"iterations_70"[label="iterations_70 = { 5 }"];
"_18";
"_19";
"_68";
"TicksToSecs";
"_20";
"_21";
"TicksToFracSecs";
"_25";
"_27";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*global_emfloatstruct.0+32";
"*AllocateMemory";
"*systemerror";
"*systemerror.50_3";
"*ReportError";
"*ErrorExit";
"*systemerror.52_7";
"*FreeMemory";
"*systemerror.54_11";
"*SetupCPUEmFloatArrays";
"*_14";
"*loops_86";
"*DoEmFloatIteration";
"*tickcount_60";
"*global_min_ticks.56_16";
"*global_min_ticks";
"*_17";
"*puts";
"*iterations_70";
"*TicksToSecs";
"*_20";
"*_21";
"*TicksToFracSecs";
"*_27";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"_2" -> "ESCAPED";
"abase_43" -> "ESCAPED";
"systemerror.50_3" -> "ESCAPED";
"_6" -> "ESCAPED";
"bbase_47" -> "ESCAPED";
"systemerror.52_7" -> "ESCAPED";
"_10" -> "ESCAPED";
"cbase_52" -> "ESCAPED";
"systemerror.54_11" -> "ESCAPED";
"_13" -> "ESCAPED";
"loops_86" -> "ESCAPED";
"_15" -> "ESCAPED";
"accumtime_69" -> "ESCAPED";
"_18" -> "ESCAPED";
"_19" -> "ESCAPED";
"global_emfloatstruct.64+256" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"global_emfloatstruct.64+256" -> "_1";
"NONLOCAL" -> "global_emfloatstruct.0+32";
"NONLOCAL" -> "global_emfloatstruct.64+256";
"global_emfloatstruct.64+256" -> "global_emfloatstruct.64+256";
"loops_86" -> "global_emfloatstruct.64+256";
"iterations_70" -> "global_emfloatstruct.64+256";
"global_emfloatstruct.64+256" -> "global_emfloatstruct.64+256";
"global_emfloatstruct.64+256" -> "global_emfloatstruct.64+256";
"global_emfloatstruct.64+256" -> "global_emfloatstruct.64+256";
"_25" -> "global_emfloatstruct.64+256";
"global_emfloatstruct.64+256" -> "global_emfloatstruct.64+256";
"_1" -> "_2";
"NONLOCAL" -> "abase_43";
"systemerror" -> "systemerror.50_3";
"global_emfloatstruct.64+256" -> "_5";
"_5" -> "_6";
"NONLOCAL" -> "bbase_47";
"systemerror" -> "systemerror.52_7";
"global_emfloatstruct.64+256" -> "_9";
"_9" -> "_10";
"NONLOCAL" -> "cbase_52";
"systemerror" -> "systemerror.54_11";
"global_emfloatstruct.64+256" -> "_13";
"global_emfloatstruct.0+32" -> "_14";
"loops_86" -> "loops_86";
"loops_86" -> "loops_86";
"global_emfloatstruct.64+256" -> "_15";
"NONLOCAL" -> "tickcount_60";
"global_min_ticks" -> "global_min_ticks.56_16";
"NONLOCAL" -> "global_min_ticks";
"global_emfloatstruct.64+256" -> "_17";
"accumtime_69" -> "accumtime_69";
"accumtime_69" -> "accumtime_69";
"_68" -> "accumtime_69";
"iterations_70" -> "iterations_70";
"iterations_70" -> "iterations_70";
"global_emfloatstruct.64+256" -> "_18";
"global_emfloatstruct.64+256" -> "_19";
"NONLOCAL" -> "_68";
"NONLOCAL" -> "_20";
"global_emfloatstruct.64+256" -> "_21";
"NONLOCAL" -> "_25";
"global_emfloatstruct.0+32" -> "_27";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"global_emfloatstruct.0+32";
"global_emfloatstruct.64+256";
"AllocateMemory";
"systemerror.50_3";
"ReportError";
"ErrorExit";
"FreeMemory";
"SetupCPUEmFloatArrays";
"loops_86";
"DoEmFloatIteration";
"puts";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.50_3";
"global_emfloatstruct.0+32" -> "ESCAPED";
"global_emfloatstruct.0+32" -> "global_emfloatstruct.64+256";
"global_emfloatstruct.64+256" -> "ESCAPED";
"systemerror.50_3" -> "ESCAPED";
"loops_86" -> "ESCAPED";
"loops_86" -> "global_emfloatstruct.64+256";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = global_emfloatstruct.0+32\l"];
"STOREDANYTHING";
"INTEGER";
"global_emfloatstruct.0+32";
"global_emfloatstruct.64+256";
"AllocateMemory";
"systemerror.50_3";
"ReportError";
"ErrorExit";
"FreeMemory";
"SetupCPUEmFloatArrays";
"loops_86";
"DoEmFloatIteration";
"puts";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.50_3";
"global_emfloatstruct.0+32" -> "ESCAPED";
"global_emfloatstruct.0+32" -> "global_emfloatstruct.64+256";
"global_emfloatstruct.0+32" -> "systemerror.50_3";
"global_emfloatstruct.64+256" -> "ESCAPED";
"systemerror.50_3" -> "ESCAPED";
"loops_86" -> "ESCAPED";
"loops_86" -> "global_emfloatstruct.64+256";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL systemerror }
NONLOCAL = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
STOREDANYTHING = { }
INTEGER = { ANYTHING }
_1 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
global_emfloatstruct.0+32 = { ESCAPED NONLOCAL }
global_emfloatstruct.64+256 = { NULL ESCAPED NONLOCAL }
_2 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.50_3
abase_43 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
systemerror.50_3 = { ESCAPED NONLOCAL }
ReportError = { }
ErrorExit = { }
_5 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
_6 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
bbase_47 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
systemerror.52_7 = { ESCAPED NONLOCAL } same as systemerror.50_3
FreeMemory = { }
_9 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
_10 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
cbase_52 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
systemerror.54_11 = { ESCAPED NONLOCAL } same as systemerror.50_3
_13 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
SetupCPUEmFloatArrays = { }
_14 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
loops_86 = { NONLOCAL }
loops_61 = { NONLOCAL } same as loops_86
_15 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
DoEmFloatIteration = { }
tickcount_60 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
global_min_ticks.56_16 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
global_min_ticks = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
_17 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
puts = { }
accumtime_28 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
accumtime_69 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
iterations_29 = { NONLOCAL } same as loops_86
iterations_70 = { NONLOCAL } same as loops_86
_18 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
_19 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
_68 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
TicksToSecs = { }
_20 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
_21 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
_22 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
_23 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
_24 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
TicksToFracSecs = { }
_25 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32
_26 = { NULL ESCAPED NONLOCAL } same as global_emfloatstruct.64+256
_27 = { ESCAPED NONLOCAL } same as global_emfloatstruct.0+32


Alias information for DoEmFloat

Aliased symbols

systemerror, UID D.5011, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.5011 } (escaped)

Flow-insensitive points-to information

abase_43, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bbase_47, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
cbase_52, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 22 3 4 23 5 6 24 7 8 9 10 11 12 26 21 25 13 27 14 15 16 20 17 28 18 19
;;
;; Loop 2
;;  header 16, latch 20
;;  depth 1, outer 0
;;  nodes: 16 20
;;
;; Loop 1
;;  header 10, latch 21
;;  depth 1, outer 0
;;  nodes: 10 21 12
;; 2 succs { 3 22 }
;; 22 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 5 23 }
;; 23 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 24 }
;; 24 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 25 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 21 26 }
;; 26 succs { 13 }
;; 21 succs { 10 }
;; 25 succs { 13 }
;; 13 succs { 14 27 }
;; 27 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 20 17 }
;; 20 succs { 16 }
;; 17 succs { 18 28 }
;; 28 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 1 }
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 27
Removing basic block 28
DoEmFloat ()
{
  long unsigned int loops;
  int systemerror;
  long unsigned int tickcount;
  double iterations;
  long unsigned int accumtime;
  struct InternalFPF * cbase;
  struct InternalFPF * bbase;
  struct InternalFPF * abase;
  long unsigned int _1;
  long unsigned int _2;
  int systemerror.50_3;
  long unsigned int _5;
  long unsigned int _6;
  int systemerror.52_7;
  long unsigned int _9;
  long unsigned int _10;
  int systemerror.54_11;
  long unsigned int _13;
  int _14;
  long unsigned int _15;
  long unsigned int global_min_ticks.56_16;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  double _23;
  double _24;
  double _25;
  double _26;
  int _27;
  long unsigned int pretmp_30;
  long unsigned int pretmp_34;
  long unsigned int _68;
  long unsigned int prephitmp_81;
  long unsigned int pretmp_82;
  long unsigned int prephitmp_83;
  long unsigned int pretmp_84;
  long unsigned int prephitmp_85;

  <bb 2> [15.00%]:
  _1 = global_emfloatstruct.arraysize;
  _2 = _1 * 12;
  abase_43 = AllocateMemory (_2, &systemerror);
  systemerror.50_3 = systemerror;
  if (systemerror.50_3 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [4.95%]:
  ReportError ("CPU:Floating Emulation", systemerror.50_3);
  ErrorExit ();

  <bb 4> [15.00%]:
  _5 = global_emfloatstruct.arraysize;
  _6 = _5 * 12;
  bbase_47 = AllocateMemory (_6, &systemerror);
  systemerror.52_7 = systemerror;
  if (systemerror.52_7 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [4.95%]:
  ReportError ("CPU:Floating Emulation", systemerror.52_7);
  FreeMemory (abase_43, &systemerror);
  ErrorExit ();

  <bb 6> [15.00%]:
  _9 = global_emfloatstruct.arraysize;
  _10 = _9 * 12;
  cbase_52 = AllocateMemory (_10, &systemerror);
  systemerror.54_11 = systemerror;
  if (systemerror.54_11 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [4.95%]:
  ReportError ("CPU:Floating Emulation", systemerror.54_11);
  FreeMemory (abase_43, &systemerror);
  FreeMemory (bbase_47, &systemerror);
  ErrorExit ();

  <bb 8> [15.00%]:
  _13 = global_emfloatstruct.arraysize;
  SetupCPUEmFloatArrays (abase_43, bbase_47, cbase_52, _13);
  _14 = global_emfloatstruct.adjust;
  if (_14 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 9> [7.50%]:
  global_emfloatstruct.loops = 0;

  <bb 10> [58.76%]:
  # loops_86 = PHI <loops_61(12), 1(9)>
  _15 = global_emfloatstruct.arraysize;
  tickcount_60 = DoEmFloatIteration (abase_43, bbase_47, cbase_52, _15, loops_86);
  global_min_ticks.56_16 = global_min_ticks;
  if (global_min_ticks.56_16 < tickcount_60)
    goto <bb 11>; [7.50%]
  else
    goto <bb 12>; [92.50%]

  <bb 11> [4.41%]:
  global_emfloatstruct.loops = loops_86;
  goto <bb 15>; [100.00%]

  <bb 12> [54.36%]:
  loops_61 = loops_86 * 2;
  if (loops_61 <= 499999)
    goto <bb 10>; [94.31%]
  else
    goto <bb 13>; [5.69%]

  <bb 13> [3.09%]:
  pretmp_84 = global_emfloatstruct.loops;
  goto <bb 15>; [100.00%]

  <bb 14> [7.50%]:
  pretmp_30 = global_emfloatstruct.loops;

  <bb 15> [15.00%]:
  # prephitmp_85 = PHI <pretmp_30(14), loops_86(11), pretmp_84(13)>
  if (prephitmp_85 == 0)
    goto <bb 16>; [33.00%]
  else
    goto <bb 17>; [67.00%]

  <bb 16> [4.95%]:
  __builtin_puts (&"CPU:EMFPU -- CMPUEMFLOATLOOPMAX limit hit"[0]);
  FreeMemory (abase_43, &systemerror);
  FreeMemory (bbase_47, &systemerror);
  FreeMemory (cbase_52, &systemerror);
  ErrorExit ();
  pretmp_34 = global_emfloatstruct.loops;

  <bb 17> [15.00%]:
  # prephitmp_83 = PHI <pretmp_34(16), prephitmp_85(15)>

  <bb 18> [100.00%]:
  # accumtime_28 = PHI <0(17), accumtime_69(19)>
  # iterations_29 = PHI <0.0(17), iterations_70(19)>
  # prephitmp_81 = PHI <prephitmp_83(17), pretmp_82(19)>
  _19 = global_emfloatstruct.arraysize;
  _68 = DoEmFloatIteration (abase_43, bbase_47, cbase_52, _19, prephitmp_81);
  accumtime_69 = accumtime_28 + _68;
  iterations_70 = iterations_29 + 1.0e+0;
  _20 = TicksToSecs (accumtime_69);
  _21 = global_emfloatstruct.request_secs;
  if (_20 < _21)
    goto <bb 19>; [85.00%]
  else
    goto <bb 20>; [15.00%]

  <bb 19> [85.00%]:
  pretmp_82 = global_emfloatstruct.loops;
  goto <bb 18>; [100.00%]

  <bb 20> [15.00%]:
  FreeMemory (abase_43, &systemerror);
  FreeMemory (bbase_47, &systemerror);
  FreeMemory (cbase_52, &systemerror);
  _22 = global_emfloatstruct.loops;
  _23 = (double) _22;
  _24 = _23 * iterations_70;
  _25 = TicksToFracSecs (accumtime_69);
  _26 = _24 / _25;
  global_emfloatstruct.emflops = _26;
  _27 = global_emfloatstruct.adjust;
  if (_27 == 0)
    goto <bb 21>; [54.00%]
  else
    goto <bb 22>; [46.00%]

  <bb 21> [8.10%]:
  global_emfloatstruct.adjust = 1;

  <bb 22> [15.00%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoFourier (DoFourier, funcdef_no=69, decl_uid=4578, cgraph_uid=69, symbol_order=94)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
global_fourierstruct.0+32 = NONLOCAL
global_fourierstruct.64+192 = NONLOCAL
_1 = global_fourierstruct.0+32
global_fourierstruct.64+192 = &NONLOCAL
ESCAPED = &NONLOCAL
_2 = global_fourierstruct.64+192
_3 = _2
_3 = &NONLOCAL
ESCAPED = _3
ESCAPED = &systemerror
abase_54 = NONLOCAL
systemerror.57_4 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.57_4
_5 = global_fourierstruct.64+192
_6 = _5
_6 = &NONLOCAL
ESCAPED = _6
ESCAPED = &systemerror
bbase_58 = NONLOCAL
systemerror.59_7 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.59_7
ESCAPED = abase_54
ESCAPED = &systemerror
_8 = global_fourierstruct.64+192
ESCAPED = abase_54
ESCAPED = bbase_58
ESCAPED = _8
_9 = NONLOCAL
global_min_ticks = NONLOCAL
global_min_ticks.61_10 = global_min_ticks
ESCAPED = abase_54
ESCAPED = &systemerror
ESCAPED = bbase_58
ESCAPED = &systemerror
_11 = global_fourierstruct.64+192
_12 = _11
_12 = &NONLOCAL
global_fourierstruct.64+192 = _12
ESCAPED = _12
_13 = global_fourierstruct.64+192
_14 = _13
_14 = &NONLOCAL
ESCAPED = _14
ESCAPED = &systemerror
abase_44 = NONLOCAL
systemerror.62_15 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.62_15
_17 = global_fourierstruct.64+192
_18 = _17
_18 = &NONLOCAL
ESCAPED = _18
ESCAPED = &systemerror
bbase_48 = NONLOCAL
systemerror.64_19 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.64_19
ESCAPED = abase_44
ESCAPED = &systemerror
abase_31 = abase_54
abase_31 = abase_44
abase_31 = abase_44
bbase_32 = bbase_58
bbase_32 = bbase_48
bbase_32 = bbase_48
accumtime_33 = &NULL
accumtime_33 = accumtime_68
iterations_34 = &NONLOCAL
iterations_34 = iterations_69
_21 = global_fourierstruct.64+192
ESCAPED = abase_31
ESCAPED = bbase_32
ESCAPED = _21
_67 = NONLOCAL
accumtime_68 = accumtime_33
accumtime_68 = _67
_22 = global_fourierstruct.64+192
_23 = _22
_24 = _23
_24 = &NONLOCAL
_25 = _24
_25 = &NONLOCAL
iterations_69 = _25
iterations_69 = iterations_34
ESCAPED = accumtime_68
_26 = NONLOCAL
_27 = global_fourierstruct.64+192
ESCAPED = abase_31
ESCAPED = &systemerror
ESCAPED = bbase_32
ESCAPED = &systemerror
ESCAPED = accumtime_68
_28 = NONLOCAL
_29 = iterations_69
_29 = _28
global_fourierstruct.64+192 = _29
ESCAPED = _29
_30 = global_fourierstruct.0+32
global_fourierstruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 5 14 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"_1";
"global_fourierstruct.0+32"[label="global_fourierstruct.0+32 = { 5 }"];
"global_fourierstruct.64+192"[label="global_fourierstruct.64+192 = { 5 }"];
"_2";
"_3"[label="_3 = { 5 }"];
"AllocateMemory";
"systemerror";
"abase_54";
"systemerror.57_4";
"ReportError";
"ErrorExit";
"_5";
"_6"[label="_6 = { 5 }"];
"bbase_58";
"systemerror.59_7";
"FreeMemory";
"_8";
"DoFPUTransIteration";
"_9";
"global_min_ticks.61_10";
"global_min_ticks";
"_13";
"_14"[label="_14 = { 5 }"];
"abase_44";
"systemerror.62_15";
"_17";
"_18"[label="_18 = { 5 }"];
"bbase_48";
"systemerror.64_19";
"abase_31";
"bbase_32";
"accumtime_68"[label="accumtime_68 = { 1 }"];
"_21";
"_67";
"TicksToSecs";
"_26";
"_27";
"TicksToFracSecs";
"_28";
"_30";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*_1";
"*global_fourierstruct.0+32";
"*AllocateMemory";
"*systemerror";
"*systemerror.57_4";
"*ReportError";
"*ErrorExit";
"*systemerror.59_7";
"*FreeMemory";
"*DoFPUTransIteration";
"*_9";
"*global_min_ticks.61_10";
"*global_min_ticks";
"*systemerror.62_15";
"*systemerror.64_19";
"*TicksToSecs";
"*_26";
"*_27";
"*TicksToFracSecs";
"*_30";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"_3" -> "ESCAPED";
"abase_54" -> "ESCAPED";
"systemerror.57_4" -> "ESCAPED";
"_6" -> "ESCAPED";
"bbase_58" -> "ESCAPED";
"systemerror.59_7" -> "ESCAPED";
"_8" -> "ESCAPED";
"global_fourierstruct.64+192" -> "ESCAPED";
"_14" -> "ESCAPED";
"abase_44" -> "ESCAPED";
"systemerror.62_15" -> "ESCAPED";
"_18" -> "ESCAPED";
"systemerror.64_19" -> "ESCAPED";
"abase_31" -> "ESCAPED";
"bbase_32" -> "ESCAPED";
"accumtime_68" -> "ESCAPED";
"_21" -> "ESCAPED";
"global_fourierstruct.64+192" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"global_fourierstruct.0+32" -> "_1";
"NONLOCAL" -> "global_fourierstruct.0+32";
"NONLOCAL" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"_28" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "global_fourierstruct.64+192";
"global_fourierstruct.64+192" -> "_2";
"_2" -> "_3";
"NONLOCAL" -> "abase_54";
"systemerror" -> "systemerror.57_4";
"global_fourierstruct.64+192" -> "_5";
"_5" -> "_6";
"NONLOCAL" -> "bbase_58";
"systemerror" -> "systemerror.59_7";
"global_fourierstruct.64+192" -> "_8";
"NONLOCAL" -> "_9";
"global_min_ticks" -> "global_min_ticks.61_10";
"NONLOCAL" -> "global_min_ticks";
"global_fourierstruct.64+192" -> "_13";
"_13" -> "_14";
"NONLOCAL" -> "abase_44";
"systemerror" -> "systemerror.62_15";
"global_fourierstruct.64+192" -> "_17";
"_17" -> "_18";
"NONLOCAL" -> "bbase_48";
"systemerror" -> "systemerror.64_19";
"abase_54" -> "abase_31";
"abase_44" -> "abase_31";
"bbase_58" -> "bbase_32";
"bbase_48" -> "bbase_32";
"accumtime_68" -> "accumtime_68";
"accumtime_68" -> "accumtime_68";
"_67" -> "accumtime_68";
"global_fourierstruct.64+192" -> "_21";
"NONLOCAL" -> "_67";
"NONLOCAL" -> "_26";
"global_fourierstruct.64+192" -> "_27";
"NONLOCAL" -> "_28";
"global_fourierstruct.0+32" -> "_30";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"global_fourierstruct.0+32";
"AllocateMemory";
"systemerror.57_4";
"ReportError";
"ErrorExit";
"FreeMemory";
"DoFPUTransIteration";
"accumtime_33";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.57_4";
"global_fourierstruct.0+32" -> "ESCAPED";
"global_fourierstruct.0+32" -> "accumtime_33";
"systemerror.57_4" -> "ESCAPED";
"accumtime_33" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = global_fourierstruct.0+32\l"];
"STOREDANYTHING";
"INTEGER";
"global_fourierstruct.0+32";
"AllocateMemory";
"systemerror.57_4";
"ReportError";
"ErrorExit";
"FreeMemory";
"DoFPUTransIteration";
"accumtime_33";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.57_4";
"global_fourierstruct.0+32" -> "ESCAPED";
"global_fourierstruct.0+32" -> "systemerror.57_4";
"global_fourierstruct.0+32" -> "accumtime_33";
"systemerror.57_4" -> "ESCAPED";
"accumtime_33" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL systemerror }
NONLOCAL = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
STOREDANYTHING = { }
INTEGER = { ANYTHING }
_1 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
global_fourierstruct.0+32 = { ESCAPED NONLOCAL }
global_fourierstruct.64+192 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_2 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_3 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.57_4
abase_54 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
systemerror.57_4 = { ESCAPED NONLOCAL }
ReportError = { }
ErrorExit = { }
_5 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_6 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
bbase_58 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
systemerror.59_7 = { ESCAPED NONLOCAL } same as systemerror.57_4
FreeMemory = { }
_8 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
DoFPUTransIteration = { }
_9 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
global_min_ticks.61_10 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
global_min_ticks = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_11 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_12 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_13 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_14 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
abase_44 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
systemerror.62_15 = { ESCAPED NONLOCAL } same as systemerror.57_4
_17 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_18 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
bbase_48 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
systemerror.64_19 = { ESCAPED NONLOCAL } same as systemerror.57_4
abase_31 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
bbase_32 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
accumtime_33 = { NULL ESCAPED NONLOCAL }
accumtime_68 = { NULL ESCAPED NONLOCAL } same as accumtime_33
iterations_34 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
iterations_69 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_21 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_67 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_22 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_23 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_24 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_25 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
TicksToSecs = { }
_26 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_27 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
TicksToFracSecs = { }
_28 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_29 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32
_30 = { ESCAPED NONLOCAL } same as global_fourierstruct.0+32


Alias information for DoFourier

Aliased symbols

systemerror, UID D.5027, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.5027 } (escaped)

Flow-insensitive points-to information

abase_31, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bbase_32, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
abase_44, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bbase_48, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
abase_54, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bbase_58, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 20 5 6 21 7 8 22 9 10 23 11 12 24 13 14 15 19 16 25 17 18
;;
;; Loop 2
;;  header 15, latch 19
;;  depth 1, outer 0
;;  nodes: 15 19
;;
;; Loop 1
;;  header 4, latch 9
;;  depth 1, outer 0
;;  nodes: 4 9 8 21 7 6 20 5
;; 2 succs { 3 10 }
;; 3 succs { 4 }
;; 4 succs { 5 20 }
;; 20 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 21 }
;; 21 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 22 9 }
;; 22 succs { 14 }
;; 9 succs { 4 }
;; 10 succs { 11 23 }
;; 23 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 24 }
;; 24 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 19 16 }
;; 19 succs { 15 }
;; 16 succs { 17 25 }
;; 25 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 1 }
Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
DoFourier ()
{
  int systemerror;
  double iterations;
  long unsigned int accumtime;
  fardouble * bbase;
  fardouble * abase;
  int _1;
  long unsigned int _3;
  int systemerror.57_4;
  long unsigned int _5;
  long unsigned int _6;
  int systemerror.59_7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int global_min_ticks.61_10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  int systemerror.62_15;
  long unsigned int _17;
  long unsigned int _18;
  int systemerror.64_19;
  long unsigned int _21;
  long unsigned int _22;
  double _23;
  double _24;
  double _25;
  long unsigned int _26;
  long unsigned int _27;
  double _28;
  double _29;
  int _30;
  long unsigned int _67;
  long unsigned int prephitmp_78;

  <bb 2> [15.00%]:
  _1 = global_fourierstruct.adjust;
  if (_1 == 0)
    goto <bb 3>; [67.00%]
  else
    goto <bb 10>; [33.00%]

  <bb 3> [10.05%]:
  global_fourierstruct.arraysize = 100;

  <bb 4> [67.00%]:
  # prephitmp_78 = PHI <100(3), _12(9)>
  _3 = prephitmp_78 * 8;
  abase_54 = AllocateMemory (_3, &systemerror);
  systemerror.57_4 = systemerror;
  if (systemerror.57_4 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [22.11%]:
  ReportError ("FPU:Transcendental", systemerror.57_4);
  ErrorExit ();

  <bb 6> [67.00%]:
  _5 = global_fourierstruct.arraysize;
  _6 = _5 * 8;
  bbase_58 = AllocateMemory (_6, &systemerror);
  systemerror.59_7 = systemerror;
  if (systemerror.59_7 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [22.11%]:
  ReportError ("FPU:Transcendental", systemerror.59_7);
  FreeMemory (abase_54, &systemerror);
  ErrorExit ();

  <bb 8> [67.00%]:
  _8 = global_fourierstruct.arraysize;
  _9 = DoFPUTransIteration (abase_54, bbase_58, _8);
  global_min_ticks.61_10 = global_min_ticks;
  if (_9 > global_min_ticks.61_10)
    goto <bb 14>; [15.00%]
  else
    goto <bb 9>; [85.00%]

  <bb 9> [56.95%]:
  FreeMemory (abase_54, &systemerror);
  FreeMemory (bbase_58, &systemerror);
  _11 = global_fourierstruct.arraysize;
  _12 = _11 + 50;
  global_fourierstruct.arraysize = _12;
  goto <bb 4>; [100.00%]

  <bb 10> [4.95%]:
  _13 = global_fourierstruct.arraysize;
  _14 = _13 * 8;
  abase_44 = AllocateMemory (_14, &systemerror);
  systemerror.62_15 = systemerror;
  if (systemerror.62_15 != 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 12>; [67.00%]

  <bb 11> [1.63%]:
  ReportError ("FPU:Transcendental", systemerror.62_15);
  ErrorExit ();

  <bb 12> [4.95%]:
  _17 = global_fourierstruct.arraysize;
  _18 = _17 * 8;
  bbase_48 = AllocateMemory (_18, &systemerror);
  systemerror.64_19 = systemerror;
  if (systemerror.64_19 != 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 13> [1.63%]:
  ReportError ("FPU:Transcendental", systemerror.64_19);
  FreeMemory (abase_44, &systemerror);
  ErrorExit ();

  <bb 14> [15.00%]:
  # abase_31 = PHI <abase_54(8), abase_44(12), abase_44(13)>
  # bbase_32 = PHI <bbase_58(8), bbase_48(12), bbase_48(13)>

  <bb 15> [100.00%]:
  # accumtime_33 = PHI <0(14), accumtime_68(15)>
  # iterations_34 = PHI <0.0(14), iterations_69(15)>
  _21 = global_fourierstruct.arraysize;
  _67 = DoFPUTransIteration (abase_31, bbase_32, _21);
  accumtime_68 = accumtime_33 + _67;
  _22 = global_fourierstruct.arraysize;
  _23 = (double) _22;
  _24 = _23 * 2.0e+0;
  _25 = _24 - 1.0e+0;
  iterations_69 = _25 + iterations_34;
  _26 = TicksToSecs (accumtime_68);
  _27 = global_fourierstruct.request_secs;
  if (_26 < _27)
    goto <bb 15>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 16> [15.00%]:
  FreeMemory (abase_31, &systemerror);
  FreeMemory (bbase_32, &systemerror);
  _28 = TicksToFracSecs (accumtime_68);
  _29 = iterations_69 / _28;
  global_fourierstruct.fflops = _29;
  _30 = global_fourierstruct.adjust;
  if (_30 == 0)
    goto <bb 17>; [54.00%]
  else
    goto <bb 18>; [46.00%]

  <bb 17> [8.10%]:
  global_fourierstruct.adjust = 1;

  <bb 18> [15.00%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoAssign (DoAssign, funcdef_no=73, decl_uid=4600, cgraph_uid=73, symbol_order=98)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
global_assignstruct.0+32 = NONLOCAL
global_assignstruct.64+192 = NONLOCAL
_1 = global_assignstruct.0+32
global_assignstruct.64+192 = &NONLOCAL
ESCAPED = &NONLOCAL
_2 = global_assignstruct.64+192
_3 = _2
_3 = &NONLOCAL
ESCAPED = _3
ESCAPED = &systemerror
arraybase_40 = NONLOCAL
systemerror.66_4 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.66_4
ESCAPED = arraybase_40
ESCAPED = &systemerror
_6 = global_assignstruct.64+192
ESCAPED = &NONLOCAL
j_188 = j_85
j_188 = &NULL
ESCAPED = &NONLOCAL
_77 = NONLOCAL
_83 = j_188
_84 = _77
*_81 + UNKNOWN = _84
j_85 = j_188
j_85 = &NONLOCAL
i_86 = i_187
i_86 = &NONLOCAL
i_187 = i_86
i_187 = &NULL
_79 = i_187
_80 = _79
_80 = &NONLOCAL
_81 = arraybase_40 + UNKNOWN
abase1$ptrs$p_183 = _64
abase1$ptrs$p_183 = arraybase_40
i_186 = i_76
i_186 = &NONLOCAL
_64 = abase1$ptrs$p_183 + 652864
j_185 = j_73
j_185 = &NULL
_70 = j_185
_72 = *_68 + UNKNOWN
*_71 + UNKNOWN = _72
j_73 = j_185
j_73 = &NONLOCAL
i_74 = i_184
i_74 = &NONLOCAL
i_184 = i_74
i_184 = &NULL
_66 = i_184
_67 = _66
_67 = &NONLOCAL
_68 = arraybase_40 + UNKNOWN
_71 = _64 + UNKNOWN
i_76 = i_186
i_76 = &NONLOCAL
elapsed_57 = NONLOCAL
abase$ptrs$p_93 = _59
abase$ptrs$p_93 = arraybase_40
i_105 = i_61
i_105 = &NULL
ESCAPED = abase$ptrs$p_93
_59 = abase$ptrs$p_93 + 652864
i_61 = i_105
i_61 = &NONLOCAL
ESCAPED = elapsed_57
_62 = NONLOCAL
global_min_ticks = NONLOCAL
global_min_ticks.68_8 = global_min_ticks
ESCAPED = arraybase_40
ESCAPED = &systemerror
_9 = global_assignstruct.64+192
_10 = _9
_10 = &NONLOCAL
global_assignstruct.64+192 = _10
ESCAPED = _10
_11 = global_assignstruct.64+192
_12 = _11
_12 = &NONLOCAL
ESCAPED = _12
ESCAPED = &systemerror
arraybase_34 = NONLOCAL
systemerror.69_13 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.69_13
ESCAPED = arraybase_34
ESCAPED = &systemerror
arraybase_24 = arraybase_40
arraybase_24 = arraybase_34
arraybase_24 = arraybase_34
accumtime_25 = &NULL
accumtime_25 = accumtime_49
iterations_26 = &NONLOCAL
iterations_26 = iterations_50
_15 = global_assignstruct.64+192
ESCAPED = &NONLOCAL
j_194 = j_115
j_194 = &NULL
ESCAPED = &NONLOCAL
_107 = NONLOCAL
_113 = j_194
_114 = _107
*_111 + UNKNOWN = _114
j_115 = j_194
j_115 = &NONLOCAL
i_116 = i_193
i_116 = &NONLOCAL
i_193 = i_116
i_193 = &NULL
_109 = i_193
_110 = _109
_110 = &NONLOCAL
_111 = arraybase_24 + UNKNOWN
abase1$ptrs$p_189 = _94
abase1$ptrs$p_189 = arraybase_24
i_192 = i_106
i_192 = &NONLOCAL
_94 = abase1$ptrs$p_189 + 652864
j_191 = j_103
j_191 = &NULL
_100 = j_191
_102 = *_98 + UNKNOWN
*_101 + UNKNOWN = _102
j_103 = j_191
j_103 = &NONLOCAL
i_104 = i_190
i_104 = &NONLOCAL
i_190 = i_104
i_190 = &NULL
_96 = i_190
_97 = _96
_97 = &NONLOCAL
_98 = arraybase_24 + UNKNOWN
_101 = _94 + UNKNOWN
i_106 = i_192
i_106 = &NONLOCAL
elapsed_87 = NONLOCAL
abase$ptrs$p_161 = _89
abase$ptrs$p_161 = arraybase_24
i_95 = i_91
i_95 = &NULL
ESCAPED = abase$ptrs$p_161
_89 = abase$ptrs$p_161 + 652864
i_91 = i_95
i_91 = &NONLOCAL
ESCAPED = elapsed_87
_92 = NONLOCAL
accumtime_49 = accumtime_25
accumtime_49 = _92
iterations_50 = iterations_26
iterations_50 = &NONLOCAL
ESCAPED = accumtime_49
_16 = NONLOCAL
_17 = global_assignstruct.64+192
ESCAPED = arraybase_24
ESCAPED = &systemerror
_18 = global_assignstruct.64+192
_19 = _18
_20 = _19
_20 = iterations_50
ESCAPED = accumtime_49
_21 = NONLOCAL
_22 = _20
_22 = _21
global_assignstruct.64+192 = _22
ESCAPED = _22
_23 = global_assignstruct.0+32
global_assignstruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 5 14 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"_1";
"global_assignstruct.0+32"[label="global_assignstruct.0+32 = { 5 }"];
"global_assignstruct.64+192"[label="global_assignstruct.64+192 = { 5 }"];
"_2";
"_3"[label="_3 = { 5 }"];
"AllocateMemory";
"systemerror";
"arraybase_40";
"systemerror.66_4";
"ReportError";
"FreeMemory";
"ErrorExit";
"_6";
"randnum";
"j_188"[label="j_188 = { 1 5 }"];
"abs_randwc";
"_77";
"_83";
"_84";
"_81";
"i_86"[label="i_86 = { 1 5 }"];
"_79";
"_80"[label="_80 = { 5 }"];
"abase1$ptrs$p_183";
"_64";
"i_186"[label="i_186 = { 5 }"];
"j_185"[label="j_185 = { 1 5 }"];
"_70";
"_72";
"_68";
"_71";
"i_74"[label="i_74 = { 1 5 }"];
"_66";
"_67"[label="_67 = { 5 }"];
"StartStopwatch";
"elapsed_57";
"abase$ptrs$p_93";
"_59";
"i_105"[label="i_105 = { 1 5 }"];
"Assignment";
"StopStopwatch";
"_62";
"global_min_ticks.68_8";
"global_min_ticks";
"_11";
"_12"[label="_12 = { 5 }"];
"arraybase_34";
"systemerror.69_13";
"arraybase_24";
"accumtime_49"[label="accumtime_49 = { 1 }"];
"iterations_50"[label="iterations_50 = { 5 }"];
"_15";
"j_194"[label="j_194 = { 1 5 }"];
"_107";
"_113";
"_114";
"_111";
"i_116"[label="i_116 = { 1 5 }"];
"_109";
"_110"[label="_110 = { 5 }"];
"abase1$ptrs$p_189";
"_94";
"i_192"[label="i_192 = { 5 }"];
"j_191"[label="j_191 = { 1 5 }"];
"_100";
"_102";
"_98";
"_101";
"i_104"[label="i_104 = { 1 5 }"];
"_96";
"_97"[label="_97 = { 5 }"];
"elapsed_87";
"abase$ptrs$p_161";
"_89";
"i_95"[label="i_95 = { 1 5 }"];
"_92";
"TicksToSecs";
"_16";
"_17";
"TicksToFracSecs";
"_21";
"_23";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*_1";
"*global_assignstruct.0+32";
"*AllocateMemory";
"*systemerror";
"*systemerror.66_4";
"*ReportError";
"*FreeMemory";
"*ErrorExit";
"*_6";
"*randnum";
"*j_188";
"*j_85";
"*abs_randwc";
"*_77";
"*_83";
"*_84";
"*_81";
"*i_86";
"*i_187";
"*_79";
"*_80";
"*abase1$ptrs$p_183";
"*_64";
"*i_186";
"*i_76";
"*j_185";
"*j_73";
"*_70";
"*_72";
"*_68";
"*_71";
"*i_74";
"*i_184";
"*_66";
"*_67";
"*StartStopwatch";
"*_59";
"*i_105";
"*i_61";
"*Assignment";
"*StopStopwatch";
"*_62";
"*global_min_ticks.68_8";
"*global_min_ticks";
"*systemerror.69_13";
"*iterations_50";
"*_15";
"*j_194";
"*j_115";
"*_107";
"*_113";
"*_114";
"*_111";
"*i_116";
"*i_193";
"*_109";
"*_110";
"*abase1$ptrs$p_189";
"*_94";
"*i_192";
"*i_106";
"*j_191";
"*j_103";
"*_100";
"*_102";
"*_98";
"*_101";
"*i_104";
"*i_190";
"*_96";
"*_97";
"*_89";
"*i_95";
"*i_91";
"*TicksToSecs";
"*_16";
"*_17";
"*TicksToFracSecs";
"*_23";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"_3" -> "ESCAPED";
"arraybase_40" -> "ESCAPED";
"systemerror.66_4" -> "ESCAPED";
"elapsed_57" -> "ESCAPED";
"abase$ptrs$p_93" -> "ESCAPED";
"global_assignstruct.64+192" -> "ESCAPED";
"_12" -> "ESCAPED";
"arraybase_34" -> "ESCAPED";
"systemerror.69_13" -> "ESCAPED";
"arraybase_24" -> "ESCAPED";
"accumtime_49" -> "ESCAPED";
"elapsed_87" -> "ESCAPED";
"abase$ptrs$p_161" -> "ESCAPED";
"global_assignstruct.64+192" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"global_assignstruct.0+32" -> "_1";
"NONLOCAL" -> "global_assignstruct.0+32";
"NONLOCAL" -> "global_assignstruct.64+192";
"global_assignstruct.64+192" -> "global_assignstruct.64+192";
"global_assignstruct.64+192" -> "global_assignstruct.64+192";
"global_assignstruct.64+192" -> "global_assignstruct.64+192";
"iterations_50" -> "global_assignstruct.64+192";
"global_assignstruct.64+192" -> "global_assignstruct.64+192";
"global_assignstruct.64+192" -> "global_assignstruct.64+192";
"global_assignstruct.64+192" -> "global_assignstruct.64+192";
"_21" -> "global_assignstruct.64+192";
"global_assignstruct.64+192" -> "global_assignstruct.64+192";
"global_assignstruct.64+192" -> "_2";
"_2" -> "_3";
"NONLOCAL" -> "arraybase_40";
"systemerror" -> "systemerror.66_4";
"global_assignstruct.64+192" -> "_6";
"j_188" -> "j_188";
"j_188" -> "j_188";
"NONLOCAL" -> "_77";
"j_188" -> "_83";
"_77" -> "_84";
"i_86" -> "i_86";
"i_86" -> "i_86";
"i_86" -> "_79";
"_79" -> "_80";
"arraybase_40" -> "abase1$ptrs$p_183";
"_64" -> "abase1$ptrs$p_183";
"i_186" -> "i_186";
"i_186" -> "i_186";
"j_185" -> "j_185";
"j_185" -> "j_185";
"j_185" -> "_70";
"i_74" -> "i_74";
"i_74" -> "i_74";
"i_74" -> "_66";
"_66" -> "_67";
"NONLOCAL" -> "elapsed_57";
"arraybase_40" -> "abase$ptrs$p_93";
"_59" -> "abase$ptrs$p_93";
"i_105" -> "i_105";
"i_105" -> "i_105";
"NONLOCAL" -> "_62";
"global_min_ticks" -> "global_min_ticks.68_8";
"NONLOCAL" -> "global_min_ticks";
"global_assignstruct.64+192" -> "_11";
"_11" -> "_12";
"NONLOCAL" -> "arraybase_34";
"systemerror" -> "systemerror.69_13";
"arraybase_40" -> "arraybase_24";
"arraybase_34" -> "arraybase_24";
"accumtime_49" -> "accumtime_49";
"accumtime_49" -> "accumtime_49";
"_92" -> "accumtime_49";
"iterations_50" -> "iterations_50";
"iterations_50" -> "iterations_50";
"global_assignstruct.64+192" -> "_15";
"j_194" -> "j_194";
"j_194" -> "j_194";
"NONLOCAL" -> "_107";
"j_194" -> "_113";
"_107" -> "_114";
"i_116" -> "i_116";
"i_116" -> "i_116";
"i_116" -> "_109";
"_109" -> "_110";
"arraybase_24" -> "abase1$ptrs$p_189";
"_94" -> "abase1$ptrs$p_189";
"i_192" -> "i_192";
"i_192" -> "i_192";
"j_191" -> "j_191";
"j_191" -> "j_191";
"j_191" -> "_100";
"i_104" -> "i_104";
"i_104" -> "i_104";
"i_104" -> "_96";
"_96" -> "_97";
"NONLOCAL" -> "elapsed_87";
"arraybase_24" -> "abase$ptrs$p_161";
"_89" -> "abase$ptrs$p_161";
"i_95" -> "i_95";
"i_95" -> "i_95";
"NONLOCAL" -> "_92";
"NONLOCAL" -> "_16";
"global_assignstruct.64+192" -> "_17";
"NONLOCAL" -> "_21";
"global_assignstruct.0+32" -> "_23";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"global_assignstruct.0+32" [label="\N\n_81 = global_assignstruct.0+32 + UNKNOWN\l_68 = global_assignstruct.0+32 + UNKNOWN\l_111 = global_assignstruct.0+32 + UNKNOWN\l_98 = global_assignstruct.0+32 + UNKNOWN\l"];
"AllocateMemory";
"systemerror.66_4";
"ReportError";
"FreeMemory";
"ErrorExit";
"randnum";
"j_188";
"abs_randwc";
"_81" [label="\N\n*_81 + UNKNOWN = global_assignstruct.0+32\l"];
"abase1$ptrs$p_183" [label="\N\n_64 = abase1$ptrs$p_183 + 652864\l"];
"_64" [label="\N\n_71 = _64 + UNKNOWN\l"];
"i_186";
"_72";
"_68" [label="\N\n_72 = *_68 + UNKNOWN\l"];
"_71" [label="\N\n*_71 + UNKNOWN = _72\l"];
"StartStopwatch";
"abase$ptrs$p_93" [label="\N\n_59 = abase$ptrs$p_93 + 652864\l"];
"_59";
"Assignment";
"StopStopwatch";
"accumtime_25";
"_111" [label="\N\n*_111 + UNKNOWN = global_assignstruct.0+32\l"];
"abase1$ptrs$p_189" [label="\N\n_94 = abase1$ptrs$p_189 + 652864\l"];
"_94" [label="\N\n_101 = _94 + UNKNOWN\l"];
"_102";
"_98" [label="\N\n_102 = *_98 + UNKNOWN\l"];
"_101" [label="\N\n*_101 + UNKNOWN = _102\l"];
"abase$ptrs$p_161" [label="\N\n_89 = abase$ptrs$p_161 + 652864\l"];
"_89";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.66_4";
"STOREDANYTHING" -> "_81";
"STOREDANYTHING" -> "_64";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "_68";
"STOREDANYTHING" -> "_71";
"STOREDANYTHING" -> "_59";
"STOREDANYTHING" -> "_111";
"STOREDANYTHING" -> "_94";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_98";
"STOREDANYTHING" -> "_101";
"STOREDANYTHING" -> "_89";
"global_assignstruct.0+32" -> "ESCAPED";
"global_assignstruct.0+32" -> "abase1$ptrs$p_183";
"global_assignstruct.0+32" -> "abase$ptrs$p_93";
"global_assignstruct.0+32" -> "accumtime_25";
"global_assignstruct.0+32" -> "abase1$ptrs$p_189";
"global_assignstruct.0+32" -> "abase$ptrs$p_161";
"systemerror.66_4" -> "ESCAPED";
"_64" -> "abase1$ptrs$p_183";
"i_186" -> "global_assignstruct.0+32";
"abase$ptrs$p_93" -> "ESCAPED";
"_59" -> "abase$ptrs$p_93";
"accumtime_25" -> "ESCAPED";
"_94" -> "abase1$ptrs$p_189";
"abase$ptrs$p_161" -> "ESCAPED";
"_89" -> "abase$ptrs$p_161";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = global_assignstruct.0+32\l"];
"STOREDANYTHING";
"INTEGER";
"global_assignstruct.0+32" [label="\N\n_81 = global_assignstruct.0+32 + UNKNOWN\l_68 = global_assignstruct.0+32 + UNKNOWN\l_111 = global_assignstruct.0+32 + UNKNOWN\l_98 = global_assignstruct.0+32 + UNKNOWN\l"];
"AllocateMemory";
"systemerror.66_4";
"ReportError";
"FreeMemory";
"ErrorExit";
"randnum";
"j_188";
"abs_randwc";
"_81" [label="\N\n*_81 + UNKNOWN = global_assignstruct.0+32\l"];
"abase1$ptrs$p_183" [label="\N\n_64 = abase1$ptrs$p_183 + 652864\l"];
"_64" [label="\N\n_71 = _64 + UNKNOWN\l"];
"i_186";
"_72";
"_68" [label="\N\n_72 = *_68 + UNKNOWN\l"];
"_71" [label="\N\n*_71 + UNKNOWN = _72\l"];
"StartStopwatch";
"abase$ptrs$p_93" [label="\N\n_59 = abase$ptrs$p_93 + 652864\l"];
"_59";
"Assignment";
"StopStopwatch";
"accumtime_25";
"_111" [label="\N\n*_111 + UNKNOWN = global_assignstruct.0+32\l"];
"abase1$ptrs$p_189" [label="\N\n_94 = abase1$ptrs$p_189 + 652864\l"];
"_94" [label="\N\n_101 = _94 + UNKNOWN\l"];
"_102";
"_98" [label="\N\n_102 = *_98 + UNKNOWN\l"];
"_101" [label="\N\n*_101 + UNKNOWN = _102\l"];
"abase$ptrs$p_161" [label="\N\n_89 = abase$ptrs$p_161 + 652864\l"];
"_89";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.66_4";
"STOREDANYTHING" -> "_81";
"STOREDANYTHING" -> "_64";
"STOREDANYTHING" -> "_72";
"STOREDANYTHING" -> "_68";
"STOREDANYTHING" -> "_71";
"STOREDANYTHING" -> "_59";
"STOREDANYTHING" -> "_111";
"STOREDANYTHING" -> "_94";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_98";
"STOREDANYTHING" -> "_101";
"STOREDANYTHING" -> "_89";
"global_assignstruct.0+32" -> "ESCAPED";
"global_assignstruct.0+32" -> "systemerror.66_4";
"global_assignstruct.0+32" -> "abase1$ptrs$p_183";
"global_assignstruct.0+32" -> "_72";
"global_assignstruct.0+32" -> "abase$ptrs$p_93";
"global_assignstruct.0+32" -> "accumtime_25";
"global_assignstruct.0+32" -> "abase1$ptrs$p_189";
"global_assignstruct.0+32" -> "_102";
"global_assignstruct.0+32" -> "abase$ptrs$p_161";
"systemerror.66_4" -> "ESCAPED";
"_64" -> "abase1$ptrs$p_183";
"i_186" -> "global_assignstruct.0+32";
"_72" -> "ESCAPED";
"abase$ptrs$p_93" -> "ESCAPED";
"_59" -> "abase$ptrs$p_93";
"accumtime_25" -> "ESCAPED";
"_94" -> "abase1$ptrs$p_189";
"_102" -> "ESCAPED";
"abase$ptrs$p_161" -> "ESCAPED";
"_89" -> "abase$ptrs$p_161";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL systemerror }
NONLOCAL = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
STOREDANYTHING = { }
INTEGER = { ANYTHING }
_1 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
global_assignstruct.0+32 = { ESCAPED NONLOCAL }
global_assignstruct.64+192 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_2 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_3 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.66_4
arraybase_40 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
systemerror.66_4 = { ESCAPED NONLOCAL }
ReportError = { }
FreeMemory = { }
ErrorExit = { }
_6 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
randnum = { }
j_188 = { NULL NONLOCAL }
j_85 = { NULL NONLOCAL } same as j_188
abs_randwc = { }
_77 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_83 = { NULL NONLOCAL } same as j_188
_84 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_81 = { ESCAPED NONLOCAL }
i_86 = { NULL NONLOCAL } same as j_188
i_187 = { NULL NONLOCAL } same as j_188
_79 = { NULL NONLOCAL } same as j_188
_80 = { NULL NONLOCAL } same as j_188
abase1$ptrs$p_183 = { ESCAPED NONLOCAL }
_64 = { ESCAPED NONLOCAL }
i_186 = { NONLOCAL }
i_76 = { NONLOCAL } same as i_186
j_185 = { NULL NONLOCAL } same as j_188
j_73 = { NULL NONLOCAL } same as j_188
_70 = { NULL NONLOCAL } same as j_188
_72 = { ESCAPED NONLOCAL }
_68 = { ESCAPED NONLOCAL }
_71 = { ESCAPED NONLOCAL }
i_74 = { NULL NONLOCAL } same as j_188
i_184 = { NULL NONLOCAL } same as j_188
_66 = { NULL NONLOCAL } same as j_188
_67 = { NULL NONLOCAL } same as j_188
StartStopwatch = { }
elapsed_57 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
abase$ptrs$p_93 = { ESCAPED NONLOCAL }
_59 = { ESCAPED NONLOCAL }
i_105 = { NULL NONLOCAL } same as j_188
i_61 = { NULL NONLOCAL } same as j_188
Assignment = { }
StopStopwatch = { }
_62 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
global_min_ticks.68_8 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
global_min_ticks = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_9 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_10 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_11 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_12 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
arraybase_34 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
systemerror.69_13 = { ESCAPED NONLOCAL } same as systemerror.66_4
arraybase_24 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
accumtime_25 = { NULL ESCAPED NONLOCAL }
accumtime_49 = { NULL ESCAPED NONLOCAL } same as accumtime_25
iterations_26 = { NONLOCAL } same as i_186
iterations_50 = { NONLOCAL } same as i_186
_15 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
j_194 = { NULL NONLOCAL } same as j_188
j_115 = { NULL NONLOCAL } same as j_188
_107 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_113 = { NULL NONLOCAL } same as j_188
_114 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_111 = { ESCAPED NONLOCAL }
i_116 = { NULL NONLOCAL } same as j_188
i_193 = { NULL NONLOCAL } same as j_188
_109 = { NULL NONLOCAL } same as j_188
_110 = { NULL NONLOCAL } same as j_188
abase1$ptrs$p_189 = { ESCAPED NONLOCAL }
_94 = { ESCAPED NONLOCAL }
i_192 = { NONLOCAL } same as i_186
i_106 = { NONLOCAL } same as i_186
j_191 = { NULL NONLOCAL } same as j_188
j_103 = { NULL NONLOCAL } same as j_188
_100 = { NULL NONLOCAL } same as j_188
_102 = { ESCAPED NONLOCAL }
_98 = { ESCAPED NONLOCAL }
_101 = { ESCAPED NONLOCAL }
i_104 = { NULL NONLOCAL } same as j_188
i_190 = { NULL NONLOCAL } same as j_188
_96 = { NULL NONLOCAL } same as j_188
_97 = { NULL NONLOCAL } same as j_188
elapsed_87 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
abase$ptrs$p_161 = { ESCAPED NONLOCAL }
_89 = { ESCAPED NONLOCAL }
i_95 = { NULL NONLOCAL } same as j_188
i_91 = { NULL NONLOCAL } same as j_188
_92 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
TicksToSecs = { }
_16 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_17 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_18 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_19 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_20 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
TicksToFracSecs = { }
_21 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_22 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32
_23 = { ESCAPED NONLOCAL } same as global_assignstruct.0+32


Alias information for DoAssign

Aliased symbols

systemerror, UID D.5070, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.5070 } (escaped)

Flow-insensitive points-to information

arraybase_24, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
arraybase_34, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
arraybase_40, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_59, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_64, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_68, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_71, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_81, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_89, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
abase$ptrs$p_93, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_94, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_98, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_101, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_111, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
abase$ptrs$p_161, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
abase1$ptrs$p_183, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
abase1$ptrs$p_189, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 15 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 56 5 6 55 7 8 54 9 10 42 11 53 12 13 52 14 15 58 51 57 16 41 17 60 50 59 18 61 19 20 62 21 22 23 49 24 25 48 26 27 40 28 47 29 30 46 31 32 64 45 63 33 39 34 66 44 65 35 43 36 67 37 38
;;
;; Loop 2
;;  header 23, latch 43
;;  depth 1, outer 0
;;  nodes: 23 43 35 66 65 33 64 63 27 25 24 49 26 48 32 30 29 47 31 46 28 45 40 34 44 39
;;
;; Loop 9
;;  header 34, latch 44
;;  depth 2, outer 2
;;  nodes: 34 44
;;
;; Loop 10
;;  header 28, latch 45
;;  depth 2, outer 2
;;  nodes: 28 45 32 30 29 47 31 46
;;
;; Loop 11
;;  header 31, latch 46
;;  depth 3, outer 10
;;  nodes: 31 46 30 29 47
;;
;; Loop 12
;;  header 29, latch 47
;;  depth 4, outer 11
;;  nodes: 29 47
;;
;; Loop 13
;;  header 26, latch 48
;;  depth 2, outer 2
;;  nodes: 26 48 25 24 49
;;
;; Loop 14
;;  header 24, latch 49
;;  depth 3, outer 13
;;  nodes: 24 49
;;
;; Loop 1
;;  header 4, latch 19
;;  depth 1, outer 0
;;  nodes: 4 19 18 60 59 16 58 57 10 8 7 55 9 54 6 56 5 15 13 12 53 14 52 11 51 42 17 50 41
;;
;; Loop 3
;;  header 17, latch 50
;;  depth 2, outer 1
;;  nodes: 17 50
;;
;; Loop 4
;;  header 11, latch 51
;;  depth 2, outer 1
;;  nodes: 11 51 15 13 12 53 14 52
;;
;; Loop 5
;;  header 14, latch 52
;;  depth 3, outer 4
;;  nodes: 14 52 13 12 53
;;
;; Loop 6
;;  header 12, latch 53
;;  depth 4, outer 5
;;  nodes: 12 53
;;
;; Loop 7
;;  header 9, latch 54
;;  depth 2, outer 1
;;  nodes: 9 54 8 7 55
;;
;; Loop 8
;;  header 7, latch 55
;;  depth 3, outer 7
;;  nodes: 7 55
;; 2 succs { 3 20 }
;; 3 succs { 4 }
;; 4 succs { 5 56 }
;; 56 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 9 }
;; 55 succs { 7 }
;; 7 succs { 55 8 }
;; 8 succs { 54 10 }
;; 54 succs { 9 }
;; 9 succs { 7 }
;; 10 succs { 42 57 }
;; 42 succs { 11 }
;; 11 succs { 14 }
;; 53 succs { 12 }
;; 12 succs { 53 13 }
;; 13 succs { 52 15 }
;; 52 succs { 14 }
;; 14 succs { 12 }
;; 15 succs { 51 58 }
;; 58 succs { 16 }
;; 51 succs { 11 }
;; 57 succs { 16 }
;; 16 succs { 41 59 }
;; 41 succs { 17 }
;; 17 succs { 50 60 }
;; 60 succs { 18 }
;; 50 succs { 17 }
;; 59 succs { 18 }
;; 18 succs { 61 19 }
;; 61 succs { 22 }
;; 19 succs { 4 }
;; 20 succs { 21 62 }
;; 62 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 26 }
;; 49 succs { 24 }
;; 24 succs { 49 25 }
;; 25 succs { 48 27 }
;; 48 succs { 26 }
;; 26 succs { 24 }
;; 27 succs { 40 63 }
;; 40 succs { 28 }
;; 28 succs { 31 }
;; 47 succs { 29 }
;; 29 succs { 47 30 }
;; 30 succs { 46 32 }
;; 46 succs { 31 }
;; 31 succs { 29 }
;; 32 succs { 45 64 }
;; 64 succs { 33 }
;; 45 succs { 28 }
;; 63 succs { 33 }
;; 33 succs { 39 65 }
;; 39 succs { 34 }
;; 34 succs { 44 66 }
;; 66 succs { 35 }
;; 44 succs { 34 }
;; 65 succs { 35 }
;; 35 succs { 43 36 }
;; 43 succs { 23 }
;; 36 succs { 37 67 }
;; 67 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 1 }
find_duplicates: <bb 65> duplicate of <bb 66>
find_duplicates: <bb 63> duplicate of <bb 64>
find_duplicates: <bb 59> duplicate of <bb 60>
find_duplicates: <bb 57> duplicate of <bb 58>
Removing basic block 66
Removing basic block 64
Removing basic block 60
Removing basic block 58

Symbols to be put in SSA form
{ D.6339 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 68
Number of blocks to update: 63 ( 93%)


Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 44
Removing basic block 45
Removing basic block 46
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Merging blocks 57 and 16
Merging blocks 59 and 18
Removing basic block 61
Removing basic block 62
Merging blocks 63 and 33
Merging blocks 65 and 35
Removing basic block 67
DoAssign ()
{
  short unsigned int i;
  short unsigned int j;
  long unsigned int i;
  short unsigned int j;
  short unsigned int i;
  long int * abase1$ptrs$p;
  long unsigned int elapsed;
  long unsigned int i;
  long int * abase$ptrs$p;
  long unsigned int D.8187;
  short unsigned int i;
  short unsigned int j;
  long unsigned int i;
  short unsigned int j;
  short unsigned int i;
  long int * abase1$ptrs$p;
  long unsigned int elapsed;
  long unsigned int i;
  long int * abase$ptrs$p;
  long unsigned int D.8170;
  double iterations;
  long unsigned int accumtime;
  int systemerror;
  farlong * arraybase;
  int _1;
  long unsigned int _3;
  int systemerror.66_4;
  long unsigned int _6;
  long unsigned int global_min_ticks.68_8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  int systemerror.69_13;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  double _19;
  double _20;
  double _21;
  double _22;
  int _23;
  long int * _59;
  long unsigned int _62;
  long int * _64;
  long unsigned int _66;
  long unsigned int _67;
  farlong[101] * _68;
  int _70;
  farlong[101] * _71;
  long int _72;
  unsigned int _77;
  long unsigned int _79;
  long unsigned int _80;
  farlong[101] * _81;
  int _83;
  long int _84;
  long int * _89;
  long unsigned int _92;
  long int * _94;
  long unsigned int _96;
  long unsigned int _97;
  farlong[101] * _98;
  int _100;
  farlong[101] * _101;
  long int _102;
  unsigned int _107;
  long unsigned int _109;
  long unsigned int _110;
  farlong[101] * _111;
  int _113;
  long int _114;
  long unsigned int prephitmp_173;

  <bb 2> [0.00%]:
  _1 = global_assignstruct.adjust;
  if (_1 == 0)
    goto <bb 3>; [67.00%]
  else
    goto <bb 20>; [33.00%]

  <bb 3> [0.00%]:
  global_assignstruct.numarrays = 1;

  <bb 4> [0.00%]:
  # prephitmp_173 = PHI <1(3), _10(19)>
  _3 = prephitmp_173 * 81608;
  arraybase_40 = AllocateMemory (_3, &systemerror);
  systemerror.66_4 = systemerror;
  if (systemerror.66_4 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [0.00%]:
  ReportError ("CPU:Assignment", systemerror.66_4);
  FreeMemory (arraybase_40, &systemerror);
  ErrorExit ();

  <bb 6> [0.00%]:
  _6 = global_assignstruct.numarrays;
  randnum (13);
  goto <bb 9>; [100.00%]

  <bb 7> [17.31%]:
  # j_188 = PHI <j_85(7), 0(9)>
  _77 = abs_randwc (5000000);
  _83 = (int) j_188;
  _84 = (long int) _77;
  *_81[_83] = _84;
  j_85 = j_188 + 1;
  if (j_85 != 101)
    goto <bb 7>; [98.99%]
  else
    goto <bb 8>; [1.01%]

  <bb 8> [0.18%]:
  i_86 = i_187 + 1;
  if (i_86 != 101)
    goto <bb 9>; [99.00%]
  else
    goto <bb 10>; [1.00%]

  <bb 9> [0.18%]:
  # i_187 = PHI <i_86(8), 0(6)>
  _79 = (long unsigned int) i_187;
  _80 = _79 * 808;
  _81 = arraybase_40 + _80;
  goto <bb 7>; [100.00%]

  <bb 10> [0.00%]:
  if (_6 > 1)
    goto <bb 11>; [67.61%]
  else
    goto <bb 16>; [32.39%]

  <bb 11> [0.01%]:
  # abase1$ptrs$p_183 = PHI <_64(15), arraybase_40(10)>
  # i_186 = PHI <i_76(15), 1(10)>
  _64 = abase1$ptrs$p_183 + 81608;
  goto <bb 14>; [100.00%]

  <bb 12> [66.33%]:
  # j_185 = PHI <j_73(12), 0(14)>
  _70 = (int) j_185;
  _72 = *_68[_70];
  *_71[_70] = _72;
  j_73 = j_185 + 1;
  if (j_73 != 101)
    goto <bb 12>; [98.99%]
  else
    goto <bb 13>; [1.01%]

  <bb 13> [0.67%]:
  i_74 = i_184 + 1;
  if (i_74 != 101)
    goto <bb 14>; [98.99%]
  else
    goto <bb 15>; [1.01%]

  <bb 14> [0.67%]:
  # i_184 = PHI <i_74(13), 0(11)>
  _66 = (long unsigned int) i_184;
  _67 = _66 * 808;
  _68 = arraybase_40 + _67;
  _71 = _64 + _67;
  goto <bb 12>; [100.00%]

  <bb 15> [0.01%]:
  i_76 = i_186 + 1;
  if (_6 > i_76)
    goto <bb 11>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 16> [0.00%]:
  elapsed_57 = StartStopwatch ();
  if (_6 != 0)
    goto <bb 17>; [85.00%]
  else
    goto <bb 18>; [15.00%]

  <bb 17> [0.01%]:
  # abase$ptrs$p_93 = PHI <_59(17), arraybase_40(16)>
  # i_105 = PHI <i_61(17), 0(16)>
  Assignment (abase$ptrs$p_93);
  _59 = abase$ptrs$p_93 + 81608;
  i_61 = i_105 + 1;
  if (_6 > i_61)
    goto <bb 17>; [85.00%]
  else
    goto <bb 18>; [15.00%]

  <bb 18> [0.00%]:
  _62 = StopStopwatch (elapsed_57);
  global_min_ticks.68_8 = global_min_ticks;
  if (global_min_ticks.68_8 < _62)
    goto <bb 22>; [15.00%]
  else
    goto <bb 19>; [85.00%]

  <bb 19> [0.00%]:
  FreeMemory (arraybase_40, &systemerror);
  _9 = global_assignstruct.numarrays;
  _10 = _9 + 1;
  global_assignstruct.numarrays = _10;
  goto <bb 4>; [100.00%]

  <bb 20> [0.00%]:
  _11 = global_assignstruct.numarrays;
  _12 = _11 * 81608;
  arraybase_34 = AllocateMemory (_12, &systemerror);
  systemerror.69_13 = systemerror;
  if (systemerror.69_13 != 0)
    goto <bb 21>; [33.00%]
  else
    goto <bb 22>; [67.00%]

  <bb 21> [0.00%]:
  ReportError ("CPU:Assignment", systemerror.69_13);
  FreeMemory (arraybase_34, &systemerror);
  ErrorExit ();

  <bb 22> [0.00%]:
  # arraybase_24 = PHI <arraybase_40(18), arraybase_34(20), arraybase_34(21)>

  <bb 23> [0.00%]:
  # accumtime_25 = PHI <0(22), accumtime_49(35)>
  # iterations_26 = PHI <0.0(22), iterations_50(35)>
  _15 = global_assignstruct.numarrays;
  randnum (13);
  goto <bb 26>; [100.00%]

  <bb 24> [25.84%]:
  # j_194 = PHI <j_115(24), 0(26)>
  _107 = abs_randwc (5000000);
  _113 = (int) j_194;
  _114 = (long int) _107;
  *_111[_113] = _114;
  j_115 = j_194 + 1;
  if (j_115 != 101)
    goto <bb 24>; [98.99%]
  else
    goto <bb 25>; [1.01%]

  <bb 25> [0.26%]:
  i_116 = i_193 + 1;
  if (i_116 != 101)
    goto <bb 26>; [99.00%]
  else
    goto <bb 27>; [1.00%]

  <bb 26> [0.26%]:
  # i_193 = PHI <i_116(25), 0(23)>
  _109 = (long unsigned int) i_193;
  _110 = _109 * 808;
  _111 = arraybase_24 + _110;
  goto <bb 24>; [100.00%]

  <bb 27> [0.00%]:
  if (_15 > 1)
    goto <bb 28>; [67.61%]
  else
    goto <bb 33>; [32.39%]

  <bb 28> [0.01%]:
  # abase1$ptrs$p_189 = PHI <_94(32), arraybase_24(27)>
  # i_192 = PHI <i_106(32), 1(27)>
  _94 = abase1$ptrs$p_189 + 81608;
  goto <bb 31>; [100.00%]

  <bb 29> [99.00%]:
  # j_191 = PHI <j_103(29), 0(31)>
  _100 = (int) j_191;
  _102 = *_98[_100];
  *_101[_100] = _102;
  j_103 = j_191 + 1;
  if (j_103 != 101)
    goto <bb 29>; [98.99%]
  else
    goto <bb 30>; [1.01%]

  <bb 30> [1.00%]:
  i_104 = i_190 + 1;
  if (i_104 != 101)
    goto <bb 31>; [98.99%]
  else
    goto <bb 32>; [1.01%]

  <bb 31> [1.00%]:
  # i_190 = PHI <i_104(30), 0(28)>
  _96 = (long unsigned int) i_190;
  _97 = _96 * 808;
  _98 = arraybase_24 + _97;
  _101 = _94 + _97;
  goto <bb 29>; [100.00%]

  <bb 32> [0.01%]:
  i_106 = i_192 + 1;
  if (_15 > i_106)
    goto <bb 28>; [85.00%]
  else
    goto <bb 33>; [15.00%]

  <bb 33> [0.00%]:
  elapsed_87 = StartStopwatch ();
  if (_15 != 0)
    goto <bb 34>; [85.00%]
  else
    goto <bb 35>; [15.00%]

  <bb 34> [0.02%]:
  # abase$ptrs$p_161 = PHI <_89(34), arraybase_24(33)>
  # i_95 = PHI <i_91(34), 0(33)>
  Assignment (abase$ptrs$p_161);
  _89 = abase$ptrs$p_161 + 81608;
  i_91 = i_95 + 1;
  if (_15 > i_91)
    goto <bb 34>; [85.00%]
  else
    goto <bb 35>; [15.00%]

  <bb 35> [0.00%]:
  _92 = StopStopwatch (elapsed_87);
  accumtime_49 = accumtime_25 + _92;
  iterations_50 = iterations_26 + 1.0e+0;
  _16 = TicksToSecs (accumtime_49);
  _17 = global_assignstruct.request_secs;
  if (_16 < _17)
    goto <bb 23>; [85.00%]
  else
    goto <bb 36>; [15.00%]

  <bb 36> [0.00%]:
  FreeMemory (arraybase_24, &systemerror);
  _18 = global_assignstruct.numarrays;
  _19 = (double) _18;
  _20 = _19 * iterations_50;
  _21 = TicksToFracSecs (accumtime_49);
  _22 = _20 / _21;
  global_assignstruct.iterspersec = _22;
  _23 = global_assignstruct.adjust;
  if (_23 == 0)
    goto <bb 37>; [54.00%]
  else
    goto <bb 38>; [46.00%]

  <bb 37> [0.00%]:
  global_assignstruct.adjust = 1;

  <bb 38> [0.00%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoIDEA (DoIDEA, funcdef_no=82, decl_uid=4624, cgraph_uid=82, symbol_order=107)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ESCAPED = &NONLOCAL
i_427 = i_94
i_427 = &NULL
ESCAPED = &NONLOCAL
_1 = NONLOCAL
_2 = _1
userkey = _2
i_94 = i_427
i_94 = &NONLOCAL
i_428 = i_91
i_428 = &NULL
Z = &NULL
i_91 = i_428
i_91 = &NONLOCAL
userkey_437 = userkey_152
userkey_437 = &userkey
j_438 = j_158
j_438 = &NULL
userkey_152 = userkey_437 + 16
_154 = j_438
_155 = _154
_155 = &NONLOCAL
_156 = &Z
_157 = *userkey_437
*_156 = _157
j_158 = j_438
j_158 = &NONLOCAL
i_439 = _162
i_439 = &NULL
Z_440 = Z_187
Z_440 = &Z
j_441 = j_189
j_441 = &NONLOCAL
i_160 = i_439
i_160 = &NONLOCAL
_161 = i_160
_162 = i_160 + UNKNOWN
_163 = _162
_164 = _163
_164 = &NONLOCAL
_166 = Z_440 + UNKNOWN
_167 = *_166
_168 = _167
_169 = _168
_169 = &NONLOCAL
_170 = _169
_171 = i_439
_171 = &NONLOCAL
_172 = _171 + UNKNOWN
_173 = _172
_174 = _173
_174 = &NONLOCAL
_175 = Z_440 + UNKNOWN
_176 = *_175
_177 = _176
_177 = &NONLOCAL
_178 = _177
_179 = _170
_179 = _178
_180 = _161
_180 = &NONLOCAL
_181 = _180
_181 = &NONLOCAL
_182 = Z_440 + UNKNOWN
_183 = _179
*_182 = _183
_184 = i_160 + UNKNOWN
_185 = _184
_186 = _185
_186 = &NONLOCAL
Z_187 = Z_440 + UNKNOWN
j_189 = j_441
j_189 = &NONLOCAL
_95 = Z
_96 = _95
_192 = &NONLOCAL
_192 = _96
t1_193 = _192
_194 = &NONLOCAL
_194 = _96
y_195 = _194
_196 = &NONLOCAL
_196 = t1_193
x_197 = _95
x_197 = x_200
t0_203 = &NONLOCAL
t0_203 = t0_204
t1_201 = t1_193
t1_201 = t1_208
y_198 = y_195
y_198 = y_206
q_199 = x_197
q_199 = y_198
x_200 = x_197
x_200 = y_198
_202 = q_199
_202 = t1_201
t0_204 = _202
t0_204 = t0_203
q_205 = y_198
q_205 = x_200
y_206 = y_198
y_206 = x_200
_207 = t0_204
_207 = q_205
t1_208 = t1_201
t1_208 = _207
_210 = &NONLOCAL
_210 = t1_208
_107 = _95
_107 = t0_204
_107 = _196
_107 = _210
_98 = Z
t2_99 = _98
_100 = Z
t3_101 = _100
_103 = Z
_104 = _103
_214 = &NONLOCAL
_214 = _104
t1_215 = _214
_216 = &NONLOCAL
_216 = _104
y_217 = _216
_218 = &NONLOCAL
_218 = t1_215
x_219 = _103
x_219 = x_222
t0_225 = &NONLOCAL
t0_225 = t0_226
t1_223 = t1_215
t1_223 = t1_230
y_220 = y_217
y_220 = y_228
q_221 = x_219
q_221 = y_220
x_222 = x_219
x_222 = y_220
_224 = q_221
_224 = t1_223
t0_226 = _224
t0_226 = t0_225
q_227 = y_220
q_227 = x_222
y_228 = y_220
y_228 = x_222
_229 = t0_226
_229 = q_227
t1_230 = t1_223
t1_230 = _229
_232 = &NONLOCAL
_232 = t1_230
_106 = _103
_106 = t0_226
_106 = _218
_106 = _232
TT = _106
TT = t3_101
TT = t2_99
TT = _107
Z_431 = Z_119
Z_431 = &Z
p_432 = p_124
p_432 = &TT
j_433 = j_127
j_433 = &NONLOCAL
t1_109 = *Z_431
_110 = *Z_431 + 16
*p_432 + -16 = _110
*p_432 + -32 = t1_109
_112 = *Z_431 + 32
_113 = _112
_236 = &NONLOCAL
_236 = _113
t1_237 = _236
_238 = &NONLOCAL
_238 = _113
y_239 = _238
_240 = &NONLOCAL
_240 = t1_237
x_241 = _112
x_241 = x_244
t0_247 = &NONLOCAL
t0_247 = t0_248
t1_245 = t1_237
t1_245 = t1_252
y_242 = y_239
y_242 = y_250
q_243 = x_241
q_243 = y_242
x_244 = x_241
x_244 = y_242
_246 = q_243
_246 = t1_245
t0_248 = _246
t0_248 = t0_247
q_249 = y_242
q_249 = x_244
y_250 = y_242
y_250 = x_244
_251 = t0_248
_251 = q_249
t1_252 = t1_245
t1_252 = _251
_254 = &NONLOCAL
_254 = t1_252
_125 = _112
_125 = t0_248
_125 = _240
_125 = _254
_115 = *Z_431 + 48
t2_116 = _115
_117 = *Z_431 + 64
t3_118 = _117
Z_119 = Z_431 + 96
_120 = *Z_431 + 80
_121 = _120
_258 = &NONLOCAL
_258 = _121
t1_259 = _258
_260 = &NONLOCAL
_260 = _121
y_261 = _260
_262 = &NONLOCAL
_262 = t1_259
x_263 = _120
x_263 = x_266
t0_269 = &NONLOCAL
t0_269 = t0_270
t1_267 = t1_259
t1_267 = t1_274
y_264 = y_261
y_264 = y_272
q_265 = x_263
q_265 = y_264
x_266 = x_263
x_266 = y_264
_268 = q_265
_268 = t1_267
t0_270 = _268
t0_270 = t0_269
q_271 = y_264
q_271 = x_266
y_272 = y_264
y_272 = x_266
_273 = t0_270
_273 = q_271
t1_274 = t1_267
t1_274 = _273
_276 = &NONLOCAL
_276 = t1_274
_123 = _120
_123 = t0_270
_123 = _262
_123 = _276
*p_432 + -48 = _123
*p_432 + -64 = t2_116
*p_432 + -80 = t3_118
p_124 = p_432 + -96
*p_432 + -96 = _125
j_127 = j_433
j_127 = &NONLOCAL
t1_129 = *Z_431 + 96
_130 = *Z_431 + 112
*p_432 + -112 = _130
*p_432 + -128 = t1_129
_132 = *Z_431 + 128
_133 = _132
_280 = &NONLOCAL
_280 = _133
t1_281 = _280
_282 = &NONLOCAL
_282 = _133
y_283 = _282
_284 = &NONLOCAL
_284 = t1_281
x_285 = _132
x_285 = x_288
t0_291 = &NONLOCAL
t0_291 = t0_292
t1_289 = t1_281
t1_289 = t1_296
y_286 = y_283
y_286 = y_294
q_287 = x_285
q_287 = y_286
x_288 = x_285
x_288 = y_286
_290 = q_287
_290 = t1_289
t0_292 = _290
t0_292 = t0_291
q_293 = y_286
q_293 = x_288
y_294 = y_286
y_294 = x_288
_295 = t0_292
_295 = q_293
t1_296 = t1_289
t1_296 = _295
_298 = &NONLOCAL
_298 = t1_296
_143 = _132
_143 = t0_292
_143 = _284
_143 = _298
_135 = *Z_431 + 144
t2_136 = _135
_137 = *Z_431 + 160
t3_138 = _137
_139 = *Z_431 + 176
_140 = _139
_302 = &NONLOCAL
_302 = _140
t1_303 = _302
_304 = &NONLOCAL
_304 = _140
y_305 = _304
_306 = &NONLOCAL
_306 = t1_303
x_307 = _139
x_307 = x_310
t0_313 = &NONLOCAL
t0_313 = t0_314
t1_311 = t1_303
t1_311 = t1_318
y_308 = y_305
y_308 = y_316
q_309 = x_307
q_309 = y_308
x_310 = x_307
x_310 = y_308
_312 = q_309
_312 = t1_311
t0_314 = _312
t0_314 = t0_313
q_315 = y_308
q_315 = x_310
y_316 = y_308
y_316 = x_310
_317 = t0_314
_317 = q_315
t1_318 = t1_311
t1_318 = _317
_320 = &NONLOCAL
_320 = t1_318
_142 = _139
_142 = t0_314
_142 = _306
_142 = _320
*p_432 + -144 = _142
*p_432 + -160 = t3_138
*p_432 + -176 = t2_136
*p_432 + -192 = _143
DK_434 = DK_145
DK_434 = &DK
p_435 = p_148
p_435 = &TT
j_436 = j_150
j_436 = &NULL
DK_145 = DK_434 + 16
_147 = *p_435
*DK_434 = _147
p_148 = p_435 + 16
derefaddrtmp(214) = &NULL
*p_435 = derefaddrtmp(214)
j_150 = j_436
j_150 = &NONLOCAL
global_ideastruct.0+32 = NONLOCAL
global_ideastruct.64+256 = NONLOCAL
_3 = global_ideastruct.64+256
ESCAPED = _3
ESCAPED = &systemerror
plain1_55 = NONLOCAL
systemerror.102_4 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.102_4
_6 = global_ideastruct.64+256
ESCAPED = _6
ESCAPED = &systemerror
crypt1_59 = NONLOCAL
systemerror.104_7 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.104_7
ESCAPED = plain1_55
ESCAPED = &systemerror
_9 = global_ideastruct.64+256
ESCAPED = _9
ESCAPED = &systemerror
plain2_64 = NONLOCAL
systemerror.106_10 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.106_10
ESCAPED = plain1_55
ESCAPED = &systemerror
ESCAPED = crypt1_59
ESCAPED = &systemerror
_410 = global_ideastruct.64+256
_409 = _16
_409 = &NULL
i_111 = i_89
i_111 = &NULL
ESCAPED = &NONLOCAL
_12 = NONLOCAL
_14 = plain1_55 + UNKNOWN
_15 = _12
*_14 = _15
i_89 = i_111
i_89 = &NONLOCAL
_16 = i_89
_17 = global_ideastruct.64+256
_18 = global_ideastruct.0+32
global_ideastruct.64+256 = &NONLOCAL
ESCAPED = &NONLOCAL
_408 = _24
_408 = &NONLOCAL
_20 = global_ideastruct.64+256
elapsed_322 = NONLOCAL
j_413 = j_326
j_413 = &NULL
_324 = crypt1_59 + UNKNOWN
_325 = plain1_55 + UNKNOWN
ESCAPED = _325
ESCAPED = _324
ESCAPED = &Z
j_326 = j_413
j_326 = &NONLOCAL
j_412 = j_330
j_412 = &NULL
_328 = plain2_64 + UNKNOWN
_329 = crypt1_59 + UNKNOWN
ESCAPED = _329
ESCAPED = _328
ESCAPED = &DK
j_330 = j_412
j_330 = &NONLOCAL
i_332 = i_188
i_332 = &NONLOCAL
i_188 = i_332
i_188 = &NULL
ESCAPED = elapsed_322
_333 = NONLOCAL
global_min_ticks = NONLOCAL
global_min_ticks.108_22 = global_min_ticks
_23 = global_ideastruct.64+256
_24 = _23
_24 = &NONLOCAL
global_ideastruct.64+256 = _24
ESCAPED = _24
accumtime_38 = &NULL
accumtime_38 = accumtime_74
iterations_39 = &NONLOCAL
iterations_39 = iterations_75
_26 = global_ideastruct.64+256
_27 = global_ideastruct.64+256
elapsed_334 = NONLOCAL
j_159 = j_338
j_159 = &NULL
_336 = crypt1_59 + UNKNOWN
_337 = plain1_55 + UNKNOWN
ESCAPED = _337
ESCAPED = _336
ESCAPED = &Z
j_338 = j_159
j_338 = &NONLOCAL
j_165 = j_342
j_165 = &NULL
_340 = plain2_64 + UNKNOWN
_341 = crypt1_59 + UNKNOWN
ESCAPED = _341
ESCAPED = _340
ESCAPED = &DK
j_342 = j_165
j_342 = &NONLOCAL
i_344 = i_153
i_344 = &NONLOCAL
i_153 = i_344
i_153 = &NULL
ESCAPED = elapsed_334
_345 = NONLOCAL
accumtime_74 = accumtime_38
accumtime_74 = _345
_28 = global_ideastruct.64+256
_29 = _28
iterations_75 = _29
iterations_75 = iterations_39
ESCAPED = accumtime_74
_30 = NONLOCAL
_31 = global_ideastruct.64+256
ESCAPED = plain1_55
ESCAPED = &systemerror
ESCAPED = crypt1_59
ESCAPED = &systemerror
ESCAPED = plain2_64
ESCAPED = &systemerror
ESCAPED = accumtime_74
_32 = NONLOCAL
_33 = iterations_75
_33 = _32
global_ideastruct.64+256 = _33
ESCAPED = _33
_34 = global_ideastruct.0+32
global_ideastruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 5 17 208 219 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"randnum";
"i_427"[label="i_427 = { 1 5 }"];
"abs_randwc";
"_1";
"_2";
"userkey";
"i_428"[label="i_428 = { 1 5 }"];
"Z"[label="Z = { 1 }"];
"userkey_437"[label="userkey_437 = { 14 }"];
"userkey_152";
"j_438"[label="j_438 = { 1 5 }"];
"_154";
"_155"[label="_155 = { 5 }"];
"_156"[label="_156 = { 17 }"];
"_157";
"i_439"[label="i_439 = { 1 }"];
"_162";
"Z_440"[label="Z_440 = { 17 }"];
"Z_187";
"j_441"[label="j_441 = { 5 }"];
"i_160"[label="i_160 = { 5 }"];
"_161";
"_163";
"_164"[label="_164 = { 5 }"];
"_166";
"_167";
"_168";
"_169"[label="_169 = { 5 }"];
"_170";
"_171"[label="_171 = { 5 }"];
"_172";
"_173";
"_174"[label="_174 = { 5 }"];
"_175";
"_176";
"_177"[label="_177 = { 5 }"];
"_178";
"_179";
"_180"[label="_180 = { 5 }"];
"_181"[label="_181 = { 5 }"];
"_182";
"_183";
"_184";
"_185";
"_186"[label="_186 = { 5 }"];
"_95";
"_96";
"_192"[label="_192 = { 5 }"];
"t1_193";
"_194"[label="_194 = { 5 }"];
"y_195";
"_196"[label="_196 = { 5 }"];
"x_197";
"t0_203"[label="t0_203 = { 5 }"];
"q_199";
"q_205";
"_210"[label="_210 = { 5 }"];
"_107";
"_98";
"t2_99";
"_100";
"t3_101";
"_103";
"_104";
"_214"[label="_214 = { 5 }"];
"t1_215";
"_216"[label="_216 = { 5 }"];
"y_217";
"_218"[label="_218 = { 5 }"];
"x_219";
"t0_225"[label="t0_225 = { 5 }"];
"q_221";
"q_227";
"_232"[label="_232 = { 5 }"];
"_106";
"TT";
"Z_431"[label="Z_431 = { 17 }"];
"Z_119";
"p_432"[label="p_432 = { 103 }"];
"p_124";
"j_433"[label="j_433 = { 5 }"];
"t1_109";
"_110";
"_112";
"_113";
"_236"[label="_236 = { 5 }"];
"t1_237";
"_238"[label="_238 = { 5 }"];
"y_239";
"_240"[label="_240 = { 5 }"];
"x_241";
"t0_247"[label="t0_247 = { 5 }"];
"q_243";
"q_249";
"_254"[label="_254 = { 5 }"];
"_125";
"_115";
"t2_116";
"_117";
"t3_118";
"_120";
"_121";
"_258"[label="_258 = { 5 }"];
"t1_259";
"_260"[label="_260 = { 5 }"];
"y_261";
"_262"[label="_262 = { 5 }"];
"x_263";
"t0_269"[label="t0_269 = { 5 }"];
"q_265";
"q_271";
"_276"[label="_276 = { 5 }"];
"_123";
"t1_129";
"_130";
"_132";
"_133";
"_280"[label="_280 = { 5 }"];
"t1_281";
"_282"[label="_282 = { 5 }"];
"y_283";
"_284"[label="_284 = { 5 }"];
"x_285";
"t0_291"[label="t0_291 = { 5 }"];
"q_287";
"q_293";
"_298"[label="_298 = { 5 }"];
"_143";
"_135";
"t2_136";
"_137";
"t3_138";
"_139";
"_140";
"_302"[label="_302 = { 5 }"];
"t1_303";
"_304"[label="_304 = { 5 }"];
"y_305";
"_306"[label="_306 = { 5 }"];
"x_307";
"t0_313"[label="t0_313 = { 5 }"];
"q_309";
"q_315";
"_320"[label="_320 = { 5 }"];
"_142";
"DK_434"[label="DK_434 = { 208 }"];
"DK_145";
"DK";
"p_435"[label="p_435 = { 103 }"];
"p_148";
"j_436"[label="j_436 = { 1 5 }"];
"_147";
"derefaddrtmp(214)"[label="derefaddrtmp(214) = { 1 }"];
"_3";
"global_ideastruct.0+32"[label="global_ideastruct.0+32 = { 5 }"];
"global_ideastruct.64+256"[label="global_ideastruct.64+256 = { 5 }"];
"AllocateMemory";
"systemerror";
"plain1_55";
"systemerror.102_4";
"ReportError";
"ErrorExit";
"_6";
"crypt1_59";
"systemerror.104_7";
"FreeMemory";
"_9";
"plain2_64";
"systemerror.106_10";
"_410";
"_409"[label="_409 = { 1 }"];
"_16";
"i_89"[label="i_89 = { 1 5 }"];
"_12";
"_14";
"_15";
"_17";
"_18";
"_408"[label="_408 = { 5 }"];
"_20";
"StartStopwatch";
"elapsed_322";
"j_413"[label="j_413 = { 1 5 }"];
"_324";
"_325";
"cipher_idea";
"j_412"[label="j_412 = { 1 5 }"];
"_328";
"_329";
"i_332"[label="i_332 = { 1 5 }"];
"StopStopwatch";
"_333";
"global_min_ticks.108_22";
"global_min_ticks";
"accumtime_74"[label="accumtime_74 = { 1 }"];
"_26";
"_27";
"elapsed_334";
"j_159"[label="j_159 = { 1 5 }"];
"_336";
"_337";
"j_165"[label="j_165 = { 1 5 }"];
"_340";
"_341";
"i_344"[label="i_344 = { 1 5 }"];
"_345";
"TicksToSecs";
"_30";
"_31";
"TicksToFracSecs";
"_32";
"_34";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*randnum";
"*i_427";
"*i_94";
"*abs_randwc";
"*_1";
"*_2";
"*userkey";
"*i_428";
"*i_91";
"*Z";
"*userkey_437";
"*userkey_152";
"*j_438";
"*j_158";
"*_154";
"*_155";
"*_156";
"*_157";
"*i_439";
"*_162";
"*Z_440";
"*Z_187";
"*j_441";
"*j_189";
"*i_160";
"*_161";
"*_163";
"*_164";
"*_166";
"*_167";
"*_168";
"*_169";
"*_170";
"*_171";
"*_172";
"*_173";
"*_174";
"*_175";
"*_176";
"*_177";
"*_178";
"*_179";
"*_180";
"*_181";
"*_182";
"*_183";
"*_184";
"*_185";
"*_186";
"*_95";
"*_96";
"*_192";
"*t1_193";
"*_194";
"*y_195";
"*_196";
"*x_197";
"*x_200";
"*t0_203";
"*t0_204";
"*t1_201";
"*t1_208";
"*y_198";
"*y_206";
"*q_199";
"*_202";
"*q_205";
"*_207";
"*_210";
"*_107";
"*_98";
"*t2_99";
"*_100";
"*t3_101";
"*_103";
"*_104";
"*_214";
"*t1_215";
"*_216";
"*y_217";
"*_218";
"*x_219";
"*x_222";
"*t0_225";
"*t0_226";
"*t1_223";
"*t1_230";
"*y_220";
"*y_228";
"*q_221";
"*_224";
"*q_227";
"*_229";
"*_232";
"*_106";
"*TT";
"*Z_431";
"*Z_119";
"*p_432";
"*p_124";
"*j_433";
"*j_127";
"*t1_109";
"*_110";
"*_112";
"*_113";
"*_236";
"*t1_237";
"*_238";
"*y_239";
"*_240";
"*x_241";
"*x_244";
"*t0_247";
"*t0_248";
"*t1_245";
"*t1_252";
"*y_242";
"*y_250";
"*q_243";
"*_246";
"*q_249";
"*_251";
"*_254";
"*_125";
"*_115";
"*t2_116";
"*_117";
"*t3_118";
"*_120";
"*_121";
"*_258";
"*t1_259";
"*_260";
"*y_261";
"*_262";
"*x_263";
"*x_266";
"*t0_269";
"*t0_270";
"*t1_267";
"*t1_274";
"*y_264";
"*y_272";
"*q_265";
"*_268";
"*q_271";
"*_273";
"*_276";
"*_123";
"*t1_129";
"*_130";
"*_132";
"*_133";
"*_280";
"*t1_281";
"*_282";
"*y_283";
"*_284";
"*x_285";
"*x_288";
"*t0_291";
"*t0_292";
"*t1_289";
"*t1_296";
"*y_286";
"*y_294";
"*q_287";
"*_290";
"*q_293";
"*_295";
"*_298";
"*_143";
"*_135";
"*t2_136";
"*_137";
"*t3_138";
"*_139";
"*_140";
"*_302";
"*t1_303";
"*_304";
"*y_305";
"*_306";
"*x_307";
"*x_310";
"*t0_313";
"*t0_314";
"*t1_311";
"*t1_318";
"*y_308";
"*y_316";
"*q_309";
"*_312";
"*q_315";
"*_317";
"*_320";
"*_142";
"*DK_434";
"*DK_145";
"*DK";
"*p_435";
"*p_148";
"*j_436";
"*j_150";
"*_147";
"*derefaddrtmp(214)";
"*global_ideastruct.0+32";
"*AllocateMemory";
"*systemerror";
"*systemerror.102_4";
"*ReportError";
"*ErrorExit";
"*systemerror.104_7";
"*FreeMemory";
"*systemerror.106_10";
"*_410";
"*_409";
"*_16";
"*i_111";
"*i_89";
"*_12";
"*_14";
"*_15";
"*_17";
"*_18";
"*_408";
"*_20";
"*StartStopwatch";
"*j_413";
"*j_326";
"*_324";
"*_325";
"*cipher_idea";
"*j_412";
"*j_330";
"*_328";
"*_329";
"*i_332";
"*i_188";
"*StopStopwatch";
"*_333";
"*global_min_ticks.108_22";
"*global_min_ticks";
"*_26";
"*_27";
"*j_159";
"*j_338";
"*_336";
"*_337";
"*j_165";
"*j_342";
"*_340";
"*_341";
"*i_344";
"*i_153";
"*TicksToSecs";
"*_30";
"*_31";
"*TicksToFracSecs";
"*_34";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"_3" -> "ESCAPED";
"plain1_55" -> "ESCAPED";
"systemerror.102_4" -> "ESCAPED";
"_6" -> "ESCAPED";
"crypt1_59" -> "ESCAPED";
"systemerror.104_7" -> "ESCAPED";
"_9" -> "ESCAPED";
"plain2_64" -> "ESCAPED";
"systemerror.106_10" -> "ESCAPED";
"global_ideastruct.64+256" -> "ESCAPED";
"elapsed_322" -> "ESCAPED";
"_324" -> "ESCAPED";
"_325" -> "ESCAPED";
"_328" -> "ESCAPED";
"_329" -> "ESCAPED";
"accumtime_74" -> "ESCAPED";
"elapsed_334" -> "ESCAPED";
"_336" -> "ESCAPED";
"_337" -> "ESCAPED";
"_340" -> "ESCAPED";
"_341" -> "ESCAPED";
"global_ideastruct.64+256" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"i_427" -> "i_427";
"i_427" -> "i_427";
"NONLOCAL" -> "_1";
"_1" -> "_2";
"_2" -> "userkey";
"i_428" -> "i_428";
"i_428" -> "i_428";
"userkey_152" -> "userkey_437";
"j_438" -> "j_438";
"j_438" -> "j_438";
"j_438" -> "_154";
"_154" -> "_155";
"*userkey_437" -> "_157";
"_162" -> "i_439";
"Z_187" -> "Z_440";
"j_441" -> "j_441";
"j_441" -> "j_441";
"i_439" -> "i_160";
"i_160" -> "_161";
"_162" -> "_163";
"_163" -> "_164";
"*_166" -> "_167";
"_167" -> "_168";
"_168" -> "_169";
"_169" -> "_170";
"i_439" -> "_171";
"_172" -> "_173";
"_173" -> "_174";
"*_175" -> "_176";
"_176" -> "_177";
"_177" -> "_178";
"_170" -> "_179";
"_178" -> "_179";
"_161" -> "_180";
"_180" -> "_181";
"_179" -> "_183";
"_184" -> "_185";
"_185" -> "_186";
"Z" -> "_95";
"_95" -> "_96";
"_96" -> "_192";
"_192" -> "t1_193";
"_96" -> "_194";
"_194" -> "y_195";
"t1_193" -> "_196";
"_95" -> "x_197";
"y_195" -> "x_197";
"x_197" -> "x_197";
"x_197" -> "x_197";
"x_197" -> "x_197";
"x_197" -> "x_197";
"t1_193" -> "t0_203";
"t0_203" -> "t0_203";
"t0_203" -> "t0_203";
"t0_203" -> "t0_203";
"t0_203" -> "t0_203";
"q_199" -> "t0_203";
"t0_203" -> "t0_203";
"q_205" -> "t0_203";
"t0_203" -> "t0_203";
"x_197" -> "q_199";
"x_197" -> "q_199";
"x_197" -> "q_205";
"x_197" -> "q_205";
"t0_203" -> "_210";
"_95" -> "_107";
"_196" -> "_107";
"t0_203" -> "_107";
"_210" -> "_107";
"Z" -> "_98";
"_98" -> "t2_99";
"Z" -> "_100";
"_100" -> "t3_101";
"Z" -> "_103";
"_103" -> "_104";
"_104" -> "_214";
"_214" -> "t1_215";
"_104" -> "_216";
"_216" -> "y_217";
"t1_215" -> "_218";
"_103" -> "x_219";
"y_217" -> "x_219";
"x_219" -> "x_219";
"x_219" -> "x_219";
"x_219" -> "x_219";
"x_219" -> "x_219";
"t1_215" -> "t0_225";
"t0_225" -> "t0_225";
"t0_225" -> "t0_225";
"t0_225" -> "t0_225";
"t0_225" -> "t0_225";
"q_221" -> "t0_225";
"t0_225" -> "t0_225";
"q_227" -> "t0_225";
"t0_225" -> "t0_225";
"x_219" -> "q_221";
"x_219" -> "q_221";
"x_219" -> "q_227";
"x_219" -> "q_227";
"t0_225" -> "_232";
"_103" -> "_106";
"_218" -> "_106";
"t0_225" -> "_106";
"_232" -> "_106";
"_107" -> "TT";
"t2_99" -> "TT";
"t3_101" -> "TT";
"_106" -> "TT";
"Z_119" -> "Z_431";
"p_124" -> "p_432";
"j_433" -> "j_433";
"j_433" -> "j_433";
"*Z_431" -> "t1_109";
"_112" -> "_113";
"_113" -> "_236";
"_236" -> "t1_237";
"_113" -> "_238";
"_238" -> "y_239";
"t1_237" -> "_240";
"_112" -> "x_241";
"y_239" -> "x_241";
"x_241" -> "x_241";
"x_241" -> "x_241";
"x_241" -> "x_241";
"x_241" -> "x_241";
"t1_237" -> "t0_247";
"t0_247" -> "t0_247";
"t0_247" -> "t0_247";
"t0_247" -> "t0_247";
"t0_247" -> "t0_247";
"q_243" -> "t0_247";
"t0_247" -> "t0_247";
"q_249" -> "t0_247";
"t0_247" -> "t0_247";
"x_241" -> "q_243";
"x_241" -> "q_243";
"x_241" -> "q_249";
"x_241" -> "q_249";
"t0_247" -> "_254";
"_112" -> "_125";
"_240" -> "_125";
"t0_247" -> "_125";
"_254" -> "_125";
"_115" -> "t2_116";
"_117" -> "t3_118";
"_120" -> "_121";
"_121" -> "_258";
"_258" -> "t1_259";
"_121" -> "_260";
"_260" -> "y_261";
"t1_259" -> "_262";
"_120" -> "x_263";
"y_261" -> "x_263";
"x_263" -> "x_263";
"x_263" -> "x_263";
"x_263" -> "x_263";
"x_263" -> "x_263";
"t1_259" -> "t0_269";
"t0_269" -> "t0_269";
"t0_269" -> "t0_269";
"t0_269" -> "t0_269";
"t0_269" -> "t0_269";
"q_265" -> "t0_269";
"t0_269" -> "t0_269";
"q_271" -> "t0_269";
"t0_269" -> "t0_269";
"x_263" -> "q_265";
"x_263" -> "q_265";
"x_263" -> "q_271";
"x_263" -> "q_271";
"t0_269" -> "_276";
"_120" -> "_123";
"_262" -> "_123";
"t0_269" -> "_123";
"_276" -> "_123";
"_132" -> "_133";
"_133" -> "_280";
"_280" -> "t1_281";
"_133" -> "_282";
"_282" -> "y_283";
"t1_281" -> "_284";
"_132" -> "x_285";
"y_283" -> "x_285";
"x_285" -> "x_285";
"x_285" -> "x_285";
"x_285" -> "x_285";
"x_285" -> "x_285";
"t1_281" -> "t0_291";
"t0_291" -> "t0_291";
"t0_291" -> "t0_291";
"t0_291" -> "t0_291";
"t0_291" -> "t0_291";
"q_287" -> "t0_291";
"t0_291" -> "t0_291";
"q_293" -> "t0_291";
"t0_291" -> "t0_291";
"x_285" -> "q_287";
"x_285" -> "q_287";
"x_285" -> "q_293";
"x_285" -> "q_293";
"t0_291" -> "_298";
"_132" -> "_143";
"_284" -> "_143";
"t0_291" -> "_143";
"_298" -> "_143";
"_135" -> "t2_136";
"_137" -> "t3_138";
"_139" -> "_140";
"_140" -> "_302";
"_302" -> "t1_303";
"_140" -> "_304";
"_304" -> "y_305";
"t1_303" -> "_306";
"_139" -> "x_307";
"y_305" -> "x_307";
"x_307" -> "x_307";
"x_307" -> "x_307";
"x_307" -> "x_307";
"x_307" -> "x_307";
"t1_303" -> "t0_313";
"t0_313" -> "t0_313";
"t0_313" -> "t0_313";
"t0_313" -> "t0_313";
"t0_313" -> "t0_313";
"q_309" -> "t0_313";
"t0_313" -> "t0_313";
"q_315" -> "t0_313";
"t0_313" -> "t0_313";
"x_307" -> "q_309";
"x_307" -> "q_309";
"x_307" -> "q_315";
"x_307" -> "q_315";
"t0_313" -> "_320";
"_139" -> "_142";
"_306" -> "_142";
"t0_313" -> "_142";
"_320" -> "_142";
"DK_145" -> "DK_434";
"p_148" -> "p_435";
"j_436" -> "j_436";
"j_436" -> "j_436";
"*p_435" -> "_147";
"global_ideastruct.64+256" -> "_3";
"NONLOCAL" -> "global_ideastruct.0+32";
"NONLOCAL" -> "global_ideastruct.64+256";
"global_ideastruct.64+256" -> "global_ideastruct.64+256";
"global_ideastruct.64+256" -> "global_ideastruct.64+256";
"global_ideastruct.64+256" -> "global_ideastruct.64+256";
"global_ideastruct.64+256" -> "global_ideastruct.64+256";
"global_ideastruct.64+256" -> "global_ideastruct.64+256";
"global_ideastruct.64+256" -> "global_ideastruct.64+256";
"global_ideastruct.64+256" -> "global_ideastruct.64+256";
"_32" -> "global_ideastruct.64+256";
"global_ideastruct.64+256" -> "global_ideastruct.64+256";
"NONLOCAL" -> "plain1_55";
"systemerror" -> "systemerror.102_4";
"global_ideastruct.64+256" -> "_6";
"NONLOCAL" -> "crypt1_59";
"systemerror" -> "systemerror.104_7";
"global_ideastruct.64+256" -> "_9";
"NONLOCAL" -> "plain2_64";
"systemerror" -> "systemerror.106_10";
"global_ideastruct.64+256" -> "_410";
"_16" -> "_409";
"i_89" -> "_16";
"i_89" -> "i_89";
"i_89" -> "i_89";
"NONLOCAL" -> "_12";
"_12" -> "_15";
"global_ideastruct.64+256" -> "_17";
"global_ideastruct.0+32" -> "_18";
"global_ideastruct.64+256" -> "_408";
"global_ideastruct.64+256" -> "_20";
"NONLOCAL" -> "elapsed_322";
"j_413" -> "j_413";
"j_413" -> "j_413";
"j_412" -> "j_412";
"j_412" -> "j_412";
"i_332" -> "i_332";
"i_332" -> "i_332";
"NONLOCAL" -> "_333";
"global_min_ticks" -> "global_min_ticks.108_22";
"NONLOCAL" -> "global_min_ticks";
"accumtime_74" -> "accumtime_74";
"accumtime_74" -> "accumtime_74";
"_345" -> "accumtime_74";
"global_ideastruct.64+256" -> "_26";
"global_ideastruct.64+256" -> "_27";
"NONLOCAL" -> "elapsed_334";
"j_159" -> "j_159";
"j_159" -> "j_159";
"j_165" -> "j_165";
"j_165" -> "j_165";
"i_344" -> "i_344";
"i_344" -> "i_344";
"NONLOCAL" -> "_345";
"NONLOCAL" -> "_30";
"global_ideastruct.64+256" -> "_31";
"NONLOCAL" -> "_32";
"global_ideastruct.0+32" -> "_34";
"_157" -> "*_156";
"_183" -> "*_182";
"_147" -> "*DK_434";
"derefaddrtmp(214)" -> "*p_435";
"_15" -> "*_14";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"randnum";
"i_427";
"abs_randwc";
"_1" [label="\N\n_14 = _1 + UNKNOWN\l_324 = _1 + UNKNOWN\l_325 = _1 + UNKNOWN\l_328 = _1 + UNKNOWN\l_329 = _1 + UNKNOWN\l_336 = _1 + UNKNOWN\l_337 = _1 + UNKNOWN\l_340 = _1 + UNKNOWN\l_341 = _1 + UNKNOWN\l"];
"userkey";
"userkey_437" [label="\N\nuserkey_152 = userkey_437 + 16\l_157 = *userkey_437\l"];
"userkey_152";
"_156" [label="\N\n*_156 = _157\l"];
"_157";
"i_439";
"_162";
"Z_440" [label="\N\nZ_187 = Z_440 + UNKNOWN\l_166 = Z_440 + UNKNOWN\l_175 = Z_440 + UNKNOWN\l_182 = Z_440 + UNKNOWN\l"];
"Z_187";
"j_441";
"i_160" [label="\N\n_162 = i_160 + UNKNOWN\l_172 = i_160 + UNKNOWN\l_184 = i_160 + UNKNOWN\l"];
"_164";
"_166" [label="\N\n_167 = *_166\l"];
"_167";
"_169";
"_172";
"_174";
"_175" [label="\N\n_176 = *_175\l"];
"_176";
"_177";
"_179";
"_182" [label="\N\n*_182 = _179\l"];
"_184";
"_186";
"_95";
"_192";
"TT";
"Z_431" [label="\N\nZ_119 = Z_431 + 96\lt1_109 = *Z_431\l_110 = *Z_431 + 16\l_112 = *Z_431 + 32\l_115 = *Z_431 + 48\l_117 = *Z_431 + 64\l_120 = *Z_431 + 80\lt1_129 = *Z_431 + 96\l_130 = *Z_431 + 112\l_132 = *Z_431 + 128\l_135 = *Z_431 + 144\l_137 = *Z_431 + 160\l_139 = *Z_431 + 176\l"];
"Z_119";
"p_432" [label="\N\np_124 = p_432 + -96\l*p_432 + -192 = _280\l*p_432 + -176 = _135\l*p_432 + -160 = _137\l*p_432 + -144 = _302\l*p_432 + -128 = t1_129\l*p_432 + -112 = _130\l*p_432 + -96 = _236\l*p_432 + -80 = _117\l*p_432 + -64 = _115\l*p_432 + -48 = _258\l*p_432 + -32 = t1_109\l*p_432 + -16 = _110\l"];
"p_124";
"t1_109";
"_110";
"_112";
"_236";
"_115";
"_117";
"_120";
"_258";
"t1_129";
"_130";
"_132";
"_280";
"_135";
"_137";
"_139";
"_302";
"DK_434" [label="\N\nDK_145 = DK_434 + 16\l*DK_434 = _147\l"];
"DK_145";
"DK";
"p_435" [label="\N\np_148 = p_435 + 16\l_147 = *p_435\l*p_435 = derefaddrtmp(214)\l"];
"p_148";
"_147";
"derefaddrtmp(214)";
"AllocateMemory";
"systemerror.102_4";
"ReportError";
"ErrorExit";
"FreeMemory";
"_14" [label="\N\n*_14 = _1\l"];
"StartStopwatch";
"_324";
"_325";
"cipher_idea";
"_328";
"_329";
"StopStopwatch";
"accumtime_38";
"_336";
"_337";
"_340";
"_341";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "userkey";
"STOREDANYTHING" -> "_95";
"STOREDANYTHING" -> "userkey_152";
"STOREDANYTHING" -> "_162";
"STOREDANYTHING" -> "Z_187";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_172";
"STOREDANYTHING" -> "_175";
"STOREDANYTHING" -> "_182";
"STOREDANYTHING" -> "_184";
"STOREDANYTHING" -> "TT";
"STOREDANYTHING" -> "Z_119";
"STOREDANYTHING" -> "p_124";
"STOREDANYTHING" -> "_110";
"STOREDANYTHING" -> "_112";
"STOREDANYTHING" -> "_115";
"STOREDANYTHING" -> "_117";
"STOREDANYTHING" -> "_120";
"STOREDANYTHING" -> "t1_129";
"STOREDANYTHING" -> "_130";
"STOREDANYTHING" -> "_132";
"STOREDANYTHING" -> "_135";
"STOREDANYTHING" -> "_137";
"STOREDANYTHING" -> "_139";
"STOREDANYTHING" -> "DK_145";
"STOREDANYTHING" -> "DK";
"STOREDANYTHING" -> "p_148";
"STOREDANYTHING" -> "systemerror.102_4";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_324";
"STOREDANYTHING" -> "_325";
"STOREDANYTHING" -> "_328";
"STOREDANYTHING" -> "_329";
"STOREDANYTHING" -> "_336";
"STOREDANYTHING" -> "_337";
"STOREDANYTHING" -> "_340";
"STOREDANYTHING" -> "_341";
"_1" -> "ESCAPED";
"_1" -> "userkey";
"_1" -> "accumtime_38";
"userkey_152" -> "userkey_437";
"i_439" -> "i_160";
"_162" -> "i_439";
"_162" -> "_164";
"Z_187" -> "Z_440";
"_167" -> "_169";
"_169" -> "_179";
"_172" -> "_174";
"_176" -> "_177";
"_177" -> "_179";
"_184" -> "_186";
"_95" -> "_192";
"_95" -> "TT";
"_192" -> "TT";
"Z_119" -> "Z_431";
"p_124" -> "p_432";
"_112" -> "_236";
"_120" -> "_258";
"_132" -> "_280";
"_139" -> "_302";
"DK_145" -> "DK_434";
"p_148" -> "p_435";
"systemerror.102_4" -> "ESCAPED";
"_324" -> "ESCAPED";
"_325" -> "ESCAPED";
"_328" -> "ESCAPED";
"_329" -> "ESCAPED";
"accumtime_38" -> "ESCAPED";
"_336" -> "ESCAPED";
"_337" -> "ESCAPED";
"_340" -> "ESCAPED";
"_341" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _1\l"];
"STOREDANYTHING";
"INTEGER";
"randnum";
"i_427";
"abs_randwc";
"_1" [label="\N\n_14 = _1 + UNKNOWN\l_324 = _1 + UNKNOWN\l_325 = _1 + UNKNOWN\l_328 = _1 + UNKNOWN\l_329 = _1 + UNKNOWN\l_336 = _1 + UNKNOWN\l_337 = _1 + UNKNOWN\l_340 = _1 + UNKNOWN\l_341 = _1 + UNKNOWN\l"];
"userkey";
"userkey_437" [label="\N\nuserkey_152 = userkey_437 + 16\l_157 = *userkey_437\l"];
"userkey_152";
"_156" [label="\N\n*_156 = _157\l"];
"_157";
"i_439";
"_162";
"Z_440" [label="\N\nZ_187 = Z_440 + UNKNOWN\l_166 = Z_440 + UNKNOWN\l_175 = Z_440 + UNKNOWN\l_182 = Z_440 + UNKNOWN\l"];
"Z_187";
"j_441";
"i_160" [label="\N\n_162 = i_160 + UNKNOWN\l_172 = i_160 + UNKNOWN\l_184 = i_160 + UNKNOWN\l"];
"_164";
"_166" [label="\N\n_167 = *_166\l"];
"_167";
"_169";
"_172";
"_174";
"_175" [label="\N\n_176 = *_175\l"];
"_176";
"_177";
"_179";
"_182" [label="\N\n*_182 = _179\l"];
"_184";
"_186";
"_95";
"_192";
"TT";
"Z_431" [label="\N\nZ_119 = Z_431 + 96\lt1_109 = *Z_431\l_110 = *Z_431 + 16\l_112 = *Z_431 + 32\l_115 = *Z_431 + 48\l_117 = *Z_431 + 64\l_120 = *Z_431 + 80\lt1_129 = *Z_431 + 96\l_130 = *Z_431 + 112\l_132 = *Z_431 + 128\l_135 = *Z_431 + 144\l_137 = *Z_431 + 160\l_139 = *Z_431 + 176\l"];
"Z_119";
"p_432" [label="\N\np_124 = p_432 + -96\l*p_432 + -192 = _280\l*p_432 + -176 = _135\l*p_432 + -160 = _137\l*p_432 + -144 = _302\l*p_432 + -128 = t1_129\l*p_432 + -112 = _130\l*p_432 + -96 = _236\l*p_432 + -80 = _117\l*p_432 + -64 = _115\l*p_432 + -48 = _258\l*p_432 + -32 = t1_109\l*p_432 + -16 = _110\l"];
"p_124";
"t1_109";
"_110";
"_112";
"_236";
"_115";
"_117";
"_120";
"_258";
"t1_129";
"_130";
"_132";
"_280";
"_135";
"_137";
"_139";
"_302";
"DK_434" [label="\N\nDK_145 = DK_434 + 16\l*DK_434 = _147\l"];
"DK_145";
"DK";
"p_435" [label="\N\np_148 = p_435 + 16\l_147 = *p_435\l*p_435 = derefaddrtmp(214)\l"];
"p_148";
"_147";
"derefaddrtmp(214)";
"AllocateMemory";
"systemerror.102_4";
"ReportError";
"ErrorExit";
"FreeMemory";
"_14" [label="\N\n*_14 = _1\l"];
"StartStopwatch";
"_324";
"_325";
"cipher_idea";
"_328";
"_329";
"StopStopwatch";
"accumtime_38";
"_336";
"_337";
"_340";
"_341";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "userkey";
"STOREDANYTHING" -> "_95";
"STOREDANYTHING" -> "userkey_152";
"STOREDANYTHING" -> "_162";
"STOREDANYTHING" -> "Z_187";
"STOREDANYTHING" -> "_166";
"STOREDANYTHING" -> "_172";
"STOREDANYTHING" -> "_175";
"STOREDANYTHING" -> "_182";
"STOREDANYTHING" -> "_184";
"STOREDANYTHING" -> "TT";
"STOREDANYTHING" -> "Z_119";
"STOREDANYTHING" -> "p_124";
"STOREDANYTHING" -> "_110";
"STOREDANYTHING" -> "_112";
"STOREDANYTHING" -> "_115";
"STOREDANYTHING" -> "_117";
"STOREDANYTHING" -> "_120";
"STOREDANYTHING" -> "t1_129";
"STOREDANYTHING" -> "_130";
"STOREDANYTHING" -> "_132";
"STOREDANYTHING" -> "_135";
"STOREDANYTHING" -> "_137";
"STOREDANYTHING" -> "_139";
"STOREDANYTHING" -> "DK_145";
"STOREDANYTHING" -> "DK";
"STOREDANYTHING" -> "p_148";
"STOREDANYTHING" -> "systemerror.102_4";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_324";
"STOREDANYTHING" -> "_325";
"STOREDANYTHING" -> "_328";
"STOREDANYTHING" -> "_329";
"STOREDANYTHING" -> "_336";
"STOREDANYTHING" -> "_337";
"STOREDANYTHING" -> "_340";
"STOREDANYTHING" -> "_341";
"_1" -> "ESCAPED";
"_1" -> "userkey";
"_1" -> "_95";
"_1" -> "DK";
"_1" -> "systemerror.102_4";
"_1" -> "accumtime_38";
"userkey" -> "_157";
"userkey_152" -> "userkey_437";
"_157" -> "_95";
"i_439" -> "i_160";
"_162" -> "i_439";
"_162" -> "_164";
"Z_187" -> "Z_440";
"_167" -> "_169";
"_169" -> "_179";
"_172" -> "_174";
"_176" -> "_177";
"_177" -> "_179";
"_179" -> "_95";
"_184" -> "_186";
"_95" -> "ESCAPED";
"_95" -> "_167";
"_95" -> "_176";
"_95" -> "_192";
"_95" -> "TT";
"_95" -> "t1_109";
"_95" -> "_110";
"_95" -> "_112";
"_95" -> "_115";
"_95" -> "_117";
"_95" -> "_120";
"_95" -> "t1_129";
"_95" -> "_130";
"_95" -> "_132";
"_95" -> "_135";
"_95" -> "_137";
"_95" -> "_139";
"_192" -> "TT";
"TT" -> "_147";
"Z_119" -> "Z_431";
"p_124" -> "p_432";
"t1_109" -> "TT";
"_110" -> "TT";
"_112" -> "_236";
"_236" -> "TT";
"_115" -> "TT";
"_117" -> "TT";
"_120" -> "_258";
"_258" -> "TT";
"t1_129" -> "TT";
"_130" -> "TT";
"_132" -> "_280";
"_280" -> "TT";
"_135" -> "TT";
"_137" -> "TT";
"_139" -> "_302";
"_302" -> "TT";
"DK_145" -> "DK_434";
"DK" -> "ESCAPED";
"p_148" -> "p_435";
"_147" -> "DK";
"derefaddrtmp(214)" -> "TT";
"systemerror.102_4" -> "ESCAPED";
"_324" -> "ESCAPED";
"_325" -> "ESCAPED";
"_328" -> "ESCAPED";
"_329" -> "ESCAPED";
"accumtime_38" -> "ESCAPED";
"_336" -> "ESCAPED";
"_337" -> "ESCAPED";
"_340" -> "ESCAPED";
"_341" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL Z DK systemerror }
NONLOCAL = { ESCAPED NONLOCAL } same as _1
STOREDANYTHING = { }
INTEGER = { ANYTHING }
randnum = { }
i_427 = { NULL NONLOCAL }
i_94 = { NULL NONLOCAL } same as i_427
abs_randwc = { }
_1 = { ESCAPED NONLOCAL }
_2 = { ESCAPED NONLOCAL } same as _1
userkey = { ESCAPED NONLOCAL }
i_428 = { NULL NONLOCAL } same as i_427
i_91 = { NULL NONLOCAL } same as i_427
Z = { NULL ESCAPED NONLOCAL } same as _95
userkey_437 = { userkey }
userkey_152 = { userkey }
j_438 = { NULL NONLOCAL } same as i_427
j_158 = { NULL NONLOCAL } same as i_427
_154 = { NULL NONLOCAL } same as i_427
_155 = { NULL NONLOCAL } same as i_427
_156 = { Z }
_157 = { ESCAPED NONLOCAL }
i_439 = { NULL NONLOCAL }
_162 = { NULL NONLOCAL }
Z_440 = { Z }
Z_187 = { Z }
j_441 = { NONLOCAL }
j_189 = { NONLOCAL } same as j_441
i_160 = { NULL NONLOCAL }
_161 = { NULL NONLOCAL } same as i_160
_163 = { NULL NONLOCAL } same as _162
_164 = { NULL NONLOCAL }
_166 = { Z }
_167 = { NULL ESCAPED NONLOCAL }
_168 = { NULL ESCAPED NONLOCAL } same as _167
_169 = { NULL ESCAPED NONLOCAL }
_170 = { NULL ESCAPED NONLOCAL } same as _169
_171 = { NULL NONLOCAL } same as i_160
_172 = { NULL NONLOCAL }
_173 = { NULL NONLOCAL } same as _172
_174 = { NULL NONLOCAL }
_175 = { Z }
_176 = { NULL ESCAPED NONLOCAL }
_177 = { NULL ESCAPED NONLOCAL }
_178 = { NULL ESCAPED NONLOCAL } same as _177
_179 = { NULL ESCAPED NONLOCAL }
_180 = { NULL NONLOCAL } same as i_160
_181 = { NULL NONLOCAL } same as i_160
_182 = { Z }
_183 = { NULL ESCAPED NONLOCAL } same as _179
_184 = { NULL NONLOCAL }
_185 = { NULL NONLOCAL } same as _184
_186 = { NULL NONLOCAL }
_95 = { NULL ESCAPED NONLOCAL }
_96 = { NULL ESCAPED NONLOCAL } same as _95
_192 = { NULL ESCAPED NONLOCAL }
t1_193 = { NULL ESCAPED NONLOCAL } same as _192
_194 = { NULL ESCAPED NONLOCAL } same as _192
y_195 = { NULL ESCAPED NONLOCAL } same as _192
_196 = { NULL ESCAPED NONLOCAL } same as _192
x_197 = { NULL ESCAPED NONLOCAL } same as _192
x_200 = { NULL ESCAPED NONLOCAL } same as _192
t0_203 = { NULL ESCAPED NONLOCAL } same as _192
t0_204 = { NULL ESCAPED NONLOCAL } same as _192
t1_201 = { NULL ESCAPED NONLOCAL } same as _192
t1_208 = { NULL ESCAPED NONLOCAL } same as _192
y_198 = { NULL ESCAPED NONLOCAL } same as _192
y_206 = { NULL ESCAPED NONLOCAL } same as _192
q_199 = { NULL ESCAPED NONLOCAL } same as _192
_202 = { NULL ESCAPED NONLOCAL } same as _192
q_205 = { NULL ESCAPED NONLOCAL } same as _192
_207 = { NULL ESCAPED NONLOCAL } same as _192
_210 = { NULL ESCAPED NONLOCAL } same as _192
_107 = { NULL ESCAPED NONLOCAL } same as _192
_98 = { NULL ESCAPED NONLOCAL } same as _95
t2_99 = { NULL ESCAPED NONLOCAL } same as _95
_100 = { NULL ESCAPED NONLOCAL } same as _95
t3_101 = { NULL ESCAPED NONLOCAL } same as _95
_103 = { NULL ESCAPED NONLOCAL } same as _95
_104 = { NULL ESCAPED NONLOCAL } same as _95
_214 = { NULL ESCAPED NONLOCAL } same as _192
t1_215 = { NULL ESCAPED NONLOCAL } same as _192
_216 = { NULL ESCAPED NONLOCAL } same as _192
y_217 = { NULL ESCAPED NONLOCAL } same as _192
_218 = { NULL ESCAPED NONLOCAL } same as _192
x_219 = { NULL ESCAPED NONLOCAL } same as _192
x_222 = { NULL ESCAPED NONLOCAL } same as _192
t0_225 = { NULL ESCAPED NONLOCAL } same as _192
t0_226 = { NULL ESCAPED NONLOCAL } same as _192
t1_223 = { NULL ESCAPED NONLOCAL } same as _192
t1_230 = { NULL ESCAPED NONLOCAL } same as _192
y_220 = { NULL ESCAPED NONLOCAL } same as _192
y_228 = { NULL ESCAPED NONLOCAL } same as _192
q_221 = { NULL ESCAPED NONLOCAL } same as _192
_224 = { NULL ESCAPED NONLOCAL } same as _192
q_227 = { NULL ESCAPED NONLOCAL } same as _192
_229 = { NULL ESCAPED NONLOCAL } same as _192
_232 = { NULL ESCAPED NONLOCAL } same as _192
_106 = { NULL ESCAPED NONLOCAL } same as _192
TT = { NULL ESCAPED NONLOCAL }
Z_431 = { Z }
Z_119 = { Z }
p_432 = { TT }
p_124 = { TT }
j_433 = { NONLOCAL } same as j_441
j_127 = { NONLOCAL } same as j_441
t1_109 = { NULL ESCAPED NONLOCAL }
_110 = { NULL ESCAPED NONLOCAL }
_112 = { NULL ESCAPED NONLOCAL }
_113 = { NULL ESCAPED NONLOCAL } same as _112
_236 = { NULL ESCAPED NONLOCAL }
t1_237 = { NULL ESCAPED NONLOCAL } same as _236
_238 = { NULL ESCAPED NONLOCAL } same as _236
y_239 = { NULL ESCAPED NONLOCAL } same as _236
_240 = { NULL ESCAPED NONLOCAL } same as _236
x_241 = { NULL ESCAPED NONLOCAL } same as _236
x_244 = { NULL ESCAPED NONLOCAL } same as _236
t0_247 = { NULL ESCAPED NONLOCAL } same as _236
t0_248 = { NULL ESCAPED NONLOCAL } same as _236
t1_245 = { NULL ESCAPED NONLOCAL } same as _236
t1_252 = { NULL ESCAPED NONLOCAL } same as _236
y_242 = { NULL ESCAPED NONLOCAL } same as _236
y_250 = { NULL ESCAPED NONLOCAL } same as _236
q_243 = { NULL ESCAPED NONLOCAL } same as _236
_246 = { NULL ESCAPED NONLOCAL } same as _236
q_249 = { NULL ESCAPED NONLOCAL } same as _236
_251 = { NULL ESCAPED NONLOCAL } same as _236
_254 = { NULL ESCAPED NONLOCAL } same as _236
_125 = { NULL ESCAPED NONLOCAL } same as _236
_115 = { NULL ESCAPED NONLOCAL }
t2_116 = { NULL ESCAPED NONLOCAL } same as _115
_117 = { NULL ESCAPED NONLOCAL }
t3_118 = { NULL ESCAPED NONLOCAL } same as _117
_120 = { NULL ESCAPED NONLOCAL }
_121 = { NULL ESCAPED NONLOCAL } same as _120
_258 = { NULL ESCAPED NONLOCAL }
t1_259 = { NULL ESCAPED NONLOCAL } same as _258
_260 = { NULL ESCAPED NONLOCAL } same as _258
y_261 = { NULL ESCAPED NONLOCAL } same as _258
_262 = { NULL ESCAPED NONLOCAL } same as _258
x_263 = { NULL ESCAPED NONLOCAL } same as _258
x_266 = { NULL ESCAPED NONLOCAL } same as _258
t0_269 = { NULL ESCAPED NONLOCAL } same as _258
t0_270 = { NULL ESCAPED NONLOCAL } same as _258
t1_267 = { NULL ESCAPED NONLOCAL } same as _258
t1_274 = { NULL ESCAPED NONLOCAL } same as _258
y_264 = { NULL ESCAPED NONLOCAL } same as _258
y_272 = { NULL ESCAPED NONLOCAL } same as _258
q_265 = { NULL ESCAPED NONLOCAL } same as _258
_268 = { NULL ESCAPED NONLOCAL } same as _258
q_271 = { NULL ESCAPED NONLOCAL } same as _258
_273 = { NULL ESCAPED NONLOCAL } same as _258
_276 = { NULL ESCAPED NONLOCAL } same as _258
_123 = { NULL ESCAPED NONLOCAL } same as _258
t1_129 = { NULL ESCAPED NONLOCAL }
_130 = { NULL ESCAPED NONLOCAL }
_132 = { NULL ESCAPED NONLOCAL }
_133 = { NULL ESCAPED NONLOCAL } same as _132
_280 = { NULL ESCAPED NONLOCAL }
t1_281 = { NULL ESCAPED NONLOCAL } same as _280
_282 = { NULL ESCAPED NONLOCAL } same as _280
y_283 = { NULL ESCAPED NONLOCAL } same as _280
_284 = { NULL ESCAPED NONLOCAL } same as _280
x_285 = { NULL ESCAPED NONLOCAL } same as _280
x_288 = { NULL ESCAPED NONLOCAL } same as _280
t0_291 = { NULL ESCAPED NONLOCAL } same as _280
t0_292 = { NULL ESCAPED NONLOCAL } same as _280
t1_289 = { NULL ESCAPED NONLOCAL } same as _280
t1_296 = { NULL ESCAPED NONLOCAL } same as _280
y_286 = { NULL ESCAPED NONLOCAL } same as _280
y_294 = { NULL ESCAPED NONLOCAL } same as _280
q_287 = { NULL ESCAPED NONLOCAL } same as _280
_290 = { NULL ESCAPED NONLOCAL } same as _280
q_293 = { NULL ESCAPED NONLOCAL } same as _280
_295 = { NULL ESCAPED NONLOCAL } same as _280
_298 = { NULL ESCAPED NONLOCAL } same as _280
_143 = { NULL ESCAPED NONLOCAL } same as _280
_135 = { NULL ESCAPED NONLOCAL }
t2_136 = { NULL ESCAPED NONLOCAL } same as _135
_137 = { NULL ESCAPED NONLOCAL }
t3_138 = { NULL ESCAPED NONLOCAL } same as _137
_139 = { NULL ESCAPED NONLOCAL }
_140 = { NULL ESCAPED NONLOCAL } same as _139
_302 = { NULL ESCAPED NONLOCAL }
t1_303 = { NULL ESCAPED NONLOCAL } same as _302
_304 = { NULL ESCAPED NONLOCAL } same as _302
y_305 = { NULL ESCAPED NONLOCAL } same as _302
_306 = { NULL ESCAPED NONLOCAL } same as _302
x_307 = { NULL ESCAPED NONLOCAL } same as _302
x_310 = { NULL ESCAPED NONLOCAL } same as _302
t0_313 = { NULL ESCAPED NONLOCAL } same as _302
t0_314 = { NULL ESCAPED NONLOCAL } same as _302
t1_311 = { NULL ESCAPED NONLOCAL } same as _302
t1_318 = { NULL ESCAPED NONLOCAL } same as _302
y_308 = { NULL ESCAPED NONLOCAL } same as _302
y_316 = { NULL ESCAPED NONLOCAL } same as _302
q_309 = { NULL ESCAPED NONLOCAL } same as _302
_312 = { NULL ESCAPED NONLOCAL } same as _302
q_315 = { NULL ESCAPED NONLOCAL } same as _302
_317 = { NULL ESCAPED NONLOCAL } same as _302
_320 = { NULL ESCAPED NONLOCAL } same as _302
_142 = { NULL ESCAPED NONLOCAL } same as _302
DK_434 = { DK }
DK_145 = { DK }
DK = { NULL ESCAPED NONLOCAL }
p_435 = { TT }
p_148 = { TT }
j_436 = { NULL NONLOCAL } same as i_427
j_150 = { NULL NONLOCAL } same as i_427
_147 = { NULL ESCAPED NONLOCAL }
derefaddrtmp(214) = { NULL }
_3 = { ESCAPED NONLOCAL } same as _1
global_ideastruct.0+32 = { ESCAPED NONLOCAL } same as _1
global_ideastruct.64+256 = { ESCAPED NONLOCAL } same as _1
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.102_4
plain1_55 = { ESCAPED NONLOCAL } same as _1
systemerror.102_4 = { ESCAPED NONLOCAL }
ReportError = { }
ErrorExit = { }
_6 = { ESCAPED NONLOCAL } same as _1
crypt1_59 = { ESCAPED NONLOCAL } same as _1
systemerror.104_7 = { ESCAPED NONLOCAL } same as systemerror.102_4
FreeMemory = { }
_9 = { ESCAPED NONLOCAL } same as _1
plain2_64 = { ESCAPED NONLOCAL } same as _1
systemerror.106_10 = { ESCAPED NONLOCAL } same as systemerror.102_4
_410 = { ESCAPED NONLOCAL } same as _1
_409 = { NULL NONLOCAL } same as i_427
_16 = { NULL NONLOCAL } same as i_427
i_111 = { NULL NONLOCAL } same as i_427
i_89 = { NULL NONLOCAL } same as i_427
_12 = { ESCAPED NONLOCAL } same as _1
_14 = { ESCAPED NONLOCAL }
_15 = { ESCAPED NONLOCAL } same as _1
_17 = { ESCAPED NONLOCAL } same as _1
_18 = { ESCAPED NONLOCAL } same as _1
_408 = { ESCAPED NONLOCAL } same as _1
_24 = { ESCAPED NONLOCAL } same as _1
_20 = { ESCAPED NONLOCAL } same as _1
StartStopwatch = { }
elapsed_322 = { ESCAPED NONLOCAL } same as _1
j_413 = { NULL NONLOCAL } same as i_427
j_326 = { NULL NONLOCAL } same as i_427
_324 = { ESCAPED NONLOCAL }
_325 = { ESCAPED NONLOCAL }
cipher_idea = { }
j_412 = { NULL NONLOCAL } same as i_427
j_330 = { NULL NONLOCAL } same as i_427
_328 = { ESCAPED NONLOCAL }
_329 = { ESCAPED NONLOCAL }
i_332 = { NULL NONLOCAL } same as i_427
i_188 = { NULL NONLOCAL } same as i_427
StopStopwatch = { }
_333 = { ESCAPED NONLOCAL } same as _1
global_min_ticks.108_22 = { ESCAPED NONLOCAL } same as _1
global_min_ticks = { ESCAPED NONLOCAL } same as _1
_23 = { ESCAPED NONLOCAL } same as _1
accumtime_38 = { NULL ESCAPED NONLOCAL }
accumtime_74 = { NULL ESCAPED NONLOCAL } same as accumtime_38
iterations_39 = { ESCAPED NONLOCAL } same as _1
iterations_75 = { ESCAPED NONLOCAL } same as _1
_26 = { ESCAPED NONLOCAL } same as _1
_27 = { ESCAPED NONLOCAL } same as _1
elapsed_334 = { ESCAPED NONLOCAL } same as _1
j_159 = { NULL NONLOCAL } same as i_427
j_338 = { NULL NONLOCAL } same as i_427
_336 = { ESCAPED NONLOCAL }
_337 = { ESCAPED NONLOCAL }
j_165 = { NULL NONLOCAL } same as i_427
j_342 = { NULL NONLOCAL } same as i_427
_340 = { ESCAPED NONLOCAL }
_341 = { ESCAPED NONLOCAL }
i_344 = { NULL NONLOCAL } same as i_427
i_153 = { NULL NONLOCAL } same as i_427
_345 = { ESCAPED NONLOCAL } same as _1
_28 = { ESCAPED NONLOCAL } same as _1
_29 = { ESCAPED NONLOCAL } same as _1
TicksToSecs = { }
_30 = { ESCAPED NONLOCAL } same as _1
_31 = { ESCAPED NONLOCAL } same as _1
TicksToFracSecs = { }
_32 = { ESCAPED NONLOCAL } same as _1
_33 = { ESCAPED NONLOCAL } same as _1
_34 = { ESCAPED NONLOCAL } same as _1


Alias information for DoIDEA

Aliased symbols

TT, UID D.8363, u16[52], is addressable
systemerror, UID D.5266, int, is addressable
userkey, UID D.5262, u16[8], is addressable
DK, UID D.5261, u16[52], is addressable
Z, UID D.5260, u16[52], is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.5260 D.5261 D.5266 } (escaped)

Flow-insensitive points-to information

_14, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
plain1_55, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
crypt1_59, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
plain2_64, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
Z_119, points-to NULL, points-to vars: { D.5260 } (escaped)
p_124, points-to NULL, points-to vars: { D.8363 }
DK_145, points-to NULL, points-to vars: { D.5261 } (escaped)
p_148, points-to NULL, points-to vars: { D.8363 }
userkey_152, points-to NULL, points-to vars: { D.5262 }
_156, points-to NULL, points-to vars: { D.5260 } (escaped)
_166, points-to NULL, points-to vars: { D.5260 } (escaped)
_175, points-to NULL, points-to vars: { D.5260 } (escaped)
_182, points-to NULL, points-to vars: { D.5260 } (escaped)
Z_187, points-to NULL, points-to vars: { D.5260 } (escaped)
_324, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_325, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_328, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_329, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_336, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_337, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_340, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_341, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
Z_431, points-to NULL, points-to vars: { D.5260 } (escaped)
p_432, points-to NULL, points-to vars: { D.8363 }
DK_434, points-to NULL, points-to vars: { D.5261 } (escaped)
p_435, points-to NULL, points-to vars: { D.8363 }
userkey_437, points-to NULL, points-to vars: { D.5262 }
Z_440, points-to NULL, points-to vars: { D.5260 } (escaped)

;; 22 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 110 89 4 109 88 5 108 87 6 107 7 111 8 9 86 10 112 11 106 12 13 113 14 15 85 16 114 17 105 18 19 20 115 21 22 84 23 116 24 104 25 26 117 27 28 83 29 118 30 103 31 32 102 33 119 34 35 82 36 120 37 101 38 39 121 40 41 81 42 122 43 100 44 45 46 99 47 123 48 49 124 50 51 125 52 53 80 54 127 98 126 55 56 57 77 79 58 97 78 59 96 130 60 131 95 61 132 129 62 133 63 134 94 128 64 65 74 76 66 93 75 67 92 136 68 137 91 69 138 135 70 90 71 139 72 73
;;
;; Loop 5
;;  header 65, latch 90
;;  depth 1, outer 0
;;  nodes: 65 90 70 137 135 68 136 138 69 91 74 67 92 75 66 93 76
;;
;; Loop 19
;;  header 69, latch 91
;;  depth 2, outer 5
;;  nodes: 69 91 68 136 138 67 92 75 66 93 76
;;
;; Loop 20
;;  header 67, latch 92
;;  depth 3, outer 19
;;  nodes: 67 92
;;
;; Loop 21
;;  header 66, latch 93
;;  depth 3, outer 19
;;  nodes: 66 93
;;
;; Loop 4
;;  header 57, latch 94
;;  depth 1, outer 0
;;  nodes: 57 94 63 62 131 129 60 130 132 61 95 77 59 96 78 58 97 79
;;
;; Loop 16
;;  header 61, latch 95
;;  depth 2, outer 4
;;  nodes: 61 95 60 130 132 59 96 78 58 97 79
;;
;; Loop 17
;;  header 59, latch 96
;;  depth 3, outer 16
;;  nodes: 59 96
;;
;; Loop 18
;;  header 58, latch 97
;;  depth 3, outer 16
;;  nodes: 58 97
;;
;; Loop 3
;;  header 54, latch 98
;;  depth 1, outer 0
;;  nodes: 54 98
;;
;; Loop 6
;;  header 46, latch 99
;;  depth 1, outer 0
;;  nodes: 46 99
;;
;; Loop 15
;;  header 42, latch 100
;;  depth 1, outer 0
;;  nodes: 42 100 43
;;
;; Loop 14
;;  header 36, latch 101
;;  depth 1, outer 0
;;  nodes: 36 101 37
;;
;; Loop 7
;;  header 20, latch 102
;;  depth 1, outer 0
;;  nodes: 20 102 32 117 118 28 31 30 29 83 103 27 26 115 116 22 25 24 23 84 104 21
;;
;; Loop 13
;;  header 29, latch 103
;;  depth 2, outer 7
;;  nodes: 29 103 30
;;
;; Loop 12
;;  header 23, latch 104
;;  depth 2, outer 7
;;  nodes: 23 104 24
;;
;; Loop 11
;;  header 16, latch 105
;;  depth 1, outer 0
;;  nodes: 16 105 17
;;
;; Loop 10
;;  header 10, latch 106
;;  depth 1, outer 0
;;  nodes: 10 106 11
;;
;; Loop 8
;;  header 6, latch 107
;;  depth 1, outer 0
;;  nodes: 6 107
;;
;; Loop 9
;;  header 5, latch 108
;;  depth 1, outer 0
;;  nodes: 5 108
;;
;; Loop 2
;;  header 4, latch 109
;;  depth 1, outer 0
;;  nodes: 4 109
;;
;; Loop 1
;;  header 3, latch 110
;;  depth 1, outer 0
;;  nodes: 3 110
;; 2 succs { 3 }
;; 3 succs { 110 89 }
;; 110 succs { 3 }
;; 89 succs { 4 }
;; 4 succs { 109 88 }
;; 109 succs { 4 }
;; 88 succs { 5 }
;; 5 succs { 108 87 }
;; 108 succs { 5 }
;; 87 succs { 6 }
;; 6 succs { 107 7 }
;; 107 succs { 6 }
;; 7 succs { 111 8 }
;; 111 succs { 13 }
;; 8 succs { 9 86 }
;; 9 succs { 13 }
;; 86 succs { 10 }
;; 10 succs { 112 11 }
;; 112 succs { 13 }
;; 11 succs { 106 12 }
;; 106 succs { 10 }
;; 12 succs { 13 }
;; 13 succs { 113 14 }
;; 113 succs { 19 }
;; 14 succs { 15 85 }
;; 15 succs { 19 }
;; 85 succs { 16 }
;; 16 succs { 114 17 }
;; 114 succs { 19 }
;; 17 succs { 105 18 }
;; 105 succs { 16 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 115 21 }
;; 115 succs { 26 }
;; 21 succs { 22 84 }
;; 22 succs { 26 }
;; 84 succs { 23 }
;; 23 succs { 116 24 }
;; 116 succs { 26 }
;; 24 succs { 104 25 }
;; 104 succs { 23 }
;; 25 succs { 26 }
;; 26 succs { 117 27 }
;; 117 succs { 32 }
;; 27 succs { 28 83 }
;; 28 succs { 32 }
;; 83 succs { 29 }
;; 29 succs { 118 30 }
;; 118 succs { 32 }
;; 30 succs { 103 31 }
;; 103 succs { 29 }
;; 31 succs { 32 }
;; 32 succs { 102 33 }
;; 102 succs { 20 }
;; 33 succs { 119 34 }
;; 119 succs { 39 }
;; 34 succs { 35 82 }
;; 35 succs { 39 }
;; 82 succs { 36 }
;; 36 succs { 120 37 }
;; 120 succs { 39 }
;; 37 succs { 101 38 }
;; 101 succs { 36 }
;; 38 succs { 39 }
;; 39 succs { 121 40 }
;; 121 succs { 45 }
;; 40 succs { 41 81 }
;; 41 succs { 45 }
;; 81 succs { 42 }
;; 42 succs { 122 43 }
;; 122 succs { 45 }
;; 43 succs { 100 44 }
;; 100 succs { 42 }
;; 44 succs { 45 }
;; 45 succs { 46 }
;; 46 succs { 99 47 }
;; 99 succs { 46 }
;; 47 succs { 48 123 }
;; 123 succs { 49 }
;; 48 succs { 49 }
;; 49 succs { 50 124 }
;; 124 succs { 51 }
;; 50 succs { 51 }
;; 51 succs { 52 125 }
;; 125 succs { 53 }
;; 52 succs { 53 }
;; 53 succs { 80 126 }
;; 80 succs { 54 }
;; 54 succs { 98 127 }
;; 127 succs { 55 }
;; 98 succs { 54 }
;; 126 succs { 55 }
;; 55 succs { 56 128 }
;; 56 succs { 57 }
;; 57 succs { 77 129 }
;; 77 succs { 61 }
;; 79 succs { 58 }
;; 58 succs { 97 78 }
;; 97 succs { 58 }
;; 78 succs { 59 }
;; 59 succs { 96 130 }
;; 96 succs { 59 }
;; 130 succs { 60 }
;; 60 succs { 95 131 }
;; 131 succs { 62 }
;; 95 succs { 61 }
;; 61 succs { 79 132 }
;; 132 succs { 60 }
;; 129 succs { 62 }
;; 62 succs { 133 63 }
;; 133 succs { 64 }
;; 63 succs { 94 134 }
;; 134 succs { 64 }
;; 94 succs { 57 }
;; 128 succs { 64 }
;; 64 succs { 65 }
;; 65 succs { 74 135 }
;; 74 succs { 69 }
;; 76 succs { 66 }
;; 66 succs { 93 75 }
;; 93 succs { 66 }
;; 75 succs { 67 }
;; 67 succs { 92 136 }
;; 92 succs { 67 }
;; 136 succs { 68 }
;; 68 succs { 91 137 }
;; 137 succs { 70 }
;; 91 succs { 69 }
;; 69 succs { 76 138 }
;; 138 succs { 68 }
;; 135 succs { 70 }
;; 70 succs { 90 71 }
;; 90 succs { 65 }
;; 71 succs { 72 139 }
;; 139 succs { 73 }
;; 72 succs { 73 }
;; 73 succs { 1 }
find_duplicates: <bb 135> duplicate of <bb 137>
find_duplicates: <bb 136> duplicate of <bb 138>
find_duplicates: <bb 129> duplicate of <bb 131>
find_duplicates: <bb 130> duplicate of <bb 132>
Removing basic block 137
Removing basic block 138
Removing basic block 131
Removing basic block 132

Symbols to be put in SSA form
{ D.6340 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 140
Number of blocks to update: 135 ( 96%)


Removing basic block 74
Removing basic block 75
Removing basic block 76
Removing basic block 77
Removing basic block 78
Removing basic block 79
Removing basic block 80
Removing basic block 81
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 87
Removing basic block 88
Removing basic block 89
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 98
Removing basic block 99
Removing basic block 100
Removing basic block 101
Removing basic block 102
Removing basic block 103
Removing basic block 104
Removing basic block 105
Removing basic block 106
Removing basic block 107
Removing basic block 108
Removing basic block 109
Removing basic block 110
Removing basic block 111
Removing basic block 112
Removing basic block 113
Removing basic block 114
Removing basic block 115
Removing basic block 116
Removing basic block 117
Removing basic block 118
Removing basic block 119
Removing basic block 120
Removing basic block 121
Removing basic block 122
Removing basic block 123
Removing basic block 124
Removing basic block 125
Removing basic block 126
Removing basic block 127
Merging blocks 129 and 62
Merging blocks 130 and 60
Merging blocks 135 and 70
Merging blocks 136 and 68
Removing basic block 139
DoIDEA ()
{
  register long unsigned int i;
  register long unsigned int j;
  long unsigned int elapsed;
  long unsigned int D.8430;
  register long unsigned int i;
  register long unsigned int j;
  long unsigned int elapsed;
  long unsigned int D.8419;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8408;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8402;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8396;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8390;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8384;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8378;
  u16 x;
  int i;
  int j;
  u16 * userkey;
  u16 * Z;
  u16 TT[52];
  int j;
  u16 t1;
  u16 t2;
  u16 t3;
  u16 * p;
  u16 * Z;
  u16 * DK;
  faruchar * plain2;
  faruchar * crypt1;
  faruchar * plain1;
  int systemerror;
  double iterations;
  long unsigned int accumtime;
  u16 userkey[8];
  u16 DK[52];
  u16 Z[52];
  int i;
  unsigned int _1;
  short unsigned int _2;
  long unsigned int _3;
  int systemerror.102_4;
  long unsigned int _6;
  int systemerror.104_7;
  long unsigned int _9;
  int systemerror.106_10;
  unsigned int _12;
  faruchar * _14;
  unsigned char _15;
  long unsigned int _16;
  long unsigned int _17;
  int _18;
  long unsigned int _20;
  long unsigned int global_min_ticks.108_22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _28;
  double _29;
  long unsigned int _30;
  long unsigned int _31;
  double _32;
  double _33;
  int _34;
  short unsigned int _95;
  int _96;
  short unsigned int _98;
  short unsigned int _100;
  short unsigned int _103;
  int _104;
  short unsigned int _106;
  short unsigned int _107;
  short unsigned int _110;
  short unsigned int _112;
  int _113;
  short unsigned int _115;
  short unsigned int _117;
  short unsigned int _120;
  int _121;
  short unsigned int _123;
  short unsigned int _125;
  short unsigned int _130;
  short unsigned int _132;
  int _133;
  short unsigned int _135;
  short unsigned int _137;
  short unsigned int _139;
  int _140;
  short unsigned int _142;
  short unsigned int _143;
  short unsigned int _147;
  long unsigned int _154;
  long unsigned int _155;
  u16 * _156;
  short unsigned int _157;
  long unsigned int _161;
  int _162;
  long unsigned int _163;
  long unsigned int _164;
  u16 * _166;
  short unsigned int _167;
  int _168;
  int _169;
  signed short _170;
  int _171;
  int _172;
  long unsigned int _173;
  long unsigned int _174;
  u16 * _175;
  short unsigned int _176;
  short unsigned int _177;
  signed short _178;
  signed short _179;
  sizetype _180;
  sizetype _181;
  u16 * _182;
  short unsigned int _183;
  int _184;
  long unsigned int _185;
  long unsigned int _186;
  int _192;
  int _194;
  short unsigned int _196;
  short unsigned int _202;
  short unsigned int _207;
  short unsigned int _210;
  int _214;
  int _216;
  short unsigned int _218;
  short unsigned int _224;
  short unsigned int _229;
  short unsigned int _232;
  int _236;
  int _238;
  short unsigned int _240;
  short unsigned int _246;
  short unsigned int _251;
  short unsigned int _254;
  int _258;
  int _260;
  short unsigned int _262;
  short unsigned int _268;
  short unsigned int _273;
  short unsigned int _276;
  int _280;
  int _282;
  short unsigned int _284;
  short unsigned int _290;
  short unsigned int _295;
  short unsigned int _298;
  int _302;
  int _304;
  short unsigned int _306;
  short unsigned int _312;
  short unsigned int _317;
  short unsigned int _320;
  faruchar * _324;
  faruchar * _325;
  faruchar * _328;
  faruchar * _329;
  long unsigned int _333;
  faruchar * _336;
  faruchar * _337;
  faruchar * _340;
  faruchar * _341;
  long unsigned int _345;
  long unsigned int _408;
  long unsigned int _409;
  long unsigned int _410;
  long unsigned int prephitmp_468;
  long unsigned int pretmp_469;
  long unsigned int pretmp_470;
  long unsigned int prephitmp_471;
  long unsigned int pretmp_472;
  long unsigned int pretmp_473;
  long unsigned int prephitmp_474;
  long unsigned int pretmp_475;
  long unsigned int prephitmp_476;
  long unsigned int pretmp_477;
  long unsigned int prephitmp_478;

  <bb 2> [0.40%]:
  randnum (3);

  <bb 3> [3.18%]:
  # i_427 = PHI <i_94(3), 0(2)>
  _1 = abs_randwc (60000);
  _2 = (short unsigned int) _1;
  userkey[i_427] = _2;
  i_94 = i_427 + 1;
  if (i_94 != 8)
    goto <bb 3>; [87.49%]
  else
    goto <bb 4>; [12.51%]

  <bb 4> [20.61%]:
  # i_428 = PHI <i_91(4), 0(3)>
  Z[i_428] = 0;
  i_91 = i_428 + 1;
  if (i_91 != 52)
    goto <bb 4>; [98.07%]
  else
    goto <bb 5>; [1.93%]

  <bb 5> [3.18%]:
  # userkey_437 = PHI <userkey_152(5), &userkey(4)>
  # j_438 = PHI <j_158(5), 0(4)>
  userkey_152 = userkey_437 + 2;
  _154 = (long unsigned int) j_438;
  _155 = _154 * 2;
  _156 = &Z + _155;
  _157 = *userkey_437;
  *_156 = _157;
  j_158 = j_438 + 1;
  if (j_158 != 8)
    goto <bb 5>; [87.49%]
  else
    goto <bb 6>; [12.51%]

  <bb 6> [17.49%]:
  # i_439 = PHI <_162(6), 0(5)>
  # Z_440 = PHI <Z_187(6), &Z(5)>
  # j_441 = PHI <j_189(6), 8(5)>
  i_160 = i_439 + 1;
  _161 = (long unsigned int) i_160;
  _162 = i_160 & 7;
  _163 = (long unsigned int) _162;
  _164 = _163 * 2;
  _166 = Z_440 + _164;
  _167 = *_166;
  _168 = (int) _167;
  _169 = _168 << 9;
  _170 = (signed short) _169;
  _171 = i_439 + 2;
  _172 = _171 & 7;
  _173 = (long unsigned int) _172;
  _174 = _173 * 2;
  _175 = Z_440 + _174;
  _176 = *_175;
  _177 = _176 >> 7;
  _178 = (signed short) _177;
  _179 = _170 | _178;
  _180 = _161 + 7;
  _181 = _180 * 2;
  _182 = Z_440 + _181;
  _183 = (short unsigned int) _179;
  *_182 = _183;
  _184 = i_160 & 8;
  _185 = (long unsigned int) _184;
  _186 = _185 * 2;
  Z_187 = Z_440 + _186;
  j_189 = j_441 + 1;
  if (j_189 != 52)
    goto <bb 6>; [97.73%]
  else
    goto <bb 7>; [2.27%]

  <bb 7> [0.40%]:
  _95 = MEM[(u16 *)&Z];
  _96 = (int) _95;
  if (_95 <= 1)
    goto <bb 13>; [53.32%]
  else
    goto <bb 8>; [46.68%]

  <bb 8> [0.19%]:
  _192 = 65537 / _96;
  t1_193 = (u16) _192;
  _194 = 65537 % _96;
  y_195 = (u16) _194;
  if (_194 == 1)
    goto <bb 9>; [30.50%]
  else
    goto <bb 10>; [69.50%]

  <bb 9> [0.06%]:
  _196 = 1 - t1_193;
  goto <bb 13>; [100.00%]

  <bb 10> [0.89%]:
  # x_197 = PHI <_95(8), x_200(11)>
  # t0_203 = PHI <1(8), t0_204(11)>
  # t1_201 = PHI <t1_193(8), t1_208(11)>
  # y_198 = PHI <y_195(8), y_206(11)>
  q_199 = x_197 / y_198;
  x_200 = x_197 % y_198;
  _202 = q_199 * t1_201;
  t0_204 = _202 + t0_203;
  if (x_200 == 1)
    goto <bb 13>; [7.50%]
  else
    goto <bb 11>; [92.50%]

  <bb 11> [0.83%]:
  q_205 = y_198 / x_200;
  y_206 = y_198 % x_200;
  _207 = t0_204 * q_205;
  t1_208 = t1_201 + _207;
  if (y_206 != 1)
    goto <bb 10>; [92.50%]
  else
    goto <bb 12>; [7.50%]

  <bb 12> [0.06%]:
  _210 = 1 - t1_208;

  <bb 13> [0.40%]:
  # _107 = PHI <_95(7), t0_204(10), _196(9), _210(12)>
  _98 = MEM[(u16 *)&Z + 2B];
  t2_99 = -_98;
  _100 = MEM[(u16 *)&Z + 4B];
  t3_101 = -_100;
  _103 = MEM[(u16 *)&Z + 6B];
  _104 = (int) _103;
  if (_103 <= 1)
    goto <bb 19>; [53.32%]
  else
    goto <bb 14>; [46.68%]

  <bb 14> [0.19%]:
  _214 = 65537 / _104;
  t1_215 = (u16) _214;
  _216 = 65537 % _104;
  y_217 = (u16) _216;
  if (_216 == 1)
    goto <bb 15>; [30.50%]
  else
    goto <bb 16>; [69.50%]

  <bb 15> [0.06%]:
  _218 = 1 - t1_215;
  goto <bb 19>; [100.00%]

  <bb 16> [0.89%]:
  # x_219 = PHI <_103(14), x_222(17)>
  # t0_225 = PHI <1(14), t0_226(17)>
  # t1_223 = PHI <t1_215(14), t1_230(17)>
  # y_220 = PHI <y_217(14), y_228(17)>
  q_221 = x_219 / y_220;
  x_222 = x_219 % y_220;
  _224 = q_221 * t1_223;
  t0_226 = _224 + t0_225;
  if (x_222 == 1)
    goto <bb 19>; [7.50%]
  else
    goto <bb 17>; [92.50%]

  <bb 17> [0.83%]:
  q_227 = y_220 / x_222;
  y_228 = y_220 % x_222;
  _229 = t0_226 * q_227;
  t1_230 = t1_223 + _229;
  if (y_228 != 1)
    goto <bb 16>; [92.50%]
  else
    goto <bb 18>; [7.50%]

  <bb 18> [0.06%]:
  _232 = 1 - t1_230;

  <bb 19> [0.40%]:
  # _106 = PHI <_103(13), t0_226(16), _218(15), _232(18)>
  MEM[(u16 *)&TT + 102B] = _106;
  MEM[(u16 *)&TT + 100B] = t3_101;
  MEM[(u16 *)&TT + 98B] = t2_99;
  MEM[(u16 *)&TT + 96B] = _107;

  <bb 20> [2.78%]:
  # Z_431 = PHI <Z_119(32), &MEM[(void *)&Z + 8B](19)>
  # p_432 = PHI <p_124(32), &MEM[(void *)&TT + 96B](19)>
  # j_433 = PHI <j_127(32), 1(19)>
  t1_109 = *Z_431;
  _110 = MEM[(u16 *)Z_431 + 2B];
  MEM[(u16 *)p_432 + -2B] = _110;
  MEM[(u16 *)p_432 + -4B] = t1_109;
  _112 = MEM[(u16 *)Z_431 + 4B];
  _113 = (int) _112;
  if (_112 <= 1)
    goto <bb 26>; [53.32%]
  else
    goto <bb 21>; [46.68%]

  <bb 21> [1.30%]:
  _236 = 65537 / _113;
  t1_237 = (u16) _236;
  _238 = 65537 % _113;
  y_239 = (u16) _238;
  if (_238 == 1)
    goto <bb 22>; [30.50%]
  else
    goto <bb 23>; [69.50%]

  <bb 22> [0.40%]:
  _240 = 1 - t1_237;
  goto <bb 26>; [100.00%]

  <bb 23> [6.25%]:
  # x_241 = PHI <_112(21), x_244(24)>
  # t0_247 = PHI <1(21), t0_248(24)>
  # t1_245 = PHI <t1_237(21), t1_252(24)>
  # y_242 = PHI <y_239(21), y_250(24)>
  q_243 = x_241 / y_242;
  x_244 = x_241 % y_242;
  _246 = q_243 * t1_245;
  t0_248 = _246 + t0_247;
  if (x_244 == 1)
    goto <bb 26>; [7.50%]
  else
    goto <bb 24>; [92.50%]

  <bb 24> [5.78%]:
  q_249 = y_242 / x_244;
  y_250 = y_242 % x_244;
  _251 = t0_248 * q_249;
  t1_252 = t1_245 + _251;
  if (y_250 != 1)
    goto <bb 23>; [92.50%]
  else
    goto <bb 25>; [7.50%]

  <bb 25> [0.43%]:
  _254 = 1 - t1_252;

  <bb 26> [2.78%]:
  # _125 = PHI <_112(20), t0_248(23), _240(22), _254(25)>
  _115 = MEM[(u16 *)Z_431 + 6B];
  t2_116 = -_115;
  _117 = MEM[(u16 *)Z_431 + 8B];
  t3_118 = -_117;
  Z_119 = &MEM[(void *)Z_431 + 12B];
  _120 = MEM[(u16 *)Z_431 + 10B];
  _121 = (int) _120;
  if (_120 <= 1)
    goto <bb 32>; [53.32%]
  else
    goto <bb 27>; [46.68%]

  <bb 27> [1.30%]:
  _258 = 65537 / _121;
  t1_259 = (u16) _258;
  _260 = 65537 % _121;
  y_261 = (u16) _260;
  if (_260 == 1)
    goto <bb 28>; [30.50%]
  else
    goto <bb 29>; [69.50%]

  <bb 28> [0.40%]:
  _262 = 1 - t1_259;
  goto <bb 32>; [100.00%]

  <bb 29> [6.25%]:
  # x_263 = PHI <_120(27), x_266(30)>
  # t0_269 = PHI <1(27), t0_270(30)>
  # t1_267 = PHI <t1_259(27), t1_274(30)>
  # y_264 = PHI <y_261(27), y_272(30)>
  q_265 = x_263 / y_264;
  x_266 = x_263 % y_264;
  _268 = q_265 * t1_267;
  t0_270 = _268 + t0_269;
  if (x_266 == 1)
    goto <bb 32>; [7.50%]
  else
    goto <bb 30>; [92.50%]

  <bb 30> [5.78%]:
  q_271 = y_264 / x_266;
  y_272 = y_264 % x_266;
  _273 = t0_270 * q_271;
  t1_274 = t1_267 + _273;
  if (y_272 != 1)
    goto <bb 29>; [92.50%]
  else
    goto <bb 31>; [7.50%]

  <bb 31> [0.43%]:
  _276 = 1 - t1_274;

  <bb 32> [2.78%]:
  # _123 = PHI <_120(26), t0_270(29), _262(28), _276(31)>
  MEM[(u16 *)p_432 + -6B] = _123;
  MEM[(u16 *)p_432 + -8B] = t2_116;
  MEM[(u16 *)p_432 + -10B] = t3_118;
  p_124 = &MEM[(void *)p_432 + -12B];
  MEM[(u16 *)p_432 + -12B] = _125;
  j_127 = j_433 + 1;
  if (j_127 != 8)
    goto <bb 20>; [85.70%]
  else
    goto <bb 33>; [14.30%]

  <bb 33> [0.40%]:
  t1_129 = MEM[(u16 *)Z_431 + 12B];
  _130 = MEM[(u16 *)Z_431 + 14B];
  MEM[(u16 *)p_432 + -14B] = _130;
  MEM[(u16 *)p_432 + -16B] = t1_129;
  _132 = MEM[(u16 *)Z_431 + 16B];
  _133 = (int) _132;
  if (_132 <= 1)
    goto <bb 39>; [53.32%]
  else
    goto <bb 34>; [46.68%]

  <bb 34> [0.19%]:
  _280 = 65537 / _133;
  t1_281 = (u16) _280;
  _282 = 65537 % _133;
  y_283 = (u16) _282;
  if (_282 == 1)
    goto <bb 35>; [30.50%]
  else
    goto <bb 36>; [69.50%]

  <bb 35> [0.06%]:
  _284 = 1 - t1_281;
  goto <bb 39>; [100.00%]

  <bb 36> [0.89%]:
  # x_285 = PHI <_132(34), x_288(37)>
  # t0_291 = PHI <1(34), t0_292(37)>
  # t1_289 = PHI <t1_281(34), t1_296(37)>
  # y_286 = PHI <y_283(34), y_294(37)>
  q_287 = x_285 / y_286;
  x_288 = x_285 % y_286;
  _290 = q_287 * t1_289;
  t0_292 = _290 + t0_291;
  if (x_288 == 1)
    goto <bb 39>; [7.50%]
  else
    goto <bb 37>; [92.50%]

  <bb 37> [0.83%]:
  q_293 = y_286 / x_288;
  y_294 = y_286 % x_288;
  _295 = t0_292 * q_293;
  t1_296 = t1_289 + _295;
  if (y_294 != 1)
    goto <bb 36>; [92.50%]
  else
    goto <bb 38>; [7.50%]

  <bb 38> [0.06%]:
  _298 = 1 - t1_296;

  <bb 39> [0.40%]:
  # _143 = PHI <_132(33), t0_292(36), _284(35), _298(38)>
  _135 = MEM[(u16 *)Z_431 + 18B];
  t2_136 = -_135;
  _137 = MEM[(u16 *)Z_431 + 20B];
  t3_138 = -_137;
  _139 = MEM[(u16 *)Z_431 + 22B];
  _140 = (int) _139;
  if (_139 <= 1)
    goto <bb 45>; [53.32%]
  else
    goto <bb 40>; [46.68%]

  <bb 40> [0.19%]:
  _302 = 65537 / _140;
  t1_303 = (u16) _302;
  _304 = 65537 % _140;
  y_305 = (u16) _304;
  if (_304 == 1)
    goto <bb 41>; [30.50%]
  else
    goto <bb 42>; [69.50%]

  <bb 41> [0.06%]:
  _306 = 1 - t1_303;
  goto <bb 45>; [100.00%]

  <bb 42> [0.89%]:
  # x_307 = PHI <_139(40), x_310(43)>
  # t0_313 = PHI <1(40), t0_314(43)>
  # t1_311 = PHI <t1_303(40), t1_318(43)>
  # y_308 = PHI <y_305(40), y_316(43)>
  q_309 = x_307 / y_308;
  x_310 = x_307 % y_308;
  _312 = q_309 * t1_311;
  t0_314 = _312 + t0_313;
  if (x_310 == 1)
    goto <bb 45>; [7.50%]
  else
    goto <bb 43>; [92.50%]

  <bb 43> [0.83%]:
  q_315 = y_308 / x_310;
  y_316 = y_308 % x_310;
  _317 = t0_314 * q_315;
  t1_318 = t1_311 + _317;
  if (y_316 != 1)
    goto <bb 42>; [92.50%]
  else
    goto <bb 44>; [7.50%]

  <bb 44> [0.06%]:
  _320 = 1 - t1_318;

  <bb 45> [0.40%]:
  # _142 = PHI <_139(39), t0_314(42), _306(41), _320(44)>
  MEM[(u16 *)p_432 + -18B] = _142;
  MEM[(u16 *)p_432 + -20B] = t3_138;
  MEM[(u16 *)p_432 + -22B] = t2_136;
  MEM[(u16 *)p_432 + -24B] = _143;

  <bb 46> [20.61%]:
  # DK_434 = PHI <DK_145(46), &DK(45)>
  # p_435 = PHI <p_148(46), &TT(45)>
  # j_436 = PHI <j_150(46), 0(45)>
  DK_145 = DK_434 + 2;
  _147 = *p_435;
  *DK_434 = _147;
  p_148 = p_435 + 2;
  *p_435 = 0;
  j_150 = j_436 + 1;
  if (j_150 != 52)
    goto <bb 46>; [98.07%]
  else
    goto <bb 47>; [1.93%]

  <bb 47> [0.40%]:
  TT ={v} {CLOBBER};
  _3 = global_ideastruct.arraysize;
  plain1_55 = AllocateMemory (_3, &systemerror);
  systemerror.102_4 = systemerror;
  if (systemerror.102_4 != 0)
    goto <bb 48>; [33.00%]
  else
    goto <bb 49>; [67.00%]

  <bb 48> [0.13%]:
  ReportError ("CPU:IDEA", systemerror.102_4);
  ErrorExit ();

  <bb 49> [0.40%]:
  _6 = global_ideastruct.arraysize;
  crypt1_59 = AllocateMemory (_6, &systemerror);
  systemerror.104_7 = systemerror;
  if (systemerror.104_7 != 0)
    goto <bb 50>; [33.00%]
  else
    goto <bb 51>; [67.00%]

  <bb 50> [0.13%]:
  ReportError ("CPU:IDEA", systemerror.104_7);
  FreeMemory (plain1_55, &systemerror);
  ErrorExit ();

  <bb 51> [0.40%]:
  _9 = global_ideastruct.arraysize;
  plain2_64 = AllocateMemory (_9, &systemerror);
  systemerror.106_10 = systemerror;
  if (systemerror.106_10 != 0)
    goto <bb 52>; [33.00%]
  else
    goto <bb 53>; [67.00%]

  <bb 52> [0.13%]:
  ReportError ("CPU:IDEA", systemerror.106_10);
  FreeMemory (plain1_55, &systemerror);
  FreeMemory (crypt1_59, &systemerror);
  ErrorExit ();

  <bb 53> [0.40%]:
  _410 = global_ideastruct.arraysize;
  if (_410 != 0)
    goto <bb 54>; [85.00%]
  else
    goto <bb 55>; [15.00%]

  <bb 54> [2.25%]:
  # _409 = PHI <_16(54), 0(53)>
  # i_111 = PHI <i_89(54), 0(53)>
  _12 = abs_randwc (255);
  _14 = plain1_55 + _409;
  _15 = (unsigned char) _12;
  *_14 = _15;
  i_89 = i_111 + 1;
  _16 = (long unsigned int) i_89;
  _17 = global_ideastruct.arraysize;
  if (_16 < _17)
    goto <bb 54>; [85.00%]
  else
    goto <bb 55>; [15.00%]

  <bb 55> [0.40%]:
  # prephitmp_468 = PHI <_17(54), _410(53)>
  _18 = global_ideastruct.adjust;
  if (_18 == 0)
    goto <bb 56>; [50.00%]
  else
    goto <bb 66>; [50.00%]

  <bb 56> [0.20%]:
  global_ideastruct.loops = 100;

  <bb 57> [1.27%]:
  # _408 = PHI <_24(64), 100(56)>
  _20 = global_ideastruct.arraysize;
  elapsed_322 = StartStopwatch ();
  if (_408 != 0)
    goto <bb 61>; [85.00%]
  else
    goto <bb 62>; [15.00%]

  <bb 58> [40.84%]:
  # j_413 = PHI <j_326(58), 0(61)>
  _324 = crypt1_59 + j_413;
  _325 = plain1_55 + j_413;
  cipher_idea (_325, _324, &Z);
  j_326 = j_413 + 8;
  if (_20 > j_326)
    goto <bb 58>; [85.00%]
  else
    goto <bb 59>; [15.00%]

  <bb 59> [40.84%]:
  # j_412 = PHI <j_330(59), 0(58)>
  _328 = plain2_64 + j_412;
  _329 = crypt1_59 + j_412;
  cipher_idea (_329, _328, &DK);
  j_330 = j_412 + 8;
  if (_20 > j_330)
    goto <bb 59>; [85.00%]
  else
    goto <bb 60>; [15.00%]

  <bb 60> [7.21%]:
  i_332 = i_188 + 1;
  if (i_332 < _408)
    goto <bb 61>; [85.00%]
  else
    goto <bb 62>; [15.00%]

  <bb 61> [7.21%]:
  # i_188 = PHI <i_332(60), 0(57)>
  if (_20 != 0)
    goto <bb 58>; [85.00%]
  else
    goto <bb 60>; [15.00%]

  <bb 62> [1.27%]:
  _333 = StopStopwatch (elapsed_322);
  global_min_ticks.108_22 = global_min_ticks;
  if (global_min_ticks.108_22 < _333)
    goto <bb 63>; [7.50%]
  else
    goto <bb 64>; [92.50%]

  <bb 63> [0.10%]:
  pretmp_470 = global_ideastruct.loops;
  pretmp_472 = global_ideastruct.arraysize;
  goto <bb 67>; [100.00%]

  <bb 64> [1.18%]:
  _23 = global_ideastruct.loops;
  _24 = _23 + 10;
  global_ideastruct.loops = _24;
  if (_24 <= 499999)
    goto <bb 57>; [92.50%]
  else
    goto <bb 65>; [7.50%]

  <bb 65> [0.09%]:
  pretmp_473 = global_ideastruct.arraysize;
  goto <bb 67>; [100.00%]

  <bb 66> [0.20%]:
  pretmp_469 = global_ideastruct.loops;

  <bb 67> [0.40%]:
  # prephitmp_471 = PHI <pretmp_469(66), pretmp_470(63), _24(65)>
  # prephitmp_474 = PHI <prephitmp_468(66), pretmp_472(63), pretmp_473(65)>

  <bb 68> [2.65%]:
  # accumtime_38 = PHI <0(67), accumtime_74(74)>
  # iterations_39 = PHI <0.0(67), iterations_75(74)>
  # prephitmp_476 = PHI <prephitmp_471(67), pretmp_475(74)>
  # prephitmp_478 = PHI <prephitmp_474(67), pretmp_477(74)>
  elapsed_334 = StartStopwatch ();
  if (prephitmp_476 != 0)
    goto <bb 72>; [85.00%]
  else
    goto <bb 73>; [15.00%]

  <bb 69> [85.00%]:
  # j_159 = PHI <j_338(69), 0(72)>
  _336 = crypt1_59 + j_159;
  _337 = plain1_55 + j_159;
  cipher_idea (_337, _336, &Z);
  j_338 = j_159 + 8;
  if (j_338 < prephitmp_478)
    goto <bb 69>; [85.00%]
  else
    goto <bb 70>; [15.00%]

  <bb 70> [85.00%]:
  # j_165 = PHI <j_342(70), 0(69)>
  _340 = plain2_64 + j_165;
  _341 = crypt1_59 + j_165;
  cipher_idea (_341, _340, &DK);
  j_342 = j_165 + 8;
  if (j_342 < prephitmp_478)
    goto <bb 70>; [85.00%]
  else
    goto <bb 71>; [15.00%]

  <bb 71> [15.00%]:
  i_344 = i_153 + 1;
  if (i_344 < prephitmp_476)
    goto <bb 72>; [85.00%]
  else
    goto <bb 73>; [15.00%]

  <bb 72> [15.00%]:
  # i_153 = PHI <i_344(71), 0(68)>
  if (prephitmp_478 != 0)
    goto <bb 69>; [85.00%]
  else
    goto <bb 71>; [15.00%]

  <bb 73> [2.65%]:
  _345 = StopStopwatch (elapsed_334);
  accumtime_74 = accumtime_38 + _345;
  _28 = global_ideastruct.loops;
  _29 = (double) _28;
  iterations_75 = _29 + iterations_39;
  _30 = TicksToSecs (accumtime_74);
  _31 = global_ideastruct.request_secs;
  if (_30 < _31)
    goto <bb 74>; [85.00%]
  else
    goto <bb 75>; [15.00%]

  <bb 74> [2.25%]:
  pretmp_475 = global_ideastruct.loops;
  pretmp_477 = global_ideastruct.arraysize;
  goto <bb 68>; [100.00%]

  <bb 75> [0.40%]:
  FreeMemory (plain1_55, &systemerror);
  FreeMemory (crypt1_59, &systemerror);
  FreeMemory (plain2_64, &systemerror);
  _32 = TicksToFracSecs (accumtime_74);
  _33 = iterations_75 / _32;
  global_ideastruct.iterspersec = _33;
  _34 = global_ideastruct.adjust;
  if (_34 == 0)
    goto <bb 76>; [54.00%]
  else
    goto <bb 77>; [46.00%]

  <bb 76> [0.21%]:
  global_ideastruct.adjust = 1;

  <bb 77> [0.40%]:
  Z ={v} {CLOBBER};
  DK ={v} {CLOBBER};
  userkey ={v} {CLOBBER};
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoHuffman (DoHuffman, funcdef_no=89, decl_uid=4657, cgraph_uid=89, symbol_order=114)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
global_huffstruct.0+32 = NONLOCAL
global_huffstruct.64+256 = NONLOCAL
_1 = global_huffstruct.64+256
ESCAPED = _1
ESCAPED = &systemerror
plaintext_51 = NONLOCAL
systemerror.143_2 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.143_2
_4 = global_huffstruct.64+256
ESCAPED = _4
ESCAPED = &systemerror
comparray_55 = NONLOCAL
systemerror.145_5 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.145_5
ESCAPED = plaintext_51
ESCAPED = &systemerror
_7 = global_huffstruct.64+256
ESCAPED = _7
ESCAPED = &systemerror
decomparray_60 = NONLOCAL
systemerror.147_8 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.147_8
ESCAPED = plaintext_51
ESCAPED = &systemerror
ESCAPED = comparray_55
ESCAPED = &systemerror
ESCAPED = &NONLOCAL
ESCAPED = &systemerror
_10 = NONLOCAL
hufftree = NONLOCAL
hufftree = _10
ESCAPED = _10
systemerror.149_11 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.149_11
ESCAPED = plaintext_51
ESCAPED = &systemerror
ESCAPED = comparray_55
ESCAPED = &systemerror
ESCAPED = decomparray_60
ESCAPED = &systemerror
ESCAPED = &NONLOCAL
_13 = global_huffstruct.64+256
_14 = _13
_14 = &NONLOCAL
tb_103 = plaintext_51
tb_103 = tb_106
bytessofar_98 = &NULL
bytessofar_98 = bytessofar_107
ESCAPED = &NONLOCAL
_95 = NONLOCAL
_96 = _95
_96 = &NONLOCAL
linelen_97 = _96
_99 = linelen_97
_99 = bytessofar_98
linelen_100 = _14
linelen_100 = bytessofar_98
linelen_101 = linelen_97
linelen_101 = linelen_100
linelen.155_102 = linelen_101
dt_121 = tb_103
dt_121 = dt_123
charssofar_116 = &NULL
charssofar_116 = charssofar_122
ESCAPED = &NONLOCAL
_108 = NONLOCAL
wordcatarray = NONLOCAL
wordptr_109 = wordcatarray
CALLUSED(50) = CALLUSED(50) + UNKNOWN
CALLUSED(50) = *CALLUSED(50) + UNKNOWN
CALLUSED(50) = wordptr_109
_110 = CALLUSED(50)
_110 = NONLOCAL
_111 = _110
_111 = &NONLOCAL
ESCAPED = &myword
ESCAPED = wordptr_109
ESCAPED = _111
CALLUSED(56) = CALLUSED(56) + UNKNOWN
CALLUSED(56) = *CALLUSED(56) + UNKNOWN
CALLUSED(56) = &myword
_112 = CALLUSED(56)
_112 = NONLOCAL
_113 = _112
_113 = &NONLOCAL
tomove_114 = _113
_115 = tomove_114
_115 = &NONLOCAL
myword = &NONLOCAL
_117 = tomove_114
_117 = charssofar_116
tomove_118 = linelen.155_102
tomove_118 = charssofar_116
tomove_119 = tomove_114
tomove_119 = tomove_118
tomove.157_120 = tomove_119
ESCAPED = dt_121
ESCAPED = &myword
ESCAPED = tomove.157_120
charssofar_122 = charssofar_116
charssofar_122 = tomove_119
dt_123 = dt_121 + UNKNOWN
_104 = linelen_101
_104 = &NONLOCAL
tb_105 = tb_103 + UNKNOWN
tb_106 = tb_103 + UNKNOWN
derefaddrtmp(68) = &NONLOCAL
*tb_105 = derefaddrtmp(68)
bytessofar_107 = bytessofar_98
bytessofar_107 = linelen_101
_15 = global_huffstruct.64+256
_16 = _15
_16 = &NONLOCAL
_17 = plaintext_51 + UNKNOWN
derefaddrtmp(72) = &NULL
*_17 = derefaddrtmp(72)
_20 = global_huffstruct.0+32
global_huffstruct.64+256 = &NONLOCAL
ESCAPED = &NONLOCAL
_19 = _26
_19 = &NONLOCAL
hufftree.151_21 = hufftree
_22 = global_huffstruct.64+256
ESCAPED = plaintext_51
ESCAPED = comparray_55
ESCAPED = decomparray_60
ESCAPED = _22
ESCAPED = _19
ESCAPED = hufftree.151_21
_23 = NONLOCAL
global_min_ticks = NONLOCAL
global_min_ticks.152_24 = global_min_ticks
_25 = global_huffstruct.64+256
_26 = _25
_26 = &NONLOCAL
global_huffstruct.64+256 = _26
ESCAPED = _26
accumtime_39 = &NULL
accumtime_39 = accumtime_81
iterations_40 = &NONLOCAL
iterations_40 = iterations_82
hufftree.153_28 = hufftree
_29 = global_huffstruct.64+256
_30 = global_huffstruct.64+256
ESCAPED = plaintext_51
ESCAPED = comparray_55
ESCAPED = decomparray_60
ESCAPED = _30
ESCAPED = _29
ESCAPED = hufftree.153_28
_80 = NONLOCAL
accumtime_81 = accumtime_39
accumtime_81 = _80
_31 = global_huffstruct.64+256
_32 = _31
iterations_82 = _32
iterations_82 = iterations_40
ESCAPED = accumtime_81
_33 = NONLOCAL
_34 = global_huffstruct.64+256
ESCAPED = plaintext_51
ESCAPED = &systemerror
ESCAPED = comparray_55
ESCAPED = &systemerror
ESCAPED = decomparray_60
ESCAPED = &systemerror
hufftree.154_35 = hufftree
ESCAPED = hufftree.154_35
ESCAPED = &systemerror
ESCAPED = accumtime_81
_36 = NONLOCAL
_37 = iterations_82
_37 = _36
global_huffstruct.64+256 = _37
ESCAPED = _37
_38 = global_huffstruct.0+32
global_huffstruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 5 12 55 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"_1";
"global_huffstruct.0+32"[label="global_huffstruct.0+32 = { 5 }"];
"global_huffstruct.64+256"[label="global_huffstruct.64+256 = { 5 }"];
"AllocateMemory";
"systemerror";
"plaintext_51";
"systemerror.143_2";
"ReportError";
"ErrorExit";
"_4";
"comparray_55";
"systemerror.145_5";
"FreeMemory";
"_7";
"decomparray_60";
"systemerror.147_8";
"_10";
"hufftree";
"systemerror.149_11";
"randnum";
"_13";
"_14"[label="_14 = { 5 }"];
"tb_103";
"tb_106";
"abs_randwc";
"_95";
"_96"[label="_96 = { 5 }"];
"linelen_97";
"_99";
"linelen_101"[label="linelen_101 = { 1 }"];
"linelen.155_102";
"dt_121";
"dt_123";
"_108";
"wordptr_109";
"wordcatarray";
"strlen";
"CALLUSED(50)";
"CALLCLOBBERED(51)";
"_110";
"_111"[label="_111 = { 5 }"];
"MoveMemory";
"myword"[label="myword = { 5 }"];
"CALLUSED(56)"[label="CALLUSED(56) = { 55 }"];
"CALLCLOBBERED(57)";
"_112";
"_113"[label="_113 = { 5 }"];
"tomove_114";
"_115"[label="_115 = { 5 }"];
"_117";
"tomove_119"[label="tomove_119 = { 1 }"];
"tomove.157_120";
"_104"[label="_104 = { 5 }"];
"tb_105";
"derefaddrtmp(68)"[label="derefaddrtmp(68) = { 5 }"];
"_15";
"_16"[label="_16 = { 5 }"];
"_17";
"derefaddrtmp(72)"[label="derefaddrtmp(72) = { 1 }"];
"_20";
"_19"[label="_19 = { 5 }"];
"hufftree.151_21";
"_22";
"DoHuffIteration";
"_23";
"global_min_ticks.152_24";
"global_min_ticks";
"accumtime_81"[label="accumtime_81 = { 1 }"];
"hufftree.153_28";
"_29";
"_30";
"_80";
"TicksToSecs";
"_33";
"_34";
"hufftree.154_35";
"TicksToFracSecs";
"_36";
"_38";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*global_huffstruct.0+32";
"*AllocateMemory";
"*systemerror";
"*systemerror.143_2";
"*ReportError";
"*ErrorExit";
"*systemerror.145_5";
"*FreeMemory";
"*systemerror.147_8";
"*systemerror.149_11";
"*randnum";
"*tb_106";
"*abs_randwc";
"*_99";
"*dt_123";
"*_108";
"*strlen";
"*CALLCLOBBERED(51)";
"*MoveMemory";
"*myword";
"*CALLUSED(56)";
"*CALLCLOBBERED(57)";
"*_115";
"*_117";
"*_104";
"*tb_105";
"*derefaddrtmp(68)";
"*_15";
"*_16";
"*_17";
"*derefaddrtmp(72)";
"*_20";
"*DoHuffIteration";
"*_23";
"*global_min_ticks.152_24";
"*global_min_ticks";
"*TicksToSecs";
"*_33";
"*_34";
"*TicksToFracSecs";
"*_38";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"_1" -> "ESCAPED";
"plaintext_51" -> "ESCAPED";
"systemerror.143_2" -> "ESCAPED";
"_4" -> "ESCAPED";
"comparray_55" -> "ESCAPED";
"systemerror.145_5" -> "ESCAPED";
"_7" -> "ESCAPED";
"decomparray_60" -> "ESCAPED";
"systemerror.147_8" -> "ESCAPED";
"_10" -> "ESCAPED";
"systemerror.149_11" -> "ESCAPED";
"dt_121" -> "ESCAPED";
"wordptr_109" -> "ESCAPED";
"_111" -> "ESCAPED";
"tomove.157_120" -> "ESCAPED";
"_19" -> "ESCAPED";
"global_huffstruct.64+256" -> "ESCAPED";
"hufftree.151_21" -> "ESCAPED";
"_22" -> "ESCAPED";
"accumtime_81" -> "ESCAPED";
"hufftree.153_28" -> "ESCAPED";
"_29" -> "ESCAPED";
"_30" -> "ESCAPED";
"hufftree.154_35" -> "ESCAPED";
"global_huffstruct.64+256" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"global_huffstruct.64+256" -> "_1";
"NONLOCAL" -> "global_huffstruct.0+32";
"NONLOCAL" -> "global_huffstruct.64+256";
"global_huffstruct.64+256" -> "global_huffstruct.64+256";
"global_huffstruct.64+256" -> "global_huffstruct.64+256";
"global_huffstruct.64+256" -> "global_huffstruct.64+256";
"global_huffstruct.64+256" -> "global_huffstruct.64+256";
"global_huffstruct.64+256" -> "global_huffstruct.64+256";
"global_huffstruct.64+256" -> "global_huffstruct.64+256";
"global_huffstruct.64+256" -> "global_huffstruct.64+256";
"_36" -> "global_huffstruct.64+256";
"global_huffstruct.64+256" -> "global_huffstruct.64+256";
"NONLOCAL" -> "plaintext_51";
"systemerror" -> "systemerror.143_2";
"global_huffstruct.64+256" -> "_4";
"NONLOCAL" -> "comparray_55";
"systemerror" -> "systemerror.145_5";
"global_huffstruct.64+256" -> "_7";
"NONLOCAL" -> "decomparray_60";
"systemerror" -> "systemerror.147_8";
"NONLOCAL" -> "_10";
"NONLOCAL" -> "hufftree";
"_10" -> "hufftree";
"systemerror" -> "systemerror.149_11";
"global_huffstruct.64+256" -> "_13";
"_13" -> "_14";
"plaintext_51" -> "tb_103";
"tb_106" -> "tb_103";
"NONLOCAL" -> "_95";
"_95" -> "_96";
"_96" -> "linelen_97";
"linelen_101" -> "_99";
"linelen_97" -> "_99";
"_14" -> "linelen_101";
"linelen_101" -> "linelen_101";
"linelen_101" -> "linelen_101";
"linelen_97" -> "linelen_101";
"linelen_101" -> "linelen_101";
"linelen_101" -> "linelen_101";
"linelen_101" -> "linelen.155_102";
"tb_103" -> "dt_121";
"dt_123" -> "dt_121";
"NONLOCAL" -> "_108";
"wordcatarray" -> "wordptr_109";
"NONLOCAL" -> "wordcatarray";
"wordptr_109" -> "CALLUSED(50)";
"NONLOCAL" -> "_110";
"CALLUSED(50)" -> "_110";
"_110" -> "_111";
"NONLOCAL" -> "_112";
"CALLUSED(56)" -> "_112";
"_112" -> "_113";
"_113" -> "tomove_114";
"tomove_114" -> "_115";
"tomove_119" -> "_117";
"tomove_114" -> "_117";
"linelen.155_102" -> "tomove_119";
"tomove_119" -> "tomove_119";
"tomove_119" -> "tomove_119";
"tomove_114" -> "tomove_119";
"tomove_119" -> "tomove_119";
"tomove_119" -> "tomove_119";
"tomove_119" -> "tomove.157_120";
"linelen_101" -> "_104";
"global_huffstruct.64+256" -> "_15";
"_15" -> "_16";
"global_huffstruct.0+32" -> "_20";
"global_huffstruct.64+256" -> "_19";
"hufftree" -> "hufftree.151_21";
"global_huffstruct.64+256" -> "_22";
"NONLOCAL" -> "_23";
"global_min_ticks" -> "global_min_ticks.152_24";
"NONLOCAL" -> "global_min_ticks";
"accumtime_81" -> "accumtime_81";
"accumtime_81" -> "accumtime_81";
"_80" -> "accumtime_81";
"hufftree" -> "hufftree.153_28";
"global_huffstruct.64+256" -> "_29";
"global_huffstruct.64+256" -> "_30";
"NONLOCAL" -> "_80";
"NONLOCAL" -> "_33";
"global_huffstruct.64+256" -> "_34";
"hufftree" -> "hufftree.154_35";
"NONLOCAL" -> "_36";
"global_huffstruct.0+32" -> "_38";
"derefaddrtmp(68)" -> "*tb_105";
"derefaddrtmp(72)" -> "*_17";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"global_huffstruct.0+32" [label="\N\n_17 = global_huffstruct.0+32 + UNKNOWN\l"];
"AllocateMemory";
"systemerror.143_2";
"ReportError";
"ErrorExit";
"FreeMemory";
"randnum";
"tb_103" [label="\N\ntb_106 = tb_103 + UNKNOWN\ltb_105 = tb_103 + UNKNOWN\l"];
"tb_106";
"bytessofar_98";
"abs_randwc";
"dt_121" [label="\N\ndt_123 = dt_121 + UNKNOWN\l"];
"dt_123";
"charssofar_116";
"strlen";
"CALLUSED(50)" [label="\N\nCALLUSED(50) = CALLUSED(50) + UNKNOWN\lCALLUSED(50) = *CALLUSED(50) + UNKNOWN\l"];
"CALLCLOBBERED(51)";
"MoveMemory";
"myword";
"CALLUSED(56)" [label="\N\nCALLUSED(56) = CALLUSED(56) + UNKNOWN\lCALLUSED(56) = *CALLUSED(56) + UNKNOWN\l"];
"CALLCLOBBERED(57)";
"_112";
"tb_105" [label="\N\n*tb_105 = derefaddrtmp(68)\l"];
"derefaddrtmp(68)";
"_17" [label="\N\n*_17 = derefaddrtmp(72)\l"];
"derefaddrtmp(72)";
"DoHuffIteration";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.143_2";
"STOREDANYTHING" -> "tb_106";
"STOREDANYTHING" -> "dt_123";
"STOREDANYTHING" -> "CALLUSED(50)";
"STOREDANYTHING" -> "myword";
"STOREDANYTHING" -> "CALLUSED(56)";
"STOREDANYTHING" -> "tb_105";
"STOREDANYTHING" -> "_17";
"global_huffstruct.0+32" -> "ESCAPED";
"global_huffstruct.0+32" -> "tb_103";
"global_huffstruct.0+32" -> "bytessofar_98";
"global_huffstruct.0+32" -> "CALLUSED(50)";
"global_huffstruct.0+32" -> "_112";
"systemerror.143_2" -> "ESCAPED";
"tb_103" -> "dt_121";
"tb_106" -> "tb_103";
"bytessofar_98" -> "ESCAPED";
"bytessofar_98" -> "charssofar_116";
"dt_121" -> "ESCAPED";
"dt_123" -> "dt_121";
"charssofar_116" -> "ESCAPED";
"CALLUSED(50)" -> "ESCAPED";
"CALLUSED(56)" -> "_112";
"_112" -> "charssofar_116";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = global_huffstruct.0+32\l"];
"STOREDANYTHING";
"INTEGER";
"global_huffstruct.0+32" [label="\N\n_17 = global_huffstruct.0+32 + UNKNOWN\l"];
"AllocateMemory";
"systemerror.143_2";
"ReportError";
"ErrorExit";
"FreeMemory";
"randnum";
"tb_103" [label="\N\ntb_106 = tb_103 + UNKNOWN\ltb_105 = tb_103 + UNKNOWN\l"];
"tb_106";
"bytessofar_98";
"abs_randwc";
"dt_121" [label="\N\ndt_123 = dt_121 + UNKNOWN\l"];
"dt_123";
"charssofar_116";
"strlen";
"CALLUSED(50)" [label="\N\nCALLUSED(50) = CALLUSED(50) + UNKNOWN\lCALLUSED(50) = *CALLUSED(50) + UNKNOWN\l"];
"CALLCLOBBERED(51)";
"MoveMemory";
"myword";
"CALLUSED(56)" [label="\N\nCALLUSED(56) = CALLUSED(56) + UNKNOWN\lCALLUSED(56) = *CALLUSED(56) + UNKNOWN\l"];
"CALLCLOBBERED(57)";
"_112";
"tb_105" [label="\N\n*tb_105 = derefaddrtmp(68)\l"];
"derefaddrtmp(68)";
"_17" [label="\N\n*_17 = derefaddrtmp(72)\l"];
"derefaddrtmp(72)";
"DoHuffIteration";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.143_2";
"STOREDANYTHING" -> "tb_106";
"STOREDANYTHING" -> "dt_123";
"STOREDANYTHING" -> "CALLUSED(50)";
"STOREDANYTHING" -> "myword";
"STOREDANYTHING" -> "CALLUSED(56)";
"STOREDANYTHING" -> "tb_105";
"STOREDANYTHING" -> "_17";
"global_huffstruct.0+32" -> "ESCAPED";
"global_huffstruct.0+32" -> "systemerror.143_2";
"global_huffstruct.0+32" -> "tb_103";
"global_huffstruct.0+32" -> "bytessofar_98";
"global_huffstruct.0+32" -> "CALLUSED(50)";
"global_huffstruct.0+32" -> "myword";
"global_huffstruct.0+32" -> "CALLUSED(56)";
"global_huffstruct.0+32" -> "_112";
"systemerror.143_2" -> "ESCAPED";
"tb_103" -> "dt_121";
"tb_106" -> "tb_103";
"bytessofar_98" -> "ESCAPED";
"bytessofar_98" -> "charssofar_116";
"dt_121" -> "ESCAPED";
"dt_123" -> "dt_121";
"charssofar_116" -> "ESCAPED";
"CALLUSED(50)" -> "ESCAPED";
"myword" -> "ESCAPED";
"myword" -> "CALLUSED(56)";
"CALLUSED(56)" -> "_112";
"_112" -> "charssofar_116";
"derefaddrtmp(68)" -> "ESCAPED";
"derefaddrtmp(72)" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL systemerror myword }
NONLOCAL = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
STOREDANYTHING = { }
INTEGER = { ANYTHING }
_1 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
global_huffstruct.0+32 = { ESCAPED NONLOCAL }
global_huffstruct.64+256 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.143_2
plaintext_51 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
systemerror.143_2 = { ESCAPED NONLOCAL }
ReportError = { }
ErrorExit = { }
_4 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
comparray_55 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
systemerror.145_5 = { ESCAPED NONLOCAL } same as systemerror.143_2
FreeMemory = { }
_7 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
decomparray_60 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
systemerror.147_8 = { ESCAPED NONLOCAL } same as systemerror.143_2
_10 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
hufftree = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
systemerror.149_11 = { ESCAPED NONLOCAL } same as systemerror.143_2
randnum = { }
_13 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_14 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
tb_103 = { ESCAPED NONLOCAL }
tb_106 = { ESCAPED NONLOCAL }
bytessofar_98 = { NULL ESCAPED NONLOCAL }
bytessofar_107 = { NULL ESCAPED NONLOCAL } same as bytessofar_98
abs_randwc = { }
_95 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_96 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
linelen_97 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_99 = { NULL ESCAPED NONLOCAL } same as bytessofar_98
linelen_100 = { NULL ESCAPED NONLOCAL } same as bytessofar_98
linelen_101 = { NULL ESCAPED NONLOCAL } same as bytessofar_98
linelen.155_102 = { NULL ESCAPED NONLOCAL } same as bytessofar_98
dt_121 = { ESCAPED NONLOCAL }
dt_123 = { ESCAPED NONLOCAL }
charssofar_116 = { NULL ESCAPED NONLOCAL myword }
charssofar_122 = { NULL ESCAPED NONLOCAL myword } same as charssofar_116
_108 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
wordptr_109 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
wordcatarray = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
strlen = { }
CALLUSED(50) = { ESCAPED NONLOCAL }
CALLCLOBBERED(51) = { }
_110 = { ESCAPED NONLOCAL } same as CALLUSED(50)
_111 = { ESCAPED NONLOCAL } same as CALLUSED(50)
MoveMemory = { }
myword = { ESCAPED NONLOCAL }
CALLUSED(56) = { ESCAPED NONLOCAL myword }
CALLCLOBBERED(57) = { }
_112 = { ESCAPED NONLOCAL myword }
_113 = { ESCAPED NONLOCAL myword } same as _112
tomove_114 = { ESCAPED NONLOCAL myword } same as _112
_115 = { ESCAPED NONLOCAL myword } same as _112
_117 = { NULL ESCAPED NONLOCAL myword } same as charssofar_116
tomove_118 = { NULL ESCAPED NONLOCAL myword } same as charssofar_116
tomove_119 = { NULL ESCAPED NONLOCAL myword } same as charssofar_116
tomove.157_120 = { NULL ESCAPED NONLOCAL myword } same as charssofar_116
_104 = { NULL ESCAPED NONLOCAL } same as bytessofar_98
tb_105 = { ESCAPED NONLOCAL }
derefaddrtmp(68) = { NONLOCAL }
_15 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_16 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_17 = { ESCAPED NONLOCAL }
derefaddrtmp(72) = { NULL }
_20 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_19 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_26 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
hufftree.151_21 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_22 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
DoHuffIteration = { }
_23 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
global_min_ticks.152_24 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
global_min_ticks = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_25 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
accumtime_39 = { NULL ESCAPED NONLOCAL } same as bytessofar_98
accumtime_81 = { NULL ESCAPED NONLOCAL } same as bytessofar_98
iterations_40 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
iterations_82 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
hufftree.153_28 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_29 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_30 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_80 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_31 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_32 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
TicksToSecs = { }
_33 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_34 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
hufftree.154_35 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
TicksToFracSecs = { }
_36 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_37 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32
_38 = { ESCAPED NONLOCAL } same as global_huffstruct.0+32


Alias information for DoHuffman

Aliased symbols

myword, UID D.8529, char[40], is addressable
systemerror, UID D.5366, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.5366 D.8529 } (escaped)

Flow-insensitive points-to information

_10, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_17, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
hufftree.151_21, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
hufftree.153_28, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
hufftree.154_35, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
plaintext_51, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
comparray_55, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
decomparray_60, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
tb_103, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
tb_105, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
tb_106, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
wordptr_109, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
dt_121, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
dt_123, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 33 3 4 34 5 6 35 7 8 36 9 10 11 37 12 13 38 14 15 39 16 17 32 18 19 31 20 21 22 41 23 42 30 40 24 25 29 26 43 27 28
;;
;; Loop 2
;;  header 25, latch 29
;;  depth 1, outer 0
;;  nodes: 25 29
;;
;; Loop 1
;;  header 22, latch 30
;;  depth 1, outer 0
;;  nodes: 22 30 23
;;
;; Loop 3
;;  header 11, latch 31
;;  depth 1, outer 0
;;  nodes: 11 31 19 38 18 17 39 16 15 14 32 13 37 12
;;
;; Loop 4
;;  header 15, latch 32
;;  depth 2, outer 3
;;  nodes: 15 32 17 39 16
;; 2 succs { 3 33 }
;; 33 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 5 34 }
;; 34 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 35 }
;; 35 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 36 }
;; 36 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 37 }
;; 37 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 38 }
;; 38 succs { 19 }
;; 14 succs { 15 }
;; 15 succs { 16 39 }
;; 39 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 32 18 }
;; 32 succs { 15 }
;; 18 succs { 19 }
;; 19 succs { 31 20 }
;; 31 succs { 11 }
;; 20 succs { 21 40 }
;; 21 succs { 22 }
;; 22 succs { 41 23 }
;; 41 succs { 24 }
;; 23 succs { 30 42 }
;; 42 succs { 24 }
;; 30 succs { 22 }
;; 40 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 29 26 }
;; 29 succs { 25 }
;; 26 succs { 27 43 }
;; 43 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 1 }
Removing basic block 30
Removing basic block 31
Removing basic block 32
Removing basic block 33
Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 42
Removing basic block 43
DoHuffman ()
{
  long int charssofar;
  long int tomove;
  char myword[40];
  farchar * wordptr;
  farchar * dt;
  long unsigned int linelen;
  long unsigned int bytessofar;
  farchar * tb;
  farchar * plaintext;
  farchar * decomparray;
  farchar * comparray;
  double iterations;
  long unsigned int accumtime;
  int systemerror;
  long unsigned int _1;
  int systemerror.143_2;
  long unsigned int _4;
  int systemerror.145_5;
  long unsigned int _7;
  int systemerror.147_8;
  farvoid * _10;
  int systemerror.149_11;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  sizetype _16;
  farchar * _17;
  long unsigned int _19;
  int _20;
  struct huff_node * hufftree.151_21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int global_min_ticks.152_24;
  long unsigned int _25;
  long unsigned int _26;
  struct huff_node * hufftree.153_28;
  long unsigned int _30;
  long unsigned int _31;
  double _32;
  long unsigned int _33;
  long unsigned int _34;
  struct huff_node * hufftree.154_35;
  double _36;
  double _37;
  int _38;
  long unsigned int _80;
  long unsigned int prephitmp_94;
  unsigned int _95;
  unsigned int _96;
  long unsigned int _99;
  long int linelen.155_102;
  sizetype _104;
  unsigned int _108;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _112;
  long unsigned int _113;
  long int _115;
  long int _117;
  long unsigned int tomove.157_120;
  long int prephitmp_137;
  long unsigned int prephitmp_138;
  long unsigned int pretmp_139;
  long unsigned int pretmp_140;
  long unsigned int prephitmp_141;
  long unsigned int pretmp_142;

  <bb 2> [4.82%]:
  _1 = global_huffstruct.arraysize;
  plaintext_51 = AllocateMemory (_1, &systemerror);
  systemerror.143_2 = systemerror;
  if (systemerror.143_2 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [1.59%]:
  ReportError ("CPU:Huffman", systemerror.143_2);
  ErrorExit ();

  <bb 4> [4.82%]:
  _4 = global_huffstruct.arraysize;
  comparray_55 = AllocateMemory (_4, &systemerror);
  systemerror.145_5 = systemerror;
  if (systemerror.145_5 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [1.59%]:
  ReportError ("CPU:Huffman", systemerror.145_5);
  FreeMemory (plaintext_51, &systemerror);
  ErrorExit ();

  <bb 6> [4.82%]:
  _7 = global_huffstruct.arraysize;
  decomparray_60 = AllocateMemory (_7, &systemerror);
  systemerror.147_8 = systemerror;
  if (systemerror.147_8 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [1.59%]:
  ReportError ("CPU:Huffman", systemerror.147_8);
  FreeMemory (plaintext_51, &systemerror);
  FreeMemory (comparray_55, &systemerror);
  ErrorExit ();

  <bb 8> [4.82%]:
  _10 = AllocateMemory (10240, &systemerror);
  hufftree = _10;
  systemerror.149_11 = systemerror;
  if (systemerror.149_11 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [1.59%]:
  ReportError ("CPU:Huffman", systemerror.149_11);
  FreeMemory (plaintext_51, &systemerror);
  FreeMemory (comparray_55, &systemerror);
  FreeMemory (decomparray_60, &systemerror);
  ErrorExit ();

  <bb 10> [4.82%]:
  randnum (13);
  _13 = global_huffstruct.arraysize;
  _14 = _13 + 18446744073709551615;

  <bb 11> [32.13%]:
  # tb_103 = PHI <plaintext_51(10), tb_106(19)>
  # bytessofar_98 = PHI <0(10), prephitmp_94(19)>
  _95 = abs_randwc (494);
  _96 = _95 + 6;
  linelen_97 = (long unsigned int) _96;
  _99 = linelen_97 + bytessofar_98;
  if (_14 < _99)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [16.07%]:
  linelen_100 = _14 - bytessofar_98;

  <bb 13> [32.13%]:
  # linelen_101 = PHI <linelen_97(11), linelen_100(12)>
  # prephitmp_94 = PHI <_99(11), _14(12)>
  if (linelen_101 > 1)
    goto <bb 14>; [46.68%]
  else
    goto <bb 19>; [53.32%]

  <bb 14> [15.00%]:
  linelen.155_102 = (long int) linelen_101;

  <bb 15> [100.00%]:
  # dt_121 = PHI <tb_103(14), dt_123(17)>
  # charssofar_116 = PHI <0(14), prephitmp_137(17)>
  _108 = abs_randwc (50);
  wordptr_109 = wordcatarray[_108];
  _110 = strlen (wordptr_109);
  _111 = _110 + 1;
  MoveMemory (&myword, wordptr_109, _111);
  _112 = strlen (&myword);
  _113 = _112 + 1;
  tomove_114 = (long int) _113;
  _115 = tomove_114 + -1;
  myword[_115] = 32;
  _117 = tomove_114 + charssofar_116;
  if (linelen.155_102 < _117)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 16> [50.00%]:
  tomove_118 = linelen.155_102 - charssofar_116;

  <bb 17> [100.00%]:
  # tomove_119 = PHI <tomove_114(15), tomove_118(16)>
  # prephitmp_137 = PHI <_117(15), linelen.155_102(16)>
  tomove.157_120 = (long unsigned int) tomove_119;
  MoveMemory (dt_121, &myword, tomove.157_120);
  dt_123 = dt_121 + tomove.157_120;
  if (linelen.155_102 > prephitmp_137)
    goto <bb 15>; [85.00%]
  else
    goto <bb 18>; [15.00%]

  <bb 18> [15.00%]:
  myword ={v} {CLOBBER};

  <bb 19> [32.13%]:
  _104 = linelen_101 + 18446744073709551615;
  tb_105 = tb_103 + _104;
  tb_106 = tb_103 + linelen_101;
  *tb_105 = 10;
  if (_14 > prephitmp_94)
    goto <bb 11>; [85.00%]
  else
    goto <bb 20>; [15.00%]

  <bb 20> [4.82%]:
  _15 = global_huffstruct.arraysize;
  _16 = _15 + 18446744073709551615;
  _17 = plaintext_51 + _16;
  *_17 = 0;
  _20 = global_huffstruct.adjust;
  if (_20 == 0)
    goto <bb 21>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 21> [2.41%]:
  global_huffstruct.loops = 100;

  <bb 22> [15.44%]:
  # _19 = PHI <_26(24), 100(21)>
  hufftree.151_21 = hufftree;
  _22 = global_huffstruct.arraysize;
  _23 = DoHuffIteration (plaintext_51, comparray_55, decomparray_60, _22, _19, hufftree.151_21);
  global_min_ticks.152_24 = global_min_ticks;
  if (_23 > global_min_ticks.152_24)
    goto <bb 23>; [7.50%]
  else
    goto <bb 24>; [92.50%]

  <bb 23> [1.16%]:
  pretmp_142 = global_huffstruct.loops;
  goto <bb 26>; [100.00%]

  <bb 24> [14.29%]:
  _25 = global_huffstruct.loops;
  _26 = _25 + 10;
  global_huffstruct.loops = _26;
  if (_26 <= 499999)
    goto <bb 22>; [92.50%]
  else
    goto <bb 26>; [7.50%]

  <bb 25> [2.41%]:
  pretmp_140 = global_huffstruct.loops;

  <bb 26> [4.82%]:
  # prephitmp_138 = PHI <pretmp_140(25), pretmp_142(23), _26(24)>

  <bb 27> [32.13%]:
  # accumtime_39 = PHI <0(26), accumtime_81(28)>
  # iterations_40 = PHI <0.0(26), iterations_82(28)>
  # prephitmp_141 = PHI <prephitmp_138(26), pretmp_139(28)>
  hufftree.153_28 = hufftree;
  _30 = global_huffstruct.arraysize;
  _80 = DoHuffIteration (plaintext_51, comparray_55, decomparray_60, _30, prephitmp_141, hufftree.153_28);
  accumtime_81 = accumtime_39 + _80;
  _31 = global_huffstruct.loops;
  _32 = (double) _31;
  iterations_82 = _32 + iterations_40;
  _33 = TicksToSecs (accumtime_81);
  _34 = global_huffstruct.request_secs;
  if (_33 < _34)
    goto <bb 28>; [85.00%]
  else
    goto <bb 29>; [15.00%]

  <bb 28> [27.31%]:
  pretmp_139 = global_huffstruct.loops;
  goto <bb 27>; [100.00%]

  <bb 29> [4.82%]:
  FreeMemory (plaintext_51, &systemerror);
  FreeMemory (comparray_55, &systemerror);
  FreeMemory (decomparray_60, &systemerror);
  hufftree.154_35 = hufftree;
  FreeMemory (hufftree.154_35, &systemerror);
  _36 = TicksToFracSecs (accumtime_81);
  _37 = iterations_82 / _36;
  global_huffstruct.iterspersec = _37;
  _38 = global_huffstruct.adjust;
  if (_38 == 0)
    goto <bb 30>; [54.00%]
  else
    goto <bb 31>; [46.00%]

  <bb 30> [2.60%]:
  global_huffstruct.adjust = 1;

  <bb 31> [4.82%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoNNET (DoNNET, funcdef_no=95, decl_uid=4701, cgraph_uid=95, symbol_order=120)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ESCAPED = &NONLOCAL
inpath = NONLOCAL
inpath.168_45 = inpath
ESCAPED = inpath.168_45
ESCAPED = &STRING
infile_46 = NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = &STRING
ESCAPED = infile_46
ESCAPED = &STRING
ESCAPED = &xinsize
ESCAPED = &yinsize
ESCAPED = &youtsize
vals_read_47 = NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = &STRING
ESCAPED = vals_read_47
ESCAPED = infile_46
ESCAPED = &STRING
numpats = NONLOCAL
ESCAPED = &numpats
vals_read_48 = NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = &STRING
ESCAPED = vals_read_48
numpats.169_49 = numpats
numpats = &NONLOCAL
ESCAPED = &NONLOCAL
numpats.185_149 = numpats
row_132 = row_69
row_132 = &NULL
ESCAPED = infile_46
ESCAPED = &STRING
ESCAPED = &val1
ESCAPED = &val2
ESCAPED = &val3
ESCAPED = &val4
ESCAPED = &val5
vals_read_50 = NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = &STRING
xinsize.170_51 = xinsize
element_53 = xinsize.170_51
element_53 = row_132
val1.171_54 = val1
_55 = val1.171_54
in_pats = NONLOCAL
in_pats = _55
ESCAPED = _55
element_57 = element_53
element_57 = &NONLOCAL
val2.172_58 = val2
_59 = val2.172_58
in_pats = _59
ESCAPED = _59
element_60 = element_53
element_60 = &NONLOCAL
val3.173_61 = val3
_62 = val3.173_61
in_pats = _62
ESCAPED = _62
element_63 = element_53
element_63 = &NONLOCAL
val4.174_64 = val4
_65 = val4.174_64
in_pats = _65
ESCAPED = _65
element_66 = element_53
element_66 = &NONLOCAL
val5.175_67 = val5
_68 = val5.175_67
in_pats = _68
ESCAPED = _68
row_69 = row_132
row_69 = &NONLOCAL
yinsize.176_70 = yinsize
i_128 = i_74
i_128 = &NULL
_72 = in_pats
in_pats = &NONLOCAL
ESCAPED = &NONLOCAL
_73 = in_pats
in_pats = &NONLOCAL
ESCAPED = &NONLOCAL
i_74 = i_128
i_74 = &NONLOCAL
ESCAPED = infile_46
ESCAPED = &STRING
ESCAPED = &val1
ESCAPED = &val2
ESCAPED = &val3
ESCAPED = &val4
ESCAPED = &val5
ESCAPED = &val6
ESCAPED = &val7
ESCAPED = &val8
val1.177_75 = val1
_76 = val1.177_75
out_pats = NONLOCAL
out_pats = _76
ESCAPED = _76
val2.178_77 = val2
_78 = val2.178_77
out_pats = _78
ESCAPED = _78
val3.179_79 = val3
_80 = val3.179_79
out_pats = _80
ESCAPED = _80
val4.180_81 = val4
_82 = val4.180_81
out_pats = _82
ESCAPED = _82
val5.181_83 = val5
_84 = val5.181_83
out_pats = _84
ESCAPED = _84
val6.182_85 = val6
_86 = val6.182_85
out_pats = _86
ESCAPED = _86
val7.183_87 = val7
_88 = val7.183_87
out_pats = _88
ESCAPED = _88
val8.184_89 = val8
_90 = val8.184_89
out_pats = _90
ESCAPED = _90
patt_91 = patt_131
patt_91 = &NONLOCAL
numpats.185_92 = numpats
patt_131 = &NULL
patt_131 = patt_91
yinsize.176_188 = yinsize
ESCAPED = infile_46
global_nnetstruct.0+32 = NONLOCAL
global_nnetstruct.64+192 = NONLOCAL
_2 = global_nnetstruct.0+32
global_nnetstruct.64+192 = &NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = &NONLOCAL
_3 = global_nnetstruct.64+192
ESCAPED = _3
_4 = NONLOCAL
global_min_ticks = NONLOCAL
global_min_ticks.167_5 = global_min_ticks
_6 = global_nnetstruct.64+192
_7 = _6
_7 = &NONLOCAL
global_nnetstruct.64+192 = _7
ESCAPED = _7
accumtime_17 = &NULL
accumtime_17 = accumtime_39
iterations_18 = &NONLOCAL
iterations_18 = iterations_40
ESCAPED = &NONLOCAL
_9 = global_nnetstruct.64+192
ESCAPED = _9
_38 = NONLOCAL
accumtime_39 = accumtime_17
accumtime_39 = _38
_10 = global_nnetstruct.64+192
_11 = _10
iterations_40 = _11
iterations_40 = iterations_18
ESCAPED = accumtime_39
_12 = NONLOCAL
_13 = global_nnetstruct.64+192
ESCAPED = accumtime_39
_14 = NONLOCAL
_15 = iterations_40
_15 = _14
global_nnetstruct.64+192 = _15
ESCAPED = _15
_16 = global_nnetstruct.0+32
global_nnetstruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 5 14 15 16 17 18 19 20 21 22 23 24 27 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"randnum";
"inpath.168_45";
"inpath";
"fopen";
"infile_46";
"__printf_chk";
"xinsize";
"yinsize";
"youtsize";
"val1";
"val2";
"val3";
"val4";
"val5";
"val6";
"val7";
"val8";
"*__isoc99_fscanf";
"vals_read_47";
"numpats"[label="numpats = { 5 }"];
"vals_read_48";
"numpats.169_49";
"numpats.185_149";
"row_132"[label="row_132 = { 1 5 }"];
"vals_read_50";
"xinsize.170_51";
"element_53";
"val1.171_54";
"_55";
"in_pats"[label="in_pats = { 5 }"];
"element_57"[label="element_57 = { 5 }"];
"val2.172_58";
"_59";
"element_60"[label="element_60 = { 5 }"];
"val3.173_61";
"_62";
"element_63"[label="element_63 = { 5 }"];
"val4.174_64";
"_65";
"element_66"[label="element_66 = { 5 }"];
"val5.175_67";
"_68";
"yinsize.176_70";
"i_128"[label="i_128 = { 1 5 }"];
"_72";
"_73";
"val1.177_75";
"_76";
"out_pats";
"val2.178_77";
"_78";
"val3.179_79";
"_80";
"val4.180_81";
"_82";
"val5.181_83";
"_84";
"val6.182_85";
"_86";
"val7.183_87";
"_88";
"val8.184_89";
"_90";
"patt_91"[label="patt_91 = { 1 5 }"];
"numpats.185_92";
"yinsize.176_188";
"fclose";
"ErrorExit";
"_2";
"global_nnetstruct.0+32"[label="global_nnetstruct.0+32 = { 5 }"];
"global_nnetstruct.64+192"[label="global_nnetstruct.64+192 = { 5 }"];
"_3";
"DoNNetIteration";
"_4";
"global_min_ticks.167_5";
"global_min_ticks";
"accumtime_39"[label="accumtime_39 = { 1 }"];
"_9";
"_38";
"TicksToSecs";
"_12";
"_13";
"TicksToFracSecs";
"_14";
"_16";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*randnum";
"*fopen";
"*__printf_chk";
"*xinsize";
"*yinsize";
"*youtsize";
"*val1";
"*val2";
"*val3";
"*val4";
"*val5";
"*val6";
"*val7";
"*val8";
"**__isoc99_fscanf";
"*numpats";
"*numpats.169_49";
"*numpats.185_149";
"*row_132";
"*row_69";
"*vals_read_50";
"*xinsize.170_51";
"*element_53";
"*val1.171_54";
"*_55";
"*in_pats";
"*element_57";
"*val2.172_58";
"*_59";
"*element_60";
"*val3.173_61";
"*_62";
"*element_63";
"*val4.174_64";
"*_65";
"*element_66";
"*val5.175_67";
"*_68";
"*yinsize.176_70";
"*i_128";
"*i_74";
"*_72";
"*_73";
"*val1.177_75";
"*_76";
"*out_pats";
"*val2.178_77";
"*_78";
"*val3.179_79";
"*_80";
"*val4.180_81";
"*_82";
"*val5.181_83";
"*_84";
"*val6.182_85";
"*_86";
"*val7.183_87";
"*_88";
"*val8.184_89";
"*_90";
"*patt_91";
"*patt_131";
"*numpats.185_92";
"*yinsize.176_188";
"*fclose";
"*ErrorExit";
"*_2";
"*global_nnetstruct.0+32";
"*DoNNetIteration";
"*_4";
"*global_min_ticks.167_5";
"*global_min_ticks";
"*TicksToSecs";
"*_12";
"*_13";
"*TicksToFracSecs";
"*_16";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"inpath.168_45" -> "ESCAPED";
"infile_46" -> "ESCAPED";
"vals_read_47" -> "ESCAPED";
"vals_read_48" -> "ESCAPED";
"_55" -> "ESCAPED";
"_59" -> "ESCAPED";
"_62" -> "ESCAPED";
"_65" -> "ESCAPED";
"_68" -> "ESCAPED";
"_76" -> "ESCAPED";
"_78" -> "ESCAPED";
"_80" -> "ESCAPED";
"_82" -> "ESCAPED";
"_84" -> "ESCAPED";
"_86" -> "ESCAPED";
"_88" -> "ESCAPED";
"_90" -> "ESCAPED";
"_3" -> "ESCAPED";
"global_nnetstruct.64+192" -> "ESCAPED";
"accumtime_39" -> "ESCAPED";
"_9" -> "ESCAPED";
"global_nnetstruct.64+192" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"inpath" -> "inpath.168_45";
"NONLOCAL" -> "inpath";
"NONLOCAL" -> "infile_46";
"NONLOCAL" -> "vals_read_47";
"NONLOCAL" -> "numpats";
"NONLOCAL" -> "vals_read_48";
"numpats" -> "numpats.169_49";
"numpats" -> "numpats.185_149";
"row_132" -> "row_132";
"row_132" -> "row_132";
"NONLOCAL" -> "vals_read_50";
"xinsize" -> "xinsize.170_51";
"row_132" -> "element_53";
"xinsize.170_51" -> "element_53";
"val1" -> "val1.171_54";
"val1.171_54" -> "_55";
"NONLOCAL" -> "in_pats";
"_55" -> "in_pats";
"_59" -> "in_pats";
"_62" -> "in_pats";
"_65" -> "in_pats";
"_68" -> "in_pats";
"element_53" -> "element_57";
"val2" -> "val2.172_58";
"val2.172_58" -> "_59";
"element_53" -> "element_60";
"val3" -> "val3.173_61";
"val3.173_61" -> "_62";
"element_53" -> "element_63";
"val4" -> "val4.174_64";
"val4.174_64" -> "_65";
"element_53" -> "element_66";
"val5" -> "val5.175_67";
"val5.175_67" -> "_68";
"yinsize" -> "yinsize.176_70";
"i_128" -> "i_128";
"i_128" -> "i_128";
"in_pats" -> "_72";
"in_pats" -> "_73";
"val1" -> "val1.177_75";
"val1.177_75" -> "_76";
"NONLOCAL" -> "out_pats";
"_76" -> "out_pats";
"_78" -> "out_pats";
"_80" -> "out_pats";
"_82" -> "out_pats";
"_84" -> "out_pats";
"_86" -> "out_pats";
"_88" -> "out_pats";
"_90" -> "out_pats";
"val2" -> "val2.178_77";
"val2.178_77" -> "_78";
"val3" -> "val3.179_79";
"val3.179_79" -> "_80";
"val4" -> "val4.180_81";
"val4.180_81" -> "_82";
"val5" -> "val5.181_83";
"val5.181_83" -> "_84";
"val6" -> "val6.182_85";
"val6.182_85" -> "_86";
"val7" -> "val7.183_87";
"val7.183_87" -> "_88";
"val8" -> "val8.184_89";
"val8.184_89" -> "_90";
"patt_91" -> "patt_91";
"patt_91" -> "patt_91";
"numpats" -> "numpats.185_92";
"yinsize" -> "yinsize.176_188";
"global_nnetstruct.0+32" -> "_2";
"NONLOCAL" -> "global_nnetstruct.0+32";
"NONLOCAL" -> "global_nnetstruct.64+192";
"global_nnetstruct.64+192" -> "global_nnetstruct.64+192";
"global_nnetstruct.64+192" -> "global_nnetstruct.64+192";
"global_nnetstruct.64+192" -> "global_nnetstruct.64+192";
"global_nnetstruct.64+192" -> "global_nnetstruct.64+192";
"global_nnetstruct.64+192" -> "global_nnetstruct.64+192";
"global_nnetstruct.64+192" -> "global_nnetstruct.64+192";
"global_nnetstruct.64+192" -> "global_nnetstruct.64+192";
"_14" -> "global_nnetstruct.64+192";
"global_nnetstruct.64+192" -> "global_nnetstruct.64+192";
"global_nnetstruct.64+192" -> "_3";
"NONLOCAL" -> "_4";
"global_min_ticks" -> "global_min_ticks.167_5";
"NONLOCAL" -> "global_min_ticks";
"accumtime_39" -> "accumtime_39";
"accumtime_39" -> "accumtime_39";
"_38" -> "accumtime_39";
"global_nnetstruct.64+192" -> "_9";
"NONLOCAL" -> "_38";
"NONLOCAL" -> "_12";
"global_nnetstruct.64+192" -> "_13";
"NONLOCAL" -> "_14";
"global_nnetstruct.0+32" -> "_16";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"randnum";
"inpath";
"fopen";
"__printf_chk";
"youtsize";
"*__isoc99_fscanf";
"numpats.169_49";
"row_132";
"xinsize.170_51";
"element_53";
"val1.171_54";
"in_pats";
"val2.172_58";
"val3.173_61";
"val4.174_64";
"val5.175_67";
"yinsize.176_70";
"out_pats";
"val6.182_85";
"val7.183_87";
"val8.184_89";
"fclose";
"ErrorExit";
"DoNNetIteration";
"accumtime_17";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "xinsize.170_51";
"STOREDANYTHING" -> "yinsize.176_70";
"STOREDANYTHING" -> "youtsize";
"STOREDANYTHING" -> "val1.171_54";
"STOREDANYTHING" -> "val2.172_58";
"STOREDANYTHING" -> "val3.173_61";
"STOREDANYTHING" -> "val4.174_64";
"STOREDANYTHING" -> "val5.175_67";
"STOREDANYTHING" -> "val6.182_85";
"STOREDANYTHING" -> "val7.183_87";
"STOREDANYTHING" -> "val8.184_89";
"STOREDANYTHING" -> "numpats.169_49";
"inpath" -> "ESCAPED";
"inpath" -> "numpats.169_49";
"inpath" -> "in_pats";
"inpath" -> "out_pats";
"inpath" -> "accumtime_17";
"row_132" -> "element_53";
"xinsize.170_51" -> "element_53";
"val1.171_54" -> "ESCAPED";
"val1.171_54" -> "in_pats";
"val1.171_54" -> "out_pats";
"val2.172_58" -> "ESCAPED";
"val2.172_58" -> "in_pats";
"val2.172_58" -> "out_pats";
"val3.173_61" -> "ESCAPED";
"val3.173_61" -> "in_pats";
"val3.173_61" -> "out_pats";
"val4.174_64" -> "ESCAPED";
"val4.174_64" -> "in_pats";
"val4.174_64" -> "out_pats";
"val5.175_67" -> "ESCAPED";
"val5.175_67" -> "in_pats";
"val5.175_67" -> "out_pats";
"val6.182_85" -> "ESCAPED";
"val6.182_85" -> "out_pats";
"val7.183_87" -> "ESCAPED";
"val7.183_87" -> "out_pats";
"val8.184_89" -> "ESCAPED";
"val8.184_89" -> "out_pats";
"accumtime_17" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = inpath\l"];
"STOREDANYTHING";
"INTEGER";
"randnum";
"inpath";
"fopen";
"__printf_chk";
"youtsize";
"*__isoc99_fscanf";
"numpats.169_49";
"row_132";
"xinsize.170_51";
"element_53";
"val1.171_54";
"in_pats";
"val2.172_58";
"val3.173_61";
"val4.174_64";
"val5.175_67";
"yinsize.176_70";
"out_pats";
"val6.182_85";
"val7.183_87";
"val8.184_89";
"fclose";
"ErrorExit";
"DoNNetIteration";
"accumtime_17";
"TicksToSecs";
"TicksToFracSecs";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "xinsize.170_51";
"STOREDANYTHING" -> "yinsize.176_70";
"STOREDANYTHING" -> "youtsize";
"STOREDANYTHING" -> "val1.171_54";
"STOREDANYTHING" -> "val2.172_58";
"STOREDANYTHING" -> "val3.173_61";
"STOREDANYTHING" -> "val4.174_64";
"STOREDANYTHING" -> "val5.175_67";
"STOREDANYTHING" -> "val6.182_85";
"STOREDANYTHING" -> "val7.183_87";
"STOREDANYTHING" -> "val8.184_89";
"STOREDANYTHING" -> "numpats.169_49";
"inpath" -> "ESCAPED";
"inpath" -> "youtsize";
"inpath" -> "numpats.169_49";
"inpath" -> "numpats.169_49";
"inpath" -> "xinsize.170_51";
"inpath" -> "val1.171_54";
"inpath" -> "in_pats";
"inpath" -> "val2.172_58";
"inpath" -> "val3.173_61";
"inpath" -> "val4.174_64";
"inpath" -> "val5.175_67";
"inpath" -> "yinsize.176_70";
"inpath" -> "out_pats";
"inpath" -> "val6.182_85";
"inpath" -> "val7.183_87";
"inpath" -> "val8.184_89";
"inpath" -> "accumtime_17";
"youtsize" -> "ESCAPED";
"numpats.169_49" -> "ESCAPED";
"row_132" -> "element_53";
"xinsize.170_51" -> "ESCAPED";
"xinsize.170_51" -> "element_53";
"val1.171_54" -> "ESCAPED";
"val1.171_54" -> "in_pats";
"val1.171_54" -> "out_pats";
"val2.172_58" -> "ESCAPED";
"val2.172_58" -> "in_pats";
"val2.172_58" -> "out_pats";
"val3.173_61" -> "ESCAPED";
"val3.173_61" -> "in_pats";
"val3.173_61" -> "out_pats";
"val4.174_64" -> "ESCAPED";
"val4.174_64" -> "in_pats";
"val4.174_64" -> "out_pats";
"val5.175_67" -> "ESCAPED";
"val5.175_67" -> "in_pats";
"val5.175_67" -> "out_pats";
"yinsize.176_70" -> "ESCAPED";
"val6.182_85" -> "ESCAPED";
"val6.182_85" -> "out_pats";
"val7.183_87" -> "ESCAPED";
"val7.183_87" -> "out_pats";
"val8.184_89" -> "ESCAPED";
"val8.184_89" -> "out_pats";
"accumtime_17" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL xinsize yinsize youtsize val1 val2 val3 val4 val5 val6 val7 val8 numpats }
NONLOCAL = { ESCAPED NONLOCAL } same as inpath
STOREDANYTHING = { }
INTEGER = { ANYTHING }
randnum = { }
inpath.168_45 = { ESCAPED NONLOCAL } same as inpath
inpath = { ESCAPED NONLOCAL }
fopen = { }
infile_46 = { ESCAPED NONLOCAL } same as inpath
__printf_chk = { }
xinsize = { ESCAPED NONLOCAL } same as xinsize.170_51
yinsize = { ESCAPED NONLOCAL } same as yinsize.176_70
youtsize = { ESCAPED NONLOCAL }
val1 = { ESCAPED NONLOCAL } same as val1.171_54
val2 = { ESCAPED NONLOCAL } same as val2.172_58
val3 = { ESCAPED NONLOCAL } same as val3.173_61
val4 = { ESCAPED NONLOCAL } same as val4.174_64
val5 = { ESCAPED NONLOCAL } same as val5.175_67
val6 = { ESCAPED NONLOCAL } same as val6.182_85
val7 = { ESCAPED NONLOCAL } same as val7.183_87
val8 = { ESCAPED NONLOCAL } same as val8.184_89
*__isoc99_fscanf = { }
vals_read_47 = { ESCAPED NONLOCAL } same as inpath
numpats = { ESCAPED NONLOCAL } same as numpats.169_49
vals_read_48 = { ESCAPED NONLOCAL } same as inpath
numpats.169_49 = { ESCAPED NONLOCAL }
numpats.185_149 = { ESCAPED NONLOCAL } same as numpats.169_49
row_132 = { NULL NONLOCAL }
row_69 = { NULL NONLOCAL } same as row_132
vals_read_50 = { ESCAPED NONLOCAL } same as inpath
xinsize.170_51 = { ESCAPED NONLOCAL }
element_53 = { NULL ESCAPED NONLOCAL }
val1.171_54 = { ESCAPED NONLOCAL }
_55 = { ESCAPED NONLOCAL } same as val1.171_54
in_pats = { ESCAPED NONLOCAL }
element_57 = { NULL ESCAPED NONLOCAL } same as element_53
val2.172_58 = { ESCAPED NONLOCAL }
_59 = { ESCAPED NONLOCAL } same as val2.172_58
element_60 = { NULL ESCAPED NONLOCAL } same as element_53
val3.173_61 = { ESCAPED NONLOCAL }
_62 = { ESCAPED NONLOCAL } same as val3.173_61
element_63 = { NULL ESCAPED NONLOCAL } same as element_53
val4.174_64 = { ESCAPED NONLOCAL }
_65 = { ESCAPED NONLOCAL } same as val4.174_64
element_66 = { NULL ESCAPED NONLOCAL } same as element_53
val5.175_67 = { ESCAPED NONLOCAL }
_68 = { ESCAPED NONLOCAL } same as val5.175_67
yinsize.176_70 = { ESCAPED NONLOCAL }
i_128 = { NULL NONLOCAL } same as row_132
i_74 = { NULL NONLOCAL } same as row_132
_72 = { ESCAPED NONLOCAL } same as in_pats
_73 = { ESCAPED NONLOCAL } same as in_pats
val1.177_75 = { ESCAPED NONLOCAL } same as val1.171_54
_76 = { ESCAPED NONLOCAL } same as val1.171_54
out_pats = { ESCAPED NONLOCAL }
val2.178_77 = { ESCAPED NONLOCAL } same as val2.172_58
_78 = { ESCAPED NONLOCAL } same as val2.172_58
val3.179_79 = { ESCAPED NONLOCAL } same as val3.173_61
_80 = { ESCAPED NONLOCAL } same as val3.173_61
val4.180_81 = { ESCAPED NONLOCAL } same as val4.174_64
_82 = { ESCAPED NONLOCAL } same as val4.174_64
val5.181_83 = { ESCAPED NONLOCAL } same as val5.175_67
_84 = { ESCAPED NONLOCAL } same as val5.175_67
val6.182_85 = { ESCAPED NONLOCAL }
_86 = { ESCAPED NONLOCAL } same as val6.182_85
val7.183_87 = { ESCAPED NONLOCAL }
_88 = { ESCAPED NONLOCAL } same as val7.183_87
val8.184_89 = { ESCAPED NONLOCAL }
_90 = { ESCAPED NONLOCAL } same as val8.184_89
patt_91 = { NULL NONLOCAL } same as row_132
patt_131 = { NULL NONLOCAL } same as row_132
numpats.185_92 = { ESCAPED NONLOCAL } same as numpats.169_49
yinsize.176_188 = { ESCAPED NONLOCAL } same as yinsize.176_70
fclose = { }
ErrorExit = { }
_2 = { ESCAPED NONLOCAL } same as inpath
global_nnetstruct.0+32 = { ESCAPED NONLOCAL } same as inpath
global_nnetstruct.64+192 = { ESCAPED NONLOCAL } same as inpath
_3 = { ESCAPED NONLOCAL } same as inpath
DoNNetIteration = { }
_4 = { ESCAPED NONLOCAL } same as inpath
global_min_ticks.167_5 = { ESCAPED NONLOCAL } same as inpath
global_min_ticks = { ESCAPED NONLOCAL } same as inpath
_6 = { ESCAPED NONLOCAL } same as inpath
_7 = { ESCAPED NONLOCAL } same as inpath
accumtime_17 = { NULL ESCAPED NONLOCAL }
accumtime_39 = { NULL ESCAPED NONLOCAL } same as accumtime_17
iterations_18 = { ESCAPED NONLOCAL } same as inpath
iterations_40 = { ESCAPED NONLOCAL } same as inpath
_9 = { ESCAPED NONLOCAL } same as inpath
_38 = { ESCAPED NONLOCAL } same as inpath
_10 = { ESCAPED NONLOCAL } same as inpath
_11 = { ESCAPED NONLOCAL } same as inpath
TicksToSecs = { }
_12 = { ESCAPED NONLOCAL } same as inpath
_13 = { ESCAPED NONLOCAL } same as inpath
TicksToFracSecs = { }
_14 = { ESCAPED NONLOCAL } same as inpath
_15 = { ESCAPED NONLOCAL } same as inpath
_16 = { ESCAPED NONLOCAL } same as inpath


Alias information for DoNNET

Aliased symbols

xinsize, UID D.8536, int, is addressable
yinsize, UID D.8537, int, is addressable
youtsize, UID D.8538, int, is addressable
val1, UID D.8544, int, is addressable
val2, UID D.8545, int, is addressable
val3, UID D.8546, int, is addressable
val4, UID D.8547, int, is addressable
val5, UID D.8548, int, is addressable
val6, UID D.8549, int, is addressable
val7, UID D.8550, int, is addressable
val8, UID D.8551, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.4696 D.8536 D.8537 D.8538 D.8544 D.8545 D.8546 D.8547 D.8548 D.8549 D.8550 D.8551 } (nonlocal, escaped, interposable)

Flow-insensitive points-to information

inpath.168_45, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
infile_46, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 34 11 12 13 39 42 14 15 16 17 43 18 19 38 20 44 37 40 21 22 45 41 23 24 25 26 27 47 28 48 36 46 29 30 35 31 49 32 33
;;
;; Loop 2
;;  header 30, latch 35
;;  depth 1, outer 0
;;  nodes: 30 35
;;
;; Loop 1
;;  header 27, latch 36
;;  depth 1, outer 0
;;  nodes: 27 36 28
;;
;; Loop 3
;;  header 22, latch 37
;;  depth 1, outer 0
;;  nodes: 22 37 20 19 43 18 16 15 38 14 42 45 13 11 39 34 17
;;
;; Loop 4
;;  header 15, latch 38
;;  depth 2, outer 3
;;  nodes: 15 38 19 43 18 16 17
;;
;; Loop 5
;;  header 11, latch 39
;;  depth 2, outer 3
;;  nodes: 11 39 13
;; 2 succs { 3 4 }
;; 3 succs { 24 }
;; 4 succs { 5 6 }
;; 5 succs { 24 }
;; 6 succs { 7 8 }
;; 7 succs { 24 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 40 41 }
;; 34 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 24 }
;; 13 succs { 39 42 }
;; 39 succs { 11 }
;; 42 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 19 }
;; 17 succs { 18 43 }
;; 43 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 38 20 }
;; 38 succs { 15 }
;; 20 succs { 37 44 }
;; 44 succs { 23 }
;; 37 succs { 22 }
;; 40 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 34 45 }
;; 45 succs { 14 }
;; 41 succs { 23 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 26 46 }
;; 26 succs { 27 }
;; 27 succs { 47 28 }
;; 47 succs { 29 }
;; 28 succs { 36 48 }
;; 48 succs { 29 }
;; 36 succs { 27 }
;; 46 succs { 29 }
;; 29 succs { 30 }
;; 30 succs { 35 31 }
;; 35 succs { 30 }
;; 31 succs { 32 49 }
;; 49 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 1 }
find_duplicates: <bb 46> duplicate of <bb 47>
find_duplicates: <bb 46> duplicate of <bb 48>
find_duplicates: <bb 41> duplicate of <bb 44>
find_duplicates: <bb 42> duplicate of <bb 45>
Removing basic block 47
Removing basic block 48
Removing basic block 44
Removing basic block 45

Symbols to be put in SSA form
{ D.6342 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 50
Number of blocks to update: 45 ( 90%)


Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 40
Merging blocks 41 and 23
Merging blocks 42 and 14
Removing basic block 43
Merging blocks 46 and 29
Removing basic block 49
DoNNET ()
{
  struct FILE * infile;
  int xinsize;
  int yinsize;
  int youtsize;
  int patt;
  int element;
  int i;
  int row;
  int vals_read;
  int val1;
  int val2;
  int val3;
  int val4;
  int val5;
  int val6;
  int val7;
  int val8;
  int D.8552;
  double iterations;
  long unsigned int accumtime;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int global_min_ticks.167_5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _9;
  long unsigned int _10;
  double _11;
  long unsigned int _12;
  long unsigned int _13;
  double _14;
  double _15;
  int _16;
  long unsigned int _38;
  char * inpath.168_45;
  int numpats.169_49;
  int xinsize.170_51;
  int val1.171_54;
  double _55;
  int val2.172_58;
  double _59;
  int val3.173_61;
  double _62;
  int val4.174_64;
  double _65;
  int val5.175_67;
  double _68;
  int yinsize.176_70;
  double _72;
  int val1.177_75;
  double _76;
  int val2.178_77;
  double _78;
  int val3.179_79;
  double _80;
  int val4.180_81;
  double _82;
  int val5.181_83;
  double _84;
  int val6.182_85;
  double _86;
  int val7.183_87;
  double _88;
  int val8.184_89;
  double _90;
  int numpats.185_92;
  int yinsize.176_188;

  <bb 2> [3.21%]:
  randnum (3);
  inpath.168_45 = inpath;
  infile_46 = fopen (inpath.168_45, "r");
  if (infile_46 == 0B)
    goto <bb 3>; [0.87%]
  else
    goto <bb 4>; [99.13%]

  <bb 3> [0.03%]:
  __printf_chk (1, "\n CPU:NNET--error in opening file!");
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 24>; [100.00%]

  <bb 4> [3.19%]:
  vals_read_47 = fscanf (infile_46, "%d  %d  %d", &xinsize, &yinsize, &youtsize);
  if (vals_read_47 != 3)
    goto <bb 5>; [3.81%]
  else
    goto <bb 6>; [96.19%]

  <bb 5> [0.12%]:
  __printf_chk (1, "\n CPU:NNET -- Should read 3 items in line one; did read %d", vals_read_47);
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 24>; [100.00%]

  <bb 6> [3.06%]:
  vals_read_48 = fscanf (infile_46, "%d", &numpats);
  if (vals_read_48 != 1)
    goto <bb 7>; [1.91%]
  else
    goto <bb 8>; [98.09%]

  <bb 7> [0.06%]:
  __printf_chk (1, "\n CPU:NNET -- Should read 1 item in line 2; did read %d", vals_read_48);
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 24>; [100.00%]

  <bb 8> [3.01%]:
  numpats.169_49 = numpats;
  if (numpats.169_49 > 10)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [1.50%]:
  numpats = 10;
  goto <bb 21>; [100.00%]

  <bb 10> [1.51%]:
  if (numpats.169_49 > 0)
    goto <bb 21>; [85.05%]
  else
    goto <bb 23>; [14.95%]

  <bb 11> [34.29%]:
  # row_132 = PHI <row_69(13), 0(22)>
  vals_read_50 = fscanf (infile_46, "%d  %d  %d  %d  %d", &val1, &val2, &val3, &val4, &val5);
  if (vals_read_50 != 5)
    goto <bb 12>; [7.50%]
  else
    goto <bb 13>; [92.50%]

  <bb 12> [2.57%]:
  __printf_chk (1, "\n CPU:NNET -- failure in reading input!");
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 24>; [100.00%]

  <bb 13> [31.72%]:
  xinsize.170_51 = xinsize;
  element_53 = xinsize.170_51 * row_132;
  val1.171_54 = val1;
  _55 = (double) val1.171_54;
  in_pats[patt_131][element_53] = _55;
  element_57 = element_53 + 1;
  val2.172_58 = val2;
  _59 = (double) val2.172_58;
  in_pats[patt_131][element_57] = _59;
  element_60 = element_53 + 2;
  val3.173_61 = val3;
  _62 = (double) val3.173_61;
  in_pats[patt_131][element_60] = _62;
  element_63 = element_53 + 3;
  val4.174_64 = val4;
  _65 = (double) val4.174_64;
  in_pats[patt_131][element_63] = _65;
  element_66 = element_53 + 4;
  val5.175_67 = val5;
  _68 = (double) val5.175_67;
  in_pats[patt_131][element_66] = _68;
  row_69 = row_132 + 1;
  yinsize.176_70 = yinsize;
  if (row_69 < yinsize.176_70)
    goto <bb 11>; [92.50%]
  else
    goto <bb 14>; [7.50%]

  <bb 14> [2.78%]:

  <bb 15> [97.22%]:
  # i_128 = PHI <i_74(19), 0(14)>
  _72 = in_pats[patt_131][i_128];
  if (_72 >= 9.0000000000000002220446049250313080847263336181640625e-1)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 16> [48.61%]:
  in_pats[patt_131][i_128] = 9.0000000000000002220446049250313080847263336181640625e-1;
  goto <bb 19>; [100.00%]

  <bb 17> [48.61%]:
  if (_72 <= 1.000000000000000055511151231257827021181583404541015625e-1)
    goto <bb 18>; [100.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 18> [48.61%]:
  in_pats[patt_131][i_128] = 1.000000000000000055511151231257827021181583404541015625e-1;

  <bb 19> [97.22%]:
  i_74 = i_128 + 1;
  if (i_74 != 35)
    goto <bb 15>; [97.14%]
  else
    goto <bb 20>; [2.86%]

  <bb 20> [2.78%]:
  fscanf (infile_46, "%d  %d  %d  %d  %d  %d  %d  %d", &val1, &val2, &val3, &val4, &val5, &val6, &val7, &val8);
  val1.177_75 = val1;
  _76 = (double) val1.177_75;
  out_pats[patt_131][0] = _76;
  val2.178_77 = val2;
  _78 = (double) val2.178_77;
  out_pats[patt_131][1] = _78;
  val3.179_79 = val3;
  _80 = (double) val3.179_79;
  out_pats[patt_131][2] = _80;
  val4.180_81 = val4;
  _82 = (double) val4.180_81;
  out_pats[patt_131][3] = _82;
  val5.181_83 = val5;
  _84 = (double) val5.181_83;
  out_pats[patt_131][4] = _84;
  val6.182_85 = val6;
  _86 = (double) val6.182_85;
  out_pats[patt_131][5] = _86;
  val7.183_87 = val7;
  _88 = (double) val7.183_87;
  out_pats[patt_131][6] = _88;
  val8.184_89 = val8;
  _90 = (double) val8.184_89;
  out_pats[patt_131][7] = _90;
  patt_91 = patt_131 + 1;
  numpats.185_92 = numpats;
  if (patt_91 < numpats.185_92)
    goto <bb 22>; [92.50%]
  else
    goto <bb 23>; [7.50%]

  <bb 21> [2.78%]:

  <bb 22> [5.38%]:
  # patt_131 = PHI <0(21), patt_91(20)>
  yinsize.176_188 = yinsize;
  if (yinsize.176_188 > 0)
    goto <bb 11>; [92.50%]
  else
    goto <bb 14>; [7.50%]

  <bb 23> [0.44%]:
  fclose (infile_46);
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 25>; [100.00%]

  <bb 24> [1.06%]:
  ErrorExit ();

  <bb 25> [3.21%]:
  _2 = global_nnetstruct.adjust;
  if (_2 == 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 29>; [50.00%]

  <bb 26> [1.61%]:
  global_nnetstruct.loops = 1;

  <bb 27> [10.29%]:
  randnum (3);
  _3 = global_nnetstruct.loops;
  _4 = DoNNetIteration (_3);
  global_min_ticks.167_5 = global_min_ticks;
  if (_4 > global_min_ticks.167_5)
    goto <bb 29>; [7.50%]
  else
    goto <bb 28>; [92.50%]

  <bb 28> [9.52%]:
  _6 = global_nnetstruct.loops;
  _7 = _6 + 1;
  global_nnetstruct.loops = _7;
  if (_7 <= 499999)
    goto <bb 27>; [92.50%]
  else
    goto <bb 29>; [7.50%]

  <bb 29> [3.21%]:

  <bb 30> [21.42%]:
  # accumtime_17 = PHI <0(29), accumtime_39(30)>
  # iterations_18 = PHI <0.0(29), iterations_40(30)>
  randnum (3);
  _9 = global_nnetstruct.loops;
  _38 = DoNNetIteration (_9);
  accumtime_39 = accumtime_17 + _38;
  _10 = global_nnetstruct.loops;
  _11 = (double) _10;
  iterations_40 = _11 + iterations_18;
  _12 = TicksToSecs (accumtime_39);
  _13 = global_nnetstruct.request_secs;
  if (_12 < _13)
    goto <bb 30>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 31> [3.21%]:
  _14 = TicksToFracSecs (accumtime_39);
  _15 = iterations_40 / _14;
  global_nnetstruct.iterspersec = _15;
  _16 = global_nnetstruct.adjust;
  if (_16 == 0)
    goto <bb 32>; [54.00%]
  else
    goto <bb 33>; [46.00%]

  <bb 32> [1.74%]:
  global_nnetstruct.adjust = 1;

  <bb 33> [3.21%]:
  return;

}



;; Function DoLU (DoLU, funcdef_no=111, decl_uid=4732, cgraph_uid=111, symbol_order=136)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ESCAPED = &NONLOCAL
ESCAPED = &systemerror
a_51 = NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = &systemerror
b_53 = NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = &systemerror
_1 = NONLOCAL
LUtempvv = NONLOCAL
LUtempvv = _1
ESCAPED = _1
ESCAPED = &NONLOCAL
i_322 = i_114
i_322 = &NULL
ESCAPED = &NONLOCAL
_97 = NONLOCAL
_98 = _97
_98 = &NONLOCAL
i.204_100 = i_322
_101 = i.204_100
_101 = &NONLOCAL
_102 = b_53 + UNKNOWN
_103 = _98
*_102 = _103
_110 = i.204_100
_110 = &NONLOCAL
_111 = a_51 + UNKNOWN
_107 = i.204_100
_107 = &NONLOCAL
_108 = a_51 + UNKNOWN
j_323 = j_112
j_323 = &NULL
ESCAPED = &NONLOCAL
_105 = NONLOCAL
_106 = _105
_106 = &NONLOCAL
_109 = _106
*_108 + UNKNOWN = _109
derefaddrtmp(33) = &NONLOCAL
*_111 + UNKNOWN = derefaddrtmp(33)
j_112 = j_323
j_112 = &NONLOCAL
i_114 = i_322
i_114 = &NONLOCAL
i_325 = i_145
i_325 = &NULL
ESCAPED = &NONLOCAL
_116 = NONLOCAL
k_117 = _116
ESCAPED = &NONLOCAL
_118 = NONLOCAL
k1_119 = _118
rcon_129 = &NONLOCAL
rcon_129 = &NONLOCAL
k.209_120 = _116
_121 = k.209_120
_121 = &NONLOCAL
_122 = a_51 + UNKNOWN
k1.210_125 = _118
_126 = k1.210_125
_126 = &NONLOCAL
_127 = a_51 + UNKNOWN
j_324 = j_132
j_324 = &NULL
_124 = *_122 + UNKNOWN
_128 = *_127 + UNKNOWN
_130 = _128
_130 = rcon_129
_131 = _124
_131 = _130
*_122 + UNKNOWN = _131
j_132 = j_324
j_132 = &NONLOCAL
_135 = k.209_120
_135 = &NONLOCAL
_136 = b_53 + UNKNOWN
_137 = *_136
_139 = k1.210_125
_139 = &NONLOCAL
_140 = b_53 + UNKNOWN
_141 = *_140
_142 = rcon_129
_142 = _141
_143 = _137
_143 = _142
*_136 = _143
i_145 = i_325
i_145 = &NONLOCAL
global_lustruct.0+32 = NONLOCAL
global_lustruct.64+192 = NONLOCAL
_3 = global_lustruct.0+32
global_lustruct.64+192 = &NULL
ESCAPED = &NULL
i_320 = _4
i_320 = &NONLOCAL
_4 = i_320
_4 = &NONLOCAL
_5 = _4
_6 = _5
_6 = &NONLOCAL
ESCAPED = _6
ESCAPED = &systemerror
abase_71 = NONLOCAL
systemerror.195_7 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.195_7
ESCAPED = a_51
ESCAPED = &systemerror
ESCAPED = b_53
ESCAPED = &systemerror
LUtempvv.221_148 = LUtempvv
ESCAPED = LUtempvv.221_148
ESCAPED = &systemerror
_9 = _5
_9 = &NONLOCAL
ESCAPED = _9
ESCAPED = &systemerror
bbase_76 = NONLOCAL
systemerror.197_10 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.197_10
ESCAPED = a_51
ESCAPED = &systemerror
ESCAPED = b_53
ESCAPED = &systemerror
LUtempvv.221_149 = LUtempvv
ESCAPED = LUtempvv.221_149
ESCAPED = &systemerror
ESCAPED = abase_71
ESCAPED = &systemerror
_11 = i_320
j_326 = j_167
j_326 = &NULL
_151 = j_326
_151 = &NONLOCAL
_152 = j_326
_152 = &NONLOCAL
i_327 = i_159
i_327 = &NULL
_154 = i_327
_154 = &NONLOCAL
_155 = a_51 + UNKNOWN
_156 = _151
_156 = _154
_157 = abase_71 + UNKNOWN
_158 = *_155
*_157 = _158
i_159 = i_327
i_159 = &NONLOCAL
i_328 = i_166
i_328 = &NULL
_161 = i_328
_161 = &NONLOCAL
_162 = b_53 + UNKNOWN
_163 = _152
_163 = _161
_164 = bbase_76 + UNKNOWN
_165 = *_162
*_164 = _165
i_166 = i_328
i_166 = &NONLOCAL
j_167 = j_326
j_167 = &NONLOCAL
elapsed_168 = NONLOCAL
i_329 = i_174
i_329 = &NULL
_170 = i_329
_170 = &NONLOCAL
locabase_171 = abase_71 + UNKNOWN
_172 = i_329
_172 = &NONLOCAL
locbbase_173 = bbase_76 + UNKNOWN
ESCAPED = locabase_171
ESCAPED = locbbase_173
i_174 = i_329
i_174 = &NONLOCAL
ESCAPED = elapsed_168
_175 = NONLOCAL
global_min_ticks = NONLOCAL
global_min_ticks.199_13 = global_min_ticks
global_lustruct.64+192 = _11
ESCAPED = _11
ESCAPED = abase_71
ESCAPED = &systemerror
ESCAPED = bbase_76
ESCAPED = &systemerror
_14 = global_lustruct.64+192
ESCAPED = &STRING
ESCAPED = a_51
ESCAPED = &systemerror
ESCAPED = b_53
ESCAPED = &systemerror
LUtempvv.221_176 = LUtempvv
ESCAPED = LUtempvv.221_176
ESCAPED = &systemerror
ESCAPED = abase_71
ESCAPED = &systemerror
ESCAPED = bbase_76
ESCAPED = &systemerror
_15 = global_lustruct.64+192
_16 = _15
_16 = &NONLOCAL
ESCAPED = _16
ESCAPED = &systemerror
abase_58 = NONLOCAL
systemerror.200_17 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.200_17
ESCAPED = a_51
ESCAPED = &systemerror
ESCAPED = b_53
ESCAPED = &systemerror
LUtempvv.221_177 = LUtempvv
ESCAPED = LUtempvv.221_177
ESCAPED = &systemerror
_19 = global_lustruct.64+192
_20 = _19
_20 = &NONLOCAL
ESCAPED = _20
ESCAPED = &systemerror
bbase_63 = NONLOCAL
systemerror.202_21 = systemerror
ESCAPED = &STRING
ESCAPED = systemerror.202_21
ESCAPED = a_51
ESCAPED = &systemerror
ESCAPED = b_53
ESCAPED = &systemerror
LUtempvv.221_178 = LUtempvv
ESCAPED = LUtempvv.221_178
ESCAPED = &systemerror
ESCAPED = abase_58
ESCAPED = &systemerror
abase_33 = abase_71
abase_33 = abase_58
abase_33 = abase_58
abase_33 = abase_71
bbase_36 = bbase_76
bbase_36 = bbase_63
bbase_36 = bbase_63
bbase_36 = bbase_76
accumtime_38 = &NULL
accumtime_38 = accumtime_88
iterations_39 = &NONLOCAL
iterations_39 = iterations_89
_23 = global_lustruct.64+192
j_113 = j_196
j_113 = &NULL
_180 = j_113
_180 = &NONLOCAL
_181 = j_113
_181 = &NONLOCAL
i_330 = i_188
i_330 = &NULL
_183 = i_330
_183 = &NONLOCAL
_184 = a_51 + UNKNOWN
_185 = _180
_185 = _183
_186 = abase_33 + UNKNOWN
_187 = *_184
*_186 = _187
i_188 = i_330
i_188 = &NONLOCAL
i_331 = i_195
i_331 = &NULL
_190 = i_331
_190 = &NONLOCAL
_191 = b_53 + UNKNOWN
_192 = _181
_192 = _190
_193 = bbase_36 + UNKNOWN
_194 = *_191
*_193 = _194
i_195 = i_331
i_195 = &NONLOCAL
j_196 = j_113
j_196 = &NONLOCAL
i_32 = i_203
i_32 = &NULL
_199 = i_32
_199 = &NONLOCAL
locabase_200 = abase_33 + UNKNOWN
_201 = i_32
_201 = &NONLOCAL
locbbase_202 = bbase_36 + UNKNOWN
ESCAPED = locabase_200
ESCAPED = locbbase_202
i_203 = i_32
i_203 = &NONLOCAL
elapsed_22 = elapsed_302
elapsed_22 = elapsed_179
ESCAPED = elapsed_22
_204 = NONLOCAL
accumtime_88 = accumtime_38
accumtime_88 = _204
_24 = global_lustruct.64+192
_25 = _24
iterations_89 = _25
iterations_89 = iterations_39
ESCAPED = accumtime_88
_26 = NONLOCAL
_27 = global_lustruct.64+192
ESCAPED = accumtime_88
_28 = NONLOCAL
_29 = iterations_89
_29 = _28
global_lustruct.64+192 = _29
ESCAPED = _29
_30 = global_lustruct.0+32
global_lustruct.0+32 = &NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = a_51
ESCAPED = &systemerror
ESCAPED = b_53
ESCAPED = &systemerror
LUtempvv.221_205 = LUtempvv
ESCAPED = LUtempvv.221_205
ESCAPED = &systemerror
ESCAPED = abase_33
ESCAPED = &systemerror
ESCAPED = bbase_36
ESCAPED = &systemerror
elapsed_302 = NONLOCAL
elapsed_179 = NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 1 3 5 9 72 78 114 120 126 172 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"AllocateMemory";
"systemerror";
"a_51";
"b_53";
"_1";
"LUtempvv";
"randnum";
"i_322"[label="i_322 = { 1 5 }"];
"abs_randwc";
"_97";
"_98"[label="_98 = { 5 }"];
"i.204_100";
"_101"[label="_101 = { 5 }"];
"_102";
"_103";
"_110"[label="_110 = { 5 }"];
"_111";
"_107"[label="_107 = { 5 }"];
"_108";
"j_323"[label="j_323 = { 1 5 }"];
"_105";
"_106"[label="_106 = { 5 }"];
"_109";
"derefaddrtmp(33)"[label="derefaddrtmp(33) = { 5 }"];
"i_325"[label="i_325 = { 1 5 }"];
"_116";
"k_117";
"_118";
"k1_119";
"rcon_129"[label="rcon_129 = { 5 }"];
"k.209_120";
"_121"[label="_121 = { 5 }"];
"_122";
"k1.210_125";
"_126"[label="_126 = { 5 }"];
"_127";
"j_324"[label="j_324 = { 1 5 }"];
"_124";
"_128";
"_130";
"_131";
"_135"[label="_135 = { 5 }"];
"_136";
"_137";
"_139"[label="_139 = { 5 }"];
"_140";
"_141";
"_142";
"_3";
"global_lustruct.0+32"[label="global_lustruct.0+32 = { 5 }"];
"global_lustruct.64+192"[label="global_lustruct.64+192 = { 1 5 }"];
"_4"[label="_4 = { 5 }"];
"_5";
"_6"[label="_6 = { 5 }"];
"abase_71";
"systemerror.195_7";
"ReportError";
"FreeMemory";
"systemerror";
"LUtempvv.221_148";
"ErrorExit";
"_9"[label="_9 = { 5 }"];
"bbase_76";
"systemerror.197_10";
"systemerror";
"LUtempvv.221_149";
"_11";
"j_326"[label="j_326 = { 1 5 }"];
"_151"[label="_151 = { 5 }"];
"_152"[label="_152 = { 5 }"];
"i_327"[label="i_327 = { 1 5 }"];
"_154"[label="_154 = { 5 }"];
"_155";
"_156";
"_157";
"_158";
"i_328"[label="i_328 = { 1 5 }"];
"_161"[label="_161 = { 5 }"];
"_162";
"_163";
"_164";
"_165";
"StartStopwatch";
"elapsed_168";
"i_329"[label="i_329 = { 1 5 }"];
"_170"[label="_170 = { 5 }"];
"locabase_171";
"_172"[label="_172 = { 5 }"];
"locbbase_173";
"lusolve.constprop.6";
"StopStopwatch";
"_175";
"global_min_ticks.199_13";
"global_min_ticks";
"_14";
"puts";
"systemerror";
"LUtempvv.221_176";
"_15";
"_16"[label="_16 = { 5 }"];
"abase_58";
"systemerror.200_17";
"systemerror";
"LUtempvv.221_177";
"_19";
"_20"[label="_20 = { 5 }"];
"bbase_63";
"systemerror.202_21";
"systemerror";
"LUtempvv.221_178";
"abase_33";
"bbase_36";
"accumtime_88"[label="accumtime_88 = { 1 }"];
"_23";
"j_113"[label="j_113 = { 1 5 }"];
"_180"[label="_180 = { 5 }"];
"_181"[label="_181 = { 5 }"];
"i_330"[label="i_330 = { 1 5 }"];
"_183"[label="_183 = { 5 }"];
"_184";
"_185";
"_186";
"_187";
"i_331"[label="i_331 = { 1 5 }"];
"_190"[label="_190 = { 5 }"];
"_191";
"_192";
"_193";
"_194";
"i_32"[label="i_32 = { 1 5 }"];
"_199"[label="_199 = { 5 }"];
"locabase_200";
"_201"[label="_201 = { 5 }"];
"locbbase_202";
"elapsed_22";
"elapsed_302";
"elapsed_179";
"_204";
"TicksToSecs";
"_26";
"_27";
"TicksToFracSecs";
"_28";
"_30";
"systemerror";
"LUtempvv.221_205";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*AllocateMemory";
"*systemerror";
"*randnum";
"*i_322";
"*i_114";
"*abs_randwc";
"*_97";
"*_98";
"*i.204_100";
"*_101";
"*_102";
"*_103";
"*_110";
"*_111";
"*_107";
"*_108";
"*j_323";
"*j_112";
"*_105";
"*_106";
"*_109";
"*derefaddrtmp(33)";
"*i_325";
"*i_145";
"*_116";
"*k_117";
"*_118";
"*k1_119";
"*rcon_129";
"*k.209_120";
"*_121";
"*_122";
"*k1.210_125";
"*_126";
"*_127";
"*j_324";
"*j_132";
"*_124";
"*_128";
"*_130";
"*_131";
"*_135";
"*_137";
"*_139";
"*_140";
"*_141";
"*_142";
"*_143";
"*_3";
"*global_lustruct.0+32";
"*_4";
"*_5";
"*_6";
"*systemerror.195_7";
"*ReportError";
"*FreeMemory";
"*systemerror";
"*ErrorExit";
"*_9";
"*systemerror.197_10";
"*systemerror";
"*_11";
"*j_326";
"*j_167";
"*_151";
"*_152";
"*i_327";
"*i_159";
"*_154";
"*_155";
"*_156";
"*_157";
"*_158";
"*i_328";
"*i_166";
"*_161";
"*_162";
"*_163";
"*_164";
"*_165";
"*StartStopwatch";
"*i_329";
"*i_174";
"*_170";
"*locabase_171";
"*_172";
"*locbbase_173";
"*lusolve.constprop.6";
"*StopStopwatch";
"*_175";
"*global_min_ticks.199_13";
"*global_min_ticks";
"*_14";
"*puts";
"*systemerror";
"*systemerror.200_17";
"*systemerror";
"*systemerror.202_21";
"*systemerror";
"*_23";
"*j_113";
"*j_196";
"*_180";
"*_181";
"*i_330";
"*i_188";
"*_183";
"*_184";
"*_185";
"*_186";
"*_187";
"*i_331";
"*i_195";
"*_190";
"*_191";
"*_192";
"*_193";
"*_194";
"*i_32";
"*i_203";
"*_199";
"*locabase_200";
"*_201";
"*locbbase_202";
"*TicksToSecs";
"*_26";
"*_27";
"*TicksToFracSecs";
"*_30";
"*systemerror";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"a_51" -> "ESCAPED";
"b_53" -> "ESCAPED";
"_1" -> "ESCAPED";
"_6" -> "ESCAPED";
"abase_71" -> "ESCAPED";
"systemerror.195_7" -> "ESCAPED";
"LUtempvv.221_148" -> "ESCAPED";
"_9" -> "ESCAPED";
"bbase_76" -> "ESCAPED";
"systemerror.197_10" -> "ESCAPED";
"LUtempvv.221_149" -> "ESCAPED";
"_11" -> "ESCAPED";
"elapsed_168" -> "ESCAPED";
"locabase_171" -> "ESCAPED";
"locbbase_173" -> "ESCAPED";
"LUtempvv.221_176" -> "ESCAPED";
"_16" -> "ESCAPED";
"abase_58" -> "ESCAPED";
"systemerror.200_17" -> "ESCAPED";
"LUtempvv.221_177" -> "ESCAPED";
"_20" -> "ESCAPED";
"systemerror.202_21" -> "ESCAPED";
"LUtempvv.221_178" -> "ESCAPED";
"abase_33" -> "ESCAPED";
"bbase_36" -> "ESCAPED";
"accumtime_88" -> "ESCAPED";
"locabase_200" -> "ESCAPED";
"locbbase_202" -> "ESCAPED";
"elapsed_22" -> "ESCAPED";
"global_lustruct.64+192" -> "ESCAPED";
"LUtempvv.221_205" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"NONLOCAL" -> "a_51";
"NONLOCAL" -> "b_53";
"NONLOCAL" -> "_1";
"NONLOCAL" -> "LUtempvv";
"_1" -> "LUtempvv";
"i_322" -> "i_322";
"i_322" -> "i_322";
"NONLOCAL" -> "_97";
"_97" -> "_98";
"i_322" -> "i.204_100";
"i.204_100" -> "_101";
"_98" -> "_103";
"i.204_100" -> "_110";
"i.204_100" -> "_107";
"j_323" -> "j_323";
"j_323" -> "j_323";
"NONLOCAL" -> "_105";
"_105" -> "_106";
"_106" -> "_109";
"i_325" -> "i_325";
"i_325" -> "i_325";
"NONLOCAL" -> "_116";
"_116" -> "k_117";
"NONLOCAL" -> "_118";
"_118" -> "k1_119";
"_116" -> "k.209_120";
"k.209_120" -> "_121";
"_118" -> "k1.210_125";
"k1.210_125" -> "_126";
"j_324" -> "j_324";
"j_324" -> "j_324";
"rcon_129" -> "_130";
"_128" -> "_130";
"_124" -> "_131";
"_130" -> "_131";
"k.209_120" -> "_135";
"_137" -> "_137";
"_142" -> "_137";
"_137" -> "_137";
"_137" -> "_137";
"k1.210_125" -> "_139";
"*_140" -> "_141";
"rcon_129" -> "_142";
"_141" -> "_142";
"global_lustruct.0+32" -> "_3";
"NONLOCAL" -> "global_lustruct.0+32";
"NONLOCAL" -> "global_lustruct.64+192";
"global_lustruct.64+192" -> "global_lustruct.64+192";
"_11" -> "global_lustruct.64+192";
"global_lustruct.64+192" -> "global_lustruct.64+192";
"global_lustruct.64+192" -> "global_lustruct.64+192";
"global_lustruct.64+192" -> "global_lustruct.64+192";
"global_lustruct.64+192" -> "global_lustruct.64+192";
"_28" -> "global_lustruct.64+192";
"global_lustruct.64+192" -> "global_lustruct.64+192";
"_4" -> "_4";
"_4" -> "_4";
"_4" -> "_5";
"_5" -> "_6";
"NONLOCAL" -> "abase_71";
"systemerror" -> "systemerror.195_7";
"LUtempvv" -> "LUtempvv.221_148";
"_5" -> "_9";
"NONLOCAL" -> "bbase_76";
"systemerror" -> "systemerror.197_10";
"LUtempvv" -> "LUtempvv.221_149";
"_4" -> "_11";
"j_326" -> "j_326";
"j_326" -> "j_326";
"j_326" -> "_151";
"j_326" -> "_152";
"i_327" -> "i_327";
"i_327" -> "i_327";
"i_327" -> "_154";
"_151" -> "_156";
"_154" -> "_156";
"*_155" -> "_158";
"i_328" -> "i_328";
"i_328" -> "i_328";
"i_328" -> "_161";
"_152" -> "_163";
"_161" -> "_163";
"*_162" -> "_165";
"NONLOCAL" -> "elapsed_168";
"i_329" -> "i_329";
"i_329" -> "i_329";
"i_329" -> "_170";
"i_329" -> "_172";
"NONLOCAL" -> "_175";
"global_min_ticks" -> "global_min_ticks.199_13";
"NONLOCAL" -> "global_min_ticks";
"global_lustruct.64+192" -> "_14";
"LUtempvv" -> "LUtempvv.221_176";
"global_lustruct.64+192" -> "_15";
"_15" -> "_16";
"NONLOCAL" -> "abase_58";
"systemerror" -> "systemerror.200_17";
"LUtempvv" -> "LUtempvv.221_177";
"global_lustruct.64+192" -> "_19";
"_19" -> "_20";
"NONLOCAL" -> "bbase_63";
"systemerror" -> "systemerror.202_21";
"LUtempvv" -> "LUtempvv.221_178";
"abase_71" -> "abase_33";
"abase_58" -> "abase_33";
"bbase_76" -> "bbase_36";
"bbase_63" -> "bbase_36";
"accumtime_88" -> "accumtime_88";
"accumtime_88" -> "accumtime_88";
"_204" -> "accumtime_88";
"global_lustruct.64+192" -> "_23";
"j_113" -> "j_113";
"j_113" -> "j_113";
"j_113" -> "_180";
"j_113" -> "_181";
"i_330" -> "i_330";
"i_330" -> "i_330";
"i_330" -> "_183";
"_180" -> "_185";
"_183" -> "_185";
"*_184" -> "_187";
"i_331" -> "i_331";
"i_331" -> "i_331";
"i_331" -> "_190";
"_181" -> "_192";
"_190" -> "_192";
"*_191" -> "_194";
"i_32" -> "i_32";
"i_32" -> "i_32";
"i_32" -> "_199";
"i_32" -> "_201";
"elapsed_302" -> "elapsed_22";
"elapsed_179" -> "elapsed_22";
"NONLOCAL" -> "elapsed_302";
"NONLOCAL" -> "elapsed_179";
"NONLOCAL" -> "_204";
"NONLOCAL" -> "_26";
"global_lustruct.64+192" -> "_27";
"NONLOCAL" -> "_28";
"global_lustruct.0+32" -> "_30";
"LUtempvv" -> "LUtempvv.221_205";
"_103" -> "*_102";
"_158" -> "*_157";
"_165" -> "*_164";
"_187" -> "*_186";
"_194" -> "*_193";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"AllocateMemory";
"a_51" [label="\N\n_102 = a_51 + UNKNOWN\l_111 = a_51 + UNKNOWN\l_108 = a_51 + UNKNOWN\l_122 = a_51 + UNKNOWN\l_127 = a_51 + UNKNOWN\l_136 = a_51 + UNKNOWN\l_140 = a_51 + UNKNOWN\l_155 = a_51 + UNKNOWN\l_157 = a_51 + UNKNOWN\l_162 = a_51 + UNKNOWN\l_164 = a_51 + UNKNOWN\llocabase_171 = a_51 + UNKNOWN\llocbbase_173 = a_51 + UNKNOWN\l_184 = a_51 + UNKNOWN\l_186 = a_51 + UNKNOWN\l_191 = a_51 + UNKNOWN\l_193 = a_51 + UNKNOWN\llocabase_200 = a_51 + UNKNOWN\llocbbase_202 = a_51 + UNKNOWN\l"];
"randnum";
"i_322";
"abs_randwc";
"_102" [label="\N\n*_102 = a_51\l"];
"_111" [label="\N\n*_111 + UNKNOWN = derefaddrtmp(33)\l"];
"_108" [label="\N\n*_108 + UNKNOWN = a_51\l"];
"derefaddrtmp(33)";
"_122" [label="\N\n_124 = *_122 + UNKNOWN\l*_122 + UNKNOWN = _131\l"];
"_127" [label="\N\n_128 = *_127 + UNKNOWN\l"];
"_124";
"_128";
"_130";
"_131";
"_136" [label="\N\n_137 = *_136\l*_136 = _137\l"];
"_137";
"_140" [label="\N\n_141 = *_140\l"];
"_141";
"_142";
"global_lustruct.64+192";
"systemerror.195_7";
"ReportError";
"FreeMemory";
"systemerror";
"ErrorExit";
"systemerror";
"_155" [label="\N\n_158 = *_155\l"];
"_157" [label="\N\n*_157 = _158\l"];
"_158";
"_162" [label="\N\n_165 = *_162\l"];
"_164" [label="\N\n*_164 = _165\l"];
"_165";
"StartStopwatch";
"locabase_171";
"locbbase_173";
"lusolve.constprop.6";
"StopStopwatch";
"puts";
"systemerror";
"systemerror";
"systemerror";
"_184" [label="\N\n_187 = *_184\l"];
"_186" [label="\N\n*_186 = _187\l"];
"_187";
"_191" [label="\N\n_194 = *_191\l"];
"_193" [label="\N\n*_193 = _194\l"];
"_194";
"locabase_200";
"locbbase_202";
"TicksToSecs";
"TicksToFracSecs";
"systemerror";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "systemerror.195_7";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_111";
"STOREDANYTHING" -> "_108";
"STOREDANYTHING" -> "_122";
"STOREDANYTHING" -> "_127";
"STOREDANYTHING" -> "_124";
"STOREDANYTHING" -> "_128";
"STOREDANYTHING" -> "_136";
"STOREDANYTHING" -> "_137";
"STOREDANYTHING" -> "_140";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_157";
"STOREDANYTHING" -> "_162";
"STOREDANYTHING" -> "_164";
"STOREDANYTHING" -> "locabase_171";
"STOREDANYTHING" -> "locbbase_173";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "_184";
"STOREDANYTHING" -> "_186";
"STOREDANYTHING" -> "_191";
"STOREDANYTHING" -> "_193";
"STOREDANYTHING" -> "locabase_200";
"STOREDANYTHING" -> "locbbase_202";
"STOREDANYTHING" -> "systemerror";
"a_51" -> "ESCAPED";
"a_51" -> "global_lustruct.64+192";
"derefaddrtmp(33)" -> "ESCAPED";
"derefaddrtmp(33)" -> "_130";
"derefaddrtmp(33)" -> "_142";
"derefaddrtmp(33)" -> "global_lustruct.64+192";
"_124" -> "_131";
"_128" -> "_130";
"_130" -> "_131";
"_141" -> "_142";
"_142" -> "_137";
"global_lustruct.64+192" -> "ESCAPED";
"systemerror.195_7" -> "ESCAPED";
"locabase_171" -> "ESCAPED";
"locbbase_173" -> "ESCAPED";
"locabase_200" -> "ESCAPED";
"locbbase_202" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"STOREDANYTHING";
"INTEGER";
"AllocateMemory";
"a_51" [label="\N\n_102 = a_51 + UNKNOWN\l_111 = a_51 + UNKNOWN\l_108 = a_51 + UNKNOWN\l_122 = a_51 + UNKNOWN\l_127 = a_51 + UNKNOWN\l_136 = a_51 + UNKNOWN\l_140 = a_51 + UNKNOWN\l_155 = a_51 + UNKNOWN\l_157 = a_51 + UNKNOWN\l_162 = a_51 + UNKNOWN\l_164 = a_51 + UNKNOWN\llocabase_171 = a_51 + UNKNOWN\llocbbase_173 = a_51 + UNKNOWN\l_184 = a_51 + UNKNOWN\l_186 = a_51 + UNKNOWN\l_191 = a_51 + UNKNOWN\l_193 = a_51 + UNKNOWN\llocabase_200 = a_51 + UNKNOWN\llocbbase_202 = a_51 + UNKNOWN\l"];
"randnum";
"i_322";
"abs_randwc";
"_102" [label="\N\n*_102 = a_51\l"];
"_111" [label="\N\n*_111 + UNKNOWN = derefaddrtmp(33)\l"];
"_108" [label="\N\n*_108 + UNKNOWN = a_51\l"];
"derefaddrtmp(33)";
"_122" [label="\N\n_124 = *_122 + UNKNOWN\l*_122 + UNKNOWN = _131\l"];
"_127" [label="\N\n_128 = *_127 + UNKNOWN\l"];
"_124";
"_128";
"_130";
"_131";
"_136" [label="\N\n_137 = *_136\l*_136 = _137\l"];
"_137" [label="\N\n_137 = _137 + UNKNOWN\l_137 = *_137\l*_137 = a_51\l"];
"_140" [label="\N\n_141 = *_140\l"];
"_141";
"_142";
"global_lustruct.64+192";
"systemerror.195_7";
"ReportError";
"FreeMemory";
"systemerror";
"ErrorExit";
"systemerror";
"_155" [label="\N\n_158 = *_155\l"];
"_157" [label="\N\n*_157 = _158\l"];
"_158";
"_162" [label="\N\n_165 = *_162\l"];
"_164" [label="\N\n*_164 = _165\l"];
"_165";
"StartStopwatch";
"locabase_171";
"locbbase_173";
"lusolve.constprop.6";
"StopStopwatch";
"puts";
"systemerror";
"systemerror";
"systemerror";
"_184" [label="\N\n_187 = *_184\l"];
"_186" [label="\N\n*_186 = _187\l"];
"_187";
"_191" [label="\N\n_194 = *_191\l"];
"_193" [label="\N\n*_193 = _194\l"];
"_194";
"locabase_200";
"locbbase_202";
"TicksToSecs";
"TicksToFracSecs";
"systemerror";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "_137";
"STOREDANYTHING" -> "systemerror.195_7";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_111";
"STOREDANYTHING" -> "_108";
"STOREDANYTHING" -> "_122";
"STOREDANYTHING" -> "_127";
"STOREDANYTHING" -> "_124";
"STOREDANYTHING" -> "_128";
"STOREDANYTHING" -> "_136";
"STOREDANYTHING" -> "_137";
"STOREDANYTHING" -> "_140";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_157";
"STOREDANYTHING" -> "_162";
"STOREDANYTHING" -> "_164";
"STOREDANYTHING" -> "locabase_171";
"STOREDANYTHING" -> "locbbase_173";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "systemerror";
"STOREDANYTHING" -> "_184";
"STOREDANYTHING" -> "_186";
"STOREDANYTHING" -> "_191";
"STOREDANYTHING" -> "_193";
"STOREDANYTHING" -> "locabase_200";
"STOREDANYTHING" -> "locbbase_202";
"STOREDANYTHING" -> "systemerror";
"a_51" -> "_137";
"a_51" -> "_124";
"a_51" -> "_128";
"a_51" -> "_137";
"a_51" -> "_141";
"a_51" -> "global_lustruct.64+192";
"a_51" -> "systemerror.195_7";
"a_51" -> "systemerror";
"a_51" -> "systemerror";
"a_51" -> "_158";
"a_51" -> "_165";
"a_51" -> "systemerror";
"a_51" -> "systemerror";
"a_51" -> "systemerror";
"a_51" -> "_187";
"a_51" -> "_194";
"a_51" -> "systemerror";
"derefaddrtmp(33)" -> "_137";
"derefaddrtmp(33)" -> "_130";
"derefaddrtmp(33)" -> "_137";
"derefaddrtmp(33)" -> "_142";
"derefaddrtmp(33)" -> "global_lustruct.64+192";
"_124" -> "_131";
"_128" -> "_130";
"_130" -> "_131";
"_131" -> "_137";
"_141" -> "_142";
"_142" -> "_137";
"global_lustruct.64+192" -> "_137";
"systemerror.195_7" -> "_137";
"systemerror.195_7" -> "_137";
"systemerror" -> "_137";
"systemerror" -> "_137";
"_158" -> "_137";
"_165" -> "_137";
"locabase_171" -> "_137";
"locbbase_173" -> "_137";
"systemerror" -> "_137";
"systemerror" -> "_137";
"systemerror" -> "_137";
"_187" -> "_137";
"_194" -> "_137";
"locabase_200" -> "_137";
"locbbase_202" -> "_137";
"systemerror" -> "_137";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL systemerror systemerror systemerror systemerror systemerror systemerror systemerror } same as _137
NONLOCAL = { ESCAPED NONLOCAL } same as a_51
STOREDANYTHING = { }
INTEGER = { ANYTHING }
AllocateMemory = { }
systemerror = { ESCAPED NONLOCAL } same as systemerror.195_7
a_51 = { ESCAPED NONLOCAL }
b_53 = { ESCAPED NONLOCAL } same as a_51
_1 = { ESCAPED NONLOCAL } same as a_51
LUtempvv = { ESCAPED NONLOCAL } same as a_51
randnum = { }
i_322 = { NULL NONLOCAL }
i_114 = { NULL NONLOCAL } same as i_322
abs_randwc = { }
_97 = { ESCAPED NONLOCAL } same as a_51
_98 = { ESCAPED NONLOCAL } same as a_51
i.204_100 = { NULL NONLOCAL } same as i_322
_101 = { NULL NONLOCAL } same as i_322
_102 = { ESCAPED NONLOCAL }
_103 = { ESCAPED NONLOCAL } same as a_51
_110 = { NULL NONLOCAL } same as i_322
_111 = { ESCAPED NONLOCAL }
_107 = { NULL NONLOCAL } same as i_322
_108 = { ESCAPED NONLOCAL }
j_323 = { NULL NONLOCAL } same as i_322
j_112 = { NULL NONLOCAL } same as i_322
_105 = { ESCAPED NONLOCAL } same as a_51
_106 = { ESCAPED NONLOCAL } same as a_51
_109 = { ESCAPED NONLOCAL } same as a_51
derefaddrtmp(33) = { NONLOCAL }
i_325 = { NULL NONLOCAL } same as i_322
i_145 = { NULL NONLOCAL } same as i_322
_116 = { ESCAPED NONLOCAL } same as a_51
k_117 = { ESCAPED NONLOCAL } same as a_51
_118 = { ESCAPED NONLOCAL } same as a_51
k1_119 = { ESCAPED NONLOCAL } same as a_51
rcon_129 = { NONLOCAL } same as derefaddrtmp(33)
k.209_120 = { ESCAPED NONLOCAL } same as a_51
_121 = { ESCAPED NONLOCAL } same as a_51
_122 = { ESCAPED NONLOCAL }
k1.210_125 = { ESCAPED NONLOCAL } same as a_51
_126 = { ESCAPED NONLOCAL } same as a_51
_127 = { ESCAPED NONLOCAL }
j_324 = { NULL NONLOCAL } same as i_322
j_132 = { NULL NONLOCAL } same as i_322
_124 = { ESCAPED NONLOCAL }
_128 = { ESCAPED NONLOCAL }
_130 = { ESCAPED NONLOCAL }
_131 = { ESCAPED NONLOCAL }
_135 = { ESCAPED NONLOCAL } same as a_51
_136 = { ESCAPED NONLOCAL }
_137 = { NULL STRING ESCAPED NONLOCAL systemerror systemerror systemerror systemerror systemerror systemerror systemerror }
_139 = { ESCAPED NONLOCAL } same as a_51
_140 = { ESCAPED NONLOCAL }
_141 = { ESCAPED NONLOCAL }
_142 = { ESCAPED NONLOCAL }
_143 = { NULL STRING ESCAPED NONLOCAL systemerror systemerror systemerror systemerror systemerror systemerror systemerror } same as _137
_3 = { ESCAPED NONLOCAL } same as a_51
global_lustruct.0+32 = { ESCAPED NONLOCAL } same as a_51
global_lustruct.64+192 = { NULL ESCAPED NONLOCAL }
i_320 = { NONLOCAL } same as derefaddrtmp(33)
_4 = { NONLOCAL } same as derefaddrtmp(33)
_5 = { NONLOCAL } same as derefaddrtmp(33)
_6 = { NONLOCAL } same as derefaddrtmp(33)
abase_71 = { ESCAPED NONLOCAL } same as a_51
systemerror.195_7 = { ESCAPED NONLOCAL }
ReportError = { }
FreeMemory = { }
systemerror = { ESCAPED NONLOCAL }
LUtempvv.221_148 = { ESCAPED NONLOCAL } same as a_51
ErrorExit = { }
_9 = { NONLOCAL } same as derefaddrtmp(33)
bbase_76 = { ESCAPED NONLOCAL } same as a_51
systemerror.197_10 = { ESCAPED NONLOCAL } same as systemerror.195_7
systemerror = { ESCAPED NONLOCAL }
LUtempvv.221_149 = { ESCAPED NONLOCAL } same as a_51
_11 = { NONLOCAL } same as derefaddrtmp(33)
j_326 = { NULL NONLOCAL } same as i_322
j_167 = { NULL NONLOCAL } same as i_322
_151 = { NULL NONLOCAL } same as i_322
_152 = { NULL NONLOCAL } same as i_322
i_327 = { NULL NONLOCAL } same as i_322
i_159 = { NULL NONLOCAL } same as i_322
_154 = { NULL NONLOCAL } same as i_322
_155 = { ESCAPED NONLOCAL }
_156 = { NULL NONLOCAL } same as i_322
_157 = { ESCAPED NONLOCAL }
_158 = { ESCAPED NONLOCAL }
i_328 = { NULL NONLOCAL } same as i_322
i_166 = { NULL NONLOCAL } same as i_322
_161 = { NULL NONLOCAL } same as i_322
_162 = { ESCAPED NONLOCAL }
_163 = { NULL NONLOCAL } same as i_322
_164 = { ESCAPED NONLOCAL }
_165 = { ESCAPED NONLOCAL }
StartStopwatch = { }
elapsed_168 = { ESCAPED NONLOCAL } same as a_51
i_329 = { NULL NONLOCAL } same as i_322
i_174 = { NULL NONLOCAL } same as i_322
_170 = { NULL NONLOCAL } same as i_322
locabase_171 = { ESCAPED NONLOCAL }
_172 = { NULL NONLOCAL } same as i_322
locbbase_173 = { ESCAPED NONLOCAL }
lusolve.constprop.6 = { }
StopStopwatch = { }
_175 = { ESCAPED NONLOCAL } same as a_51
global_min_ticks.199_13 = { ESCAPED NONLOCAL } same as a_51
global_min_ticks = { ESCAPED NONLOCAL } same as a_51
_14 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
puts = { }
systemerror = { ESCAPED NONLOCAL }
LUtempvv.221_176 = { ESCAPED NONLOCAL } same as a_51
_15 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
_16 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
abase_58 = { ESCAPED NONLOCAL } same as a_51
systemerror.200_17 = { ESCAPED NONLOCAL } same as systemerror.195_7
systemerror = { ESCAPED NONLOCAL }
LUtempvv.221_177 = { ESCAPED NONLOCAL } same as a_51
_19 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
_20 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
bbase_63 = { ESCAPED NONLOCAL } same as a_51
systemerror.202_21 = { ESCAPED NONLOCAL } same as systemerror.195_7
systemerror = { ESCAPED NONLOCAL }
LUtempvv.221_178 = { ESCAPED NONLOCAL } same as a_51
abase_33 = { ESCAPED NONLOCAL } same as a_51
bbase_36 = { ESCAPED NONLOCAL } same as a_51
accumtime_38 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
accumtime_88 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
iterations_39 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
iterations_89 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
_23 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
j_113 = { NULL NONLOCAL } same as i_322
j_196 = { NULL NONLOCAL } same as i_322
_180 = { NULL NONLOCAL } same as i_322
_181 = { NULL NONLOCAL } same as i_322
i_330 = { NULL NONLOCAL } same as i_322
i_188 = { NULL NONLOCAL } same as i_322
_183 = { NULL NONLOCAL } same as i_322
_184 = { ESCAPED NONLOCAL }
_185 = { NULL NONLOCAL } same as i_322
_186 = { ESCAPED NONLOCAL }
_187 = { ESCAPED NONLOCAL }
i_331 = { NULL NONLOCAL } same as i_322
i_195 = { NULL NONLOCAL } same as i_322
_190 = { NULL NONLOCAL } same as i_322
_191 = { ESCAPED NONLOCAL }
_192 = { NULL NONLOCAL } same as i_322
_193 = { ESCAPED NONLOCAL }
_194 = { ESCAPED NONLOCAL }
i_32 = { NULL NONLOCAL } same as i_322
i_203 = { NULL NONLOCAL } same as i_322
_199 = { NULL NONLOCAL } same as i_322
locabase_200 = { ESCAPED NONLOCAL }
_201 = { NULL NONLOCAL } same as i_322
locbbase_202 = { ESCAPED NONLOCAL }
elapsed_22 = { ESCAPED NONLOCAL } same as a_51
elapsed_302 = { ESCAPED NONLOCAL } same as a_51
elapsed_179 = { ESCAPED NONLOCAL } same as a_51
_204 = { ESCAPED NONLOCAL } same as a_51
_24 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
_25 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
TicksToSecs = { }
_26 = { ESCAPED NONLOCAL } same as a_51
_27 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
TicksToFracSecs = { }
_28 = { ESCAPED NONLOCAL } same as a_51
_29 = { NULL ESCAPED NONLOCAL } same as global_lustruct.64+192
_30 = { ESCAPED NONLOCAL } same as a_51
systemerror = { ESCAPED NONLOCAL }
LUtempvv.221_205 = { ESCAPED NONLOCAL } same as a_51


Alias information for DoLU

Aliased symbols

systemerror, UID D.8644, int, is addressable
systemerror, UID D.8627, int, is addressable
systemerror, UID D.8621, int, is addressable
systemerror, UID D.8618, int, is addressable
systemerror, UID D.8601, int, is addressable
systemerror, UID D.8595, int, is addressable
systemerror, UID D.5669, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.5669 D.8595 D.8601 D.8618 D.8621 D.8627 D.8644 } (escaped)

Flow-insensitive points-to information

_1, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
abase_33, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bbase_36, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
a_51, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
b_53, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
abase_58, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bbase_63, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
abase_68(D), points-to NULL, points-to vars: { }
bbase_69(D), points-to NULL, points-to vars: { }
abase_71, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
bbase_76, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_102, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_108, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_111, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_122, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_127, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_136, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_140, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
LUtempvv.221_148, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
LUtempvv.221_149, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_155, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_157, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_162, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_164, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
locabase_171, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
locbbase_173, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
LUtempvv.221_176, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
LUtempvv.221_177, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
LUtempvv.221_178, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_184, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_186, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_191, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_193, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
locabase_200, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
locbbase_202, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
LUtempvv.221_205, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

;; 15 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 80 8 79 66 9 81 10 82 11 12 13 78 14 15 77 16 17 18 83 19 20 84 21 85 22 23 24 25 26 76 65 27 75 28 74 29 30 73 31 32 33 72 86 34 87 35 88 36 37 89 38 39 40 90 41 42 91 43 92 44 45 46 47 63 48 49 71 64 50 70 51 69 68 52 93 53 67 54 94 55 56 95 57 58 96 59 60 61 62
;;
;; Loop 2
;;  header 47, latch 67
;;  depth 1, outer 0
;;  nodes: 47 67 53 93 62 52 68 61 51 50 70 64 49 71 48 69 63
;;
;; Loop 11
;;  header 52, latch 68
;;  depth 2, outer 2
;;  nodes: 52 68
;;
;; Loop 12
;;  header 48, latch 69
;;  depth 2, outer 2
;;  nodes: 48 69 51 50 70 64 49 71
;;
;; Loop 13
;;  header 50, latch 70
;;  depth 3, outer 12
;;  nodes: 50 70
;;
;; Loop 14
;;  header 49, latch 71
;;  depth 3, outer 12
;;  nodes: 49 71
;;
;; Loop 1
;;  header 18, latch 72
;;  depth 1, outer 0
;;  nodes: 18 72 33 31 30 73 29 28 27 75 65 26 76 25 74 24 84 23 22 85 21 20 83 19
;;
;; Loop 7
;;  header 30, latch 73
;;  depth 2, outer 1
;;  nodes: 30 73
;;
;; Loop 8
;;  header 25, latch 74
;;  depth 2, outer 1
;;  nodes: 25 74 28 27 75 65 26 76
;;
;; Loop 9
;;  header 27, latch 75
;;  depth 3, outer 8
;;  nodes: 27 75
;;
;; Loop 10
;;  header 26, latch 76
;;  depth 3, outer 8
;;  nodes: 26 76
;;
;; Loop 3
;;  header 9, latch 77
;;  depth 1, outer 0
;;  nodes: 9 77 15 81 14 13 78 12 82 11 10
;;
;; Loop 4
;;  header 13, latch 78
;;  depth 2, outer 3
;;  nodes: 13 78
;;
;; Loop 5
;;  header 3, latch 79
;;  depth 1, outer 0
;;  nodes: 3 79 8 7 5 6 4 80
;;
;; Loop 6
;;  header 4, latch 80
;;  depth 2, outer 5
;;  nodes: 4 80 7 5 6
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 80 8 }
;; 80 succs { 4 }
;; 8 succs { 79 66 }
;; 79 succs { 3 }
;; 66 succs { 9 }
;; 9 succs { 10 81 }
;; 81 succs { 15 }
;; 10 succs { 82 11 }
;; 82 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 78 14 }
;; 78 succs { 13 }
;; 14 succs { 15 }
;; 15 succs { 77 16 }
;; 77 succs { 9 }
;; 16 succs { 17 40 }
;; 17 succs { 18 }
;; 18 succs { 19 83 }
;; 83 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 21 84 }
;; 84 succs { 24 }
;; 21 succs { 22 85 }
;; 85 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 76 65 }
;; 76 succs { 26 }
;; 65 succs { 27 }
;; 27 succs { 75 28 }
;; 75 succs { 27 }
;; 28 succs { 74 29 }
;; 74 succs { 25 }
;; 29 succs { 30 }
;; 30 succs { 73 31 }
;; 73 succs { 30 }
;; 31 succs { 32 33 }
;; 32 succs { 34 }
;; 33 succs { 72 86 }
;; 72 succs { 18 }
;; 86 succs { 34 }
;; 34 succs { 35 87 }
;; 87 succs { 46 }
;; 35 succs { 36 88 }
;; 88 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 38 89 }
;; 89 succs { 39 }
;; 38 succs { 39 }
;; 39 succs { 46 }
;; 40 succs { 41 90 }
;; 90 succs { 42 }
;; 41 succs { 42 }
;; 42 succs { 43 91 }
;; 91 succs { 46 }
;; 43 succs { 44 92 }
;; 92 succs { 45 }
;; 44 succs { 45 }
;; 45 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 63 62 }
;; 63 succs { 48 }
;; 48 succs { 49 }
;; 49 succs { 71 64 }
;; 71 succs { 49 }
;; 64 succs { 50 }
;; 50 succs { 70 51 }
;; 70 succs { 50 }
;; 51 succs { 69 61 }
;; 69 succs { 48 }
;; 68 succs { 52 }
;; 52 succs { 68 93 }
;; 93 succs { 53 }
;; 53 succs { 67 54 }
;; 67 succs { 47 }
;; 54 succs { 55 94 }
;; 94 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 57 95 }
;; 95 succs { 58 }
;; 57 succs { 58 }
;; 58 succs { 59 96 }
;; 96 succs { 60 }
;; 59 succs { 60 }
;; 60 succs { 1 }
;; 61 succs { 52 }
;; 62 succs { 53 }
Removing basic block 11
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 66
Removing basic block 68
Removing basic block 69
Removing basic block 70
Removing basic block 71
Removing basic block 72
Removing basic block 73
Removing basic block 74
Removing basic block 75
Removing basic block 76
Removing basic block 77
Removing basic block 78
Removing basic block 79
Removing basic block 80
Removing basic block 81
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 87
Removing basic block 88
Removing basic block 89
Removing basic block 90
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
DoLU ()
{
  int systemerror;
  fardouble * locabase;
  fardouble * locbbase;
  long unsigned int elapsed;
  long unsigned int j;
  long unsigned int i;
  long unsigned int D.8639;
  int systemerror;
  int systemerror;
  int systemerror;
  fardouble * locabase;
  fardouble * locbbase;
  long unsigned int elapsed;
  long unsigned int j;
  long unsigned int i;
  long unsigned int D.8613;
  int systemerror;
  int systemerror;
  double rcon;
  long int k1;
  long int k;
  long int j;
  long int i;
  double iterations;
  long unsigned int accumtime;
  int i;
  fardouble * bbase;
  fardouble * abase;
  fardouble * b;
  fardouble * a;
  int systemerror;
  farvoid * _1;
  int _3;
  int _4;
  long unsigned int _5;
  long unsigned int _6;
  int systemerror.195_7;
  long unsigned int _9;
  int systemerror.197_10;
  long unsigned int _11;
  long unsigned int global_min_ticks.199_13;
  long unsigned int _15;
  long unsigned int _16;
  int systemerror.200_17;
  long unsigned int _19;
  long unsigned int _20;
  int systemerror.202_21;
  long unsigned int _24;
  double _25;
  long unsigned int _26;
  long unsigned int _27;
  double _28;
  double _29;
  int _30;
  long unsigned int pretmp_42;
  unsigned int _97;
  unsigned int _98;
  long unsigned int i.204_100;
  long unsigned int _101;
  double * _102;
  double _103;
  unsigned int _105;
  unsigned int _106;
  double _109;
  long unsigned int _110;
  double[101] * _111;
  unsigned int _116;
  unsigned int _118;
  long unsigned int k.209_120;
  long unsigned int _121;
  double[101] * _122;
  double _124;
  long unsigned int k1.210_125;
  long unsigned int _126;
  double[101] * _127;
  double _128;
  double _130;
  double _131;
  long unsigned int _135;
  double * _136;
  double _137;
  long unsigned int _139;
  double * _140;
  double _141;
  double _142;
  double _143;
  fardouble * LUtempvv.221_148;
  fardouble * LUtempvv.221_149;
  long unsigned int _151;
  long unsigned int _152;
  long unsigned int _154;
  fardouble * _155;
  long unsigned int _156;
  fardouble * _157;
  double _158;
  long unsigned int _161;
  fardouble * _162;
  long unsigned int _163;
  fardouble * _164;
  double _165;
  long unsigned int _170;
  long unsigned int _172;
  long unsigned int _175;
  fardouble * LUtempvv.221_176;
  fardouble * LUtempvv.221_177;
  fardouble * LUtempvv.221_178;
  long unsigned int _180;
  long unsigned int _181;
  long unsigned int _183;
  fardouble * _184;
  long unsigned int _185;
  fardouble * _186;
  double _187;
  long unsigned int _190;
  fardouble * _191;
  long unsigned int _192;
  fardouble * _193;
  double _194;
  long unsigned int _199;
  long unsigned int _201;
  long unsigned int _204;
  fardouble * LUtempvv.221_205;
  long unsigned int prephitmp_214;
  long unsigned int pretmp_215;
  long unsigned int prephitmp_216;
  long unsigned int pretmp_220;
  long unsigned int pretmp_221;
  long unsigned int pretmp_355;
  long unsigned int prephitmp_356;

  <bb 2> [0.02%]:
  a_51 = AllocateMemory (81608, &systemerror);
  b_53 = AllocateMemory (808, &systemerror);
  _1 = AllocateMemory (808, &systemerror);
  LUtempvv = _1;
  randnum (13);

  <bb 3> [0.13%]:
  # i_322 = PHI <i_114(8), 0(2)>
  _97 = abs_randwc (100);
  _98 = _97 + 1;
  i.204_100 = (long unsigned int) i_322;
  _101 = i.204_100 * 8;
  _102 = b_53 + _101;
  _103 = (double) _98;
  *_102 = _103;
  _110 = i.204_100 * 808;
  _111 = a_51 + _110;

  <bb 4> [0.72%]:
  # j_323 = PHI <j_112(7), 0(3)>
  if (i_322 == j_323)
    goto <bb 5>; [0.52%]
  else
    goto <bb 6>; [99.48%]

  <bb 5> [0.00%]:
  _105 = abs_randwc (1000);
  _106 = _105 + 1;
  _109 = (double) _106;
  *_111[j_323] = _109;
  goto <bb 7>; [100.00%]

  <bb 6> [0.72%]:
  *_111[j_323] = 0.0;

  <bb 7> [0.72%]:
  j_112 = j_323 + 1;
  if (j_112 != 101)
    goto <bb 4>; [82.29%]
  else
    goto <bb 8>; [17.71%]

  <bb 8> [0.13%]:
  i_114 = i_322 + 1;
  if (i_114 != 101)
    goto <bb 3>; [82.69%]
  else
    goto <bb 9>; [17.31%]

  <bb 9> [0.13%]:
  # i_325 = PHI <i_145(15), 0(8)>
  _116 = abs_randwc (101);
  k_117 = (long int) _116;
  _118 = abs_randwc (101);
  k1_119 = (long int) _118;
  if (k_117 != k1_119)
    goto <bb 10>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 10> [0.06%]:
  if (k_117 < k1_119)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [0.03%]:

  <bb 12> [0.06%]:
  # rcon_129 = PHI <1.0e+0(11), -1.0e+0(10)>
  k.209_120 = (long unsigned int) _116;
  _121 = k.209_120 * 808;
  _122 = a_51 + _121;
  k1.210_125 = (long unsigned int) _118;
  _126 = k1.210_125 * 808;
  _127 = a_51 + _126;

  <bb 13> [0.36%]:
  # j_324 = PHI <j_132(13), 0(12)>
  _124 = *_122[j_324];
  _128 = *_127[j_324];
  _130 = _128 * rcon_129;
  _131 = _124 + _130;
  *_122[j_324] = _131;
  j_132 = j_324 + 1;
  if (j_132 != 101)
    goto <bb 13>; [82.50%]
  else
    goto <bb 14>; [17.50%]

  <bb 14> [0.06%]:
  _135 = k.209_120 * 8;
  _136 = b_53 + _135;
  _137 = *_136;
  _139 = k1.210_125 * 8;
  _140 = b_53 + _139;
  _141 = *_140;
  _142 = rcon_129 * _141;
  _143 = _137 + _142;
  *_136 = _143;

  <bb 15> [0.13%]:
  i_145 = i_325 + 1;
  if (i_145 != 808)
    goto <bb 9>; [82.69%]
  else
    goto <bb 16>; [17.31%]

  <bb 16> [0.02%]:
  _3 = global_lustruct.adjust;
  if (_3 == 0)
    goto <bb 17>; [67.00%]
  else
    goto <bb 41>; [33.00%]

  <bb 17> [0.02%]:
  global_lustruct.numarrays = 0;

  <bb 18> [0.18%]:
  # i_320 = PHI <_4(33), 1(17)>
  _4 = i_320 + 1;
  _5 = (long unsigned int) _4;
  _6 = _5 * 81608;
  abase_71 = AllocateMemory (_6, &systemerror);
  systemerror.195_7 = systemerror;
  if (systemerror.195_7 != 0)
    goto <bb 19>; [33.00%]
  else
    goto <bb 20>; [67.00%]

  <bb 19> [0.06%]:
  ReportError ("FPU:LU", systemerror.195_7);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_148 = LUtempvv;
  FreeMemory (LUtempvv.221_148, &systemerror);
  systemerror ={v} {CLOBBER};
  ErrorExit ();

  <bb 20> [0.18%]:
  _9 = _5 * 808;
  bbase_76 = AllocateMemory (_9, &systemerror);
  systemerror.197_10 = systemerror;
  if (systemerror.197_10 != 0)
    goto <bb 21>; [33.00%]
  else
    goto <bb 24>; [67.00%]

  <bb 21> [0.06%]:
  ReportError ("FPU:LU", systemerror.197_10);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_149 = LUtempvv;
  FreeMemory (LUtempvv.221_149, &systemerror);
  if (abase_71 != 0B)
    goto <bb 22>; [53.47%]
  else
    goto <bb 23>; [46.53%]

  <bb 22> [0.03%]:
  FreeMemory (abase_71, &systemerror);

  <bb 23> [0.06%]:
  systemerror ={v} {CLOBBER};
  ErrorExit ();

  <bb 24> [0.18%]:
  _11 = (long unsigned int) i_320;

  <bb 25> [1.00%]:
  # j_326 = PHI <j_167(28), 0(24)>
  _151 = j_326 * 81608;
  _152 = j_326 * 808;

  <bb 26> [99.00%]:
  # i_327 = PHI <i_159(26), 0(25)>
  _154 = i_327 * 8;
  _155 = a_51 + _154;
  _156 = _151 + _154;
  _157 = abase_71 + _156;
  _158 = *_155;
  *_157 = _158;
  i_159 = i_327 + 1;
  if (i_159 != 10201)
    goto <bb 26>; [98.99%]
  else
    goto <bb 27>; [1.01%]

  <bb 27> [99.00%]:
  # i_328 = PHI <i_166(27), 0(26)>
  _161 = i_328 * 8;
  _162 = b_53 + _161;
  _163 = _152 + _161;
  _164 = bbase_76 + _163;
  _165 = *_162;
  *_164 = _165;
  i_166 = i_328 + 1;
  if (i_166 != 101)
    goto <bb 27>; [98.99%]
  else
    goto <bb 28>; [1.01%]

  <bb 28> [1.00%]:
  j_167 = j_326 + 1;
  if (_11 > j_167)
    goto <bb 25>; [82.30%]
  else
    goto <bb 29>; [17.70%]

  <bb 29> [0.18%]:
  elapsed_168 = StartStopwatch ();

  <bb 30> [1.00%]:
  # i_329 = PHI <i_174(30), 0(29)>
  _170 = i_329 * 81608;
  locabase_171 = abase_71 + _170;
  _172 = i_329 * 808;
  locbbase_173 = bbase_76 + _172;
  lusolve.constprop (locabase_171, locbbase_173);
  i_174 = i_329 + 1;
  if (_11 > i_174)
    goto <bb 30>; [82.30%]
  else
    goto <bb 31>; [17.70%]

  <bb 31> [0.18%]:
  _175 = StopStopwatch (elapsed_168);
  global_min_ticks.199_13 = global_min_ticks;
  if (global_min_ticks.199_13 < _175)
    goto <bb 32>; [7.50%]
  else
    goto <bb 33>; [92.50%]

  <bb 32> [0.01%]:
  global_lustruct.numarrays = _11;
  goto <bb 35>; [100.00%]

  <bb 33> [0.16%]:
  FreeMemory (abase_71, &systemerror);
  FreeMemory (bbase_76, &systemerror);
  if (_4 != 10001)
    goto <bb 18>; [98.88%]
  else
    goto <bb 34>; [1.13%]

  <bb 34> [0.00%]:
  pretmp_355 = global_lustruct.numarrays;

  <bb 35> [0.02%]:
  # prephitmp_356 = PHI <_11(32), pretmp_355(34)>
  if (prephitmp_356 == 0)
    goto <bb 36>; [33.00%]
  else
    goto <bb 48>; [67.00%]

  <bb 36> [0.00%]:
  __builtin_puts (&"FPU:LU -- Array limit reached"[0]);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_176 = LUtempvv;
  FreeMemory (LUtempvv.221_176, &systemerror);
  if (abase_71 != 0B)
    goto <bb 37>; [53.47%]
  else
    goto <bb 38>; [46.53%]

  <bb 37> [0.00%]:
  FreeMemory (abase_71, &systemerror);

  <bb 38> [0.00%]:
  if (bbase_76 != 0B)
    goto <bb 39>; [57.44%]
  else
    goto <bb 40>; [42.56%]

  <bb 39> [0.00%]:
  FreeMemory (bbase_76, &systemerror);

  <bb 40> [0.00%]:
  systemerror ={v} {CLOBBER};
  ErrorExit ();
  pretmp_221 = global_lustruct.numarrays;
  goto <bb 48>; [100.00%]

  <bb 41> [0.01%]:
  _15 = global_lustruct.numarrays;
  _16 = _15 * 81608;
  abase_58 = AllocateMemory (_16, &systemerror);
  systemerror.200_17 = systemerror;
  if (systemerror.200_17 != 0)
    goto <bb 42>; [33.00%]
  else
    goto <bb 43>; [67.00%]

  <bb 42> [0.00%]:
  ReportError ("FPU:LU", systemerror.200_17);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_177 = LUtempvv;
  FreeMemory (LUtempvv.221_177, &systemerror);
  systemerror ={v} {CLOBBER};
  ErrorExit ();

  <bb 43> [0.01%]:
  _19 = global_lustruct.numarrays;
  _20 = _19 * 808;
  bbase_63 = AllocateMemory (_20, &systemerror);
  systemerror.202_21 = systemerror;
  if (systemerror.202_21 != 0)
    goto <bb 45>; [33.00%]
  else
    goto <bb 44>; [67.00%]

  <bb 44> [0.01%]:
  pretmp_220 = global_lustruct.numarrays;
  goto <bb 48>; [100.00%]

  <bb 45> [0.00%]:
  ReportError ("FPU:LU", systemerror.202_21);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_178 = LUtempvv;
  FreeMemory (LUtempvv.221_178, &systemerror);
  if (abase_58 != 0B)
    goto <bb 46>; [53.47%]
  else
    goto <bb 47>; [46.53%]

  <bb 46> [0.00%]:
  FreeMemory (abase_58, &systemerror);

  <bb 47> [0.00%]:
  systemerror ={v} {CLOBBER};
  ErrorExit ();
  pretmp_42 = global_lustruct.numarrays;

  <bb 48> [0.02%]:
  # abase_33 = PHI <abase_71(40), abase_58(44), abase_58(47), abase_71(35)>
  # bbase_36 = PHI <bbase_76(40), bbase_63(44), bbase_63(47), bbase_76(35)>
  # prephitmp_216 = PHI <pretmp_221(40), pretmp_220(44), pretmp_42(47), prephitmp_356(35)>

  <bb 49> [0.15%]:
  # accumtime_38 = PHI <0(48), accumtime_88(56)>
  # iterations_39 = PHI <0.0(48), iterations_89(56)>
  # prephitmp_214 = PHI <prephitmp_216(48), pretmp_215(56)>
  if (prephitmp_214 != 0)
    goto <bb 50>; [85.00%]
  else
    goto <bb 65>; [15.00%]

  <bb 50> [0.85%]:
  # j_113 = PHI <j_196(53), 0(49)>
  _180 = j_113 * 81608;
  _181 = j_113 * 808;

  <bb 51> [83.83%]:
  # i_330 = PHI <i_188(51), 0(50)>
  _183 = i_330 * 8;
  _184 = a_51 + _183;
  _185 = _180 + _183;
  _186 = abase_33 + _185;
  _187 = *_184;
  *_186 = _187;
  i_188 = i_330 + 1;
  if (i_188 != 10201)
    goto <bb 51>; [98.99%]
  else
    goto <bb 52>; [1.01%]

  <bb 52> [83.83%]:
  # i_331 = PHI <i_195(52), 0(51)>
  _190 = i_331 * 8;
  _191 = b_53 + _190;
  _192 = _181 + _190;
  _193 = bbase_36 + _192;
  _194 = *_191;
  *_193 = _194;
  i_195 = i_331 + 1;
  if (i_195 != 101)
    goto <bb 52>; [98.99%]
  else
    goto <bb 53>; [1.01%]

  <bb 53> [0.85%]:
  j_196 = j_113 + 1;
  if (j_196 < prephitmp_214)
    goto <bb 50>; [85.00%]
  else
    goto <bb 64>; [15.00%]

  <bb 54> [0.85%]:
  # i_32 = PHI <i_203(54), 0(64)>
  _199 = i_32 * 81608;
  locabase_200 = abase_33 + _199;
  _201 = i_32 * 808;
  locbbase_202 = bbase_36 + _201;
  lusolve.constprop (locabase_200, locbbase_202);
  i_203 = i_32 + 1;
  if (i_203 < prephitmp_214)
    goto <bb 54>; [85.00%]
  else
    goto <bb 55>; [15.00%]

  <bb 55> [0.15%]:
  # elapsed_22 = PHI <elapsed_302(54), elapsed_179(65)>
  _204 = StopStopwatch (elapsed_22);
  accumtime_88 = accumtime_38 + _204;
  _24 = global_lustruct.numarrays;
  _25 = (double) _24;
  iterations_89 = _25 + iterations_39;
  _26 = TicksToSecs (accumtime_88);
  _27 = global_lustruct.request_secs;
  if (_26 < _27)
    goto <bb 56>; [85.00%]
  else
    goto <bb 57>; [15.00%]

  <bb 56> [0.13%]:
  pretmp_215 = global_lustruct.numarrays;
  goto <bb 49>; [100.00%]

  <bb 57> [0.02%]:
  _28 = TicksToFracSecs (accumtime_88);
  _29 = iterations_89 / _28;
  global_lustruct.iterspersec = _29;
  _30 = global_lustruct.adjust;
  if (_30 == 0)
    goto <bb 58>; [54.00%]
  else
    goto <bb 59>; [46.00%]

  <bb 58> [0.01%]:
  global_lustruct.adjust = 1;

  <bb 59> [0.02%]:
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_205 = LUtempvv;
  FreeMemory (LUtempvv.221_205, &systemerror);
  if (abase_33 != 0B)
    goto <bb 60>; [53.47%]
  else
    goto <bb 61>; [46.53%]

  <bb 60> [0.01%]:
  FreeMemory (abase_33, &systemerror);

  <bb 61> [0.02%]:
  if (bbase_36 != 0B)
    goto <bb 62>; [57.44%]
  else
    goto <bb 63>; [42.56%]

  <bb 62> [0.01%]:
  FreeMemory (bbase_36, &systemerror);

  <bb 63> [0.02%]:
  systemerror ={v} {CLOBBER};
  systemerror ={v} {CLOBBER};
  return;

  <bb 64> [0.13%]:
  elapsed_302 = StartStopwatch ();
  goto <bb 54>; [100.00%]

  <bb 65> [0.02%]:
  elapsed_179 = StartStopwatch ();
  goto <bb 55>; [100.00%]

}


