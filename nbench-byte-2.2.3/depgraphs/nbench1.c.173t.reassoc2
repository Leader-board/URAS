
;; Function Assignment (Assignment, funcdef_no=78, decl_uid=4613, cgraph_uid=78, symbol_order=103)

;; 38 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
;;
;; Loop 1
;;  header 63, latch 62
;;  depth 1, outer 0
;;  nodes: 63 62 61 56 60 58 59 57 55 54 49 53 51 52 50 48 47 41 46 45 43 44 42 40 39 38 31 37 36 33 34 35 32 30 25 29 27 28 26 24 22 20 111 21 23 19 110 108 97 107 106 104 105 103 102 101 99 100 98 112 96 95 109 93 92 91 89 83 88 86 87 85 84 82 79 80 81 90 77 76 70 75 73 74 72 71 69 66 67 68 78 65 64
;;
;; Loop 8
;;  header 56, latch 61
;;  depth 2, outer 1
;;  nodes: 56 61 60 58 59 57
;;
;; Loop 9
;;  header 58, latch 60
;;  depth 3, outer 8
;;  nodes: 58 60 59
;;
;; Loop 10
;;  header 49, latch 54
;;  depth 2, outer 1
;;  nodes: 49 54 53 51 52 50
;;
;; Loop 11
;;  header 51, latch 53
;;  depth 3, outer 10
;;  nodes: 51 53 52
;;
;; Loop 12
;;  header 41, latch 47
;;  depth 2, outer 1
;;  nodes: 41 47 46 45 43 44 42
;;
;; Loop 13
;;  header 43, latch 45
;;  depth 3, outer 12
;;  nodes: 43 45 44
;;
;; Loop 14
;;  header 24, latch 39
;;  depth 2, outer 1
;;  nodes: 24 39 38 31 37 36 33 34 35 32 30 25 29 27 28 26
;;
;; Loop 15
;;  header 31, latch 38
;;  depth 3, outer 14
;;  nodes: 31 38 37 36 33 34 35 32
;;
;; Loop 16
;;  header 33, latch 36
;;  depth 4, outer 15
;;  nodes: 33 36 34 35
;;
;; Loop 17
;;  header 25, latch 30
;;  depth 3, outer 14
;;  nodes: 25 30 29 27 28 26
;;
;; Loop 18
;;  header 27, latch 29
;;  depth 4, outer 17
;;  nodes: 27 29 28
;;
;; Loop 19
;;  header 23, latch 22
;;  depth 2, outer 1
;;  nodes: 23 22 20 111 21
;;
;; Loop 20
;;  header 20, latch 21
;;  depth 3, outer 19
;;  nodes: 20 21
;;
;; Loop 23
;;  header 109, latch 108
;;  depth 2, outer 1
;;  nodes: 109 108 97 107 106 104 105 103 102 101 99 100 98 112 96 95
;;
;; Loop 24
;;  header 103, latch 106
;;  depth 3, outer 23
;;  nodes: 103 106 104 105
;;
;; Loop 25
;;  header 98, latch 101
;;  depth 3, outer 23
;;  nodes: 98 101 99 100
;;
;; Loop 26
;;  header 95, latch 97
;;  depth 3, outer 23
;;  nodes: 95 97 96
;;
;; Loop 27
;;  header 65, latch 91
;;  depth 2, outer 1
;;  nodes: 65 91 89 83 88 86 87 85 84 82 79 80 81 90 77 76 70 75 73 74 72 71 69 66 67 68 78
;;
;; Loop 28
;;  header 90, latch 89
;;  depth 3, outer 27
;;  nodes: 90 89 83 88 86 87 85 84 82 79 80 81
;;
;; Loop 29
;;  header 85, latch 88
;;  depth 4, outer 28
;;  nodes: 85 88 86 87
;;
;; Loop 30
;;  header 79, latch 82
;;  depth 4, outer 28
;;  nodes: 79 82 80 81
;;
;; Loop 31
;;  header 78, latch 76
;;  depth 3, outer 27
;;  nodes: 78 76 70 75 73 74 72 71 69 66 67 68
;;
;; Loop 32
;;  header 72, latch 75
;;  depth 4, outer 31
;;  nodes: 72 75 73 74
;;
;; Loop 33
;;  header 66, latch 69
;;  depth 4, outer 31
;;  nodes: 66 69 67 68
;;
;; Loop 34
;;  header 64, latch 64
;;  depth 2, outer 1
;;  nodes: 64
;;
;; Loop 2
;;  header 18, latch 16
;;  depth 1, outer 0
;;  nodes: 18 16 13 15 14 12
;;
;; Loop 3
;;  header 15, latch 15
;;  depth 2, outer 2
;;  nodes: 15
;;
;; Loop 4
;;  header 12, latch 12
;;  depth 2, outer 2
;;  nodes: 12
;;
;; Loop 5
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 9 8 7 6 5 4 3
;;
;; Loop 6
;;  header 7, latch 7
;;  depth 2, outer 5
;;  nodes: 7
;;
;; Loop 7
;;  header 3, latch 3
;;  depth 2, outer 5
;;  nodes: 3
;; 2 succs { 11 }
;; 3 succs { 3 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 7 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 17 }
;; 11 succs { 3 }
;; 12 succs { 12 13 }
;; 13 succs { 14 16 }
;; 14 succs { 15 }
;; 15 succs { 15 16 }
;; 16 succs { 18 63 }
;; 17 succs { 18 }
;; 18 succs { 12 }
;; 19 succs { 23 }
;; 20 succs { 22 21 }
;; 21 succs { 20 111 }
;; 22 succs { 23 24 }
;; 23 succs { 20 }
;; 24 succs { 25 }
;; 25 succs { 26 30 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 27 30 }
;; 30 succs { 25 31 }
;; 31 succs { 32 38 }
;; 32 succs { 33 }
;; 33 succs { 34 36 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 33 37 }
;; 37 succs { 38 }
;; 38 succs { 31 39 }
;; 39 succs { 24 40 }
;; 40 succs { 41 }
;; 41 succs { 42 47 }
;; 42 succs { 43 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 43 46 }
;; 46 succs { 47 }
;; 47 succs { 41 48 }
;; 48 succs { 49 }
;; 49 succs { 50 54 }
;; 50 succs { 51 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 51 54 }
;; 54 succs { 49 55 }
;; 55 succs { 56 }
;; 56 succs { 57 61 }
;; 57 succs { 58 }
;; 58 succs { 59 60 }
;; 59 succs { 60 }
;; 60 succs { 58 61 }
;; 61 succs { 56 62 }
;; 62 succs { 63 }
;; 63 succs { 64 }
;; 64 succs { 64 65 }
;; 65 succs { 78 }
;; 66 succs { 67 69 }
;; 67 succs { 68 69 }
;; 68 succs { 69 }
;; 69 succs { 66 70 }
;; 70 succs { 71 76 }
;; 71 succs { 72 }
;; 72 succs { 73 75 }
;; 73 succs { 74 75 }
;; 74 succs { 75 }
;; 75 succs { 72 76 }
;; 76 succs { 78 77 }
;; 77 succs { 90 }
;; 78 succs { 66 }
;; 79 succs { 80 82 }
;; 80 succs { 81 82 }
;; 81 succs { 82 }
;; 82 succs { 79 83 }
;; 83 succs { 84 89 }
;; 84 succs { 85 }
;; 85 succs { 86 88 }
;; 86 succs { 87 88 }
;; 87 succs { 88 }
;; 88 succs { 85 89 }
;; 89 succs { 90 91 }
;; 90 succs { 79 }
;; 91 succs { 65 92 }
;; 92 succs { 94 93 }
;; 93 succs { 109 }
;; 94 succs { 1 }
;; 95 succs { 96 97 }
;; 96 succs { 112 97 }
;; 97 succs { 95 108 }
;; 98 succs { 99 101 }
;; 99 succs { 100 101 }
;; 100 succs { 101 }
;; 101 succs { 98 102 }
;; 102 succs { 103 }
;; 103 succs { 104 106 }
;; 104 succs { 105 106 }
;; 105 succs { 106 }
;; 106 succs { 103 107 }
;; 107 succs { 108 }
;; 108 succs { 109 110 }
;; 109 succs { 95 }
;; 110 succs { 19 94 }
;; 111 succs { 22 }
;; 112 succs { 98 }
Assignment (farlong[101] * arraybase)
{
  long unsigned int ivtmp.559;
  unsigned long ivtmp.558;
  unsigned long ivtmp.550;
  sizetype ivtmp.537;
  unsigned int ivtmp.534;
  unsigned long ivtmp.532;
  unsigned long ivtmp.531;
  unsigned long ivtmp.523;
  unsigned long ivtmp.515;
  unsigned long ivtmp.507;
  unsigned long ivtmp.499;
  unsigned long ivtmp.498;
  unsigned long ivtmp.483;
  unsigned long ivtmp.481;
  unsigned long ivtmp.480;
  unsigned long ivtmp.472;
  unsigned long ivtmp.471;
  unsigned long ivtmp.465;
  unsigned long ivtmp.463;
  unsigned long ivtmp.462;
  unsigned long ivtmp.456;
  unsigned long ivtmp.447;
  unsigned long ivtmp.445;
  unsigned long ivtmp.444;
  unsigned long ivtmp.429;
  unsigned long ivtmp.420;
  unsigned long ivtmp.418;
  unsigned long ivtmp.417;
  unsigned long ivtmp.407;
  unsigned long ivtmp.406;
  unsigned long ivtmp.399;
  unsigned long ivtmp.392;
  unsigned long ivtmp.391;
  unsigned long ivtmp.378;
  sizetype ivtmp.376;
  unsigned long ivtmp.367;
  unsigned long ivtmp.366;
  unsigned long ivtmp.359;
  unsigned long ivtmp.358;
  unsigned long ivtmp.345;
  unsigned long ivtmp.343;
  unsigned long ivtmp.342;
  unsigned long ivtmp.329;
  unsigned long ivtmp.327;
  unsigned long ivtmp.326;
  unsigned long ivtmp.312;
  vector(2) long int * vectp.310;
  vector(2) long int * vectp.309;
  vector(2) long int vect__25.308;
  vector(2) long int vect__23.307;
  vector(2) long int * vectp.306;
  vector(2) long int * vectp.305;
  short unsigned int tmp.304;
  short unsigned int tmp.303;
  short unsigned int niters_vector_mult_vf.302;
  short unsigned int bnd.301;
  short unsigned int niters.300;
  sizetype prolog_loop_adjusted_niters.299;
  short unsigned int prolog_loop_niters.298;
  vector(2) long int * vectp.297;
  short unsigned int i;
  short unsigned int j;
  short unsigned int k;
  short unsigned int numassigns;
  short unsigned int totnumassigns;
  short unsigned int numzeros;
  int selected;
  int D.6709;
  int i;
  int j;
  short int linesrow[101];
  short int linescol[101];
  long int smallest;
  short unsigned int numassigns;
  short unsigned int newrows;
  short unsigned int i;
  short unsigned int j;
  long int currentmin;
  short int assignedtableau[101][101];
  _Bool _1;
  _Bool _5;
  _Bool _6;
  _Bool _8;
  long int[101] * _12;
  long unsigned int _13;
  long int _15;
  long unsigned int _16;
  _Bool _18;
  _Bool _19;
  _Bool _20;
  long unsigned int _21;
  _Bool _24;
  _Bool _28;
  _Bool _32;
  long int _34;
  _Bool _35;
  _Bool _37;
  _Bool _38;
  _Bool _42;
  long int _43;
  long int _44;
  _Bool _47;
  _Bool _48;
  vector(2) long int vect_cst__53;
  short int _58;
  short int _63;
  long int[101] * _66;
  _Bool _67;
  long int _68;
  short int _72;
  long unsigned int _73;
  short int _77;
  short int _78;
  long unsigned int _79;
  _Bool _83;
  long unsigned int _84;
  short int _85;
  short int _87;
  long int[101] * _90;
  long int _91;
  short int _96;
  short int _98;
  long int[101] * _101;
  long int _102;
  _Bool _103;
  long int _104;
  short int _108;
  short int _110;
  long int[101] * _113;
  long int _114;
  long int _115;
  unsigned long _119;
  short unsigned int ivtmp_122;
  _Bool _124;
  void * _127;
  _Bool _128;
  long int[101] * _135;
  _Bool _136;
  int _137;
  long int _138;
  short int[101] * _140;
  short int _141;
  _Bool _142;
  _Bool _145;
  _Bool _150;
  _Bool _153;
  long int _154;
  long int _158;
  long int _163;
  _Bool _167;
  long int _169;
  short int _172;
  int _173;
  _Bool _177;
  _Bool _178;
  _Bool _180;
  _Bool _182;
  long unsigned int _183;
  long unsigned int _184;
  short int[101] * _185;
  _Bool _186;
  short unsigned int ivtmp_187;
  long unsigned int _188;
  long int[101] * _189;
  long int _191;
  short int[101][101] * _194;
  long int _195;
  _Bool _196;
  long int[101] * _199;
  _Bool _200;
  int _201;
  long int _202;
  short int[101] * _204;
  short int _205;
  _Bool _208;
  _Bool _209;
  _Bool _210;
  _Bool _211;
  _Bool _213;
  _Bool _215;
  long int _217;
  long int _223;
  unsigned long _253;
  short unsigned int ivtmp_263;
  int _272;
  short unsigned int _288;
  unsigned long _311;
  sizetype _313;
  sizetype _314;
  sizetype _316;
  sizetype _319;
  farlong[101] * _320;
  void * _323;
  unsigned long _325;
  unsigned long _332;
  void * _335;
  unsigned long _339;
  unsigned long _341;
  void * _343;
  unsigned long _350;
  unsigned long _351;
  unsigned long _352;
  void * _355;
  void * _356;
  unsigned long _357;
  void * _359;
  unsigned long _368;
  unsigned long _369;
  void * _371;
  unsigned long _372;
  unsigned long _374;
  unsigned long _378;
  unsigned long _383;
  short int[101] * _404;
  long int _414;
  long int _419;
  void * _426;
  unsigned long _427;
  _Bool _433;
  _Bool _434;
  _Bool _435;
  _Bool _437;
  _Bool _439;
  _Bool _440;
  int _441;
  _Bool _444;
  _Bool _448;
  _Bool _449;
  void * _523;
  void * _524;
  int _527;
  void * _553;
  void * _554;
  sizetype _566;
  sizetype _567;
  farlong[101] * _568;
  sizetype _572;
  sizetype _573;
  short int[101][101] * _574;
  void * _575;
  void * _576;
  unsigned long _588;
  unsigned long _589;
  void * _596;
  void * _597;
  unsigned long _600;
  unsigned long _602;
  void * _609;
  unsigned long _612;
  unsigned long _614;
  unsigned long _621;
  unsigned long _622;
  unsigned long _623;
  short unsigned int _628;
  void * _632;
  unsigned long _634;
  void * _640;
  void * _641;

  <bb 2> [0.00%]:
  ivtmp.558_637 = (unsigned long) arraybase_4(D);
  goto <bb 11>; [100.00%]

  <bb 3> [2.23%]:
  # currentmin_452 = PHI <currentmin_228(3), 9223372036854775807(11)>
  # ivtmp.550_629 = PHI <ivtmp.550_630(3), ivtmp.550_631(11)>
  _632 = (void *) ivtmp.550_629;
  _15 = MEM[base: _632, offset: 0B];
  currentmin_228 = MIN_EXPR <currentmin_452, _15>;
  ivtmp.550_630 = ivtmp.550_629 + 8;
  if (ivtmp.550_630 != _634)
    goto <bb 3>; [98.99%]
  else
    goto <bb 4>; [1.01%]

  <bb 4> [0.02%]:
  # currentmin_268 = PHI <currentmin_228(3)>
  _383 = ivtmp.558_635;
  _378 = _383 >> 3;
  _374 = -_378;
  _288 = (short unsigned int) _374;
  prolog_loop_niters.298_384 = _288 & 1;
  if (prolog_loop_niters.298_384 == 0)
    goto <bb 6>; [33.34%]
  else
    goto <bb 5>; [66.66%]

  <bb 5> [0.01%]:
  _640 = (void *) ivtmp.558_635;
  _419 = MEM[base: _640, offset: 0B];
  _414 = _419 - currentmin_268;
  _641 = (void *) ivtmp.558_635;
  MEM[base: _641, offset: 0B] = _414;

  <bb 6> [0.02%]:
  # j_274 = PHI <1(5), 0(4)>
  # ivtmp_263 = PHI <100(5), 101(4)>
  prolog_loop_adjusted_niters.299_259 = (sizetype) prolog_loop_niters.298_384;
  niters.300_243 = 101 - prolog_loop_niters.298_384;
  bnd.301_109 = niters.300_243 >> 1;
  _84 = ivtmp.559_638;
  _79 = prolog_loop_adjusted_niters.299_259 + _84;
  _73 = _79 * 8;
  vectp.306_86 = arraybase_4(D) + _73;
  vect_cst__53 = {currentmin_268, currentmin_268};
  _21 = ivtmp.559_638;
  _16 = prolog_loop_adjusted_niters.299_259 + _21;
  _13 = _16 * 8;
  vectp.310_49 = arraybase_4(D) + _13;

  <bb 7> [1.02%]:
  # ivtmp.534_624 = PHI <ivtmp.534_625(7), 0(6)>
  # ivtmp.537_626 = PHI <ivtmp.537_627(7), 0(6)>
  vect__23.307_57 = MEM[base: vectp.306_86, index: ivtmp.537_626, offset: 0B];
  vect__25.308_51 = vect__23.307_57 - vect_cst__53;
  MEM[base: vectp.310_49, index: ivtmp.537_626, offset: 0B] = vect__25.308_51;
  ivtmp.534_625 = ivtmp.534_624 + 1;
  ivtmp.537_627 = ivtmp.537_626 + 16;
  _628 = (short unsigned int) ivtmp.534_625;
  if (_628 < bnd.301_109)
    goto <bb 7>; [98.04%]
  else
    goto <bb 8>; [1.96%]

  <bb 8> [0.02%]:
  niters_vector_mult_vf.302_107 = bnd.301_109 << 1;
  tmp.303_97 = j_274 + niters_vector_mult_vf.302_107;
  tmp.304_95 = ivtmp_263 - niters_vector_mult_vf.302_107;
  if (niters_vector_mult_vf.302_107 == niters.300_243)
    goto <bb 10>; [33.34%]
  else
    goto <bb 9>; [66.66%]

  <bb 9> [1.49%]:
  # j_238 = PHI <tmp.303_97(8)>
  # ivtmp_187 = PHI <tmp.304_95(8)>
  _173 = (int) j_238;
  _163 = *_12[_173];
  _154 = _163 - currentmin_268;
  *_12[_173] = _154;
  j_146 = j_238 + 1;
  ivtmp_122 = ivtmp_187 - 1;

  <bb 10> [0.02%]:
  ivtmp.558_636 = ivtmp.558_635 + 808;
  ivtmp.559_639 = ivtmp.559_638 + 101;
  if (ivtmp.559_639 != 10201)
    goto <bb 11>; [99.00%]
  else
    goto <bb 17>; [1.00%]

  <bb 11> [0.02%]:
  # ivtmp.558_635 = PHI <ivtmp.558_636(10), ivtmp.558_637(2)>
  # ivtmp.559_638 = PHI <ivtmp.559_639(10), 0(2)>
  _12 = (long int[101] *) ivtmp.558_635;
  ivtmp.550_631 = ivtmp.558_635;
  _634 = ivtmp.558_635 + 808;
  goto <bb 3>; [100.00%]

  <bb 12> [2.23%]:
  # currentmin_456 = PHI <currentmin_442(12), 9223372036854775807(18)>
  # ivtmp.523_603 = PHI <ivtmp.523_604(12), ivtmp.523_605(18)>
  _609 = (void *) ivtmp.523_603;
  _34 = MEM[base: _609, offset: 0B];
  currentmin_442 = MIN_EXPR <currentmin_456, _34>;
  ivtmp.523_604 = ivtmp.523_603 + 808;
  if (ivtmp.523_604 != _614)
    goto <bb 12>; [98.99%]
  else
    goto <bb 13>; [1.01%]

  <bb 13> [0.02%]:
  # currentmin_418 = PHI <currentmin_442(12)>
  if (currentmin_418 != 0)
    goto <bb 14>; [34.00%]
  else
    goto <bb 16>; [66.00%]

  <bb 14> [0.01%]:
  ivtmp.515_592 = ivtmp.531_615;
  _600 = (unsigned long) arraybase_4(D);
  _602 = ivtmp.532_618;

  <bb 15> [0.76%]:
  # ivtmp.515_590 = PHI <ivtmp.515_591(15), ivtmp.515_592(14)>
  _596 = (void *) ivtmp.515_590;
  _43 = MEM[base: _596, offset: 0B];
  _44 = _43 - currentmin_418;
  _597 = (void *) ivtmp.515_590;
  MEM[base: _597, offset: 0B] = _44;
  ivtmp.515_591 = ivtmp.515_590 + 808;
  if (ivtmp.515_591 != _602)
    goto <bb 15>; [98.99%]
  else
    goto <bb 16>; [1.01%]

  <bb 16> [0.02%]:
  ivtmp.531_616 = ivtmp.531_615 + 8;
  ivtmp.532_619 = ivtmp.532_618 + 8;
  if (ivtmp.531_616 != _623)
    goto <bb 18>; [99.00%]
  else
    goto <bb 63>; [1.00%]

  <bb 17> [0.00%]:
  ivtmp.531_617 = (unsigned long) arraybase_4(D);
  _621 = (unsigned long) arraybase_4(D);
  ivtmp.532_620 = _621 + 81608;
  _622 = (unsigned long) arraybase_4(D);
  _623 = _622 + 808;

  <bb 18> [0.02%]:
  # ivtmp.531_615 = PHI <ivtmp.531_616(16), ivtmp.531_617(17)>
  # ivtmp.532_618 = PHI <ivtmp.532_619(16), ivtmp.532_620(17)>
  ivtmp.523_605 = ivtmp.531_615;
  _612 = (unsigned long) arraybase_4(D);
  _614 = ivtmp.532_618;
  goto <bb 12>; [100.00%]

  <bb 19> [0.00%]:
  __builtin_memset (&linesrow, 0, 202);
  __builtin_memset (&linescol, 0, 202);
  ivtmp.406_330 = (unsigned long) &assignedtableau;
  ivtmp.407_328 = (unsigned long) &linesrow;
  _372 = (unsigned long) &assignedtableau;
  _325 = _372 + 20402;
  goto <bb 23>; [100.00%]

  <bb 20> [1.50%]:
  # ivtmp.399_338 = PHI <ivtmp.399_337(21), ivtmp.399_336(23)>
  _335 = (void *) ivtmp.399_338;
  _58 = MEM[base: _335, offset: 0B];
  if (_58 == 1)
    goto <bb 22>; [7.50%]
  else
    goto <bb 21>; [92.50%]

  <bb 21> [1.39%]:
  ivtmp.399_337 = ivtmp.399_338 + 2;
  if (ivtmp.399_337 != _332)
    goto <bb 20>; [98.91%]
  else
    goto <bb 111>; [1.09%]

  <bb 22> [0.13%]:
  ivtmp.406_331 = ivtmp.406_333 + 202;
  ivtmp.407_329 = ivtmp.407_322 + 2;
  if (ivtmp.406_331 != _325)
    goto <bb 23>; [99.00%]
  else
    goto <bb 24>; [1.00%]

  <bb 23> [0.13%]:
  # ivtmp.406_333 = PHI <ivtmp.406_331(22), ivtmp.406_330(19)>
  # ivtmp.407_322 = PHI <ivtmp.407_329(22), ivtmp.407_328(19)>
  ivtmp.399_336 = ivtmp.406_333;
  _332 = ivtmp.406_333 + 202;
  goto <bb 20>; [100.00%]

  <bb 24> [0.01%]:
  ivtmp.391_345 = (unsigned long) &linesrow;
  ivtmp.392_340 = (unsigned long) arraybase_4(D);
  _341 = (unsigned long) &linesrow;
  _339 = _341 + 202;

  <bb 25> [0.85%]:
  # ivtmp.391_347 = PHI <ivtmp.391_346(30), ivtmp.391_345(24)>
  # ivtmp.392_344 = PHI <ivtmp.392_342(30), ivtmp.392_340(24)>
  _343 = (void *) ivtmp.391_347;
  _63 = MEM[base: _343, offset: 0B];
  if (_63 == 1)
    goto <bb 26>; [20.97%]
  else
    goto <bb 30>; [79.03%]

  <bb 26> [0.18%]:
  _66 = (long int[101] *) ivtmp.392_344;

  <bb 27> [17.65%]:
  # ivtmp.378_349 = PHI <ivtmp.378_348(29), 0(26)>
  _68 = MEM[base: _66, index: ivtmp.378_349, step: 8, offset: 0B];
  if (_68 == 0)
    goto <bb 28>; [50.00%]
  else
    goto <bb 29>; [50.00%]

  <bb 28> [8.82%]:
  MEM[symbol: linescol, index: ivtmp.378_349, step: 2, offset: 0B] = 1;

  <bb 29> [17.65%]:
  ivtmp.378_348 = ivtmp.378_349 + 1;
  if (ivtmp.378_348 != 101)
    goto <bb 27>; [98.99%]
  else
    goto <bb 30>; [1.01%]

  <bb 30> [0.85%]:
  ivtmp.391_346 = ivtmp.391_347 + 2;
  ivtmp.392_342 = ivtmp.392_344 + 808;
  if (ivtmp.391_346 != _339)
    goto <bb 25>; [98.99%]
  else
    goto <bb 31>; [1.01%]

  <bb 31> [0.85%]:
  # newrows_474 = PHI <newrows_120(38), 0(30)>
  # ivtmp.376_354 = PHI <ivtmp.376_353(38), 0(30)>
  _72 = MEM[symbol: linescol, index: ivtmp.376_354, offset: 0B];
  if (_72 == 1)
    goto <bb 32>; [20.97%]
  else
    goto <bb 38>; [79.03%]

  <bb 32> [0.18%]:
  _350 = (unsigned long) &assignedtableau;
  _351 = ivtmp.376_354 + _350;
  ivtmp.366_365 = _351;
  ivtmp.367_360 = (unsigned long) &linesrow;
  _357 = (unsigned long) &linesrow;
  _352 = _357 + 202;

  <bb 33> [17.65%]:
  # newrows_466 = PHI <newrows_118(36), newrows_474(32)>
  # ivtmp.366_367 = PHI <ivtmp.366_366(36), ivtmp.366_365(32)>
  # ivtmp.367_361 = PHI <ivtmp.367_362(36), ivtmp.367_360(32)>
  _359 = (void *) ivtmp.366_367;
  _77 = MEM[base: _359, offset: 0B];
  if (_77 == 1)
    goto <bb 34>; [34.00%]
  else
    goto <bb 36>; [66.00%]

  <bb 34> [6.00%]:
  _355 = (void *) ivtmp.367_361;
  _78 = MEM[base: _355, offset: 0B];
  if (_78 != 1)
    goto <bb 35>; [66.00%]
  else
    goto <bb 36>; [34.00%]

  <bb 35> [3.96%]:
  _356 = (void *) ivtmp.367_361;
  MEM[base: _356, offset: 0B] = 1;
  newrows_80 = newrows_466 + 1;

  <bb 36> [17.65%]:
  # newrows_118 = PHI <newrows_466(33), newrows_466(34), newrows_80(35)>
  ivtmp.366_366 = ivtmp.366_367 + 202;
  ivtmp.367_362 = ivtmp.367_361 + 2;
  if (ivtmp.367_362 != _352)
    goto <bb 33>; [98.99%]
  else
    goto <bb 37>; [1.01%]

  <bb 37> [0.18%]:
  # newrows_412 = PHI <newrows_118(36)>

  <bb 38> [0.85%]:
  # newrows_120 = PHI <newrows_474(31), newrows_412(37)>
  ivtmp.376_353 = ivtmp.376_354 + 2;
  if (ivtmp.376_353 != 202)
    goto <bb 31>; [98.99%]
  else
    goto <bb 39>; [1.01%]

  <bb 39> [0.01%]:
  # newrows_229 = PHI <newrows_120(38)>
  if (newrows_229 != 0)
    goto <bb 24>; [85.00%]
  else
    goto <bb 40>; [15.00%]

  <bb 40> [0.00%]:
  ivtmp.358_291 = (unsigned long) &linesrow;
  ivtmp.359_370 = (unsigned long) arraybase_4(D);
  _369 = (unsigned long) &linesrow;
  _368 = _369 + 202;

  <bb 41> [0.13%]:
  # smallest_475 = PHI <smallest_123(47), 9223372036854775807(40)>
  # ivtmp.358_431 = PHI <ivtmp.358_430(47), ivtmp.358_291(40)>
  # ivtmp.359_230 = PHI <ivtmp.359_363(47), ivtmp.359_370(40)>
  _371 = (void *) ivtmp.358_431;
  _85 = MEM[base: _371, offset: 0B];
  if (_85 != 0)
    goto <bb 42>; [34.00%]
  else
    goto <bb 47>; [66.00%]

  <bb 42> [0.04%]:
  _90 = (long int[101] *) ivtmp.359_230;

  <bb 43> [4.29%]:
  # smallest_469 = PHI <smallest_121(45), smallest_475(42)>
  # ivtmp.345_429 = PHI <ivtmp.345_428(45), 0(42)>
  _87 = MEM[symbol: linescol, index: ivtmp.345_429, step: 2, offset: 0B];
  if (_87 != 1)
    goto <bb 44>; [66.00%]
  else
    goto <bb 45>; [34.00%]

  <bb 44> [2.83%]:
  _91 = MEM[base: _90, index: ivtmp.345_429, step: 8, offset: 0B];
  _195 = MIN_EXPR <_91, smallest_469>;

  <bb 45> [4.30%]:
  # smallest_121 = PHI <smallest_469(43), _195(44)>
  ivtmp.345_428 = ivtmp.345_429 + 1;
  if (ivtmp.345_428 != 101)
    goto <bb 43>; [98.99%]
  else
    goto <bb 46>; [1.01%]

  <bb 46> [0.04%]:
  # smallest_415 = PHI <smallest_121(45)>

  <bb 47> [0.13%]:
  # smallest_123 = PHI <smallest_475(41), smallest_415(46)>
  ivtmp.358_430 = ivtmp.358_431 + 2;
  ivtmp.359_363 = ivtmp.359_230 + 808;
  if (ivtmp.358_430 != _368)
    goto <bb 41>; [99.00%]
  else
    goto <bb 48>; [1.00%]

  <bb 48> [0.00%]:
  # smallest_234 = PHI <smallest_123(47)>
  ivtmp.342_25 = (unsigned long) &linesrow;
  ivtmp.343_126 = (unsigned long) arraybase_4(D);
  _427 = (unsigned long) &linesrow;
  _311 = _427 + 202;

  <bb 49> [0.13%]:
  # ivtmp.342_22 = PHI <ivtmp.342_23(54), ivtmp.342_25(48)>
  # ivtmp.343_26 = PHI <ivtmp.343_252(54), ivtmp.343_126(48)>
  _127 = (void *) ivtmp.342_22;
  _96 = MEM[base: _127, offset: 0B];
  if (_96 != 0)
    goto <bb 50>; [34.00%]
  else
    goto <bb 54>; [66.00%]

  <bb 50> [0.04%]:
  _101 = (long int[101] *) ivtmp.343_26;

  <bb 51> [4.29%]:
  # ivtmp.329_453 = PHI <ivtmp.329_398(53), 0(50)>
  _98 = MEM[symbol: linescol, index: ivtmp.329_453, step: 2, offset: 0B];
  if (_98 != 1)
    goto <bb 52>; [66.00%]
  else
    goto <bb 53>; [34.00%]

  <bb 52> [2.83%]:
  _102 = MEM[base: _101, index: ivtmp.329_453, step: 8, offset: 0B];
  _104 = _102 - smallest_234;
  MEM[base: _101, index: ivtmp.329_453, step: 8, offset: 0B] = _104;

  <bb 53> [4.30%]:
  ivtmp.329_398 = ivtmp.329_453 + 1;
  if (ivtmp.329_398 != 101)
    goto <bb 51>; [98.99%]
  else
    goto <bb 54>; [1.01%]

  <bb 54> [0.13%]:
  ivtmp.342_23 = ivtmp.342_22 + 2;
  ivtmp.343_252 = ivtmp.343_26 + 808;
  if (ivtmp.342_23 != _311)
    goto <bb 49>; [99.00%]
  else
    goto <bb 55>; [1.00%]

  <bb 55> [0.00%]:
  ivtmp.326_403 = (unsigned long) &linesrow;
  ivtmp.327_423 = (unsigned long) arraybase_4(D);
  _119 = (unsigned long) &linesrow;
  _253 = _119 + 202;

  <bb 56> [0.13%]:
  # ivtmp.326_275 = PHI <ivtmp.326_401(61), ivtmp.326_403(55)>
  # ivtmp.327_422 = PHI <ivtmp.327_280(61), ivtmp.327_423(55)>
  _426 = (void *) ivtmp.326_275;
  _108 = MEM[base: _426, offset: 0B];
  if (_108 == 0)
    goto <bb 57>; [34.00%]
  else
    goto <bb 61>; [66.00%]

  <bb 57> [0.04%]:
  _113 = (long int[101] *) ivtmp.327_422;

  <bb 58> [4.29%]:
  # ivtmp.312_396 = PHI <ivtmp.312_399(60), 0(57)>
  _110 = MEM[symbol: linescol, index: ivtmp.312_396, step: 2, offset: 0B];
  if (_110 == 1)
    goto <bb 59>; [34.00%]
  else
    goto <bb 60>; [66.00%]

  <bb 59> [1.46%]:
  _114 = MEM[base: _113, index: ivtmp.312_396, step: 8, offset: 0B];
  _115 = _114 + smallest_234;
  MEM[base: _113, index: ivtmp.312_396, step: 8, offset: 0B] = _115;

  <bb 60> [4.30%]:
  ivtmp.312_399 = ivtmp.312_396 + 1;
  if (ivtmp.312_399 != 101)
    goto <bb 58>; [98.99%]
  else
    goto <bb 61>; [1.01%]

  <bb 61> [0.13%]:
  ivtmp.326_401 = ivtmp.326_275 + 2;
  ivtmp.327_280 = ivtmp.327_422 + 808;
  if (ivtmp.326_401 != _253)
    goto <bb 56>; [99.00%]
  else
    goto <bb 62>; [1.00%]

  <bb 62> [0.00%]:
  linesrow ={v} {CLOBBER};
  linescol ={v} {CLOBBER};

  <bb 63> [0.00%]:
  ivtmp.507_587 = (unsigned long) &assignedtableau;
  _588 = (unsigned long) &assignedtableau;
  _589 = _588 + 20402;

  <bb 64> [0.15%]:
  # ivtmp.507_585 = PHI <ivtmp.507_586(64), ivtmp.507_587(63)>
  _404 = (short int[101] *) ivtmp.507_585;
  __builtin_memset (_404, 0, 202);
  ivtmp.507_586 = ivtmp.507_585 + 202;
  if (ivtmp.507_586 != _589)
    goto <bb 64>; [99.00%]
  else
    goto <bb 65>; [1.00%]

  <bb 65> [0.01%]:
  # totnumassigns_231 = PHI <0(64), totnumassigns_424(91)>
  # selected_233 = PHI <0(64), selected_436(91)>
  ivtmp.498_581 = (unsigned long) &assignedtableau;
  ivtmp.499_584 = (unsigned long) arraybase_4(D);
  goto <bb 78>; [100.00%]

  <bb 66> [99.00%]:
  # numzeros_480 = PHI <numzeros_235(69), 0(78)>
  # selected_495 = PHI <selected_236(69), selected_496(78)>
  # ivtmp.483_577 = PHI <ivtmp.483_578(69), 0(78)>
  _137 = (int) ivtmp.483_577;
  _138 = MEM[base: _135, index: ivtmp.483_577, step: 8, offset: 0B];
  if (_138 == 0)
    goto <bb 67>; [50.00%]
  else
    goto <bb 69>; [50.00%]

  <bb 67> [49.50%]:
  _141 = MEM[base: _140, index: ivtmp.483_577, step: 2, offset: 0B];
  if (_141 == 0)
    goto <bb 68>; [50.00%]
  else
    goto <bb 69>; [50.00%]

  <bb 68> [24.75%]:
  numzeros_143 = numzeros_480 + 1;

  <bb 69> [99.00%]:
  # numzeros_235 = PHI <numzeros_480(66), numzeros_480(67), numzeros_143(68)>
  # selected_236 = PHI <selected_495(66), selected_495(67), _137(68)>
  ivtmp.483_578 = ivtmp.483_577 + 1;
  if (ivtmp.483_578 != 101)
    goto <bb 66>; [98.99%]
  else
    goto <bb 70>; [1.01%]

  <bb 70> [1.00%]:
  # numzeros_260 = PHI <numzeros_235(69)>
  # selected_251 = PHI <selected_236(69)>
  if (numzeros_260 == 1)
    goto <bb 71>; [20.97%]
  else
    goto <bb 76>; [79.03%]

  <bb 71> [0.21%]:
  numassigns_147 = numassigns_481 + 1;
  totnumassigns_149 = totnumassigns_482 + 1;
  *_140[selected_251] = 1;
  _566 = (sizetype) selected_251;
  _567 = _566 * 8;
  _568 = arraybase_4(D) + _567;
  ivtmp.480_565 = (unsigned long) _568;
  _572 = (sizetype) selected_251;
  _573 = _572 * 2;
  _574 = &assignedtableau + _573;
  ivtmp.481_571 = (unsigned long) _574;

  <bb 72> [20.76%]:
  # k_483 = PHI <k_161(75), 0(71)>
  # ivtmp.480_563 = PHI <ivtmp.480_564(75), ivtmp.480_565(71)>
  # ivtmp.481_569 = PHI <ivtmp.481_570(75), ivtmp.481_571(71)>
  if (i_478 != k_483)
    goto <bb 73>; [98.96%]
  else
    goto <bb 75>; [1.04%]

  <bb 73> [20.54%]:
  _575 = (void *) ivtmp.480_563;
  _158 = MEM[base: _575, offset: 0B];
  if (_158 == 0)
    goto <bb 74>; [50.00%]
  else
    goto <bb 75>; [50.00%]

  <bb 74> [10.27%]:
  _576 = (void *) ivtmp.481_569;
  MEM[base: _576, offset: 0B] = 2;

  <bb 75> [20.76%]:
  k_161 = k_483 + 1;
  ivtmp.480_564 = ivtmp.480_563 + 808;
  ivtmp.481_570 = ivtmp.481_569 + 202;
  if (k_161 != 101)
    goto <bb 72>; [98.99%]
  else
    goto <bb 76>; [1.01%]

  <bb 76> [1.00%]:
  # numassigns_239 = PHI <numassigns_481(70), numassigns_147(75)>
  # totnumassigns_240 = PHI <totnumassigns_482(70), totnumassigns_149(75)>
  i_162 = i_478 + 1;
  ivtmp.498_580 = ivtmp.498_579 + 202;
  ivtmp.499_583 = ivtmp.499_582 + 808;
  if (i_162 != 101)
    goto <bb 78>; [98.99%]
  else
    goto <bb 77>; [1.01%]

  <bb 77> [0.01%]:
  # selected_447 = PHI <selected_251(76)>
  # numassigns_446 = PHI <numassigns_239(76)>
  # totnumassigns_445 = PHI <totnumassigns_240(76)>
  ivtmp.471_559 = (unsigned long) arraybase_4(D);
  ivtmp.472_562 = (unsigned long) &assignedtableau;
  goto <bb 90>; [100.00%]

  <bb 78> [1.00%]:
  # i_478 = PHI <i_162(76), 0(65)>
  # numassigns_481 = PHI <numassigns_239(76), 0(65)>
  # totnumassigns_482 = PHI <totnumassigns_240(76), totnumassigns_231(65)>
  # selected_496 = PHI <selected_251(76), selected_233(65)>
  # ivtmp.498_579 = PHI <ivtmp.498_580(76), ivtmp.498_581(65)>
  # ivtmp.499_582 = PHI <ivtmp.499_583(76), ivtmp.499_584(65)>
  _135 = (long int[101] *) ivtmp.499_582;
  _140 = (short int[101] *) ivtmp.498_579;
  goto <bb 66>; [100.00%]

  <bb 79> [99.00%]:
  # numzeros_486 = PHI <numzeros_241(82), 0(90)>
  # selected_497 = PHI <selected_242(82), selected_498(90)>
  # ivtmp.456_539 = PHI <ivtmp.456_540(82), 0(90)>
  # ivtmp.462_541 = PHI <ivtmp.462_542(82), ivtmp.462_543(90)>
  # ivtmp.463_547 = PHI <ivtmp.463_548(82), ivtmp.463_549(90)>
  _553 = (void *) ivtmp.462_541;
  _169 = MEM[base: _553, offset: 0B];
  if (_169 == 0)
    goto <bb 80>; [50.00%]
  else
    goto <bb 82>; [50.00%]

  <bb 80> [49.50%]:
  _554 = (void *) ivtmp.463_547;
  _172 = MEM[base: _554, offset: 0B];
  if (_172 == 0)
    goto <bb 81>; [50.00%]
  else
    goto <bb 82>; [50.00%]

  <bb 81> [24.75%]:
  numzeros_174 = numzeros_486 + 1;
  selected_175 = (int) ivtmp.456_539;

  <bb 82> [99.00%]:
  # numzeros_241 = PHI <numzeros_486(79), numzeros_486(80), numzeros_174(81)>
  # selected_242 = PHI <selected_497(79), selected_497(80), selected_175(81)>
  ivtmp.456_540 = ivtmp.456_539 + 1;
  ivtmp.462_542 = ivtmp.462_541 + 808;
  ivtmp.463_548 = ivtmp.463_547 + 202;
  if (ivtmp.456_540 != 101)
    goto <bb 79>; [98.99%]
  else
    goto <bb 83>; [1.01%]

  <bb 83> [1.00%]:
  # numzeros_443 = PHI <numzeros_241(82)>
  # selected_438 = PHI <selected_242(82)>
  if (numzeros_443 == 1)
    goto <bb 84>; [20.97%]
  else
    goto <bb 89>; [79.03%]

  <bb 84> [0.21%]:
  numassigns_179 = numassigns_487 + 1;
  totnumassigns_181 = totnumassigns_488 + 1;
  _183 = (long unsigned int) selected_438;
  _184 = _183 * 202;
  _185 = &assignedtableau + _184;
  *_185[_441] = 1;
  _188 = _183 * 808;
  _189 = arraybase_4(D) + _188;

  <bb 85> [20.76%]:
  # ivtmp.447_536 = PHI <ivtmp.447_537(88), 0(84)>
  k_538 = (short unsigned int) ivtmp.447_536;
  if (j_485 != k_538)
    goto <bb 86>; [98.96%]
  else
    goto <bb 88>; [1.04%]

  <bb 86> [20.54%]:
  _191 = MEM[base: _189, index: ivtmp.447_536, step: 8, offset: 0B];
  if (_191 == 0)
    goto <bb 87>; [50.00%]
  else
    goto <bb 88>; [50.00%]

  <bb 87> [10.27%]:
  MEM[base: _185, index: ivtmp.447_536, step: 2, offset: 0B] = 2;

  <bb 88> [20.76%]:
  ivtmp.447_537 = ivtmp.447_536 + 1;
  if (ivtmp.447_537 != 101)
    goto <bb 85>; [98.99%]
  else
    goto <bb 89>; [1.01%]

  <bb 89> [1.00%]:
  # numassigns_245 = PHI <numassigns_487(83), numassigns_179(88)>
  # totnumassigns_246 = PHI <totnumassigns_488(83), totnumassigns_181(88)>
  ivtmp.465_556 = ivtmp.465_555 + 1;
  ivtmp.471_558 = ivtmp.471_557 + 8;
  ivtmp.472_561 = ivtmp.472_560 + 2;
  if (ivtmp.465_556 != 101)
    goto <bb 90>; [98.99%]
  else
    goto <bb 91>; [1.01%]

  <bb 90> [1.00%]:
  # numassigns_487 = PHI <numassigns_245(89), numassigns_446(77)>
  # totnumassigns_488 = PHI <totnumassigns_246(89), totnumassigns_445(77)>
  # selected_498 = PHI <selected_438(89), selected_447(77)>
  # ivtmp.465_555 = PHI <ivtmp.465_556(89), 0(77)>
  # ivtmp.471_557 = PHI <ivtmp.471_558(89), ivtmp.471_559(77)>
  # ivtmp.472_560 = PHI <ivtmp.472_561(89), ivtmp.472_562(77)>
  j_485 = (short unsigned int) ivtmp.465_555;
  _441 = (int) ivtmp.465_555;
  ivtmp.462_543 = ivtmp.471_557;
  ivtmp.463_549 = ivtmp.472_560;
  goto <bb 79>; [100.00%]

  <bb 91> [0.01%]:
  # selected_436 = PHI <selected_438(89)>
  # numassigns_432 = PHI <numassigns_245(89)>
  # totnumassigns_424 = PHI <totnumassigns_246(89)>
  if (numassigns_432 != 0)
    goto <bb 65>; [85.00%]
  else
    goto <bb 92>; [15.00%]

  <bb 92> [0.00%]:
  # totnumassigns_421 = PHI <totnumassigns_424(91)>
  if (totnumassigns_421 == 101)
    goto <bb 94>; [18.79%]
  else
    goto <bb 93>; [81.21%]

  <bb 93> [0.00%]:
  ivtmp.444_532 = (unsigned long) arraybase_4(D);
  ivtmp.445_535 = (unsigned long) &assignedtableau;
  goto <bb 109>; [100.00%]

  <bb 94> [0.00%]:
  assignedtableau ={v} {CLOBBER};
  return;

  <bb 95> [2.56%]:
  # ivtmp.429_528 = PHI <ivtmp.429_529(97), 0(109)>
  _201 = (int) ivtmp.429_528;
  _202 = MEM[base: _199, index: ivtmp.429_528, step: 8, offset: 0B];
  if (_202 == 0)
    goto <bb 96>; [50.00%]
  else
    goto <bb 97>; [50.00%]

  <bb 96> [1.28%]:
  _205 = MEM[base: _204, index: ivtmp.429_528, step: 2, offset: 0B];
  if (_205 == 0)
    goto <bb 112>; [7.50%]
  else
    goto <bb 97>; [92.50%]

  <bb 97> [2.46%]:
  ivtmp.429_529 = ivtmp.429_528 + 1;
  if (ivtmp.429_529 != 101)
    goto <bb 95>; [98.95%]
  else
    goto <bb 108>; [1.05%]

  <bb 98> [6.03%]:
  # ivtmp.420_525 = PHI <ivtmp.420_526(101), 0(112)>
  _527 = (int) ivtmp.420_525;
  if (_272 != _527)
    goto <bb 99>; [98.96%]
  else
    goto <bb 101>; [1.04%]

  <bb 99> [5.97%]:
  _217 = MEM[base: _199, index: ivtmp.420_525, step: 8, offset: 0B];
  if (_217 == 0)
    goto <bb 100>; [50.00%]
  else
    goto <bb 101>; [50.00%]

  <bb 100> [2.98%]:
  MEM[base: _204, index: ivtmp.420_525, step: 2, offset: 0B] = 2;

  <bb 101> [6.03%]:
  ivtmp.420_526 = ivtmp.420_525 + 1;
  if (ivtmp.420_526 != 101)
    goto <bb 98>; [98.99%]
  else
    goto <bb 102>; [1.01%]

  <bb 102> [0.06%]:
  _313 = (sizetype) _272;
  _319 = _313 * 8;
  _320 = arraybase_4(D) + _319;
  ivtmp.417_321 = (unsigned long) _320;
  _316 = (sizetype) _272;
  _314 = _316 * 2;
  _194 = &assignedtableau + _314;
  ivtmp.418_318 = (unsigned long) _194;

  <bb 103> [6.03%]:
  # k_494 = PHI <k_226(106), 0(102)>
  # ivtmp.417_326 = PHI <ivtmp.417_324(106), ivtmp.417_321(102)>
  # ivtmp.418_317 = PHI <ivtmp.418_315(106), ivtmp.418_318(102)>
  if (i_490 != k_494)
    goto <bb 104>; [98.96%]
  else
    goto <bb 106>; [1.04%]

  <bb 104> [5.97%]:
  _523 = (void *) ivtmp.417_326;
  _223 = MEM[base: _523, offset: 0B];
  if (_223 == 0)
    goto <bb 105>; [50.00%]
  else
    goto <bb 106>; [50.00%]

  <bb 105> [2.98%]:
  _524 = (void *) ivtmp.418_317;
  MEM[base: _524, offset: 0B] = 2;

  <bb 106> [6.03%]:
  k_226 = k_494 + 1;
  ivtmp.417_324 = ivtmp.417_326 + 808;
  ivtmp.418_315 = ivtmp.418_317 + 202;
  if (k_226 != 101)
    goto <bb 103>; [98.99%]
  else
    goto <bb 107>; [1.01%]

  <bb 107> [0.06%]:
  totnumassigns_212 = totnumassigns_492 + 1;

  <bb 108> [0.12%]:
  # totnumassigns_247 = PHI <totnumassigns_492(97), totnumassigns_212(107)>
  i_227 = i_490 + 1;
  ivtmp.444_531 = ivtmp.444_530 + 808;
  ivtmp.445_534 = ivtmp.445_533 + 202;
  if (i_227 != 101)
    goto <bb 109>; [99.00%]
  else
    goto <bb 110>; [1.00%]

  <bb 109> [0.12%]:
  # i_490 = PHI <i_227(108), 0(93)>
  # totnumassigns_492 = PHI <totnumassigns_247(108), totnumassigns_421(93)>
  # ivtmp.444_530 = PHI <ivtmp.444_531(108), ivtmp.444_532(93)>
  # ivtmp.445_533 = PHI <ivtmp.445_534(108), ivtmp.445_535(93)>
  _199 = (long int[101] *) ivtmp.444_530;
  _204 = (short int[101] *) ivtmp.445_533;
  goto <bb 95>; [100.00%]

  <bb 110> [0.00%]:
  # totnumassigns_420 = PHI <totnumassigns_247(108)>
  if (totnumassigns_420 != 101)
    goto <bb 19>; [85.00%]
  else
    goto <bb 94>; [15.00%]

  <bb 111> [0.06%]:
  _323 = (void *) ivtmp.407_322;
  MEM[base: _323, offset: 0B] = 1;
  goto <bb 22>; [100.00%]

  <bb 112> [0.10%]:
  # _272 = PHI <_201(96)>
  *_204[_272] = 1;
  goto <bb 98>; [100.00%]

}



;; Function DoBitfieldIteration (DoBitfieldIteration, funcdef_no=65, decl_uid=4548, cgraph_uid=65, symbol_order=90)

;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 3
;;  header 7, latch 17
;;  depth 1, outer 0
;;  nodes: 7 17 8 10 11 13 14 16 15 12 9
;;
;; Loop 6
;;  header 16, latch 16
;;  depth 2, outer 3
;;  nodes: 16
;;
;; Loop 4
;;  header 10, latch 10
;;  depth 2, outer 3
;;  nodes: 10
;;
;; Loop 5
;;  header 13, latch 13
;;  depth 2, outer 3
;;  nodes: 13
;;
;; Loop 2
;;  header 6, latch 6
;;  depth 1, outer 0
;;  nodes: 6
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 4 }
;; 3 succs { 3 4 }
;; 4 succs { 5 20 }
;; 5 succs { 6 }
;; 6 succs { 6 19 }
;; 7 succs { 14 8 11 }
;; 8 succs { 9 17 }
;; 9 succs { 10 }
;; 10 succs { 10 17 }
;; 11 succs { 12 17 }
;; 12 succs { 13 }
;; 13 succs { 13 17 }
;; 14 succs { 15 17 }
;; 15 succs { 16 }
;; 16 succs { 16 17 }
;; 17 succs { 7 18 }
;; 18 succs { 1 }
;; 19 succs { 7 }
;; 20 succs { 18 }
DoBitfieldIteration (farulong * bitarraybase, farulong * bitoparraybase, long int bitoparraysize, long unsigned int * nbitops)
{
  unsigned long ivtmp.597;
  unsigned long ivtmp.591;
  long unsigned int bindex;
  long unsigned int bitnumb;
  long unsigned int bit_addr;
  long unsigned int nbits;
  long unsigned int bindex;
  long unsigned int bitnumb;
  long unsigned int bit_addr;
  long unsigned int nbits;
  long unsigned int bindex;
  long unsigned int bitnumb;
  long unsigned int bit_addr;
  long unsigned int nbits;
  long unsigned int elapsed;
  long unsigned int bitoffset;
  long int i;
  long unsigned int _3;
  long unsigned int i.39_4;
  unsigned int _5;
  unsigned int _9;
  unsigned int _10;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long int _16;
  long unsigned int _43;
  long unsigned int _54;
  long unsigned int _70;
  farulong * _71;
  long unsigned int _72;
  unsigned int _73;
  long int _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _83;
  farulong * _84;
  long unsigned int _85;
  unsigned int _86;
  long int _87;
  long int _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _97;
  farulong * _98;
  long unsigned int _99;
  unsigned int _100;
  long int _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _131;
  long unsigned int _138;
  long unsigned int pretmp_207;
  long unsigned int pretmp_209;
  long unsigned int _210;
  sizetype _222;
  void * _223;
  void * _224;
  void * _228;
  void * _229;
  long unsigned int _233;

  <bb 2> [10.59%]:
  *nbitops_46(D) = 0;
  randnum (13);
  _131 = global_bitopstruct.bitfieldarraysize;
  if (_131 != 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 3> [60.00%]:
  # i_134 = PHI <i_66(3), 0(2)>
  _222 = (sizetype) i_134;
  MEM[base: bitarraybase_56(D), index: _222, step: 8, offset: 0B] = 6148914691236517205;
  i_66 = i_134 + 1;
  _3 = global_bitopstruct.bitfieldarraysize;
  i.39_4 = (long unsigned int) i_66;
  if (_3 > i.39_4)
    goto <bb 3>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 4> [10.59%]:
  randnum (13);
  if (bitoparraysize_50(D) > 0)
    goto <bb 5>; [85.00%]
  else
    goto <bb 20>; [15.00%]

  <bb 5> [9.00%]:
  ivtmp.597_225 = (unsigned long) bitoparraybase_55(D);

  <bb 6> [60.00%]:
  # i_135 = PHI <i_64(6), 0(5)>
  # ivtmp.597_227 = PHI <ivtmp.597_226(6), ivtmp.597_225(5)>
  _5 = abs_randwc (262140);
  bitoffset_59 = (long unsigned int) _5;
  _224 = (void *) ivtmp.597_227;
  MEM[base: _224, offset: 0B] = bitoffset_59;
  _9 = 262140 - _5;
  _10 = abs_randwc (_9);
  _13 = (long unsigned int) _10;
  _223 = (void *) ivtmp.597_227;
  MEM[base: _223, offset: 8B] = _13;
  _14 = *nbitops_46(D);
  _15 = _13 + _14;
  *nbitops_46(D) = _15;
  i_64 = i_135 + 1;
  ivtmp.597_226 = ivtmp.597_227 + 16;
  if (i_64 != bitoparraysize_50(D))
    goto <bb 6>; [85.00%]
  else
    goto <bb 19>; [15.00%]

  <bb 7> [60.00%]:
  # i_136 = PHI <i_57(17), 0(19)>
  # ivtmp.591_232 = PHI <ivtmp.591_231(17), ivtmp.591_230(19)>
  _16 = i_136 % 3;
  _228 = (void *) ivtmp.591_232;
  pretmp_207 = MEM[base: _228, offset: 8B];
  _229 = (void *) ivtmp.591_232;
  pretmp_209 = MEM[base: _229, offset: 0B];
  _210 = pretmp_207 + 18446744073709551615;
  switch (_16) <default: <L7> [25.00%], case 1: <L8> [25.00%], case 2: <L9> [25.00%]>

<L7> [15.00%]:
  if (pretmp_207 != 0)
    goto <bb 9>; [85.00%]
  else
    goto <bb 17>; [15.00%]

  <bb 9> [12.75%]:
  _138 = pretmp_209 + pretmp_207;

  <bb 10> [85.00%]:
  # bit_addr_143 = PHI <bit_addr_77(10), pretmp_209(9)>
  bindex_68 = bit_addr_143 >> 6;
  bitnumb_69 = bit_addr_143 & 63;
  _70 = bindex_68 * 8;
  _71 = bitarraybase_56(D) + _70;
  _72 = *_71;
  _73 = (unsigned int) bitnumb_69;
  _74 = 1 << _73;
  _75 = (long unsigned int) _74;
  _76 = _75 | _72;
  *_71 = _76;
  bit_addr_77 = bit_addr_143 + 1;
  if (bit_addr_77 != _138)
    goto <bb 10>; [85.00%]
  else
    goto <bb 17>; [15.00%]

<L8> [15.00%]:
  if (pretmp_207 != 0)
    goto <bb 12>; [85.00%]
  else
    goto <bb 17>; [15.00%]

  <bb 12> [12.75%]:
  _233 = pretmp_209 + pretmp_207;

  <bb 13> [85.00%]:
  # bit_addr_145 = PHI <bit_addr_91(13), pretmp_209(12)>
  bindex_81 = bit_addr_145 >> 6;
  bitnumb_82 = bit_addr_145 & 63;
  _83 = bindex_81 * 8;
  _84 = bitarraybase_56(D) + _83;
  _85 = *_84;
  _86 = (unsigned int) bitnumb_82;
  _87 = 1 << _86;
  _88 = ~_87;
  _89 = (long unsigned int) _88;
  _90 = _89 & _85;
  *_84 = _90;
  bit_addr_91 = bit_addr_145 + 1;
  if (bit_addr_91 != _233)
    goto <bb 13>; [85.00%]
  else
    goto <bb 17>; [15.00%]

<L9> [15.00%]:
  if (pretmp_207 != 0)
    goto <bb 15>; [85.00%]
  else
    goto <bb 17>; [15.00%]

  <bb 15> [12.75%]:
  _43 = pretmp_209 + pretmp_207;

  <bb 16> [85.00%]:
  # bit_addr_147 = PHI <bit_addr_104(16), pretmp_209(15)>
  bindex_95 = bit_addr_147 >> 6;
  bitnumb_96 = bit_addr_147 & 63;
  _97 = bindex_95 * 8;
  _98 = bitarraybase_56(D) + _97;
  _99 = *_98;
  _100 = (unsigned int) bitnumb_96;
  _101 = 1 << _100;
  _102 = (long unsigned int) _101;
  _103 = _102 ^ _99;
  *_98 = _103;
  bit_addr_104 = bit_addr_147 + 1;
  if (bit_addr_104 != _43)
    goto <bb 16>; [85.00%]
  else
    goto <bb 17>; [15.00%]

  <bb 17> [60.00%]:
  i_57 = i_136 + 1;
  ivtmp.591_231 = ivtmp.591_232 + 16;
  if (i_57 != bitoparraysize_50(D))
    goto <bb 7>; [85.00%]
  else
    goto <bb 18>; [15.00%]

  <bb 18> [10.59%]:
  # elapsed_121 = PHI <elapsed_109(17), elapsed_118(20)>
  _54 = StopStopwatch (elapsed_121);
  return _54;

  <bb 19> [9.00%]:
  elapsed_109 = StartStopwatch ();
  ivtmp.591_230 = (unsigned long) bitoparraybase_55(D);
  goto <bb 7>; [100.00%]

  <bb 20> [1.59%]:
  elapsed_118 = StartStopwatch ();
  goto <bb 18>; [100.00%]

}



;; Function stradjust (stradjust, funcdef_no=60, decl_uid=4523, cgraph_uid=60, symbol_order=85)

;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 2
;;  header 10, latch 10
;;  depth 1, outer 0
;;  nodes: 10
;;
;; Loop 1
;;  header 19, latch 19
;;  depth 1, outer 0
;;  nodes: 19
;; 2 succs { 3 4 }
;; 3 succs { 26 }
;; 4 succs { 5 25 }
;; 5 succs { 6 15 }
;; 6 succs { 7 13 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 10 12 }
;; 11 succs { 21 }
;; 12 succs { 13 11 }
;; 13 succs { 14 11 }
;; 14 succs { 11 }
;; 15 succs { 16 23 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 19 22 }
;; 20 succs { 21 }
;; 21 succs { 25 }
;; 22 succs { 23 20 }
;; 23 succs { 24 20 }
;; 24 succs { 20 }
;; 25 succs { 26 }
;; 26 succs { 1 }
stradjust (farulong * optrarray, faruchar * strarray, long unsigned int nstrings, long unsigned int i, unsigned char l)
{
  sizetype ivtmp.643;
  unsigned long ivtmp.641;
  sizetype ivtmp.635;
  unsigned long ivtmp.633;
  vector(2) long unsigned int * vectp.631;
  vector(2) long unsigned int * vectp.630;
  vector(2) long unsigned int vect__31.629;
  vector(2) long unsigned int vect_pretmp_71.628;
  vector(2) long unsigned int * vectp.627;
  vector(2) long unsigned int * vectp.626;
  long unsigned int tmp.625;
  long unsigned int niters_vector_mult_vf.624;
  long unsigned int bnd.623;
  long unsigned int niters.622;
  long unsigned int prolog_loop_niters.621;
  vector(2) long unsigned int * vectp.620;
  long unsigned int niters.619;
  vector(2) long unsigned int * vectp.618;
  vector(2) long unsigned int * vectp.617;
  vector(2) long unsigned int vect__41.616;
  vector(2) long unsigned int vect_pretmp_58.615;
  vector(2) long unsigned int * vectp.614;
  vector(2) long unsigned int * vectp.613;
  long unsigned int tmp.612;
  long unsigned int niters_vector_mult_vf.611;
  long unsigned int bnd.610;
  long unsigned int niters.609;
  long unsigned int prolog_loop_niters.608;
  vector(2) long unsigned int * vectp.607;
  long unsigned int niters.606;
  unsigned char adjamount;
  int direction;
  long unsigned int j;
  long unsigned int nbytes;
  int _1;
  long unsigned int _2;
  farulong * _3;
  long unsigned int _4;
  faruchar * _5;
  unsigned char _6;
  int _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  sizetype _11;
  farulong * _12;
  long unsigned int _13;
  faruchar * _14;
  unsigned char _15;
  long unsigned int _16;
  sizetype _18;
  sizetype _19;
  farulong * _20;
  long unsigned int _21;
  faruchar * _22;
  sizetype _23;
  long unsigned int _24;
  sizetype _25;
  faruchar * _26;
  long unsigned int _30;
  farulong * _33;
  long unsigned int pretmp_34;
  long unsigned int _35;
  long unsigned int _37;
  faruchar * _38;
  sizetype _39;
  long unsigned int _49;
  long unsigned int _54;
  sizetype _55;
  long unsigned int _56;
  long unsigned int _58;
  long unsigned int pretmp_59;
  farulong * _60;
  long unsigned int _62;
  long unsigned int pretmp_64;
  long unsigned int _72;
  sizetype _75;
  sizetype _76;
  unsigned long _78;
  unsigned long _79;
  unsigned long _80;
  long unsigned int ivtmp_81;
  long unsigned int ivtmp_82;
  long unsigned int _88;
  farulong * _89;
  long unsigned int pretmp_90;
  long unsigned int _91;
  farulong * _94;
  long unsigned int _96;
  sizetype _105;
  sizetype _106;
  sizetype _107;
  sizetype _108;
  vector(2) long unsigned int vect_cst__110;
  sizetype _114;
  sizetype _115;
  sizetype _116;
  long unsigned int _117;
  long unsigned int _119;
  long unsigned int _120;
  long unsigned int _126;
  farulong * _127;
  long unsigned int pretmp_128;
  long unsigned int _129;
  long unsigned int _133;
  sizetype _135;
  sizetype _136;
  unsigned long _138;
  unsigned long _139;
  unsigned long _140;
  long unsigned int ivtmp_141;
  long unsigned int ivtmp_142;
  long unsigned int _148;
  farulong * _149;
  long unsigned int pretmp_150;
  long unsigned int _151;
  long unsigned int _156;
  sizetype _165;
  sizetype _166;
  long unsigned int _167;
  long unsigned int _168;
  vector(2) long unsigned int vect_cst__170;
  sizetype _174;
  sizetype _175;
  long unsigned int _176;
  long unsigned int _177;
  long unsigned int _179;
  long unsigned int _180;
  long unsigned int _181;

  <bb 2> [28.37%]:
  _2 = i_44(D) * 8;
  _3 = optrarray_45(D) + _2;
  _4 = *_3;
  _5 = strarray_47(D) + _4;
  _9 = nstrings_50(D) + 18446744073709551615;
  if (_9 == i_44(D))
    goto <bb 3>; [47.12%]
  else
    goto <bb 4>; [52.88%]

  <bb 3> [13.37%]:
  *_5 = l_43(D);
  goto <bb 26>; [100.00%]

  <bb 4> [15.00%]:
  _6 = *_5;
  _10 = nstrings_50(D) * 8;
  _11 = _10 + 18446744073709551608;
  _12 = optrarray_45(D) + _11;
  _13 = *_12;
  _14 = strarray_47(D) + _13;
  _15 = *_14;
  _16 = (long unsigned int) _15;
  _62 = _13 + 1;
  _18 = i_44(D) + 1;
  _19 = _18 * 8;
  _20 = optrarray_45(D) + _19;
  _21 = *_20;
  _49 = _62 + _16;
  _179 = -_21;
  nbytes_51 = _49 - _21;
  _22 = strarray_47(D) + _21;
  _23 = (sizetype) l_43(D);
  _39 = _23 + 1;
  _25 = _39 + _4;
  _26 = strarray_47(D) + _25;
  MoveMemory (_26, _22, nbytes_51);
  if (_18 < nstrings_50(D))
    goto <bb 5>; [85.00%]
  else
    goto <bb 25>; [15.00%]

  <bb 5> [12.75%]:
  _7 = (int) _6;
  _1 = (int) l_43(D);
  direction_48 = _1 - _7;
  _8 = ABS_EXPR <direction_48>;
  _72 = (long unsigned int) _8;
  if (direction_48 < 0)
    goto <bb 15>; [36.00%]
  else
    goto <bb 6>; [64.00%]

  <bb 6> [8.16%]:
  _177 = -i_44(D);
  _24 = nstrings_50(D) + 18446744073709551615;
  niters.606_65 = _24 - i_44(D);
  _75 = i_44(D) + 1;
  _76 = _75 * 8;
  vectp.607_74 = optrarray_45(D) + _76;
  _78 = (unsigned long) vectp.607_74;
  _79 = _78 >> 3;
  _80 = -_79;
  prolog_loop_niters.608_77 = _80 & 1;
  _168 = -i_44(D);
  _181 = nstrings_50(D) + 18446744073709551614;
  _96 = _181 - i_44(D);
  if (_96 <= 1)
    goto <bb 13>; [10.00%]
  else
    goto <bb 7>; [90.00%]

  <bb 7> [7.34%]:
  if (prolog_loop_niters.608_77 == 0)
    goto <bb 9>; [33.34%]
  else
    goto <bb 8>; [66.66%]

  <bb 8> [4.90%]:
  # j_66 = PHI <_18(7)>
  # ivtmp_81 = PHI <0(7)>
  _54 = j_66 * 8;
  _33 = optrarray_45(D) + _54;
  pretmp_34 = *_33;
  _35 = pretmp_34 + _72;
  *_33 = _35;
  j_28 = j_66 + 1;
  ivtmp_82 = ivtmp_81 + 1;

  <bb 9> [7.34%]:
  # j_83 = PHI <j_28(8), _18(7)>
  _119 = -prolog_loop_niters.608_77;
  niters.609_85 = niters.606_65 - prolog_loop_niters.608_77;
  bnd.610_99 = niters.609_85 >> 1;
  _55 = i_44(D) + 1;
  _105 = _55 + prolog_loop_niters.608_77;
  _106 = _105 * 8;
  vectp.614_103 = optrarray_45(D) + _106;
  vect_cst__110 = {_72, _72};
  _108 = i_44(D) + 1;
  _114 = _108 + prolog_loop_niters.608_77;
  _115 = _114 * 8;
  vectp.618_112 = optrarray_45(D) + _115;

  <bb 10> [44.06%]:
  # ivtmp.633_31 = PHI <0(9), ivtmp.633_71(10)>
  # ivtmp.635_132 = PHI <0(9), ivtmp.635_61(10)>
  vect_pretmp_58.615_109 = MEM[base: vectp.614_103, index: ivtmp.635_132, offset: 0B];
  vect__41.616_111 = vect_pretmp_58.615_109 + vect_cst__110;
  MEM[base: vectp.618_112, index: ivtmp.635_132, offset: 0B] = vect__41.616_111;
  ivtmp.633_71 = ivtmp.633_31 + 1;
  ivtmp.635_61 = ivtmp.635_132 + 16;
  if (ivtmp.633_71 < bnd.610_99)
    goto <bb 10>; [83.34%]
  else
    goto <bb 12>; [16.66%]

  <bb 11> [8.16%]:
  goto <bb 21>; [100.00%]

  <bb 12> [7.34%]:
  niters_vector_mult_vf.611_100 = bnd.610_99 << 1;
  tmp.612_101 = j_83 + niters_vector_mult_vf.611_100;
  if (niters.609_85 == niters_vector_mult_vf.611_100)
    goto <bb 11>; [33.34%]
  else
    goto <bb 13>; [66.66%]

  <bb 13> [5.71%]:
  # j_97 = PHI <tmp.612_101(12), _18(6)>
  _133 = j_97 * 8;
  _94 = optrarray_45(D) + _133;
  pretmp_64 = *_94;
  _30 = pretmp_64 + _72;
  *_94 = _30;
  j_69 = j_97 + 1;
  if (nstrings_50(D) > j_69)
    goto <bb 14>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 14> [4.87%]:
  # j_86 = PHI <j_69(13)>
  _88 = j_86 * 8;
  _89 = optrarray_45(D) + _88;
  pretmp_90 = *_89;
  _91 = pretmp_90 + _72;
  *_89 = _91;
  j_93 = j_86 + 1;
  goto <bb 11>; [100.00%]

  <bb 15> [4.59%]:
  _176 = -i_44(D);
  _120 = nstrings_50(D) + 18446744073709551615;
  niters.619_122 = _120 - i_44(D);
  _135 = i_44(D) + 1;
  _136 = _135 * 8;
  vectp.620_134 = optrarray_45(D) + _136;
  _138 = (unsigned long) vectp.620_134;
  _139 = _138 >> 3;
  _140 = -_139;
  prolog_loop_niters.621_137 = _140 & 1;
  _167 = -i_44(D);
  _117 = nstrings_50(D) + 18446744073709551614;
  _156 = _117 - i_44(D);
  if (_156 <= 1)
    goto <bb 23>; [10.00%]
  else
    goto <bb 16>; [90.00%]

  <bb 16> [4.13%]:
  if (prolog_loop_niters.621_137 == 0)
    goto <bb 18>; [33.34%]
  else
    goto <bb 17>; [66.66%]

  <bb 17> [2.75%]:
  # j_124 = PHI <_18(16)>
  # ivtmp_141 = PHI <0(16)>
  _126 = j_124 * 8;
  _127 = optrarray_45(D) + _126;
  pretmp_128 = *_127;
  _129 = pretmp_128 - _72;
  *_127 = _129;
  j_131 = j_124 + 1;
  ivtmp_142 = ivtmp_141 + 1;

  <bb 18> [4.13%]:
  # j_143 = PHI <j_131(17), _18(16)>
  _180 = -prolog_loop_niters.621_137;
  niters.622_145 = niters.619_122 - prolog_loop_niters.621_137;
  bnd.623_159 = niters.622_145 >> 1;
  _107 = i_44(D) + 1;
  _165 = _107 + prolog_loop_niters.621_137;
  _166 = _165 * 8;
  vectp.627_163 = optrarray_45(D) + _166;
  vect_cst__170 = {_72, _72};
  _116 = i_44(D) + 1;
  _174 = _116 + prolog_loop_niters.621_137;
  _175 = _174 * 8;
  vectp.631_172 = optrarray_45(D) + _175;

  <bb 19> [24.79%]:
  # ivtmp.641_154 = PHI <ivtmp.641_29(19), 0(18)>
  # ivtmp.643_121 = PHI <ivtmp.643_40(19), 0(18)>
  vect_pretmp_71.628_169 = MEM[base: vectp.627_163, index: ivtmp.643_121, offset: 0B];
  vect__31.629_171 = vect_pretmp_71.628_169 - vect_cst__170;
  MEM[base: vectp.631_172, index: ivtmp.643_121, offset: 0B] = vect__31.629_171;
  ivtmp.641_29 = ivtmp.641_154 + 1;
  ivtmp.643_40 = ivtmp.643_121 + 16;
  if (ivtmp.641_29 < bnd.623_159)
    goto <bb 19>; [83.34%]
  else
    goto <bb 22>; [16.66%]

  <bb 20> [4.59%]:

  <bb 21> [12.75%]:
  goto <bb 25>; [100.00%]

  <bb 22> [4.13%]:
  niters_vector_mult_vf.624_160 = bnd.623_159 << 1;
  tmp.625_161 = j_143 + niters_vector_mult_vf.624_160;
  if (niters.622_145 == niters_vector_mult_vf.624_160)
    goto <bb 20>; [33.34%]
  else
    goto <bb 23>; [66.66%]

  <bb 23> [3.21%]:
  # j_157 = PHI <tmp.625_161(22), _18(15)>
  _56 = j_157 * 8;
  _60 = optrarray_45(D) + _56;
  pretmp_59 = *_60;
  _58 = pretmp_59 - _72;
  *_60 = _58;
  j_70 = j_157 + 1;
  if (nstrings_50(D) > j_70)
    goto <bb 24>; [85.00%]
  else
    goto <bb 20>; [15.00%]

  <bb 24> [2.74%]:
  # j_146 = PHI <j_70(23)>
  _148 = j_146 * 8;
  _149 = optrarray_45(D) + _148;
  pretmp_150 = *_149;
  _151 = pretmp_150 - _72;
  *_149 = _151;
  j_153 = j_146 + 1;
  goto <bb 20>; [100.00%]

  <bb 25> [15.00%]:
  _37 = *_3;
  _38 = strarray_47(D) + _37;
  *_38 = l_43(D);

  <bb 26> [28.37%]:
  return;

}



;; Function DoHuffIteration (DoHuffIteration, funcdef_no=92, decl_uid=4671, cgraph_uid=92, symbol_order=117)

;; 19 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
;;
;; Loop 1
;;  header 50, latch 49
;;  depth 1, outer 0
;;  nodes: 50 49 48 45 44 43 23 29 22 21 18 19 20 17 16 30 15 13 14 12 11 9 10 8 5 7 6 4 3 28 25 26 27 24 42 41 36 32 31 35 33 34 40 39 38 37 46 47
;;
;; Loop 10
;;  header 45, latch 49
;;  depth 2, outer 1
;;  nodes: 45 49 48 46 47
;;
;; Loop 11
;;  header 46, latch 48
;;  depth 3, outer 10
;;  nodes: 46 48 47
;;
;; Loop 9
;;  header 32, latch 42
;;  depth 2, outer 1
;;  nodes: 32 42 41 36 35 33 34 40 39 38 37
;;
;; Loop 14
;;  header 37, latch 40
;;  depth 3, outer 9
;;  nodes: 37 40 39 38
;;
;; Loop 15
;;  header 33, latch 35
;;  depth 3, outer 9
;;  nodes: 33 35 34
;;
;; Loop 6
;;  header 17, latch 30
;;  depth 2, outer 1
;;  nodes: 17 30 29 28 25 26 27 24 22 21 18 19 20
;;
;; Loop 16
;;  header 25, latch 28
;;  depth 3, outer 6
;;  nodes: 25 28 26 27
;;
;; Loop 17
;;  header 18, latch 21
;;  depth 3, outer 6
;;  nodes: 18 21 19 20
;;
;; Loop 18
;;  header 13, latch 15
;;  depth 2, outer 1
;;  nodes: 13 15 14
;;
;; Loop 4
;;  header 9, latch 11
;;  depth 2, outer 1
;;  nodes: 9 11 10
;;
;; Loop 3
;;  header 7, latch 7
;;  depth 2, outer 1
;;  nodes: 7
;;
;; Loop 2
;;  header 4, latch 4
;;  depth 2, outer 1
;;  nodes: 4
;; 2 succs { 50 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 6 8 }
;; 6 succs { 7 }
;; 7 succs { 7 8 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 9 12 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 }
;; 15 succs { 13 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 19 21 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 18 22 }
;; 22 succs { 23 24 }
;; 23 succs { 31 44 }
;; 24 succs { 25 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 25 29 }
;; 29 succs { 23 30 }
;; 30 succs { 17 }
;; 31 succs { 32 }
;; 32 succs { 33 42 }
;; 33 succs { 35 34 }
;; 34 succs { 35 }
;; 35 succs { 33 36 }
;; 36 succs { 37 42 }
;; 37 succs { 38 39 }
;; 38 succs { 40 }
;; 39 succs { 40 }
;; 40 succs { 37 41 }
;; 41 succs { 42 }
;; 42 succs { 32 43 }
;; 43 succs { 44 }
;; 44 succs { 45 }
;; 45 succs { 46 49 }
;; 46 succs { 48 47 }
;; 47 succs { 48 }
;; 48 succs { 46 49 }
;; 49 succs { 45 50 }
;; 50 succs { 3 51 }
;; 51 succs { 1 }
DoHuffIteration (farchar * plaintext, farchar * comparray, farchar * decomparray, long unsigned int arraysize, long unsigned int nloops, struct huff_node * hufftree)
{
  unsigned long ivtmp.739;
  unsigned long ivtmp.732;
  unsigned long ivtmp.726;
  unsigned long ivtmp.717;
  unsigned long ivtmp.706;
  unsigned int ivtmp.704;
  unsigned long ivtmp.688;
  unsigned long ivtmp.680;
  unsigned long ivtmp.676;
  unsigned long ivtmp.658;
  u32 byteoffset;
  int bitnumb;
  u32 byteoffset;
  int bitnumb;
  long unsigned int elapsed;
  char bitstring[30];
  int c;
  long int bitstringlen;
  long int textoffset;
  long int bitoffset;
  int lowidx2;
  int lowidx1;
  float lowfreq2;
  float lowfreq1;
  int root;
  long int j;
  int i;
  unsigned char _4;
  char _6;
  long unsigned int _7;
  long unsigned int _8;
  struct huff_node * _9;
  float _10;
  float _11;
  float _16;
  float _17;
  float _18;
  struct huff_node * _19;
  void * _24;
  void * _25;
  struct huff_node * _32;
  unsigned long _33;
  long unsigned int _34;
  long unsigned int _35;
  struct huff_node * _36;
  long unsigned int _37;
  long unsigned int _38;
  struct huff_node * _39;
  float _43;
  long unsigned int _45;
  unsigned long _47;
  struct huff_node * _49;
  char _53;
  int _54;
  void * _61;
  unsigned long _62;
  unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  struct huff_node * _68;
  int _69;
  unsigned char _70;
  char _73;
  int _76;
  struct huff_node * _77;
  long unsigned int _78;
  void * _88;
  void * _91;
  unsigned long _92;
  struct huff_node * _93;
  struct huff_node * _102;
  unsigned int _107;
  long unsigned int _122;
  unsigned long _133;
  struct huff_node * _138;
  void * _143;
  struct huff_node * _145;
  void * _148;
  struct huff_node * _164;
  int _179;
  void * _180;
  int bitoffset.166_183;
  int _185;
  sizetype _186;
  u8 * _187;
  unsigned char _188;
  int _189;
  int _190;
  long unsigned int _196;
  int _197;
  int cstore_200;
  void * _205;
  void * _206;
  void * _207;
  unsigned long _211;
  float _213;
  void * _221;
  int _222;
  signed long _228;
  void * _231;
  long unsigned int _235;
  float _236;
  void * _237;
  int _238;
  void * _239;
  unsigned long _245;
  unsigned long _247;
  void * _249;
  sizetype _258;
  float _269;
  _Bool _270;
  _Bool _271;
  _Bool _272;
  int _273;
  sizetype _280;
  int _289;
  char cstore_292;
  int _293;
  struct huff_node * _294;
  long unsigned int _295;
  long unsigned int _296;
  int _300;
  void * _311;
  struct huff_node * _315;
  unsigned char _340;
  signed char _341;
  unsigned char _343;
  signed char _347;
  signed char _348;
  signed char _349;
  int _350;
  signed char _351;
  void * _352;
  int _355;
  void * _356;
  unsigned char pretmp_358;
  farchar * _359;
  sizetype _360;
  int bitoffset.165_362;
  unsigned int _367;
  char _368;
  long int _379;

  <bb 2> [0.18%]:
  elapsed_118 = StartStopwatch ();
  goto <bb 50>; [100.00%]

  <bb 3> [1.00%]:
  ivtmp.739_244 = (unsigned long) hufftree_125(D);

  <bb 4> [99.00%]:
  # i_241 = PHI <i_161(4), 0(3)>
  # ivtmp.739_248 = PHI <ivtmp.739_246(4), ivtmp.739_244(3)>
  _25 = (void *) ivtmp.739_248;
  MEM[base: _25, offset: 4B] = 0.0;
  _4 = (unsigned char) i_241;
  _24 = (void *) ivtmp.739_248;
  MEM[base: _24, offset: 0B] = _4;
  i_161 = i_241 + 1;
  ivtmp.739_246 = ivtmp.739_248 + 20;
  if (i_161 != 256)
    goto <bb 4>; [98.99%]
  else
    goto <bb 5>; [1.01%]

  <bb 5> [1.00%]:
  if (arraysize_124(D) != 0)
    goto <bb 6>; [85.00%]
  else
    goto <bb 8>; [15.00%]

  <bb 6> [0.85%]:
  ivtmp.732_285 = (unsigned long) plaintext_141(D);
  _92 = (unsigned long) plaintext_141(D);
  _133 = arraysize_124(D) + _92;

  <bb 7> [5.67%]:
  # ivtmp.732_287 = PHI <ivtmp.732_286(7), ivtmp.732_285(6)>
  _88 = (void *) ivtmp.732_287;
  _6 = MEM[base: _88, offset: 0B];
  _7 = (long unsigned int) _6;
  _8 = _7 * 20;
  _9 = hufftree_125(D) + _8;
  _10 = _9->freq;
  _11 = _10 + 1.0e+0;
  _9->freq = _11;
  ivtmp.732_286 = ivtmp.732_287 + 1;
  if (ivtmp.732_286 != _133)
    goto <bb 7>; [85.00%]
  else
    goto <bb 8>; [15.00%]

  <bb 8> [1.00%]:
  _32 = hufftree_125(D) + 4;
  ivtmp.726_31 = (unsigned long) _32;
  _47 = (unsigned long) hufftree_125(D);
  _33 = _47 + 5124;

  <bb 9> [99.00%]:
  # ivtmp.726_29 = PHI <ivtmp.726_30(11), ivtmp.726_31(8)>
  _239 = (void *) ivtmp.726_29;
  _16 = MEM[base: _239, offset: 0B];
  if (_16 != 0.0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [49.50%]:
  _228 = (signed long) arraysize_124(D);
  _17 = (float) _228;
  _18 = _16 / _17;
  _237 = (void *) ivtmp.726_29;
  MEM[base: _237, offset: 0B] = _18;

  <bb 11> [99.00%]:
  ivtmp.726_30 = ivtmp.726_29 + 20;
  if (ivtmp.726_30 != _33)
    goto <bb 9>; [98.99%]
  else
    goto <bb 12>; [1.01%]

  <bb 12> [1.00%]:
  _19 = hufftree_125(D) + 5120;
  __builtin_memset (_19, 0, 5120);
  _93 = hufftree_125(D) + 4;
  ivtmp.717_57 = (unsigned long) _93;
  _247 = (unsigned long) hufftree_125(D);
  _245 = _247 + 10244;

  <bb 13> [99.00%]:
  # ivtmp.717_55 = PHI <ivtmp.717_57(12), ivtmp.717_56(15)>
  _91 = (void *) ivtmp.717_55;
  _213 = MEM[base: _91, offset: 0B];
  if (_213 == 0.0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [49.50%]:
  _249 = (void *) ivtmp.717_55;
  MEM[base: _249, offset: 12B] = -1;
  _61 = (void *) ivtmp.717_55;
  MEM[base: _61, offset: 8B] = -1;

  <bb 15> [99.00%]:
  # cstore_200 = PHI <32000(13), -1(14)>
  _148 = (void *) ivtmp.717_55;
  MEM[base: _148, offset: 4B] = cstore_200;
  ivtmp.717_56 = ivtmp.717_55 + 20;
  if (ivtmp.717_56 != _245)
    goto <bb 13>; [98.99%]
  else
    goto <bb 16>; [1.01%]

  <bb 16> [1.00%]:
  _145 = hufftree_125(D) + 5124;
  ivtmp.706_193 = (unsigned long) _145;

  <bb 17> [6.93%]:
  # ivtmp.704_181 = PHI <256(16), ivtmp.704_304(30)>
  # ivtmp.706_303 = PHI <ivtmp.706_193(16), ivtmp.706_302(30)>
  _107 = ivtmp.704_181 + 4294967295;
  _54 = (int) _107;
  root_85 = _54;
  _315 = hufftree_125(D) + 4;
  ivtmp.688_172 = (unsigned long) _315;
  _179 = (int) ivtmp.704_181;

  <bb 18> [39.25%]:
  # i_257 = PHI <0(17), i_232(21)>
  # lowfreq1_256 = PHI <2.0e+0(17), lowfreq1_234(21)>
  # lowidx1_255 = PHI <-1(17), lowidx1_233(21)>
  # ivtmp.688_357 = PHI <ivtmp.688_172(17), ivtmp.688_171(21)>
  _180 = (void *) ivtmp.688_357;
  _238 = MEM[base: _180, offset: 4B];
  if (_238 < 0)
    goto <bb 19>; [36.00%]
  else
    goto <bb 21>; [64.00%]

  <bb 19> [14.13%]:
  _311 = (void *) ivtmp.688_357;
  _236 = MEM[base: _311, offset: 0B];
  if (_236 < lowfreq1_256)
    goto <bb 20>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 20> [7.07%]:

  <bb 21> [39.25%]:
  # lowfreq1_234 = PHI <lowfreq1_256(18), lowfreq1_256(19), _236(20)>
  # lowidx1_233 = PHI <lowidx1_255(18), lowidx1_255(19), i_257(20)>
  i_232 = i_257 + 1;
  ivtmp.688_171 = ivtmp.688_357 + 20;
  if (i_232 != _179)
    goto <bb 18>; [82.35%]
  else
    goto <bb 22>; [17.65%]

  <bb 22> [6.93%]:
  # lowfreq1_219 = PHI <lowfreq1_234(21)>
  # lowidx1_385 = PHI <lowidx1_233(21)>
  if (lowidx1_385 == -1)
    goto <bb 23>; [7.50%]
  else
    goto <bb 24>; [92.50%]

  <bb 23> [1.00%]:
  # root_345 = PHI <root_85(29), root_85(22)>
  if (arraysize_124(D) != 0)
    goto <bb 31>; [85.00%]
  else
    goto <bb 44>; [15.00%]

  <bb 24> [6.41%]:
  _164 = hufftree_125(D) + 4;
  ivtmp.680_163 = (unsigned long) _164;
  _355 = (int) ivtmp.704_181;

  <bb 25> [36.31%]:
  # i_279 = PHI <0(24), i_266(28)>
  # lowfreq2_278 = PHI <2.0e+0(24), lowfreq2_268(28)>
  # lowidx2_277 = PHI <-1(24), lowidx2_267(28)>
  # ivtmp.680_63 = PHI <ivtmp.680_163(24), ivtmp.680_162(28)>
  _356 = (void *) ivtmp.680_63;
  _273 = MEM[base: _356, offset: 4B];
  _272 = lowidx1_385 != i_279;
  _271 = _273 < 0;
  _270 = _271 & _272;
  if (_270 != 0)
    goto <bb 26>; [35.63%]
  else
    goto <bb 28>; [64.37%]

  <bb 26> [12.93%]:
  _352 = (void *) ivtmp.680_63;
  _269 = MEM[base: _352, offset: 0B];
  if (_269 < lowfreq2_278)
    goto <bb 27>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 27> [6.47%]:

  <bb 28> [36.31%]:
  # lowfreq2_268 = PHI <lowfreq2_278(25), lowfreq2_278(26), _269(27)>
  # lowidx2_267 = PHI <lowidx2_277(25), lowidx2_277(26), i_279(27)>
  i_266 = i_279 + 1;
  ivtmp.680_162 = ivtmp.680_63 + 20;
  if (i_266 != _355)
    goto <bb 25>; [82.35%]
  else
    goto <bb 29>; [17.65%]

  <bb 29> [6.41%]:
  # lowfreq2_386 = PHI <lowfreq2_268(28)>
  # lowidx2_384 = PHI <lowidx2_267(28)>
  if (lowidx2_384 == -1)
    goto <bb 23>; [7.50%]
  else
    goto <bb 30>; [92.50%]

  <bb 30> [5.93%]:
  root_126 = (int) ivtmp.704_181;
  _34 = (long unsigned int) lowidx1_385;
  _35 = _34 * 20;
  _36 = hufftree_125(D) + _35;
  _36->parent = root_126;
  _37 = (long unsigned int) lowidx2_384;
  _38 = _37 * 20;
  _39 = hufftree_125(D) + _38;
  _39->parent = root_126;
  _43 = lowfreq1_219 + lowfreq2_386;
  _143 = (void *) ivtmp.706_303;
  MEM[base: _143, offset: 0B] = _43;
  _221 = (void *) ivtmp.706_303;
  MEM[base: _221, offset: 8B] = lowidx1_385;
  _206 = (void *) ivtmp.706_303;
  MEM[base: _206, offset: 12B] = lowidx2_384;
  _205 = (void *) ivtmp.706_303;
  MEM[base: _205, offset: 4B] = -2;
  ivtmp.704_304 = ivtmp.704_181 + 1;
  ivtmp.706_302 = ivtmp.706_303 + 20;
  goto <bb 17>; [100.00%]

  <bb 31> [0.85%]:
  ivtmp.676_202 = (unsigned long) plaintext_141(D);
  _211 = (unsigned long) plaintext_141(D);
  _62 = arraysize_124(D) + _211;

  <bb 32> [5.67%]:
  # bitoffset_225 = PHI <bitoffset_226(42), 0(31)>
  # ivtmp.676_301 = PHI <ivtmp.676_372(42), ivtmp.676_202(31)>
  _207 = (void *) ivtmp.676_301;
  _53 = MEM[base: _207, offset: 0B];
  c_142 = (int) _53;
  _78 = (long unsigned int) _53;
  _235 = _78 * 20;
  _77 = hufftree_125(D) + _235;
  _76 = _77->parent;
  if (_76 != -2)
    goto <bb 33>; [85.00%]
  else
    goto <bb 42>; [15.00%]

  <bb 33> [32.11%]:
  # _300 = PHI <_76(32), _289(35)>
  # bitstringlen_299 = PHI <0(32), bitstringlen_290(35)>
  # c_298 = PHI <c_142(32), _300(35)>
  _296 = (long unsigned int) _300;
  _295 = _296 * 20;
  _294 = hufftree_125(D) + _295;
  _293 = _294->left;
  if (_293 == c_298)
    goto <bb 35>; [34.00%]
  else
    goto <bb 34>; [66.00%]

  <bb 34> [21.19%]:

  <bb 35> [32.11%]:
  # cstore_292 = PHI <48(33), 49(34)>
  _280 = (sizetype) bitstringlen_299;
  MEM[symbol: bitstring, index: _280, offset: 0B] = cstore_292;
  bitstringlen_290 = bitstringlen_299 + 1;
  _289 = _294->parent;
  if (_289 != -2)
    goto <bb 33>; [85.00%]
  else
    goto <bb 36>; [15.00%]

  <bb 36> [4.82%]:
  # bitstringlen_383 = PHI <bitstringlen_290(35)>
  # bitstringlen_382 = PHI <bitstringlen_299(35)>
  if (bitstringlen_383 != 0)
    goto <bb 37>; [95.77%]
  else
    goto <bb 42>; [4.23%]

  <bb 37> [32.11%]:
  # bitoffset_371 = PHI <bitoffset_225(36), bitoffset_330(40)>
  # bitstringlen_369 = PHI <bitstringlen_382(36), bitstringlen_329(40)>
  _258 = (sizetype) bitstringlen_369;
  _368 = MEM[symbol: bitstring, index: _258, offset: 0B];
  _367 = (unsigned int) bitoffset_371;
  byteoffset_366 = _367 >> 3;
  bitoffset.165_362 = (int) bitoffset_371;
  bitnumb_361 = bitoffset.165_362 & 7;
  _360 = (sizetype) byteoffset_366;
  _359 = comparray_137(D) + _360;
  pretmp_358 = MEM[(u8 *)_359];
  _351 = (signed char) pretmp_358;
  _350 = 1 << bitnumb_361;
  _349 = (signed char) _350;
  if (_368 == 49)
    goto <bb 38>; [34.00%]
  else
    goto <bb 39>; [66.00%]

  <bb 38> [10.92%]:
  _341 = _351 | _349;
  _340 = (unsigned char) _341;
  MEM[(u8 *)_359] = _340;
  goto <bb 40>; [100.00%]

  <bb 39> [21.19%]:
  _348 = ~_349;
  _347 = _351 & _348;
  _343 = (unsigned char) _347;
  MEM[(u8 *)_359] = _343;

  <bb 40> [32.11%]:
  bitoffset_330 = bitoffset_371 + 1;
  bitstringlen_329 = bitstringlen_369 + -1;
  if (bitstringlen_329 != -1(OVF))
    goto <bb 37>; [85.00%]
  else
    goto <bb 41>; [15.00%]

  <bb 41> [4.82%]:
  _379 = bitoffset_225 + 1;
  bitoffset_381 = _379 + bitstringlen_382;

  <bb 42> [5.67%]:
  # bitoffset_226 = PHI <bitoffset_381(41), bitoffset_225(36), bitoffset_225(32)>
  ivtmp.676_372 = ivtmp.676_301 + 1;
  if (ivtmp.676_372 != _62)
    goto <bb 32>; [85.00%]
  else
    goto <bb 43>; [15.00%]

  <bb 43> [0.85%]:
  # bitoffset_378 = PHI <bitoffset_226(42)>

  <bb 44> [1.00%]:
  # bitoffset_224 = PHI <bitoffset_378(43), 0(23)>
  _45 = (long unsigned int) root_345;
  _196 = _45 * 20;
  _49 = hufftree_125(D) + _196;
  ivtmp.658_153 = (unsigned long) decomparray_134(D);

  <bb 45> [6.67%]:
  # bitoffset_96 = PHI <0(44), bitoffset_209(49)>
  # ivtmp.658_320 = PHI <ivtmp.658_153(44), ivtmp.658_288(49)>
  _197 = _49->left;
  if (_197 != -1)
    goto <bb 46>; [85.00%]
  else
    goto <bb 49>; [15.00%]

  <bb 46> [37.78%]:
  # _102 = PHI <_68(48), _49(45)>
  # _222 = PHI <_69(48), _197(45)>
  # bitoffset_208 = PHI <bitoffset_140(48), bitoffset_96(45)>
  _65 = (unsigned int) bitoffset_208;
  byteoffset_182 = _65 >> 3;
  bitoffset.166_183 = (int) bitoffset_208;
  bitnumb_184 = bitoffset.166_183 & 7;
  _185 = 1 << bitnumb_184;
  _186 = (sizetype) byteoffset_182;
  _187 = comparray_137(D) + _186;
  _188 = *_187;
  _189 = (int) _188;
  _190 = _189 & _185;
  if (_190 == 0)
    goto <bb 48>; [50.00%]
  else
    goto <bb 47>; [50.00%]

  <bb 47> [18.89%]:
  i_139 = _102->right;

  <bb 48> [37.78%]:
  # i_82 = PHI <_222(46), i_139(47)>
  bitoffset_140 = bitoffset_208 + 1;
  _66 = (long unsigned int) i_82;
  _67 = _66 * 20;
  _68 = hufftree_125(D) + _67;
  _69 = _68->left;
  if (_69 != -1)
    goto <bb 46>; [85.00%]
  else
    goto <bb 49>; [15.00%]

  <bb 49> [6.67%]:
  # _138 = PHI <_68(48), _49(45)>
  # bitoffset_209 = PHI <bitoffset_140(48), bitoffset_96(45)>
  _70 = _138->c;
  _73 = (char) _70;
  _231 = (void *) ivtmp.658_320;
  MEM[base: _231, offset: 0B] = _73;
  ivtmp.658_288 = ivtmp.658_320 + 1;
  if (bitoffset_209 < bitoffset_224)
    goto <bb 45>; [85.00%]
  else
    goto <bb 50>; [15.00%]

  <bb 50> [1.18%]:
  # nloops_75 = PHI <nloops_119(D)(2), nloops_120(49)>
  nloops_120 = nloops_75 + 18446744073709551615;
  if (nloops_120 != 18446744073709551615)
    goto <bb 3>; [85.00%]
  else
    goto <bb 51>; [15.00%]

  <bb 51> [0.18%]:
  _122 = StopStopwatch (elapsed_118);
  bitstring ={v} {CLOBBER};
  return _122;

}



;; Function DoNNetIteration (DoNNetIteration, funcdef_no=96, decl_uid=4703, cgraph_uid=96, symbol_order=121)

;; 31 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158
;;
;; Loop 1
;;  header 149, latch 147
;;  depth 1, outer 0
;;  nodes: 149 147 145 146 153 158 75 73 74 72 71 67 65 64 66 70 69 68 63 62 61 57 58 59 60 56 52 53 54 55 51 47 48 49 50 46 42 43 44 45 41 37 38 39 40 36 32 33 34 35 31 27 28 29 30 26 23 24 25 22 21 20 18 17 19 16 15 14 13 148 12 11 8 7 6 10 9 4 3 5 150 156 102 154 141 139 140 138 137 136 134 135 133 132 131 129 130 128 127 126 124 125 123 122 121 119 120 118 117 116 114 115 113 112 111 109 110 108 107 106 104 105 103 157 152 78 81 84 87 90 93 96 99 97 98 94 95 91 92 88 89 85 86 82 83 79 80 76 77 101 100 155 144 143 142
;;
;; Loop 2
;;  header 148, latch 147
;;  depth 2, outer 1
;;  nodes: 148 147 145 146 153 158 75 73 74 72 71 67 65 64 66 70 69 68 63 62 61 57 58 59 60 56 52 53 54 55 51 47 48 49 50 46 42 43 44 45 41 37 38 39 40 36 32 33 34 35 31 27 28 29 30 26 23 24 25 22 21 20 18 17 19 16 15 14 13 156 102 154 141 139 140 138 137 136 134 135 133 132 131 129 130 128 127 126 124 125 123 122 121 119 120 118 117 116 114 115 113 112 111 109 110 108 107 106 104 105 103 157 152 78 81 84 87 90 93 96 99 97 98 94 95 91 92 88 89 85 86 82 83 79 80 76 77 101 100 155 144 143 142
;;
;; Loop 3
;;  header 14, latch 71
;;  depth 3, outer 2
;;  nodes: 14 71 67 65 64 66 70 69 68 63 62 61 57 58 59 60 56 52 53 54 55 51 47 48 49 50 46 42 43 44 45 41 37 38 39 40 36 32 33 34 35 31 27 28 29 30 26 23 24 25 22 21 20 18 17 19 16 15
;;
;; Loop 23
;;  header 68, latch 67
;;  depth 4, outer 3
;;  nodes: 68 67 65 64 66 70 69
;;
;; Loop 24
;;  header 66, latch 66
;;  depth 5, outer 23
;;  nodes: 66
;;
;; Loop 25
;;  header 62, latch 62
;;  depth 4, outer 3
;;  nodes: 62
;;
;; Loop 14
;;  header 21, latch 21
;;  depth 4, outer 3
;;  nodes: 21
;;
;; Loop 16
;;  header 19, latch 18
;;  depth 4, outer 3
;;  nodes: 19 18 17
;;
;; Loop 17
;;  header 17, latch 17
;;  depth 5, outer 16
;;  nodes: 17
;;
;; Loop 20
;;  header 15, latch 15
;;  depth 4, outer 3
;;  nodes: 15
;;
;; Loop 6
;;  header 11, latch 11
;;  depth 2, outer 1
;;  nodes: 11
;;
;; Loop 8
;;  header 10, latch 7
;;  depth 2, outer 1
;;  nodes: 10 7 6
;;
;; Loop 9
;;  header 6, latch 6
;;  depth 3, outer 8
;;  nodes: 6
;;
;; Loop 10
;;  header 5, latch 4
;;  depth 2, outer 1
;;  nodes: 5 4 3
;;
;; Loop 11
;;  header 3, latch 3
;;  depth 3, outer 10
;;  nodes: 3
;; 2 succs { 149 }
;; 3 succs { 3 4 }
;; 4 succs { 5 9 }
;; 5 succs { 3 }
;; 6 succs { 6 7 }
;; 7 succs { 10 8 }
;; 8 succs { 11 }
;; 9 succs { 10 }
;; 10 succs { 6 }
;; 11 succs { 11 12 }
;; 12 succs { 148 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 15 16 }
;; 16 succs { 19 }
;; 17 succs { 17 18 }
;; 18 succs { 19 20 }
;; 19 succs { 17 }
;; 20 succs { 21 }
;; 21 succs { 21 22 }
;; 22 succs { 25 23 }
;; 23 succs { 24 26 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 29 27 }
;; 27 succs { 28 31 }
;; 28 succs { 31 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 34 32 }
;; 32 succs { 33 36 }
;; 33 succs { 36 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 39 37 }
;; 37 succs { 38 41 }
;; 38 succs { 41 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 44 42 }
;; 42 succs { 43 46 }
;; 43 succs { 46 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 49 47 }
;; 47 succs { 48 51 }
;; 48 succs { 51 }
;; 49 succs { 50 51 }
;; 50 succs { 51 }
;; 51 succs { 54 52 }
;; 52 succs { 53 56 }
;; 53 succs { 56 }
;; 54 succs { 55 56 }
;; 55 succs { 56 }
;; 56 succs { 59 57 }
;; 57 succs { 58 61 }
;; 58 succs { 61 }
;; 59 succs { 60 61 }
;; 60 succs { 61 }
;; 61 succs { 62 }
;; 62 succs { 62 63 }
;; 63 succs { 68 }
;; 64 succs { 65 67 }
;; 65 succs { 67 }
;; 66 succs { 66 64 }
;; 67 succs { 68 71 }
;; 68 succs { 69 70 }
;; 69 succs { 70 }
;; 70 succs { 66 }
;; 71 succs { 14 72 }
;; 72 succs { 73 153 }
;; 73 succs { 74 75 }
;; 74 succs { 75 }
;; 75 succs { 76 158 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 79 157 }
;; 79 succs { 80 81 }
;; 80 succs { 81 }
;; 81 succs { 82 157 }
;; 82 succs { 83 84 }
;; 83 succs { 84 }
;; 84 succs { 85 157 }
;; 85 succs { 86 87 }
;; 86 succs { 87 }
;; 87 succs { 88 157 }
;; 88 succs { 89 90 }
;; 89 succs { 90 }
;; 90 succs { 91 157 }
;; 91 succs { 92 93 }
;; 92 succs { 93 }
;; 93 succs { 94 157 }
;; 94 succs { 95 96 }
;; 95 succs { 96 }
;; 96 succs { 97 157 }
;; 97 succs { 98 99 }
;; 98 succs { 99 }
;; 99 succs { 100 157 }
;; 100 succs { 101 152 }
;; 101 succs { 152 }
;; 102 succs { 146 }
;; 103 succs { 104 }
;; 104 succs { 105 106 }
;; 105 succs { 106 }
;; 106 succs { 107 108 }
;; 107 succs { 109 102 }
;; 108 succs { 109 145 }
;; 109 succs { 110 111 }
;; 110 succs { 111 }
;; 111 succs { 112 113 }
;; 112 succs { 114 102 }
;; 113 succs { 114 145 }
;; 114 succs { 115 116 }
;; 115 succs { 116 }
;; 116 succs { 117 118 }
;; 117 succs { 119 102 }
;; 118 succs { 119 145 }
;; 119 succs { 120 121 }
;; 120 succs { 121 }
;; 121 succs { 122 123 }
;; 122 succs { 124 102 }
;; 123 succs { 124 145 }
;; 124 succs { 125 126 }
;; 125 succs { 126 }
;; 126 succs { 127 128 }
;; 127 succs { 129 102 }
;; 128 succs { 129 145 }
;; 129 succs { 130 131 }
;; 130 succs { 131 }
;; 131 succs { 132 133 }
;; 132 succs { 134 102 }
;; 133 succs { 134 145 }
;; 134 succs { 135 136 }
;; 135 succs { 136 }
;; 136 succs { 137 138 }
;; 137 succs { 139 102 }
;; 138 succs { 139 145 }
;; 139 succs { 140 141 }
;; 140 succs { 141 }
;; 141 succs { 154 142 }
;; 142 succs { 143 145 }
;; 143 succs { 144 155 }
;; 144 succs { 155 }
;; 145 succs { 102 147 }
;; 146 succs { 147 }
;; 147 succs { 148 149 }
;; 148 succs { 13 156 }
;; 149 succs { 150 151 }
;; 150 succs { 5 }
;; 151 succs { 1 }
;; 152 succs { 157 }
;; 153 succs { 147 }
;; 154 succs { 143 146 }
;; 155 succs { 102 145 }
;; 156 succs { 153 }
;; 157 succs { 104 103 }
;; 158 succs { 102 147 }
DoNNetIteration (long unsigned int nloops)
{
  unsigned long ivtmp.1020;
  unsigned long ivtmp.1013;
  unsigned long ivtmp.1006;
  unsigned long ivtmp.994;
  unsigned long ivtmp.991;
  unsigned long ivtmp.990;
  sizetype ivtmp.983;
  unsigned long ivtmp.981;
  unsigned long ivtmp.978;
  sizetype ivtmp.977;
  unsigned long ivtmp.971;
  unsigned long ivtmp.970;
  unsigned long ivtmp.963;
  unsigned long ivtmp.962;
  sizetype ivtmp.955;
  unsigned long ivtmp.946;
  unsigned long ivtmp.945;
  unsigned long ivtmp.937;
  unsigned long ivtmp.936;
  unsigned long ivtmp.935;
  unsigned long ivtmp.934;
  sizetype ivtmp.924;
  unsigned long ivtmp.923;
  unsigned long ivtmp.917;
  sizetype ivtmp.904;
  unsigned int ivtmp.900;
  vector(2) double * vectp.899;
  vector(2) double * vectp_out_wt_cum_change.898;
  vector(2) double vect__389.897;
  vector(2) double vect__388.896;
  vector(2) double vect__388.895;
  vector(2) double vect__388.894;
  vector(2) double vect__388.893;
  vector(2) double * vectp.892;
  vector(2) double * vectp_out_wt_cum_change.891;
  vector(2) double vect_delta_384.890;
  vector(2) double vect__383.889;
  vector(2) double vect__382.888;
  vector(2) double vect__382.887;
  vector(2) double vect__382.886;
  vector(2) double vect__382.885;
  vector(2) double * vectp.884;
  vector(2) double * vectp_out_wt_change.883;
  vector(2) double * vectp.882;
  vector(2) double * vectp_out_wts.881;
  vector(2) double vect__386.880;
  vector(2) double vect__385.879;
  vector(2) double vect__385.878;
  vector(2) double vect__385.877;
  vector(2) double vect__385.876;
  vector(2) double * vectp.875;
  vector(2) double * vectp_out_wts.874;
  vector(2) double vect_delta_384.873;
  vector(2) double vect__383.872;
  vector(2) double vect__382.871;
  vector(2) double vect__382.870;
  vector(2) double vect__382.869;
  vector(2) double vect__382.868;
  vector(2) double * vectp.867;
  vector(2) double * vectp_out_wt_change.866;
  vector(2) double * vectp.865;
  vector(2) double * vectp_mid_error.864;
  vector(2) double vect__855.863;
  vector(2) double vect__854.862;
  vector(2) double vect__853.861;
  vector(2) double vect__852.860;
  vector(2) double vect__852.859;
  vector(2) double vect__852.858;
  vector(2) double vect__852.857;
  vector(2) double * vectp.856;
  vector(2) double * vectp_mid_out.855;
  vector(2) double vect__852.854;
  vector(2) double vect__852.853;
  vector(2) double vect__852.852;
  vector(2) double vect__852.851;
  vector(2) double * vectp.850;
  vector(2) double * vectp_mid_out.849;
  vector(2) double vect_sum_851.848;
  vector(2) double vect__850.847;
  vector(2) double vect__848.846;
  vector(2) double vect__848.845;
  vector(2) double vect__848.844;
  vector(2) double vect__848.843;
  vector(2) double * vectp.842;
  vector(2) double * vectp_out_wts.841;
  vector(2) double vect_sum_847.840;
  vector(2) double vect__846.839;
  vector(2) double vect__844.838;
  vector(2) double vect__844.837;
  vector(2) double vect__844.836;
  vector(2) double vect__844.835;
  vector(2) double * vectp.834;
  vector(2) double * vectp_out_wts.833;
  vector(2) double vect_sum_843.832;
  vector(2) double vect__842.831;
  vector(2) double vect__840.830;
  vector(2) double vect__840.829;
  vector(2) double vect__840.828;
  vector(2) double vect__840.827;
  vector(2) double * vectp.826;
  vector(2) double * vectp_out_wts.825;
  vector(2) double vect_sum_839.824;
  vector(2) double vect__838.823;
  vector(2) double vect__836.822;
  vector(2) double vect__836.821;
  vector(2) double vect__836.820;
  vector(2) double vect__836.819;
  vector(2) double * vectp.818;
  vector(2) double * vectp_out_wts.817;
  vector(2) double vect_sum_835.816;
  vector(2) double vect__834.815;
  vector(2) double vect__832.814;
  vector(2) double vect__832.813;
  vector(2) double vect__832.812;
  vector(2) double vect__832.811;
  vector(2) double * vectp.810;
  vector(2) double * vectp_out_wts.809;
  vector(2) double vect_sum_831.808;
  vector(2) double vect__830.807;
  vector(2) double vect__828.806;
  vector(2) double vect__828.805;
  vector(2) double vect__828.804;
  vector(2) double vect__828.803;
  vector(2) double * vectp.802;
  vector(2) double * vectp_out_wts.801;
  vector(2) double vect_sum_827.800;
  vector(2) double vect__826.799;
  vector(2) double vect__824.798;
  vector(2) double vect__824.797;
  vector(2) double vect__824.796;
  vector(2) double vect__824.795;
  vector(2) double * vectp.794;
  vector(2) double * vectp_out_wts.793;
  vector(2) double vect_sum_823.792;
  vector(2) double vect__822.791;
  vector(2) double vect__820.790;
  vector(2) double vect__820.789;
  vector(2) double vect__820.788;
  vector(2) double vect__820.787;
  vector(2) double * vectp.786;
  vector(2) double * vectp_out_wts.785;
  vector(2) double * vectp.784;
  vector(2) double * vectp_out_wt_cum_change.783;
  vector(2) double * vectp.782;
  vector(2) double * vectp_out_wt_cum_change.781;
  vector(2) double * vectp.780;
  vector(2) double * vectp_out_wt_change.779;
  vector(2) double * vectp_mid_wt_cum_change.778;
  vector(2) double * vectp_mid_wt_cum_change.777;
  vector(2) double vect__140.776;
  vector(2) double vect__139.775;
  vector(2) double * vectp_mid_wt_cum_change.774;
  vector(2) double * vectp_mid_wt_cum_change.773;
  vector(2) double * vectp_mid_wts.772;
  vector(2) double * vectp_mid_wts.771;
  vector(2) double vect__138.770;
  vector(2) double vect__137.769;
  vector(2) double * vectp_mid_wts.768;
  vector(2) double * vectp_mid_wts.767;
  vector(2) double vect_delta_136.766;
  vector(2) double vect__135.765;
  vector(2) double vect__134.764;
  vector(2) double * vectp_mid_wt_change.763;
  vector(2) double * vectp_mid_wt_change.762;
  vector(2) double vect_delta_133.761;
  vector(2) double vect__132.760;
  vector(2) double * vectp_in_pats.759;
  vector(2) double * vectp_in_pats.758;
  unsigned int tmp.757;
  int tmp.756;
  unsigned int niters_vector_mult_vf.755;
  unsigned int bnd.754;
  unsigned int niters.753;
  sizetype prolog_loop_adjusted_niters.752;
  unsigned int prolog_loop_niters.751;
  vector(2) double * vectp_mid_wts.750;
  int result;
  int i;
  int error;
  int i;
  double sum;
  double error;
  int D.7216;
  int weight;
  int neurode;
  double delta;
  int weight;
  int neurode;
  double delta;
  int neurode;
  double tot_error;
  double sum;
  int i;
  int j;
  double sum;
  int neurode;
  int i;
  double sum;
  int neurode;
  int i;
  int i;
  int neurode;
  double sum;
  int neurode;
  int i;
  double value;
  int i;
  int j;
  int patt;
  long unsigned int elapsed;
  int iteration_count.186_1;
  int _2;
  int numpats.187_3;
  int numpasses.188_4;
  int _5;
  vector(2) double vect_cst__6;
  vector(2) double vect_cst__7;
  int _10;
  int numpasses.188_11;
  long unsigned int _19;
  vector(2) double vect_cst__21;
  double * _34;
  vector(2) double vect_cst__36;
  vector(2) double vect_cst__39;
  vector(2) double vect_cst__42;
  unsigned int _43;
  double _45;
  double _47;
  vector(2) double vect_cst__48;
  vector(2) double vect_cst__49;
  unsigned int _52;
  double _54;
  double _56;
  vector(2) double vect_cst__57;
  vector(2) double vect_cst__58;
  vector(2) double vect_cst__62;
  double * _63;
  double * _65;
  double * _68;
  vector(2) double vect_cst__69;
  vector(2) double vect_cst__70;
  vector(2) double vect_cst__71;
  vector(2) double vect_cst__73;
  vector(2) double vect_cst__74;
  vector(2) double vect_cst__76;
  vector(2) double vect_cst__77;
  vector(2) double vect_cst__78;
  vector(2) double vect_cst__79;
  vector(2) double vect_cst__83;
  double _84;
  double _85;
  double _86;
  _Bool _89;
  _Bool _90;
  double _91;
  double _92;
  double _93;
  int _94;
  vector(2) double vect_cst__97;
  double _98;
  double _99;
  double _100;
  vector(2) double vect_cst__104;
  vector(2) double vect_cst__108;
  vector(2) double vect_cst__111;
  vector(2) double vect_cst__112;
  double * _116;
  vector(2) double vect_cst__117;
  double * _118;
  vector(2) double vect_cst__119;
  vector(2) double vect_cst__120;
  double * _122;
  double _124;
  double * _127;
  vector(2) double vect_cst__128;
  double _129;
  double _130;
  vector(2) double vect_cst__131;
  vector(2) double vect_cst__132;
  vector(2) double vect_cst__133;
  vector(2) double vect_cst__134;
  vector(2) double vect_cst__135;
  vector(2) double vect_cst__136;
  vector(2) double vect_cst__137;
  vector(2) double vect_cst__138;
  vector(2) double vect_cst__139;
  vector(2) double vect_cst__140;
  vector(2) double vect_cst__141;
  vector(2) double vect_cst__143;
  double * _144;
  double * _147;
  double * _149;
  double * _151;
  double * _153;
  double * _154;
  vector(2) double vect_cst__160;
  vector(2) double vect_cst__162;
  double * _163;
  double * _166;
  double * _169;
  double * _172;
  double * _173;
  double * _176;
  double * _177;
  double * _180;
  double * _183;
  double * _185;
  double * _187;
  double * _190;
  double * _194;
  vector(2) double vect_cst__196;
  double * _197;
  double * _200;
  double * _202;
  double * _204;
  vector(2) double vect_cst__207;
  vector(2) double vect_cst__208;
  double * _210;
  vector(2) double vect_cst__218;
  vector(2) double vect_cst__221;
  vector(2) double vect_cst__222;
  vector(2) double vect_cst__229;
  vector(2) double vect_cst__231;
  double * _232;
  double _234;
  vector(2) double vect_cst__236;
  vector(2) double vect_cst__238;
  double * _239;
  double _241;
  double * _243;
  double * _246;
  double _248;
  double * _249;
  double * _250;
  double * _253;
  double _255;
  double * _257;
  double * _260;
  double _262;
  double * _264;
  double * _267;
  double _269;
  double * _274;
  double _276;
  double * _281;
  double * _282;
  double _284;
  double * _287;
  double * _289;
  double _290;
  double _292;
  double * _296;
  double _299;
  double _301;
  double * _305;
  double * _307;
  double _308;
  double _310;
  double * _314;
  vector(2) double vect_cst__315;
  double _317;
  double _319;
  vector(2) double vect_cst__321;
  double * _323;
  vector(2) double vect_cst__324;
  double * _325;
  double _326;
  double _328;
  vector(2) double vect_cst__330;
  double * _332;
  double * _333;
  double _335;
  double _337;
  double * _341;
  double * _342;
  double * _343;
  double _344;
  double _346;
  vector(2) double vect_cst__350;
  double * _351;
  double _353;
  double _355;
  vector(2) double vect_cst__358;
  vector(2) double vect_cst__359;
  double * _360;
  double * _361;
  double _362;
  double _364;
  vector(2) double vect_cst__367;
  vector(2) double vect_cst__368;
  double _371;
  double * _372;
  double * _374;
  double _378;
  double _379;
  double * _380;
  double _382;
  double _383;
  double _385;
  double _386;
  sizetype _387;
  double _388;
  double _389;
  vector(2) double vect_cst__393;
  double * _395;
  double _398;
  double _399;
  double _401;
  double _402;
  void * _403;
  double _404;
  double _405;
  vector(2) double vect_cst__407;
  vector(2) double vect_cst__408;
  double * _410;
  double * _412;
  double _414;
  double _415;
  double _417;
  double _418;
  void * _419;
  double _420;
  double _421;
  vector(2) double vect_cst__423;
  vector(2) double vect_cst__424;
  double * _425;
  double * _427;
  double _430;
  double _431;
  double _433;
  double _434;
  sizetype _435;
  double _436;
  double _437;
  double * _439;
  double _443;
  double _446;
  double _447;
  double _449;
  double _450;
  sizetype _451;
  double _452;
  double _453;
  double * _455;
  double * _457;
  double * _458;
  double _462;
  double _463;
  double _465;
  double _466;
  double _468;
  double _469;
  double * _471;
  double _474;
  double _475;
  double _478;
  double _479;
  double _481;
  double _482;
  double _484;
  double _485;
  double * _487;
  double * _489;
  double * _490;
  double * _492;
  double _494;
  double _495;
  double _497;
  double _498;
  double _500;
  double _501;
  vector(2) double vect_cst__505;
  vector(2) double vect_cst__510;
  double * _511;
  vector(2) double vect_cst__512;
  vector(2) double vect_cst__517;
  double * _519;
  double * _525;
  double * _526;
  double * _533;
  double * _534;
  double * _536;
  double * _539;
  double * _540;
  vector(2) double vect_cst__541;
  vector(2) double vect_cst__542;
  vector(2) double vect_cst__543;
  vector(2) double vect_cst__544;
  vector(2) double vect_cst__548;
  vector(2) double vect_cst__549;
  double * _553;
  sizetype _558;
  vector(2) double vect_cst__560;
  sizetype _561;
  sizetype _562;
  double _564;
  double _565;
  double _566;
  double _570;
  double * _573;
  vector(2) double vect_cst__575;
  vector(2) double vect_cst__576;
  vector(2) double vect_cst__577;
  double _578;
  double _579;
  double _580;
  double _584;
  double * _587;
  vector(2) double vect_cst__589;
  vector(2) double vect_cst__590;
  vector(2) double vect_cst__591;
  double _592;
  double _593;
  double _594;
  double _598;
  double * _601;
  vector(2) double vect_cst__603;
  vector(2) double vect_cst__604;
  vector(2) double vect_cst__605;
  double _606;
  double _607;
  double _608;
  double _612;
  double * _615;
  vector(2) double vect_cst__617;
  vector(2) double vect_cst__618;
  vector(2) double vect_cst__619;
  double _620;
  double _621;
  double _622;
  double _626;
  vector(2) double vect_cst__631;
  vector(2) double vect_cst__632;
  vector(2) double vect_cst__633;
  double _634;
  double _635;
  double _636;
  double _640;
  vector(2) double vect_cst__645;
  vector(2) double vect_cst__646;
  vector(2) double vect_cst__647;
  double _648;
  double _649;
  double _650;
  double _654;
  vector(2) double vect_cst__659;
  vector(2) double vect_cst__660;
  vector(2) double vect_cst__661;
  double _662;
  double _663;
  double _664;
  double _668;
  double * _673;
  double _674;
  double _675;
  double _676;
  double * _679;
  double * _680;
  double _681;
  double _682;
  double _683;
  double * _687;
  double _688;
  double _689;
  double _690;
  double * _693;
  double _695;
  double _696;
  double _697;
  double _702;
  double _703;
  double _704;
  double * _707;
  double _709;
  double _710;
  double _711;
  double _716;
  double _717;
  double _718;
  double * _721;
  vector(2) double vect_cst__722;
  double _723;
  double _724;
  double _725;
  vector(2) double vect_cst__727;
  double * _733;
  double * _735;
  sizetype _736;
  sizetype _737;
  sizetype _738;
  double * _747;
  sizetype _750;
  sizetype _754;
  sizetype _755;
  double * _759;
  double * _762;
  vector(2) double vect_cst__763;
  vector(2) double vect_cst__764;
  double * _767;
  vector(2) double vect_cst__769;
  vector(2) double vect_cst__770;
  double * _771;
  double * _772;
  double * _775;
  double * _778;
  vector(2) double vect_cst__781;
  double * _782;
  double * _783;
  vector(2) double vect_cst__785;
  vector(2) double vect_cst__786;
  vector(2) double vect_cst__788;
  vector(2) double vect_cst__790;
  double * _791;
  double * _792;
  sizetype _793;
  sizetype _794;
  double * _796;
  vector(2) double vect_cst__798;
  sizetype _799;
  double * _801;
  double * _802;
  vector(2) double vect_cst__804;
  double * _806;
  vector(2) double vect_cst__809;
  double * _812;
  vector(2) double vect_cst__814;
  vector(2) double vect_cst__818;
  double _820;
  double _822;
  double _824;
  vector(2) double vect_cst__825;
  double _826;
  double _828;
  double _830;
  double _832;
  double _834;
  double _836;
  double _838;
  double _840;
  sizetype _841;
  double _842;
  double _844;
  sizetype _845;
  double _846;
  double _848;
  sizetype _849;
  double _850;
  double _852;
  double _853;
  double _854;
  double _855;
  double _861;
  double _863;
  double _865;
  vector(2) double vect_cst__866;
  double _867;
  double _869;
  double _871;
  double _873;
  double _875;
  double _877;
  int numpats.187_878;
  double _879;
  double _881;
  double _883;
  double _885;
  sizetype _886;
  double _887;
  double _889;
  sizetype _890;
  double _891;
  double _893;
  double _894;
  double _895;
  double _896;
  sizetype _898;
  double _902;
  double _904;
  double _906;
  double _908;
  double _910;
  double _912;
  double _914;
  double _916;
  double _918;
  double _920;
  double _922;
  double _924;
  double _926;
  double _928;
  double _930;
  double _932;
  double _934;
  double _935;
  double _936;
  double _937;
  double _943;
  double _945;
  double _947;
  double _949;
  double _951;
  int _952;
  double _953;
  double _955;
  double _957;
  double _959;
  double _961;
  double _963;
  double _965;
  double _967;
  vector(2) double vect_cst__968;
  double _969;
  double _971;
  unsigned int ivtmp_972;
  double _973;
  double _975;
  double _976;
  double _977;
  double _978;
  double _984;
  double _985;
  double _986;
  double _988;
  double _989;
  double _990;
  double _992;
  double _994;
  double _996;
  double _997;
  double _998;
  double _1000;
  double _1001;
  double _1002;
  double _1004;
  double _1006;
  double _1008;
  double _1009;
  double _1010;
  double _1012;
  double _1013;
  double _1014;
  double _1016;
  double _1017;
  double _1018;
  double _1019;
  double _1022;
  double _1025;
  unsigned int ivtmp_1026;
  double _1027;
  double _1029;
  double _1031;
  double _1033;
  double _1035;
  double _1037;
  double _1039;
  double _1041;
  double _1043;
  double _1045;
  unsigned int ivtmp_1046;
  double _1047;
  double _1049;
  double _1051;
  double _1053;
  double _1055;
  double _1057;
  double _1058;
  double _1059;
  double _1060;
  vector(2) double vect_cst__1062;
  vector(2) double vect_cst__1063;
  unsigned int _1064;
  unsigned long _1065;
  double _1066;
  unsigned long _1067;
  double _1068;
  double _1070;
  unsigned long _1071;
  double _1072;
  double _1074;
  double _1076;
  double _1078;
  double _1080;
  double _1082;
  double _1084;
  double _1086;
  double _1088;
  double _1090;
  vector(2) double vect_cst__1091;
  double _1092;
  double _1094;
  vector(2) double vect_cst__1095;
  double _1096;
  double _1098;
  double _1099;
  double _1100;
  double _1101;
  vector(2) double vect_cst__1103;
  vector(2) double vect_cst__1104;
  vector(2) double vect_cst__1105;
  double _1107;
  double _1108;
  double _1109;
  double _1111;
  double _1112;
  double _1113;
  double _1115;
  double _1117;
  double _1119;
  double _1120;
  double _1121;
  double _1123;
  double _1124;
  double _1125;
  double _1127;
  double _1129;
  double _1131;
  double _1132;
  double _1133;
  double _1135;
  double _1136;
  double _1137;
  double _1139;
  double _1140;
  double _1141;
  double _1142;
  sizetype _1143;
  double _1145;
  vector(2) double vect_cst__1146;
  double _1148;
  void * _1150;
  double _1151;
  void * _1153;
  double _1154;
  double _1157;
  double _1160;
  double _1163;
  double _1166;
  double _1169;
  vector(2) double vect_cst__1173;
  vector(2) double vect_cst__1174;
  double _1176;
  unsigned long _1178;
  double _1179;
  unsigned long _1181;
  double _1182;
  void * _1184;
  double _1185;
  void * _1187;
  double _1188;
  void * _1190;
  double _1191;
  void * _1193;
  double _1194;
  void * _1196;
  double _1197;
  void * _1199;
  double _1204;
  void * _1206;
  double _1207;
  void * _1209;
  double _1210;
  void * _1212;
  double _1213;
  void * _1215;
  double _1216;
  void * _1218;
  double _1219;
  void * _1221;
  double _1222;
  void * _1224;
  double _1225;
  void * _1227;
  vector(2) double vect_cst__1228;
  vector(2) double vect_cst__1229;
  double _1232;
  void * _1234;
  double _1235;
  void * _1237;
  double _1238;
  void * _1240;
  double _1241;
  void * _1243;
  double _1244;
  void * _1246;
  double _1247;
  void * _1249;
  double _1250;
  void * _1252;
  double _1253;
  void * _1255;
  vector(2) double vect_cst__1256;
  int numpats.187_1258;
  double _1260;
  void * _1262;
  double _1263;
  void * _1265;
  double _1266;
  void * _1268;
  double _1269;
  void * _1271;
  double _1272;
  void * _1274;
  double _1275;
  void * _1277;
  double _1278;
  void * _1280;
  double _1281;
  void * _1283;
  vector(2) double vect_cst__1286;
  double _1288;
  void * _1290;
  double _1291;
  void * _1293;
  double _1294;
  void * _1296;
  double _1297;
  void * _1299;
  double _1300;
  void * _1302;
  double _1303;
  void * _1305;
  double _1306;
  void * _1308;
  double _1309;
  void * _1311;
  int numpats.187_1314;
  double _1316;
  void * _1318;
  double _1319;
  void * _1321;
  double _1322;
  void * _1324;
  double _1325;
  void * _1327;
  double _1328;
  void * _1330;
  double _1331;
  void * _1333;
  double _1334;
  void * _1336;
  double _1337;
  void * _1339;
  double[8][35] * _1340;
  double _1343;
  double _1344;
  void * _1346;
  double _1347;
  void * _1349;
  double _1350;
  void * _1352;
  double _1353;
  double _1356;
  double _1359;
  double _1362;
  double _1365;
  double[8][35] * _1368;
  double * _1369;
  unsigned long _1379;
  unsigned long _1381;
  double * _1389;
  _Bool _1391;
  void * _1399;
  void * _1401;
  void * _1403;
  void * _1405;
  void * _1407;
  double * _1409;
  double[8][35] * _1410;
  void * _1413;
  void * _1415;
  void * _1417;
  void * _1419;
  double * _1429;
  _Bool _1431;
  unsigned long _1445;
  unsigned long _1447;
  double * _1449;
  int _1451;
  unsigned long _1465;
  unsigned long _1466;
  unsigned long _1467;
  double * _1469;
  double _1470;
  unsigned long _1472;
  void * _1473;
  unsigned long _1480;
  unsigned long _1482;
  unsigned long _1484;
  double[10][35] * _1487;
  vector(2) double vect_cst__1489;
  double * _1490;
  double[8][35] * _1491;
  void * _1494;
  double[8][35] * _1497;
  unsigned long _1507;
  double[8][35] * _1509;
  unsigned long _1512;
  unsigned long _1513;
  unsigned long _1514;
  void * _1515;
  void * _1517;
  void * _1519;
  void * _1521;
  double[8][8] * _1522;
  void * _1523;
  sizetype _1524;
  void * _1525;
  void * _1527;
  double _1528;
  double * _1529;
  double * _1531;
  double * _1534;
  double * _1536;
  double * _1538;
  vector(2) double vect_cst__1540;
  vector(2) double vect_cst__1541;
  vector(2) double vect_cst__1542;
  vector(2) double vect_cst__1543;
  double * _1557;
  double * _1559;
  double * _1561;
  vector(2) double vect_cst__1571;
  vector(2) double vect_cst__1572;
  vector(2) double vect_cst__1573;
  vector(2) double vect_cst__1574;
  vector(2) double vect_cst__1579;
  vector(2) double vect_cst__1580;
  vector(2) double vect_cst__1581;
  vector(2) double vect_cst__1582;
  vector(2) double vect_cst__1615;
  vector(2) double vect_cst__1616;
  vector(2) double vect_cst__1617;
  vector(2) double vect_cst__1618;
  vector(2) double vect_cst__1623;
  vector(2) double vect_cst__1624;
  vector(2) double vect_cst__1625;
  vector(2) double vect_cst__1626;

  <bb 2> [0.00%]:
  elapsed_15 = StartStopwatch ();
  _536 = &out_wt_change[0][0] + 16;
  _534 = _536 + 16;
  _492 = _534 + 16;
  _490 = _492 + 16;
  _458 = _490 + 16;
  _427 = _458 + 16;
  _412 = _427 + 16;
  _410 = _412 + 16;
  _395 = _410 + 16;
  _380 = _395 + 16;
  _374 = _380 + 16;
  _372 = _374 + 16;
  _361 = _372 + 16;
  _343 = _361 + 16;
  _325 = _343 + 16;
  _307 = _325 + 16;
  _289 = _307 + 16;
  _282 = _289 + 16;
  _249 = _282 + 16;
  _204 = _249 + 16;
  _202 = _204 + 16;
  _200 = _202 + 16;
  _197 = _200 + 16;
  _194 = _197 + 16;
  _190 = _194 + 16;
  _187 = _190 + 16;
  _185 = _187 + 16;
  _183 = _185 + 16;
  _177 = _183 + 16;
  _169 = _177 + 16;
  _166 = _169 + 16;
  _783 = &out_wt_cum_change[0][0] + 16;
  _778 = _783 + 16;
  _772 = _778 + 16;
  _767 = _772 + 16;
  _762 = _767 + 16;
  _1490 = _762 + 16;
  _1469 = _1490 + 16;
  _1449 = _1469 + 16;
  _1429 = _1449 + 16;
  _1409 = _1429 + 16;
  _1389 = _1409 + 16;
  _1369 = _1389 + 16;
  _812 = _1369 + 16;
  _802 = _812 + 16;
  _792 = _802 + 16;
  _782 = _792 + 16;
  _771 = _782 + 16;
  _759 = _771 + 16;
  _747 = _759 + 16;
  _735 = _747 + 16;
  _721 = _735 + 16;
  _707 = _721 + 16;
  _693 = _707 + 16;
  _679 = _693 + 16;
  _553 = _679 + 16;
  _539 = _553 + 16;
  _525 = _539 + 16;
  _511 = _525 + 16;
  _489 = _511 + 16;
  _457 = _489 + 16;
  _425 = _457 + 16;
  _341 = &out_wt_cum_change[0][0] + 16;
  _332 = _341 + 16;
  _323 = _332 + 16;
  _314 = _323 + 16;
  _305 = _314 + 16;
  _296 = _305 + 16;
  _180 = _296 + 16;
  _281 = _180 + 16;
  _274 = _281 + 16;
  _267 = _274 + 16;
  _260 = _267 + 16;
  _253 = _260 + 16;
  _246 = _253 + 16;
  _239 = _246 + 16;
  _232 = _239 + 16;
  _34 = _232 + 16;
  _287 = _34 + 16;
  _172 = _287 + 16;
  _173 = _172 + 16;
  _176 = _173 + 16;
  _163 = _176 + 16;
  _144 = _163 + 16;
  _147 = _144 + 16;
  _149 = _147 + 16;
  _151 = _149 + 16;
  _153 = _151 + 16;
  _154 = _153 + 16;
  _210 = _154 + 16;
  _63 = _210 + 16;
  _65 = _63 + 16;
  _68 = _65 + 16;
  goto <bb 149>; [100.00%]

  <bb 3> [3.03%]:
  # ivtmp.1013_1506 = PHI <ivtmp.1013_1504(3), ivtmp.1013_1502(5)>
  _43 = abs_randwc (100000);
  value_44 = (double) _43;
  _45 = value_44 / 1.0e+5;
  value_46 = _45 - 5.0e-1;
  _47 = value_46 * 5.0e-1;
  _1494 = (void *) ivtmp.1013_1506;
  MEM[base: _1494, offset: 0B] = _47;
  ivtmp.1013_1504 = ivtmp.1013_1506 + 8;
  if (ivtmp.1013_1504 != _1480)
    goto <bb 3>; [97.14%]
  else
    goto <bb 4>; [2.86%]

  <bb 4> [0.09%]:
  ivtmp.1020_1476 = ivtmp.1020_1478 + 280;
  if (ivtmp.1020_1476 != _1466)
    goto <bb 5>; [87.66%]
  else
    goto <bb 9>; [12.34%]

  <bb 5> [0.09%]:
  # ivtmp.1020_1478 = PHI <ivtmp.1020_1476(4), ivtmp.1020_1474(150)>
  ivtmp.1013_1502 = ivtmp.1020_1478;
  _1484 = (unsigned long) &mid_wts;
  _1482 = _1484 + 280;
  _1480 = ivtmp.1020_1478 + 280;
  goto <bb 3>; [100.00%]

  <bb 6> [0.69%]:
  # ivtmp.994_1377 = PHI <ivtmp.994_1375(6), 0(10)>
  _52 = abs_randwc (100000);
  value_53 = (double) _52;
  _54 = value_53 / 1.0e+4;
  value_55 = _54 - 5.0e-1;
  _56 = value_55 * 5.0e-1;
  _1524 = ivtmp.994_1377 * 8;
  _1522 = (double[8][8] *) ivtmp.1006_1520;
  MEM[base: _1522, index: _1524, offset: 0B] = _56;
  ivtmp.994_1375 = ivtmp.994_1377 + 1;
  if (ivtmp.994_1375 != 8)
    goto <bb 6>; [87.44%]
  else
    goto <bb 7>; [12.56%]

  <bb 7> [0.09%]:
  ivtmp.1006_1518 = ivtmp.1006_1520 + 64;
  if (ivtmp.1006_1518 != _1512)
    goto <bb 10>; [87.66%]
  else
    goto <bb 8>; [12.34%]

  <bb 8> [0.01%]:
  ivtmp.990_1393 = (unsigned long) &mid_wt_change;
  ivtmp.991_1383 = (unsigned long) &mid_wt_cum_change;
  _1381 = (unsigned long) &mid_wt_change;
  _1379 = _1381 + 2240;
  goto <bb 11>; [100.00%]

  <bb 9> [0.01%]:
  ivtmp.1006_1516 = (unsigned long) &out_wts;
  _1514 = (unsigned long) &out_wts;
  _1512 = _1514 + 512;

  <bb 10> [0.09%]:
  # ivtmp.1006_1520 = PHI <ivtmp.1006_1518(7), ivtmp.1006_1516(9)>
  goto <bb 6>; [100.00%]

  <bb 11> [0.09%]:
  # ivtmp.990_1397 = PHI <ivtmp.990_1395(11), ivtmp.990_1393(8)>
  # ivtmp.991_1387 = PHI <ivtmp.991_1385(11), ivtmp.991_1383(8)>
  _1509 = (double[8][35] *) ivtmp.990_1397;
  __builtin_memset (_1509, 0, 280);
  _1491 = (double[8][35] *) ivtmp.991_1387;
  __builtin_memset (_1491, 0, 280);
  ivtmp.990_1395 = ivtmp.990_1397 + 280;
  ivtmp.991_1385 = ivtmp.991_1387 + 280;
  if (ivtmp.990_1395 != _1379)
    goto <bb 11>; [87.66%]
  else
    goto <bb 12>; [12.34%]

  <bb 12> [0.01%]:
  vect_cst__788 = { 0.0, 0.0 };
  vect_cst__798 = { 0.0, 0.0 };
  vect_cst__804 = { 0.0, 0.0 };
  vect_cst__809 = { 0.0, 0.0 };
  vect_cst__814 = { 0.0, 0.0 };
  vect_cst__1228 = { 0.0, 0.0 };
  vect_cst__1229 = { 0.0, 0.0 };
  vect_cst__1256 = { 0.0, 0.0 };
  vect_cst__1489 = { 0.0, 0.0 };
  vect_cst__6 = { 0.0, 0.0 };
  vect_cst__7 = { 0.0, 0.0 };
  vect_cst__21 = { 0.0, 0.0 };
  vect_cst__36 = { 0.0, 0.0 };
  vect_cst__39 = { 0.0, 0.0 };
  vect_cst__42 = { 0.0, 0.0 };
  vect_cst__48 = { 0.0, 0.0 };
  vect_cst__49 = { 0.0, 0.0 };
  vect_cst__57 = { 0.0, 0.0 };
  vect_cst__58 = { 0.0, 0.0 };
  vect_cst__62 = { 0.0, 0.0 };
  vect_cst__69 = { 0.0, 0.0 };
  vect_cst__70 = { 0.0, 0.0 };
  vect_cst__71 = { 0.0, 0.0 };
  vect_cst__73 = { 0.0, 0.0 };
  vect_cst__74 = { 0.0, 0.0 };
  vect_cst__83 = { 0.0, 0.0 };
  vect_cst__97 = { 0.0, 0.0 };
  vect_cst__108 = { 0.0, 0.0 };
  vect_cst__112 = { 0.0, 0.0 };
  vect_cst__128 = { 0.0, 0.0 };
  vect_cst__131 = { 0.0, 0.0 };
  vect_cst__143 = { 0.0, 0.0 };
  vect_cst__541 = { 0.0, 0.0 };
  vect_cst__542 = { 0.0, 0.0 };
  vect_cst__543 = { 0.0, 0.0 };
  vect_cst__544 = { 0.0, 0.0 };
  vect_cst__548 = { 0.0, 0.0 };
  vect_cst__549 = { 0.0, 0.0 };
  vect_cst__207 = { 0.0, 0.0 };
  vect_cst__208 = { 0.0, 0.0 };
  vect_cst__1174 = { 0.0, 0.0 };
  vect_cst__1286 = { 0.0, 0.0 };
  vect_cst__141 = { 0.0, 0.0 };
  vect_cst__140 = { 0.0, 0.0 };
  vect_cst__139 = { 0.0, 0.0 };
  vect_cst__138 = { 0.0, 0.0 };
  vect_cst__137 = { 0.0, 0.0 };
  vect_cst__136 = { 0.0, 0.0 };
  vect_cst__135 = { 0.0, 0.0 };
  vect_cst__134 = { 0.0, 0.0 };
  vect_cst__133 = { 0.0, 0.0 };
  vect_cst__132 = { 0.0, 0.0 };
  vect_cst__968 = { 0.0, 0.0 };
  vect_cst__818 = { 0.0, 0.0 };
  vect_cst__104 = { 0.0, 0.0 };
  vect_cst__1095 = { 0.0, 0.0 };
  vect_cst__1173 = { 0.0, 0.0 };
  vect_cst__1146 = { 0.0, 0.0 };
  vect_cst__1063 = { 0.0, 0.0 };
  vect_cst__1105 = { 0.0, 0.0 };
  vect_cst__1104 = { 0.0, 0.0 };
  vect_cst__1062 = { 0.0, 0.0 };
  vect_cst__1103 = { 0.0, 0.0 };
  vect_cst__1091 = { 0.0, 0.0 };
  MEM[(double *)&out_wt_change] = vect_cst__541;
  MEM[(double *)_536] = vect_cst__542;
  MEM[(double *)_534] = vect_cst__543;
  MEM[(double *)_492] = vect_cst__544;
  MEM[(double *)_490] = vect_cst__548;
  MEM[(double *)_458] = vect_cst__549;
  MEM[(double *)_427] = vect_cst__207;
  MEM[(double *)_412] = vect_cst__208;
  MEM[(double *)_410] = vect_cst__1174;
  MEM[(double *)_395] = vect_cst__1286;
  MEM[(double *)_380] = vect_cst__141;
  MEM[(double *)_374] = vect_cst__140;
  MEM[(double *)_372] = vect_cst__139;
  MEM[(double *)_361] = vect_cst__138;
  MEM[(double *)_343] = vect_cst__137;
  MEM[(double *)_325] = vect_cst__136;
  MEM[(double *)_307] = vect_cst__135;
  MEM[(double *)_289] = vect_cst__134;
  MEM[(double *)_282] = vect_cst__133;
  MEM[(double *)_249] = vect_cst__132;
  MEM[(double *)_204] = vect_cst__968;
  MEM[(double *)_202] = vect_cst__818;
  MEM[(double *)_200] = vect_cst__104;
  MEM[(double *)_197] = vect_cst__1095;
  MEM[(double *)_194] = vect_cst__1173;
  MEM[(double *)_190] = vect_cst__1146;
  MEM[(double *)_187] = vect_cst__1063;
  MEM[(double *)_185] = vect_cst__1105;
  MEM[(double *)_183] = vect_cst__1104;
  MEM[(double *)_177] = vect_cst__1062;
  MEM[(double *)_169] = vect_cst__1103;
  MEM[(double *)_166] = vect_cst__1091;
  MEM[(double *)&out_wt_cum_change] = vect_cst__788;
  MEM[(double *)_783] = vect_cst__798;
  MEM[(double *)_778] = vect_cst__804;
  MEM[(double *)_772] = vect_cst__809;
  MEM[(double *)_767] = vect_cst__814;
  MEM[(double *)_762] = vect_cst__1228;
  MEM[(double *)_1490] = vect_cst__1229;
  MEM[(double *)_1469] = vect_cst__1256;
  MEM[(double *)_1449] = vect_cst__1489;
  MEM[(double *)_1429] = vect_cst__6;
  MEM[(double *)_1409] = vect_cst__7;
  MEM[(double *)_1389] = vect_cst__21;
  MEM[(double *)_1369] = vect_cst__36;
  MEM[(double *)_812] = vect_cst__39;
  MEM[(double *)_802] = vect_cst__42;
  MEM[(double *)_792] = vect_cst__48;
  MEM[(double *)_782] = vect_cst__49;
  MEM[(double *)_771] = vect_cst__57;
  MEM[(double *)_759] = vect_cst__58;
  MEM[(double *)_747] = vect_cst__62;
  MEM[(double *)_735] = vect_cst__69;
  MEM[(double *)_721] = vect_cst__70;
  MEM[(double *)_707] = vect_cst__71;
  MEM[(double *)_693] = vect_cst__73;
  MEM[(double *)_679] = vect_cst__74;
  MEM[(double *)_553] = vect_cst__83;
  MEM[(double *)_539] = vect_cst__97;
  MEM[(double *)_525] = vect_cst__108;
  MEM[(double *)_511] = vect_cst__112;
  MEM[(double *)_489] = vect_cst__128;
  MEM[(double *)_457] = vect_cst__131;
  MEM[(double *)_425] = vect_cst__143;
  iteration_count = 1;
  learned = 0;
  numpasses = 0;
  goto <bb 148>; [100.00%]

  <bb 13> [0.05%]:
  ivtmp.978_1435 = (unsigned long) &in_pats;
  ivtmp.981_1425 = (unsigned long) &out_pats;

  <bb 14> [0.35%]:
  # patt_235 = PHI <patt_32(71), 0(13)>
  # ivtmp.977_1443 = PHI <ivtmp.977_1441(71), 0(13)>
  # ivtmp.978_1439 = PHI <ivtmp.978_1437(71), ivtmp.978_1435(13)>
  # ivtmp.981_1433 = PHI <ivtmp.981_1427(71), ivtmp.981_1425(13)>
  # ivtmp.983_1423 = PHI <ivtmp.983_1421(71), 0(13)>
  worst_error = 0.0;
  ivtmp.970_1459 = (unsigned long) &mid_wt_change;
  ivtmp.971_1453 = (unsigned long) &mid_wt_cum_change;
  _1447 = (unsigned long) &mid_wt_cum_change;
  _1445 = _1447 + 2240;

  <bb 15> [2.78%]:
  # ivtmp.970_1463 = PHI <ivtmp.970_1461(15), ivtmp.970_1459(14)>
  # ivtmp.971_1457 = PHI <ivtmp.971_1455(15), ivtmp.971_1453(14)>
  _1410 = (double[8][35] *) ivtmp.970_1463;
  _1368 = (double[8][35] *) ivtmp.971_1457;
  __builtin_memcpy (_1410, _1368, 280);
  _1340 = (double[8][35] *) ivtmp.971_1457;
  __builtin_memset (_1340, 0, 280);
  ivtmp.970_1461 = ivtmp.970_1463 + 280;
  ivtmp.971_1455 = ivtmp.971_1457 + 280;
  if (ivtmp.971_1455 != _1445)
    goto <bb 15>; [87.49%]
  else
    goto <bb 16>; [12.51%]

  <bb 16> [0.35%]:
  vect_cst__350 = { 0.0, 0.0 };
  vect_cst__358 = { 0.0, 0.0 };
  vect_cst__359 = { 0.0, 0.0 };
  vect_cst__367 = { 0.0, 0.0 };
  vect_cst__368 = { 0.0, 0.0 };
  vect_cst__160 = { 0.0, 0.0 };
  vect_cst__162 = { 0.0, 0.0 };
  vect_cst__575 = { 0.0, 0.0 };
  vect_cst__576 = { 0.0, 0.0 };
  vect_cst__577 = { 0.0, 0.0 };
  vect_cst__589 = { 0.0, 0.0 };
  vect_cst__590 = { 0.0, 0.0 };
  vect_cst__591 = { 0.0, 0.0 };
  vect_cst__603 = { 0.0, 0.0 };
  vect_cst__604 = { 0.0, 0.0 };
  vect_cst__605 = { 0.0, 0.0 };
  vect_cst__617 = { 0.0, 0.0 };
  vect_cst__618 = { 0.0, 0.0 };
  vect_cst__619 = { 0.0, 0.0 };
  vect_cst__631 = { 0.0, 0.0 };
  vect_cst__632 = { 0.0, 0.0 };
  vect_cst__633 = { 0.0, 0.0 };
  vect_cst__645 = { 0.0, 0.0 };
  vect_cst__646 = { 0.0, 0.0 };
  vect_cst__647 = { 0.0, 0.0 };
  vect_cst__659 = { 0.0, 0.0 };
  vect_cst__660 = { 0.0, 0.0 };
  vect_cst__661 = { 0.0, 0.0 };
  vect_cst__120 = { 0.0, 0.0 };
  vect_cst__117 = { 0.0, 0.0 };
  vect_cst__196 = { 0.0, 0.0 };
  vect_cst__393 = { 0.0, 0.0 };
  _1148 = out_wt_cum_change[0][0];
  out_wt_change[0][0] = _1148;
  _1151 = out_wt_cum_change[0][1];
  out_wt_change[0][1] = _1151;
  _1154 = out_wt_cum_change[0][2];
  out_wt_change[0][2] = _1154;
  _1157 = out_wt_cum_change[0][3];
  out_wt_change[0][3] = _1157;
  _1160 = out_wt_cum_change[0][4];
  out_wt_change[0][4] = _1160;
  _1163 = out_wt_cum_change[0][5];
  out_wt_change[0][5] = _1163;
  _1166 = out_wt_cum_change[0][6];
  out_wt_change[0][6] = _1166;
  _1169 = out_wt_cum_change[0][7];
  out_wt_change[0][7] = _1169;
  _1176 = out_wt_cum_change[1][0];
  out_wt_change[1][0] = _1176;
  _1179 = out_wt_cum_change[1][1];
  out_wt_change[1][1] = _1179;
  _1182 = out_wt_cum_change[1][2];
  out_wt_change[1][2] = _1182;
  _1185 = out_wt_cum_change[1][3];
  out_wt_change[1][3] = _1185;
  _1188 = out_wt_cum_change[1][4];
  out_wt_change[1][4] = _1188;
  _1191 = out_wt_cum_change[1][5];
  out_wt_change[1][5] = _1191;
  _1194 = out_wt_cum_change[1][6];
  out_wt_change[1][6] = _1194;
  _1197 = out_wt_cum_change[1][7];
  out_wt_change[1][7] = _1197;
  _1204 = out_wt_cum_change[2][0];
  out_wt_change[2][0] = _1204;
  _1207 = out_wt_cum_change[2][1];
  out_wt_change[2][1] = _1207;
  _1210 = out_wt_cum_change[2][2];
  out_wt_change[2][2] = _1210;
  _1213 = out_wt_cum_change[2][3];
  out_wt_change[2][3] = _1213;
  _1216 = out_wt_cum_change[2][4];
  out_wt_change[2][4] = _1216;
  _1219 = out_wt_cum_change[2][5];
  out_wt_change[2][5] = _1219;
  _1222 = out_wt_cum_change[2][6];
  out_wt_change[2][6] = _1222;
  _1225 = out_wt_cum_change[2][7];
  out_wt_change[2][7] = _1225;
  _1232 = out_wt_cum_change[3][0];
  out_wt_change[3][0] = _1232;
  _1235 = out_wt_cum_change[3][1];
  out_wt_change[3][1] = _1235;
  _1238 = out_wt_cum_change[3][2];
  out_wt_change[3][2] = _1238;
  _1241 = out_wt_cum_change[3][3];
  out_wt_change[3][3] = _1241;
  _1244 = out_wt_cum_change[3][4];
  out_wt_change[3][4] = _1244;
  _1247 = out_wt_cum_change[3][5];
  out_wt_change[3][5] = _1247;
  _1250 = out_wt_cum_change[3][6];
  out_wt_change[3][6] = _1250;
  _1253 = out_wt_cum_change[3][7];
  out_wt_change[3][7] = _1253;
  _1260 = out_wt_cum_change[4][0];
  out_wt_change[4][0] = _1260;
  _1263 = out_wt_cum_change[4][1];
  out_wt_change[4][1] = _1263;
  _1266 = out_wt_cum_change[4][2];
  out_wt_change[4][2] = _1266;
  _1269 = out_wt_cum_change[4][3];
  out_wt_change[4][3] = _1269;
  _1272 = out_wt_cum_change[4][4];
  out_wt_change[4][4] = _1272;
  _1275 = out_wt_cum_change[4][5];
  out_wt_change[4][5] = _1275;
  _1278 = out_wt_cum_change[4][6];
  out_wt_change[4][6] = _1278;
  _1281 = out_wt_cum_change[4][7];
  out_wt_change[4][7] = _1281;
  _1288 = out_wt_cum_change[5][0];
  out_wt_change[5][0] = _1288;
  _1291 = out_wt_cum_change[5][1];
  out_wt_change[5][1] = _1291;
  _1294 = out_wt_cum_change[5][2];
  out_wt_change[5][2] = _1294;
  _1297 = out_wt_cum_change[5][3];
  out_wt_change[5][3] = _1297;
  _1300 = out_wt_cum_change[5][4];
  out_wt_change[5][4] = _1300;
  _1303 = out_wt_cum_change[5][5];
  out_wt_change[5][5] = _1303;
  _1306 = out_wt_cum_change[5][6];
  out_wt_change[5][6] = _1306;
  _1309 = out_wt_cum_change[5][7];
  out_wt_change[5][7] = _1309;
  _1316 = out_wt_cum_change[6][0];
  out_wt_change[6][0] = _1316;
  _1319 = out_wt_cum_change[6][1];
  out_wt_change[6][1] = _1319;
  _1322 = out_wt_cum_change[6][2];
  out_wt_change[6][2] = _1322;
  _1325 = out_wt_cum_change[6][3];
  out_wt_change[6][3] = _1325;
  _1328 = out_wt_cum_change[6][4];
  out_wt_change[6][4] = _1328;
  _1331 = out_wt_cum_change[6][5];
  out_wt_change[6][5] = _1331;
  _1334 = out_wt_cum_change[6][6];
  out_wt_change[6][6] = _1334;
  _1337 = out_wt_cum_change[6][7];
  out_wt_change[6][7] = _1337;
  _1344 = out_wt_cum_change[7][0];
  out_wt_change[7][0] = _1344;
  _1347 = out_wt_cum_change[7][1];
  out_wt_change[7][1] = _1347;
  _1350 = out_wt_cum_change[7][2];
  out_wt_change[7][2] = _1350;
  _1353 = out_wt_cum_change[7][3];
  out_wt_change[7][3] = _1353;
  _1356 = out_wt_cum_change[7][4];
  out_wt_change[7][4] = _1356;
  _1359 = out_wt_cum_change[7][5];
  out_wt_change[7][5] = _1359;
  _1362 = out_wt_cum_change[7][6];
  out_wt_change[7][6] = _1362;
  _1365 = out_wt_cum_change[7][7];
  out_wt_change[7][7] = _1365;
  MEM[(double *)&out_wt_cum_change] = vect_cst__350;
  MEM[(double *)_341] = vect_cst__358;
  MEM[(double *)_332] = vect_cst__359;
  MEM[(double *)_323] = vect_cst__367;
  MEM[(double *)_314] = vect_cst__368;
  MEM[(double *)_305] = vect_cst__160;
  MEM[(double *)_296] = vect_cst__162;
  MEM[(double *)_180] = vect_cst__575;
  MEM[(double *)_281] = vect_cst__576;
  MEM[(double *)_274] = vect_cst__577;
  MEM[(double *)_267] = vect_cst__589;
  MEM[(double *)_260] = vect_cst__590;
  MEM[(double *)_253] = vect_cst__591;
  MEM[(double *)_246] = vect_cst__603;
  MEM[(double *)_239] = vect_cst__604;
  MEM[(double *)_232] = vect_cst__605;
  MEM[(double *)_34] = vect_cst__617;
  MEM[(double *)_287] = vect_cst__618;
  MEM[(double *)_172] = vect_cst__619;
  MEM[(double *)_173] = vect_cst__631;
  MEM[(double *)_176] = vect_cst__632;
  MEM[(double *)_163] = vect_cst__633;
  MEM[(double *)_144] = vect_cst__645;
  MEM[(double *)_147] = vect_cst__646;
  MEM[(double *)_149] = vect_cst__647;
  MEM[(double *)_151] = vect_cst__659;
  MEM[(double *)_153] = vect_cst__660;
  MEM[(double *)_154] = vect_cst__661;
  MEM[(double *)_210] = vect_cst__120;
  MEM[(double *)_63] = vect_cst__117;
  MEM[(double *)_65] = vect_cst__196;
  MEM[(double *)_68] = vect_cst__393;
  ivtmp.962_1481 = (unsigned long) &mid_out;
  ivtmp.963_1475 = (unsigned long) &mid_wts;
  _1467 = (unsigned long) &mid_wts;
  _1465 = _1467 + 2240;
  goto <bb 19>; [100.00%]

  <bb 17> [97.22%]:
  # sum_859 = PHI <sum_95(17), 0.0(19)>
  # ivtmp.955_1505 = PHI <ivtmp.955_1503(17), 0(19)>
  _1497 = (double[8][35] *) ivtmp.963_1479;
  _91 = MEM[base: _1497, index: ivtmp.955_1505, offset: 0B];
  _1487 = (double[10][35] *) ivtmp.978_1439;
  _92 = MEM[base: _1487, index: ivtmp.955_1505, offset: 0B];
  _93 = _91 * _92;
  sum_95 = _93 + sum_859;
  ivtmp.955_1503 = ivtmp.955_1505 + 8;
  if (ivtmp.955_1503 != 280)
    goto <bb 17>; [97.14%]
  else
    goto <bb 18>; [2.86%]

  <bb 18> [2.78%]:
  # sum_808 = PHI <sum_95(17)>
  _98 = -sum_808;
  _99 = exp (_98);
  _100 = _99 + 1.0e+0;
  sum_101 = 1.0e+0 / _100;
  _1473 = (void *) ivtmp.962_1485;
  MEM[base: _1473, offset: 0B] = sum_101;
  ivtmp.962_1483 = ivtmp.962_1485 + 8;
  ivtmp.963_1477 = ivtmp.963_1479 + 280;
  if (ivtmp.963_1477 != _1465)
    goto <bb 19>; [87.49%]
  else
    goto <bb 20>; [12.51%]

  <bb 19> [2.78%]:
  # ivtmp.962_1485 = PHI <ivtmp.962_1483(18), ivtmp.962_1481(16)>
  # ivtmp.963_1479 = PHI <ivtmp.963_1477(18), ivtmp.963_1475(16)>
  goto <bb 17>; [100.00%]

  <bb 20> [0.35%]:
  ivtmp.945_1165 = (unsigned long) &out_wts;
  ivtmp.946_1156 = (unsigned long) &out_out;
  _1513 = (unsigned long) &out_wts;
  _1507 = _1513 + 512;

  <bb 21> [2.78%]:
  # ivtmp.945_1171 = PHI <ivtmp.945_1168(21), ivtmp.945_1165(20)>
  # ivtmp.946_1162 = PHI <ivtmp.946_1159(21), ivtmp.946_1156(20)>
  _1153 = (void *) ivtmp.945_1171;
  _674 = MEM[base: _1153, offset: 0B];
  _675 = mid_out[0];
  _676 = _674 * _675;
  sum_677 = _676 + 0.0;
  _1150 = (void *) ivtmp.945_1171;
  _681 = MEM[base: _1150, offset: 8B];
  _682 = mid_out[1];
  _683 = _681 * _682;
  sum_684 = sum_677 + _683;
  _1527 = (void *) ivtmp.945_1171;
  _688 = MEM[base: _1527, offset: 16B];
  _689 = mid_out[2];
  _690 = _688 * _689;
  sum_691 = sum_684 + _690;
  _1525 = (void *) ivtmp.945_1171;
  _695 = MEM[base: _1525, offset: 24B];
  _696 = mid_out[3];
  _697 = _695 * _696;
  sum_698 = sum_691 + _697;
  _1523 = (void *) ivtmp.945_1171;
  _702 = MEM[base: _1523, offset: 32B];
  _703 = mid_out[4];
  _704 = _702 * _703;
  sum_705 = sum_698 + _704;
  _1521 = (void *) ivtmp.945_1171;
  _709 = MEM[base: _1521, offset: 40B];
  _710 = mid_out[5];
  _711 = _709 * _710;
  sum_712 = sum_705 + _711;
  _1519 = (void *) ivtmp.945_1171;
  _716 = MEM[base: _1519, offset: 48B];
  _717 = mid_out[6];
  _718 = _716 * _717;
  sum_719 = sum_712 + _718;
  _1517 = (void *) ivtmp.945_1171;
  _723 = MEM[base: _1517, offset: 56B];
  _724 = mid_out[7];
  _725 = _723 * _724;
  sum_726 = sum_719 + _725;
  _84 = -sum_726;
  _85 = exp (_84);
  _86 = _85 + 1.0e+0;
  sum_87 = 1.0e+0 / _86;
  _1515 = (void *) ivtmp.946_1162;
  MEM[base: _1515, offset: 0B] = sum_87;
  ivtmp.945_1168 = ivtmp.945_1171 + 64;
  ivtmp.946_1159 = ivtmp.946_1162 + 8;
  if (ivtmp.945_1168 != _1507)
    goto <bb 21>; [87.49%]
  else
    goto <bb 22>; [12.51%]

  <bb 22> [0.35%]:
  _1417 = (void *) ivtmp.981_1433;
  _564 = MEM[base: _1417, offset: 0B];
  _565 = out_out[0];
  _566 = _564 - _565;
  out_error[0] = _566;
  if (_566 < 0.0)
    goto <bb 25>; [36.00%]
  else
    goto <bb 23>; [64.00%]

  <bb 23> [0.22%]:
  sum_568 = _566 + 0.0;
  if (_566 > 0.0)
    goto <bb 24>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 24> [0.11%]:
  goto <bb 26>; [100.00%]

  <bb 25> [0.13%]:
  sum_569 = 0.0 - _566;
  _570 = -_566;

  <bb 26> [0.35%]:
  # tot_error_571 = PHI <0.0(23), _566(24), _570(25)>
  # sum_572 = PHI <sum_568(23), sum_568(24), sum_569(25)>
  _1415 = (void *) ivtmp.981_1433;
  _578 = MEM[base: _1415, offset: 8B];
  _579 = out_out[1];
  _580 = _578 - _579;
  out_error[1] = _580;
  if (_580 < 0.0)
    goto <bb 29>; [36.00%]
  else
    goto <bb 27>; [64.00%]

  <bb 27> [0.22%]:
  sum_582 = sum_572 + _580;
  if (tot_error_571 < _580)
    goto <bb 28>; [50.00%]
  else
    goto <bb 31>; [50.00%]

  <bb 28> [0.11%]:
  goto <bb 31>; [100.00%]

  <bb 29> [0.13%]:
  sum_583 = sum_572 - _580;
  _584 = -_580;
  if (tot_error_571 < _584)
    goto <bb 30>; [50.00%]
  else
    goto <bb 31>; [50.00%]

  <bb 30> [0.07%]:

  <bb 31> [0.35%]:
  # tot_error_585 = PHI <tot_error_571(27), _580(28), tot_error_571(29), _584(30)>
  # sum_586 = PHI <sum_582(27), sum_582(28), sum_583(29), sum_583(30)>
  _1413 = (void *) ivtmp.981_1433;
  _592 = MEM[base: _1413, offset: 16B];
  _593 = out_out[2];
  _594 = _592 - _593;
  out_error[2] = _594;
  if (_594 < 0.0)
    goto <bb 34>; [36.00%]
  else
    goto <bb 32>; [64.00%]

  <bb 32> [0.22%]:
  sum_596 = sum_586 + _594;
  if (tot_error_585 < _594)
    goto <bb 33>; [50.00%]
  else
    goto <bb 36>; [50.00%]

  <bb 33> [0.11%]:
  goto <bb 36>; [100.00%]

  <bb 34> [0.13%]:
  sum_597 = sum_586 - _594;
  _598 = -_594;
  if (tot_error_585 < _598)
    goto <bb 35>; [50.00%]
  else
    goto <bb 36>; [50.00%]

  <bb 35> [0.07%]:

  <bb 36> [0.35%]:
  # tot_error_599 = PHI <tot_error_585(32), _594(33), tot_error_585(34), _598(35)>
  # sum_600 = PHI <sum_596(32), sum_596(33), sum_597(34), sum_597(35)>
  _1407 = (void *) ivtmp.981_1433;
  _606 = MEM[base: _1407, offset: 24B];
  _607 = out_out[3];
  _608 = _606 - _607;
  out_error[3] = _608;
  if (_608 < 0.0)
    goto <bb 39>; [36.00%]
  else
    goto <bb 37>; [64.00%]

  <bb 37> [0.22%]:
  sum_610 = sum_600 + _608;
  if (tot_error_599 < _608)
    goto <bb 38>; [50.00%]
  else
    goto <bb 41>; [50.00%]

  <bb 38> [0.11%]:
  goto <bb 41>; [100.00%]

  <bb 39> [0.13%]:
  sum_611 = sum_600 - _608;
  _612 = -_608;
  if (tot_error_599 < _612)
    goto <bb 40>; [50.00%]
  else
    goto <bb 41>; [50.00%]

  <bb 40> [0.07%]:

  <bb 41> [0.35%]:
  # tot_error_613 = PHI <tot_error_599(37), _608(38), tot_error_599(39), _612(40)>
  # sum_614 = PHI <sum_610(37), sum_610(38), sum_611(39), sum_611(40)>
  _1405 = (void *) ivtmp.981_1433;
  _620 = MEM[base: _1405, offset: 32B];
  _621 = out_out[4];
  _622 = _620 - _621;
  out_error[4] = _622;
  if (_622 < 0.0)
    goto <bb 44>; [36.00%]
  else
    goto <bb 42>; [64.00%]

  <bb 42> [0.22%]:
  sum_624 = sum_614 + _622;
  if (tot_error_613 < _622)
    goto <bb 43>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 43> [0.11%]:
  goto <bb 46>; [100.00%]

  <bb 44> [0.13%]:
  sum_625 = sum_614 - _622;
  _626 = -_622;
  if (tot_error_613 < _626)
    goto <bb 45>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 45> [0.07%]:

  <bb 46> [0.35%]:
  # tot_error_627 = PHI <tot_error_613(42), _622(43), tot_error_613(44), _626(45)>
  # sum_628 = PHI <sum_624(42), sum_624(43), sum_625(44), sum_625(45)>
  _1403 = (void *) ivtmp.981_1433;
  _634 = MEM[base: _1403, offset: 40B];
  _635 = out_out[5];
  _636 = _634 - _635;
  out_error[5] = _636;
  if (_636 < 0.0)
    goto <bb 49>; [36.00%]
  else
    goto <bb 47>; [64.00%]

  <bb 47> [0.22%]:
  sum_638 = sum_628 + _636;
  if (tot_error_627 < _636)
    goto <bb 48>; [50.00%]
  else
    goto <bb 51>; [50.00%]

  <bb 48> [0.11%]:
  goto <bb 51>; [100.00%]

  <bb 49> [0.13%]:
  sum_639 = sum_628 - _636;
  _640 = -_636;
  if (tot_error_627 < _640)
    goto <bb 50>; [50.00%]
  else
    goto <bb 51>; [50.00%]

  <bb 50> [0.07%]:

  <bb 51> [0.35%]:
  # tot_error_641 = PHI <tot_error_627(47), _636(48), tot_error_627(49), _640(50)>
  # sum_642 = PHI <sum_638(47), sum_638(48), sum_639(49), sum_639(50)>
  _1401 = (void *) ivtmp.981_1433;
  _648 = MEM[base: _1401, offset: 48B];
  _649 = out_out[6];
  _650 = _648 - _649;
  out_error[6] = _650;
  if (_650 < 0.0)
    goto <bb 54>; [36.00%]
  else
    goto <bb 52>; [64.00%]

  <bb 52> [0.22%]:
  sum_652 = sum_642 + _650;
  if (tot_error_641 < _650)
    goto <bb 53>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 53> [0.11%]:
  goto <bb 56>; [100.00%]

  <bb 54> [0.13%]:
  sum_653 = sum_642 - _650;
  _654 = -_650;
  if (tot_error_641 < _654)
    goto <bb 55>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 55> [0.07%]:

  <bb 56> [0.35%]:
  # tot_error_655 = PHI <tot_error_641(52), _650(53), tot_error_641(54), _654(55)>
  # sum_656 = PHI <sum_652(52), sum_652(53), sum_653(54), sum_653(55)>
  _1399 = (void *) ivtmp.981_1433;
  _662 = MEM[base: _1399, offset: 56B];
  _663 = out_out[7];
  _664 = _662 - _663;
  out_error[7] = _664;
  if (_664 < 0.0)
    goto <bb 59>; [36.00%]
  else
    goto <bb 57>; [64.00%]

  <bb 57> [0.22%]:
  sum_666 = sum_656 + _664;
  if (tot_error_655 < _664)
    goto <bb 58>; [50.00%]
  else
    goto <bb 61>; [50.00%]

  <bb 58> [0.11%]:
  goto <bb 61>; [100.00%]

  <bb 59> [0.13%]:
  sum_667 = sum_656 - _664;
  _668 = -_664;
  if (tot_error_655 < _668)
    goto <bb 60>; [50.00%]
  else
    goto <bb 61>; [50.00%]

  <bb 60> [0.07%]:

  <bb 61> [0.35%]:
  # tot_error_669 = PHI <tot_error_655(57), _664(58), tot_error_655(59), _668(60)>
  # sum_670 = PHI <sum_666(57), sum_666(58), sum_667(59), sum_667(60)>
  vect_cst__1543 = { 1.0e+0, 1.0e+0 };
  vect_cst__1542 = { 1.0e+0, 1.0e+0 };
  vect_cst__1541 = { 1.0e+0, 1.0e+0 };
  vect_cst__1540 = { 1.0e+0, 1.0e+0 };
  vect_cst__763 = {_664, _664};
  vect_cst__764 = {_664, _664};
  vect_cst__769 = {_664, _664};
  vect_cst__770 = {_664, _664};
  vect_cst__722 = {_650, _650};
  vect_cst__727 = {_650, _650};
  vect_cst__76 = {_650, _650};
  vect_cst__560 = {_650, _650};
  vect_cst__505 = {_636, _636};
  vect_cst__510 = {_636, _636};
  vect_cst__512 = {_636, _636};
  vect_cst__517 = {_636, _636};
  vect_cst__407 = {_622, _622};
  vect_cst__408 = {_622, _622};
  vect_cst__423 = {_622, _622};
  vect_cst__424 = {_622, _622};
  vect_cst__315 = {_608, _608};
  vect_cst__321 = {_608, _608};
  vect_cst__324 = {_608, _608};
  vect_cst__330 = {_608, _608};
  vect_cst__229 = {_594, _594};
  vect_cst__231 = {_594, _594};
  vect_cst__236 = {_594, _594};
  vect_cst__238 = {_594, _594};
  vect_cst__781 = {_580, _580};
  vect_cst__785 = {_580, _580};
  vect_cst__786 = {_580, _580};
  vect_cst__790 = {_580, _580};
  vect_cst__222 = { 0.0, 0.0 };
  vect_cst__221 = { 0.0, 0.0 };
  vect_cst__111 = { 0.0, 0.0 };
  vect_cst__218 = { 0.0, 0.0 };
  vect_cst__79 = {_566, _566};
  vect_cst__78 = {_566, _566};
  vect_cst__77 = {_566, _566};
  vect_cst__119 = {_566, _566};
  _124 = sum_670 * 1.25e-1;
  MEM[symbol: avg_out_error, index: ivtmp.983_1423, offset: 0B] = _124;
  MEM[symbol: tot_out_error, index: ivtmp.983_1423, offset: 0B] = tot_error_669;
  _820 = out_wts[0][0];
  _822 = _566 * _820;
  sum_823 = _822 + 0.0;
  _824 = out_wts[1][0];
  _826 = _580 * _824;
  sum_827 = sum_823 + _826;
  _828 = out_wts[2][0];
  _830 = _594 * _828;
  sum_831 = sum_827 + _830;
  _832 = out_wts[3][0];
  _834 = _608 * _832;
  sum_835 = sum_831 + _834;
  _836 = out_wts[4][0];
  _838 = _622 * _836;
  sum_839 = sum_835 + _838;
  _840 = out_wts[5][0];
  _842 = _636 * _840;
  sum_843 = sum_839 + _842;
  _844 = out_wts[6][0];
  _846 = _650 * _844;
  sum_847 = sum_843 + _846;
  _848 = out_wts[7][0];
  _850 = _664 * _848;
  sum_851 = sum_847 + _850;
  _852 = mid_out[0];
  _853 = 1.0e+0 - _852;
  _854 = _852 * _853;
  _855 = sum_851 * _854;
  _861 = out_wts[0][1];
  _863 = _566 * _861;
  sum_864 = _863 + 0.0;
  _865 = out_wts[1][1];
  _867 = _580 * _865;
  sum_868 = sum_864 + _867;
  _869 = out_wts[2][1];
  _871 = _594 * _869;
  sum_872 = sum_868 + _871;
  _873 = out_wts[3][1];
  _875 = _608 * _873;
  sum_876 = sum_872 + _875;
  _877 = out_wts[4][1];
  _879 = _622 * _877;
  sum_880 = sum_876 + _879;
  _881 = out_wts[5][1];
  _883 = _636 * _881;
  sum_884 = sum_880 + _883;
  _885 = out_wts[6][1];
  _887 = _650 * _885;
  sum_888 = sum_884 + _887;
  _889 = out_wts[7][1];
  _891 = _664 * _889;
  sum_892 = sum_888 + _891;
  _893 = mid_out[1];
  _894 = 1.0e+0 - _893;
  _895 = _893 * _894;
  _896 = sum_892 * _895;
  _902 = out_wts[0][2];
  _904 = _566 * _902;
  sum_905 = _904 + 0.0;
  _906 = out_wts[1][2];
  _908 = _580 * _906;
  sum_909 = sum_905 + _908;
  _910 = out_wts[2][2];
  _912 = _594 * _910;
  sum_913 = sum_909 + _912;
  _914 = out_wts[3][2];
  _916 = _608 * _914;
  sum_917 = sum_913 + _916;
  _918 = out_wts[4][2];
  _920 = _622 * _918;
  sum_921 = sum_917 + _920;
  _922 = out_wts[5][2];
  _924 = _636 * _922;
  sum_925 = sum_921 + _924;
  _926 = out_wts[6][2];
  _928 = _650 * _926;
  sum_929 = sum_925 + _928;
  _930 = out_wts[7][2];
  _932 = _664 * _930;
  sum_933 = sum_929 + _932;
  _934 = mid_out[2];
  _935 = 1.0e+0 - _934;
  _936 = _934 * _935;
  _937 = sum_933 * _936;
  _943 = out_wts[0][3];
  _945 = _566 * _943;
  sum_946 = _945 + 0.0;
  _947 = out_wts[1][3];
  _949 = _580 * _947;
  sum_950 = sum_946 + _949;
  _951 = out_wts[2][3];
  _953 = _594 * _951;
  sum_954 = sum_950 + _953;
  _955 = out_wts[3][3];
  _957 = _608 * _955;
  sum_958 = sum_954 + _957;
  _959 = out_wts[4][3];
  _961 = _622 * _959;
  sum_962 = sum_958 + _961;
  _963 = out_wts[5][3];
  _965 = _636 * _963;
  sum_966 = sum_962 + _965;
  _967 = out_wts[6][3];
  _969 = _650 * _967;
  sum_970 = sum_966 + _969;
  _971 = out_wts[7][3];
  _973 = _664 * _971;
  sum_974 = sum_970 + _973;
  _975 = mid_out[3];
  _976 = 1.0e+0 - _975;
  _977 = _975 * _976;
  _978 = sum_974 * _977;
  _984 = out_wts[0][4];
  _986 = _566 * _984;
  sum_987 = _986 + 0.0;
  _988 = out_wts[1][4];
  _990 = _580 * _988;
  sum_991 = sum_987 + _990;
  _992 = out_wts[2][4];
  _994 = _594 * _992;
  sum_995 = sum_991 + _994;
  _996 = out_wts[3][4];
  _998 = _608 * _996;
  sum_999 = sum_995 + _998;
  _1000 = out_wts[4][4];
  _1002 = _622 * _1000;
  sum_1003 = sum_999 + _1002;
  _1004 = out_wts[5][4];
  _1006 = _636 * _1004;
  sum_1007 = sum_1003 + _1006;
  _1008 = out_wts[6][4];
  _1010 = _650 * _1008;
  sum_1011 = sum_1007 + _1010;
  _1012 = out_wts[7][4];
  _1014 = _664 * _1012;
  sum_1015 = sum_1011 + _1014;
  _1016 = mid_out[4];
  _1017 = 1.0e+0 - _1016;
  _1018 = _1016 * _1017;
  _1019 = sum_1015 * _1018;
  _1025 = out_wts[0][5];
  _1027 = _566 * _1025;
  sum_1028 = _1027 + 0.0;
  _1029 = out_wts[1][5];
  _1031 = _580 * _1029;
  sum_1032 = sum_1028 + _1031;
  _1033 = out_wts[2][5];
  _1035 = _594 * _1033;
  sum_1036 = sum_1032 + _1035;
  _1037 = out_wts[3][5];
  _1039 = _608 * _1037;
  sum_1040 = sum_1036 + _1039;
  _1041 = out_wts[4][5];
  _1043 = _622 * _1041;
  sum_1044 = sum_1040 + _1043;
  _1045 = out_wts[5][5];
  _1047 = _636 * _1045;
  sum_1048 = sum_1044 + _1047;
  _1049 = out_wts[6][5];
  _1051 = _650 * _1049;
  sum_1052 = sum_1048 + _1051;
  _1053 = out_wts[7][5];
  _1055 = _664 * _1053;
  sum_1056 = sum_1052 + _1055;
  _1057 = mid_out[5];
  _1058 = 1.0e+0 - _1057;
  _1059 = _1057 * _1058;
  _1060 = sum_1056 * _1059;
  _1066 = out_wts[0][6];
  _1068 = _566 * _1066;
  sum_1069 = _1068 + 0.0;
  _1070 = out_wts[1][6];
  _1072 = _580 * _1070;
  sum_1073 = sum_1069 + _1072;
  _1074 = out_wts[2][6];
  _1076 = _594 * _1074;
  sum_1077 = sum_1073 + _1076;
  _1078 = out_wts[3][6];
  _1080 = _608 * _1078;
  sum_1081 = sum_1077 + _1080;
  _1082 = out_wts[4][6];
  _1084 = _622 * _1082;
  sum_1085 = sum_1081 + _1084;
  _1086 = out_wts[5][6];
  _1088 = _636 * _1086;
  sum_1089 = sum_1085 + _1088;
  _1090 = out_wts[6][6];
  _1092 = _650 * _1090;
  sum_1093 = sum_1089 + _1092;
  _1094 = out_wts[7][6];
  _1096 = _664 * _1094;
  sum_1097 = sum_1093 + _1096;
  _1098 = mid_out[6];
  _1099 = 1.0e+0 - _1098;
  _1100 = _1098 * _1099;
  _1101 = sum_1097 * _1100;
  vect__820.787_115 = MEM[(double *)&out_wts];
  _116 = &out_wts[0][0] + 16;
  vect__820.788_212 = MEM[(double *)_116];
  _127 = _116 + 16;
  vect__820.789_126 = MEM[(double *)_127];
  _122 = _127 + 16;
  vect__820.790_121 = MEM[(double *)_122];
  _118 = _122 + 448;
  _1107 = out_wts[0][7];
  vect__822.791_81 = vect_cst__79 * vect__820.787_115;
  vect__822.791_82 = vect_cst__78 * vect__820.788_212;
  vect__822.791_110 = vect_cst__77 * vect__820.789_126;
  vect__822.791_217 = vect_cst__119 * vect__820.790_121;
  _1109 = _566 * _1107;
  vect_sum_823.792_41 = vect__822.791_81 + vect_cst__222;
  vect_sum_823.792_40 = vect__822.791_82 + vect_cst__221;
  vect_sum_823.792_815 = vect__822.791_110 + vect_cst__111;
  vect_sum_823.792_811 = vect__822.791_217 + vect_cst__218;
  sum_1110 = _1109 + 0.0;
  vect__824.795_810 = MEM[(double *)&out_wts + 64B];
  _806 = &out_wts[1][0] + 16;
  vect__824.796_805 = MEM[(double *)_806];
  _801 = _806 + 16;
  vect__824.797_800 = MEM[(double *)_801];
  _796 = _801 + 16;
  vect__824.798_795 = MEM[(double *)_796];
  _791 = _796 + 448;
  _1111 = out_wts[1][7];
  vect__826.799_780 = vect_cst__781 * vect__824.795_810;
  vect__826.799_776 = vect_cst__785 * vect__824.796_805;
  vect__826.799_171 = vect_cst__786 * vect__824.797_800;
  vect__826.799_285 = vect_cst__790 * vect__824.798_795;
  _1113 = _580 * _1111;
  vect_sum_827.800_280 = vect_sum_823.792_41 + vect__826.799_780;
  vect_sum_827.800_278 = vect_sum_823.792_40 + vect__826.799_776;
  vect_sum_827.800_273 = vect_sum_823.792_815 + vect__826.799_171;
  vect_sum_827.800_271 = vect_sum_823.792_811 + vect__826.799_285;
  sum_1114 = sum_1110 + _1113;
  vect__828.803_266 = MEM[(double *)&out_wts + 128B];
  _264 = &out_wts[2][0] + 16;
  vect__828.804_259 = MEM[(double *)_264];
  _257 = _264 + 16;
  vect__828.805_252 = MEM[(double *)_257];
  _250 = _257 + 16;
  vect__828.806_245 = MEM[(double *)_250];
  _243 = _250 + 448;
  _1115 = out_wts[2][7];
  vect__830.807_33 = vect_cst__229 * vect__828.803_266;
  vect__830.807_26 = vect_cst__231 * vect__828.804_259;
  vect__830.807_123 = vect_cst__236 * vect__828.805_252;
  vect__830.807_125 = vect_cst__238 * vect__828.806_245;
  _1117 = _594 * _1115;
  vect_sum_831.808_167 = vect_sum_827.800_280 + vect__830.807_33;
  vect_sum_831.808_158 = vect_sum_827.800_278 + vect__830.807_26;
  vect_sum_831.808_375 = vect_sum_827.800_273 + vect__830.807_123;
  vect_sum_831.808_369 = vect_sum_827.800_271 + vect__830.807_125;
  sum_1118 = sum_1114 + _1117;
  vect__832.811_366 = MEM[(double *)&out_wts + 192B];
  _360 = &out_wts[3][0] + 16;
  vect__832.812_357 = MEM[(double *)_360];
  _351 = _360 + 16;
  vect__832.813_348 = MEM[(double *)_351];
  _342 = _351 + 16;
  vect__832.814_339 = MEM[(double *)_342];
  _333 = _342 + 448;
  _1119 = out_wts[3][7];
  vect__834.815_312 = vect_cst__315 * vect__832.811_366;
  vect__834.815_306 = vect_cst__321 * vect__832.812_357;
  vect__834.815_303 = vect_cst__324 * vect__832.813_348;
  vect__834.815_297 = vect_cst__330 * vect__832.814_339;
  _1121 = _608 * _1119;
  vect_sum_835.816_294 = vect_sum_831.808_167 + vect__834.815_312;
  vect_sum_835.816_288 = vect_sum_831.808_158 + vect__834.815_306;
  vect_sum_835.816_146 = vect_sum_831.808_375 + vect__834.815_303;
  vect_sum_835.816_503 = vect_sum_831.808_369 + vect__834.815_297;
  sum_1122 = sum_1118 + _1121;
  vect__836.819_488 = MEM[(double *)&out_wts + 256B];
  _487 = &out_wts[4][0] + 16;
  vect__836.820_472 = MEM[(double *)_487];
  _471 = _487 + 16;
  vect__836.821_456 = MEM[(double *)_471];
  _455 = _471 + 16;
  vect__836.822_440 = MEM[(double *)_455];
  _439 = _455 + 448;
  _1123 = out_wts[4][7];
  vect__838.823_392 = vect_cst__407 * vect__836.819_488;
  vect__838.823_391 = vect_cst__408 * vect__836.820_472;
  vect__838.823_376 = vect_cst__423 * vect__836.821_456;
  vect__838.823_61 = vect_cst__424 * vect__836.822_440;
  _1125 = _622 * _1123;
  vect_sum_839.824_559 = vect_sum_835.816_294 + vect__838.823_392;
  vect_sum_839.824_554 = vect_sum_835.816_288 + vect__838.823_391;
  vect_sum_839.824_552 = vect_sum_835.816_146 + vect__838.823_376;
  vect_sum_839.824_547 = vect_sum_835.816_503 + vect__838.823_61;
  sum_1126 = sum_1122 + _1125;
  vect__840.827_545 = MEM[(double *)&out_wts + 320B];
  _540 = &out_wts[5][0] + 16;
  vect__840.828_538 = MEM[(double *)_540];
  _533 = _540 + 16;
  vect__840.829_531 = MEM[(double *)_533];
  _526 = _533 + 16;
  vect__840.830_524 = MEM[(double *)_526];
  _519 = _526 + 448;
  _1127 = out_wts[5][7];
  vect__842.831_113 = vect_cst__505 * vect__840.827_545;
  vect__842.831_671 = vect_cst__510 * vect__840.828_538;
  vect__842.831_658 = vect_cst__512 * vect__840.829_531;
  vect__842.831_657 = vect_cst__517 * vect__840.830_524;
  _1129 = _636 * _1127;
  vect_sum_843.832_644 = vect_sum_839.824_559 + vect__842.831_113;
  vect_sum_843.832_643 = vect_sum_839.824_554 + vect__842.831_671;
  vect_sum_843.832_630 = vect_sum_839.824_552 + vect__842.831_658;
  vect_sum_843.832_629 = vect_sum_839.824_547 + vect__842.831_657;
  sum_1130 = sum_1126 + _1129;
  vect__844.835_616 = MEM[(double *)&out_wts + 384B];
  _615 = &out_wts[6][0] + 16;
  vect__844.836_602 = MEM[(double *)_615];
  _601 = _615 + 16;
  vect__844.837_588 = MEM[(double *)_601];
  _587 = _601 + 16;
  vect__844.838_574 = MEM[(double *)_587];
  _573 = _587 + 448;
  _1131 = out_wts[6][7];
  vect__846.839_720 = vect_cst__722 * vect__844.835_616;
  vect__846.839_715 = vect_cst__727 * vect__844.836_602;
  vect__846.839_713 = vect_cst__76 * vect__844.837_588;
  vect__846.839_708 = vect_cst__560 * vect__844.838_574;
  _1133 = _650 * _1131;
  vect_sum_847.840_706 = vect_sum_843.832_644 + vect__846.839_720;
  vect_sum_847.840_701 = vect_sum_843.832_643 + vect__846.839_715;
  vect_sum_847.840_699 = vect_sum_843.832_630 + vect__846.839_713;
  vect_sum_847.840_694 = vect_sum_843.832_629 + vect__846.839_708;
  sum_1134 = sum_1130 + _1133;
  vect__848.843_692 = MEM[(double *)&out_wts + 448B];
  _687 = &out_wts[7][0] + 16;
  vect__848.844_685 = MEM[(double *)_687];
  _680 = _687 + 16;
  vect__848.845_678 = MEM[(double *)_680];
  _673 = _680 + 16;
  vect__848.846_109 = MEM[(double *)_673];
  _775 = _673 + 448;
  _1135 = out_wts[7][7];
  vect__850.847_758 = vect_cst__763 * vect__848.843_692;
  vect__850.847_757 = vect_cst__764 * vect__848.844_685;
  vect__850.847_752 = vect_cst__769 * vect__848.845_678;
  vect__850.847_751 = vect_cst__770 * vect__848.846_109;
  _1137 = _664 * _1135;
  vect_sum_851.848_746 = vect_sum_847.840_706 + vect__850.847_758;
  vect_sum_851.848_745 = vect_sum_847.840_701 + vect__850.847_757;
  vect_sum_851.848_740 = vect_sum_847.840_699 + vect__850.847_752;
  vect_sum_851.848_739 = vect_sum_847.840_694 + vect__850.847_751;
  sum_1138 = sum_1134 + _1137;
  vect__852.851_734 = MEM[(double *)&mid_out];
  _733 = &mid_out[0] + 16;
  vect__852.852_728 = MEM[(double *)_733];
  _1529 = _733 + 16;
  vect__852.853_1530 = MEM[(double *)_1529];
  _1531 = _1529 + 16;
  vect__852.854_1532 = MEM[(double *)_1531];
  vect__852.857_1533 = MEM[(double *)&mid_out];
  _1534 = &mid_out[0] + 16;
  vect__852.858_1535 = MEM[(double *)_1534];
  _1536 = _1534 + 16;
  vect__852.859_1537 = MEM[(double *)_1536];
  _1538 = _1536 + 16;
  vect__852.860_1539 = MEM[(double *)_1538];
  _1139 = mid_out[7];
  vect__853.861_1544 = vect_cst__1543 - vect__852.857_1533;
  vect__853.861_1545 = vect_cst__1542 - vect__852.858_1535;
  vect__853.861_1546 = vect_cst__1541 - vect__852.859_1537;
  vect__853.861_1547 = vect_cst__1540 - vect__852.860_1539;
  _1140 = 1.0e+0 - _1139;
  vect__854.862_1548 = vect__852.851_734 * vect__853.861_1544;
  vect__854.862_1549 = vect__852.852_728 * vect__853.861_1545;
  vect__854.862_1550 = vect__852.853_1530 * vect__853.861_1546;
  vect__854.862_1551 = vect__852.854_1532 * vect__853.861_1547;
  _1141 = _1139 * _1140;
  vect__855.863_1552 = vect_sum_851.848_746 * vect__854.862_1548;
  vect__855.863_1553 = vect_sum_851.848_745 * vect__854.862_1549;
  vect__855.863_1554 = vect_sum_851.848_740 * vect__854.862_1550;
  vect__855.863_1555 = vect_sum_851.848_739 * vect__854.862_1551;
  _1142 = sum_1138 * _1141;
  MEM[(double *)&mid_error] = vect__855.863_1552;
  _1557 = &mid_error[0] + 16;
  MEM[(double *)_1557] = vect__855.863_1553;
  _1559 = _1557 + 16;
  MEM[(double *)_1559] = vect__855.863_1554;
  _1561 = _1559 + 16;
  MEM[(double *)_1561] = vect__855.863_1555;
  ivtmp.934_1020 = (unsigned long) &out_error;
  ivtmp.935_897 = (unsigned long) &out_wt_change;
  ivtmp.936_1364 = (unsigned long) &out_wts;
  ivtmp.937_1355 = (unsigned long) &out_wt_cum_change;
  _1181 = (unsigned long) &out_wt_change;
  _1178 = _1181 + 512;

  <bb 62> [2.78%]:
  # ivtmp.934_1102 = PHI <ivtmp.934_1061(62), ivtmp.934_1020(61)>
  # ivtmp.935_979 = PHI <ivtmp.935_938(62), ivtmp.935_897(61)>
  # ivtmp.936_856 = PHI <ivtmp.936_1367(62), ivtmp.936_1364(61)>
  # ivtmp.937_1361 = PHI <ivtmp.937_1358(62), ivtmp.937_1355(61)>
  vect_cst__1618 = { 8.99999999999999966693309261245303787291049957275390625e-2, 8.99999999999999966693309261245303787291049957275390625e-2 };
  vect_cst__1617 = { 8.99999999999999966693309261245303787291049957275390625e-2, 8.99999999999999966693309261245303787291049957275390625e-2 };
  vect_cst__1616 = { 8.99999999999999966693309261245303787291049957275390625e-2, 8.99999999999999966693309261245303787291049957275390625e-2 };
  vect_cst__1615 = { 8.99999999999999966693309261245303787291049957275390625e-2, 8.99999999999999966693309261245303787291049957275390625e-2 };
  vect_cst__1574 = { 8.99999999999999966693309261245303787291049957275390625e-2, 8.99999999999999966693309261245303787291049957275390625e-2 };
  vect_cst__1573 = { 8.99999999999999966693309261245303787291049957275390625e-2, 8.99999999999999966693309261245303787291049957275390625e-2 };
  vect_cst__1572 = { 8.99999999999999966693309261245303787291049957275390625e-2, 8.99999999999999966693309261245303787291049957275390625e-2 };
  vect_cst__1571 = { 8.99999999999999966693309261245303787291049957275390625e-2, 8.99999999999999966693309261245303787291049957275390625e-2 };
  _1352 = (void *) ivtmp.934_1102;
  _378 = MEM[base: _1352, offset: 0B];
  _379 = _378 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_381 = _379 * _852;
  _1349 = (void *) ivtmp.935_979;
  _382 = MEM[base: _1349, offset: 0B];
  _383 = _382 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_384 = delta_381 + _383;
  _1293 = (void *) ivtmp.936_856;
  _385 = MEM[base: _1293, offset: 0B];
  _386 = delta_384 + _385;
  _1237 = (void *) ivtmp.937_1361;
  _388 = MEM[base: _1237, offset: 0B];
  _389 = delta_384 + _388;
  delta_397 = _379 * _893;
  _1336 = (void *) ivtmp.935_979;
  _398 = MEM[base: _1336, offset: 8B];
  _399 = _398 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_400 = delta_397 + _399;
  _1280 = (void *) ivtmp.936_856;
  _401 = MEM[base: _1280, offset: 8B];
  _402 = delta_400 + _401;
  _1224 = (void *) ivtmp.937_1361;
  _404 = MEM[base: _1224, offset: 8B];
  _405 = delta_400 + _404;
  delta_413 = _379 * _934;
  _1333 = (void *) ivtmp.935_979;
  _414 = MEM[base: _1333, offset: 16B];
  _415 = _414 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_416 = delta_413 + _415;
  _1277 = (void *) ivtmp.936_856;
  _417 = MEM[base: _1277, offset: 16B];
  _418 = delta_416 + _417;
  _1221 = (void *) ivtmp.937_1361;
  _420 = MEM[base: _1221, offset: 16B];
  _421 = delta_416 + _420;
  delta_429 = _379 * _975;
  _1324 = (void *) ivtmp.935_979;
  _430 = MEM[base: _1324, offset: 24B];
  _431 = _430 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_432 = delta_429 + _431;
  _1268 = (void *) ivtmp.936_856;
  _433 = MEM[base: _1268, offset: 24B];
  _434 = delta_432 + _433;
  _1212 = (void *) ivtmp.937_1361;
  _436 = MEM[base: _1212, offset: 24B];
  _437 = delta_432 + _436;
  delta_445 = _379 * _1016;
  _1321 = (void *) ivtmp.935_979;
  _446 = MEM[base: _1321, offset: 32B];
  _447 = _446 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_448 = delta_445 + _447;
  _1265 = (void *) ivtmp.936_856;
  _449 = MEM[base: _1265, offset: 32B];
  _450 = delta_448 + _449;
  _1209 = (void *) ivtmp.937_1361;
  _452 = MEM[base: _1209, offset: 32B];
  _453 = delta_448 + _452;
  delta_461 = _379 * _1057;
  _1308 = (void *) ivtmp.935_979;
  _462 = MEM[base: _1308, offset: 40B];
  _463 = _462 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_464 = delta_461 + _463;
  _1252 = (void *) ivtmp.936_856;
  _465 = MEM[base: _1252, offset: 40B];
  _466 = delta_464 + _465;
  _1196 = (void *) ivtmp.937_1361;
  _468 = MEM[base: _1196, offset: 40B];
  _469 = delta_464 + _468;
  delta_477 = _379 * _1098;
  _1305 = (void *) ivtmp.935_979;
  _478 = MEM[base: _1305, offset: 48B];
  _479 = _478 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_480 = delta_477 + _479;
  _1249 = (void *) ivtmp.936_856;
  _481 = MEM[base: _1249, offset: 48B];
  _482 = delta_480 + _481;
  _1193 = (void *) ivtmp.937_1361;
  _484 = MEM[base: _1193, offset: 48B];
  _485 = delta_480 + _484;
  delta_493 = _379 * _1139;
  _1346 = (void *) ivtmp.935_979;
  vect__382.868_1564 = MEM[base: _1346, offset: 0B];
  _1330 = (void *) ivtmp.935_979;
  vect__382.869_1566 = MEM[base: _1330, offset: 16B];
  _1318 = (void *) ivtmp.935_979;
  vect__382.870_1568 = MEM[base: _1318, offset: 32B];
  _1302 = (void *) ivtmp.935_979;
  vect__382.871_1570 = MEM[base: _1302, offset: 48B];
  _1339 = (void *) ivtmp.935_979;
  vect__382.885_1608 = MEM[base: _1339, offset: 0B];
  _1327 = (void *) ivtmp.935_979;
  vect__382.886_1610 = MEM[base: _1327, offset: 16B];
  _1311 = (void *) ivtmp.935_979;
  vect__382.887_1612 = MEM[base: _1311, offset: 32B];
  _1299 = (void *) ivtmp.935_979;
  vect__382.888_1614 = MEM[base: _1299, offset: 48B];
  _1296 = (void *) ivtmp.935_979;
  _494 = MEM[base: _1296, offset: 56B];
  vect__383.872_1575 = vect__382.868_1564 * vect_cst__1574;
  vect__383.872_1576 = vect__382.869_1566 * vect_cst__1573;
  vect__383.872_1577 = vect__382.870_1568 * vect_cst__1572;
  vect__383.872_1578 = vect__382.871_1570 * vect_cst__1571;
  vect__383.889_1619 = vect__382.885_1608 * vect_cst__1618;
  vect__383.889_1620 = vect__382.886_1610 * vect_cst__1617;
  vect__383.889_1621 = vect__382.887_1612 * vect_cst__1616;
  vect__383.889_1622 = vect__382.888_1614 * vect_cst__1615;
  _495 = _494 * 8.99999999999999966693309261245303787291049957275390625e-2;
  vect_cst__1579 = {delta_477, delta_493};
  vect_cst__1580 = {delta_445, delta_461};
  vect_cst__1581 = {delta_413, delta_429};
  vect_cst__1582 = {delta_381, delta_397};
  vect_delta_384.873_1583 = vect_cst__1582 + vect__383.872_1575;
  vect_delta_384.873_1584 = vect_cst__1581 + vect__383.872_1576;
  vect_delta_384.873_1585 = vect_cst__1580 + vect__383.872_1577;
  vect_delta_384.873_1586 = vect_cst__1579 + vect__383.872_1578;
  vect_cst__1623 = {delta_477, delta_493};
  vect_cst__1624 = {delta_445, delta_461};
  vect_cst__1625 = {delta_413, delta_429};
  vect_cst__1626 = {delta_381, delta_397};
  vect_delta_384.890_1627 = vect_cst__1626 + vect__383.889_1619;
  vect_delta_384.890_1628 = vect_cst__1625 + vect__383.889_1620;
  vect_delta_384.890_1629 = vect_cst__1624 + vect__383.889_1621;
  vect_delta_384.890_1630 = vect_cst__1623 + vect__383.889_1622;
  delta_496 = delta_493 + _495;
  _1290 = (void *) ivtmp.936_856;
  vect__385.876_1588 = MEM[base: _1290, offset: 0B];
  _1274 = (void *) ivtmp.936_856;
  vect__385.877_1590 = MEM[base: _1274, offset: 16B];
  _1262 = (void *) ivtmp.936_856;
  vect__385.878_1592 = MEM[base: _1262, offset: 32B];
  _1246 = (void *) ivtmp.936_856;
  vect__385.879_1594 = MEM[base: _1246, offset: 48B];
  _1240 = (void *) ivtmp.936_856;
  _497 = MEM[base: _1240, offset: 56B];
  vect__386.880_1595 = vect_delta_384.873_1583 + vect__385.876_1588;
  vect__386.880_1596 = vect_delta_384.873_1584 + vect__385.877_1590;
  vect__386.880_1597 = vect_delta_384.873_1585 + vect__385.878_1592;
  vect__386.880_1598 = vect_delta_384.873_1586 + vect__385.879_1594;
  _498 = delta_496 + _497;
  _1283 = (void *) ivtmp.936_856;
  MEM[base: _1283, offset: 0B] = vect__386.880_1595;
  _1271 = (void *) ivtmp.936_856;
  MEM[base: _1271, offset: 16B] = vect__386.880_1596;
  _1255 = (void *) ivtmp.936_856;
  MEM[base: _1255, offset: 32B] = vect__386.880_1597;
  _1243 = (void *) ivtmp.936_856;
  MEM[base: _1243, offset: 48B] = vect__386.880_1598;
  _1234 = (void *) ivtmp.937_1361;
  vect__388.893_1632 = MEM[base: _1234, offset: 0B];
  _1218 = (void *) ivtmp.937_1361;
  vect__388.894_1634 = MEM[base: _1218, offset: 16B];
  _1206 = (void *) ivtmp.937_1361;
  vect__388.895_1636 = MEM[base: _1206, offset: 32B];
  _1190 = (void *) ivtmp.937_1361;
  vect__388.896_1638 = MEM[base: _1190, offset: 48B];
  _1184 = (void *) ivtmp.937_1361;
  _500 = MEM[base: _1184, offset: 56B];
  vect__389.897_1639 = vect_delta_384.890_1627 + vect__388.893_1632;
  vect__389.897_1640 = vect_delta_384.890_1628 + vect__388.894_1634;
  vect__389.897_1641 = vect_delta_384.890_1629 + vect__388.895_1636;
  vect__389.897_1642 = vect_delta_384.890_1630 + vect__388.896_1638;
  _501 = delta_496 + _500;
  _1227 = (void *) ivtmp.937_1361;
  MEM[base: _1227, offset: 0B] = vect__389.897_1639;
  _1215 = (void *) ivtmp.937_1361;
  MEM[base: _1215, offset: 16B] = vect__389.897_1640;
  _1199 = (void *) ivtmp.937_1361;
  MEM[base: _1199, offset: 32B] = vect__389.897_1641;
  _1187 = (void *) ivtmp.937_1361;
  MEM[base: _1187, offset: 48B] = vect__389.897_1642;
  ivtmp.934_1061 = ivtmp.934_1102 + 8;
  ivtmp.935_938 = ivtmp.935_979 + 64;
  ivtmp.936_1367 = ivtmp.936_856 + 64;
  ivtmp.937_1358 = ivtmp.937_1361 + 64;
  if (ivtmp.935_938 != _1178)
    goto <bb 62>; [87.49%]
  else
    goto <bb 63>; [12.51%]

  <bb 63> [0.35%]:
  ivtmp.923_499 = (unsigned long) &mid_wts;
  goto <bb 68>; [100.00%]

  <bb 64> [2.78%]:
  niters_vector_mult_vf.755_960 = bnd.754_964 << 1;
  _952 = (int) niters_vector_mult_vf.755_960;
  tmp.756_956 = _952 + weight_1054;
  tmp.757_948 = ivtmp_1046 - niters_vector_mult_vf.755_960;
  if (niters_vector_mult_vf.755_960 == niters.753_1038)
    goto <bb 67>; [33.34%]
  else
    goto <bb 65>; [66.66%]

  <bb 65> [64.85%]:
  # weight_1034 = PHI <tmp.756_956(64)>
  # ivtmp_1026 = PHI <tmp.757_948(64)>
  _1022 = in_pats[patt_235][weight_1034];
  delta_1021 = _130 * _1022;
  _1013 = mid_wt_change[neurode_1147][weight_1034];
  _1009 = _1013 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_1005 = delta_1021 + _1009;
  _1001 = mid_wts[neurode_1147][weight_1034];
  _997 = delta_1005 + _1001;
  mid_wts[neurode_1147][weight_1034] = _997;
  _989 = mid_wt_cum_change[neurode_1147][weight_1034];
  _985 = delta_1005 + _989;
  mid_wt_cum_change[neurode_1147][weight_1034] = _985;
  weight_980 = weight_1034 + 1;
  ivtmp_972 = ivtmp_1026 - 1;
  goto <bb 67>; [100.00%]

  <bb 66> [50.07%]:
  # ivtmp.900_502 = PHI <ivtmp.900_486(66), 0(70)>
  # ivtmp.904_470 = PHI <ivtmp.904_454(66), 0(70)>
  vect__132.760_870 = MEM[base: vectp_in_pats.759_939, index: ivtmp.904_470, offset: 0B];
  vect_delta_133.761_862 = vect_cst__866 * vect__132.760_870;
  vect__134.764_829 = MEM[base: vectp_mid_wt_change.763_858, index: ivtmp.904_470, offset: 0B];
  vect__135.765_821 = vect__134.764_829 * vect_cst__825;
  vect_delta_136.766_817 = vect_delta_133.761_862 + vect__135.765_821;
  vect__137.769_774 = MEM[base: vectp_mid_wts.768_816, index: ivtmp.904_470, offset: 0B];
  vect__138.770_761 = vect_delta_136.766_817 + vect__137.769_774;
  MEM[base: vectp_mid_wts.772_760, index: ivtmp.904_470, offset: 0B] = vect__138.770_761;
  vect__139.775_730 = MEM[base: vectp_mid_wt_cum_change.774_743, index: ivtmp.904_470, offset: 0B];
  vect__140.776_729 = vect_delta_136.766_817 + vect__139.775_730;
  MEM[base: vectp_mid_wt_cum_change.778_672, index: ivtmp.904_470, offset: 0B] = vect__140.776_729;
  ivtmp.900_486 = ivtmp.900_502 + 1;
  ivtmp.904_454 = ivtmp.904_470 + 16;
  if (ivtmp.900_486 < bnd.754_964)
    goto <bb 66>; [94.45%]
  else
    goto <bb 64>; [5.55%]

  <bb 67> [2.78%]:
  ivtmp.917_422 = ivtmp.917_438 + 1;
  ivtmp.923_390 = ivtmp.923_406 + 280;
  ivtmp.924_467 = ivtmp.924_483 + 35;
  if (ivtmp.917_422 != 8)
    goto <bb 68>; [87.49%]
  else
    goto <bb 71>; [12.51%]

  <bb 68> [2.78%]:
  # ivtmp.917_438 = PHI <ivtmp.917_422(67), 0(63)>
  # ivtmp.923_406 = PHI <ivtmp.923_390(67), ivtmp.923_499(63)>
  # ivtmp.924_483 = PHI <ivtmp.924_467(67), 0(63)>
  neurode_1147 = (int) ivtmp.917_438;
  _451 = ivtmp.917_438 * 8;
  _129 = MEM[symbol: mid_error, index: _451, offset: 0B];
  _130 = _129 * 8.99999999999999966693309261245303787291049957275390625e-2;
  _1071 = ivtmp.923_406;
  _1067 = _1071 >> 3;
  _1065 = -_1067;
  _1064 = (unsigned int) _1065;
  prolog_loop_niters.751_1075 = _1064 & 1;
  if (prolog_loop_niters.751_1075 == 0)
    goto <bb 70>; [33.34%]
  else
    goto <bb 69>; [66.66%]

  <bb 69> [1.85%]:
  _1419 = (void *) ivtmp.978_1439;
  _1145 = MEM[base: _1419, offset: 0B];
  delta_1144 = _130 * _1145;
  _435 = ivtmp.924_483 * 8;
  _1136 = MEM[symbol: mid_wt_change, index: _435, offset: 0B];
  _1132 = _1136 * 8.99999999999999966693309261245303787291049957275390625e-2;
  delta_1128 = delta_1144 + _1132;
  _419 = (void *) ivtmp.923_406;
  _1124 = MEM[base: _419, offset: 0B];
  _1120 = delta_1128 + _1124;
  _403 = (void *) ivtmp.923_406;
  MEM[base: _403, offset: 0B] = _1120;
  _387 = ivtmp.924_483 * 8;
  _1112 = MEM[symbol: mid_wt_cum_change, index: _387, offset: 0B];
  _1108 = delta_1128 + _1112;
  _1143 = ivtmp.924_483 * 8;
  MEM[symbol: mid_wt_cum_change, index: _1143, offset: 0B] = _1108;

  <bb 70> [2.78%]:
  # weight_1054 = PHI <1(69), 0(68)>
  # ivtmp_1046 = PHI <34(69), 35(68)>
  prolog_loop_adjusted_niters.752_1042 = (sizetype) prolog_loop_niters.751_1075;
  niters.753_1038 = 35 - prolog_loop_niters.751_1075;
  bnd.754_964 = niters.753_1038 >> 1;
  _898 = ivtmp.977_1443;
  _890 = prolog_loop_adjusted_niters.752_1042 + _898;
  _886 = _890 * 8;
  vectp_in_pats.759_939 = &in_pats + _886;
  vect_cst__866 = {_130, _130};
  _849 = ivtmp.924_483;
  _845 = prolog_loop_adjusted_niters.752_1042 + _849;
  _841 = _845 * 8;
  vectp_mid_wt_change.763_858 = &mid_wt_change + _841;
  vect_cst__825 = { 8.99999999999999966693309261245303787291049957275390625e-2, 8.99999999999999966693309261245303787291049957275390625e-2 };
  _799 = ivtmp.924_483;
  _794 = prolog_loop_adjusted_niters.752_1042 + _799;
  _793 = _794 * 8;
  vectp_mid_wts.768_816 = &mid_wts + _793;
  _755 = ivtmp.924_483;
  _754 = prolog_loop_adjusted_niters.752_1042 + _755;
  _750 = _754 * 8;
  vectp_mid_wts.772_760 = &mid_wts + _750;
  _738 = ivtmp.924_483;
  _737 = prolog_loop_adjusted_niters.752_1042 + _738;
  _736 = _737 * 8;
  vectp_mid_wt_cum_change.774_743 = &mid_wt_cum_change + _736;
  _562 = ivtmp.924_483;
  _561 = prolog_loop_adjusted_niters.752_1042 + _562;
  _558 = _561 * 8;
  vectp_mid_wt_cum_change.778_672 = &mid_wt_cum_change + _558;
  goto <bb 66>; [100.00%]

  <bb 71> [0.35%]:
  iteration_count.186_1 = iteration_count;
  _2 = iteration_count.186_1 + 1;
  iteration_count = _2;
  patt_32 = patt_235 + 1;
  numpats.187_3 = numpats;
  ivtmp.977_1441 = ivtmp.977_1443 + 35;
  ivtmp.978_1437 = ivtmp.978_1439 + 280;
  ivtmp.981_1427 = ivtmp.981_1433 + 64;
  ivtmp.983_1421 = ivtmp.983_1423 + 8;
  if (numpats.187_3 > patt_32)
    goto <bb 14>; [85.00%]
  else
    goto <bb 72>; [15.00%]

  <bb 72> [0.05%]:
  # numpats.187_1258 = PHI <numpats.187_3(71)>
  numpasses.188_4 = numpasses;
  _5 = numpasses.188_4 + 1;
  numpasses = _5;
  if (numpats.187_1258 > 0)
    goto <bb 73>; [100.00%]
  else
    goto <bb 153>; [0.00%]

  <bb 73> [0.05%]:
  _290 = tot_out_error[0];
  if (_290 > 0.0)
    goto <bb 74>; [50.00%]
  else
    goto <bb 75>; [50.00%]

  <bb 74> [0.03%]:

  <bb 75> [0.05%]:
  # error_291 = PHI <0.0(73), _290(74)>
  _292 = avg_out_error[0];
  sum_293 = _292 + 0.0;
  _1528 = (double) numpats.187_1258;
  if (numpats.187_1258 != 1)
    goto <bb 76>; [85.00%]
  else
    goto <bb 158>; [15.00%]

  <bb 76> [0.04%]:
  _299 = tot_out_error[1];
  if (error_291 < _299)
    goto <bb 77>; [50.00%]
  else
    goto <bb 78>; [50.00%]

  <bb 77> [0.02%]:

  <bb 78> [0.04%]:
  # error_300 = PHI <error_291(76), _299(77)>
  _301 = avg_out_error[1];
  sum_302 = sum_293 + _301;
  if (numpats.187_1258 != 2)
    goto <bb 79>; [85.00%]
  else
    goto <bb 157>; [15.00%]

  <bb 79> [0.04%]:
  _308 = tot_out_error[2];
  if (error_300 < _308)
    goto <bb 80>; [50.00%]
  else
    goto <bb 81>; [50.00%]

  <bb 80> [0.02%]:

  <bb 81> [0.04%]:
  # error_309 = PHI <error_300(79), _308(80)>
  _310 = avg_out_error[2];
  sum_311 = sum_302 + _310;
  if (numpats.187_1258 != 3)
    goto <bb 82>; [85.00%]
  else
    goto <bb 157>; [15.00%]

  <bb 82> [0.03%]:
  _317 = tot_out_error[3];
  if (error_309 < _317)
    goto <bb 83>; [50.00%]
  else
    goto <bb 84>; [50.00%]

  <bb 83> [0.02%]:

  <bb 84> [0.03%]:
  # error_318 = PHI <error_309(82), _317(83)>
  _319 = avg_out_error[3];
  sum_320 = sum_311 + _319;
  if (numpats.187_1258 != 4)
    goto <bb 85>; [85.00%]
  else
    goto <bb 157>; [15.00%]

  <bb 85> [0.03%]:
  _326 = tot_out_error[4];
  if (error_318 < _326)
    goto <bb 86>; [50.00%]
  else
    goto <bb 87>; [50.00%]

  <bb 86> [0.02%]:

  <bb 87> [0.03%]:
  # error_327 = PHI <error_318(85), _326(86)>
  _328 = avg_out_error[4];
  sum_329 = sum_320 + _328;
  if (numpats.187_1258 != 5)
    goto <bb 88>; [85.00%]
  else
    goto <bb 157>; [15.00%]

  <bb 88> [0.02%]:
  _335 = tot_out_error[5];
  if (error_327 < _335)
    goto <bb 89>; [50.00%]
  else
    goto <bb 90>; [50.00%]

  <bb 89> [0.01%]:

  <bb 90> [0.02%]:
  # error_336 = PHI <error_327(88), _335(89)>
  _337 = avg_out_error[5];
  sum_338 = sum_329 + _337;
  if (numpats.187_1258 != 6)
    goto <bb 91>; [85.00%]
  else
    goto <bb 157>; [15.00%]

  <bb 91> [0.02%]:
  _344 = tot_out_error[6];
  if (error_336 < _344)
    goto <bb 92>; [50.00%]
  else
    goto <bb 93>; [50.00%]

  <bb 92> [0.01%]:

  <bb 93> [0.02%]:
  # error_345 = PHI <error_336(91), _344(92)>
  _346 = avg_out_error[6];
  sum_347 = sum_338 + _346;
  if (numpats.187_1258 != 7)
    goto <bb 94>; [85.00%]
  else
    goto <bb 157>; [15.00%]

  <bb 94> [0.02%]:
  _353 = tot_out_error[7];
  if (error_345 < _353)
    goto <bb 95>; [50.00%]
  else
    goto <bb 96>; [50.00%]

  <bb 95> [0.01%]:

  <bb 96> [0.02%]:
  # error_354 = PHI <error_345(94), _353(95)>
  _355 = avg_out_error[7];
  sum_356 = sum_347 + _355;
  if (numpats.187_1258 != 8)
    goto <bb 97>; [85.00%]
  else
    goto <bb 157>; [15.00%]

  <bb 97> [0.01%]:
  _362 = tot_out_error[8];
  if (error_354 < _362)
    goto <bb 98>; [50.00%]
  else
    goto <bb 99>; [50.00%]

  <bb 98> [0.01%]:

  <bb 99> [0.01%]:
  # error_363 = PHI <error_354(97), _362(98)>
  _364 = avg_out_error[8];
  sum_365 = sum_356 + _364;
  if (numpats.187_1258 == 10)
    goto <bb 100>; [85.00%]
  else
    goto <bb 157>; [15.00%]

  <bb 100> [0.01%]:
  _371 = tot_out_error[9];
  if (error_363 < _371)
    goto <bb 101>; [50.00%]
  else
    goto <bb 152>; [50.00%]

  <bb 101> [0.01%]:
  goto <bb 152>; [100.00%]

  <bb 102> [0.00%]:
  goto <bb 146>; [100.00%]

  <bb 103> [0.02%]:

  <bb 104> [0.04%]:
  # error_907 = PHI <0(103), 1(157)>
  if (_1391 != 0)
    goto <bb 105>; [50.00%]
  else
    goto <bb 106>; [50.00%]

  <bb 105> [0.02%]:

  <bb 106> [0.04%]:
  # result_30 = PHI <_1451(104), 0(105)>
  if (_299 >= 1.6e+1)
    goto <bb 107>; [50.00%]
  else
    goto <bb 108>; [50.00%]

  <bb 107> [0.02%]:
  if (numpats.187_1258 != 2)
    goto <bb 109>; [85.00%]
  else
    goto <bb 102>; [15.00%]

  <bb 108> [0.02%]:
  if (numpats.187_1258 != 2)
    goto <bb 109>; [85.00%]
  else
    goto <bb 145>; [15.00%]

  <bb 109> [0.04%]:
  # error_903 = PHI <error_907(108), 1(107)>
  if (_1391 != 0)
    goto <bb 110>; [50.00%]
  else
    goto <bb 111>; [50.00%]

  <bb 110> [0.02%]:

  <bb 111> [0.04%]:
  # result_233 = PHI <result_30(109), 0(110)>
  _234 = tot_out_error[2];
  if (_234 >= 1.6e+1)
    goto <bb 112>; [50.00%]
  else
    goto <bb 113>; [50.00%]

  <bb 112> [0.02%]:
  if (numpats.187_1258 != 3)
    goto <bb 114>; [85.00%]
  else
    goto <bb 102>; [15.00%]

  <bb 113> [0.02%]:
  if (numpats.187_1258 != 3)
    goto <bb 114>; [85.00%]
  else
    goto <bb 145>; [15.00%]

  <bb 114> [0.03%]:
  # error_911 = PHI <error_903(113), 1(112)>
  if (_1391 != 0)
    goto <bb 115>; [50.00%]
  else
    goto <bb 116>; [50.00%]

  <bb 115> [0.02%]:

  <bb 116> [0.03%]:
  # result_240 = PHI <result_233(114), 0(115)>
  _241 = tot_out_error[3];
  if (_241 >= 1.6e+1)
    goto <bb 117>; [50.00%]
  else
    goto <bb 118>; [50.00%]

  <bb 117> [0.02%]:
  if (numpats.187_1258 != 4)
    goto <bb 119>; [85.00%]
  else
    goto <bb 102>; [15.00%]

  <bb 118> [0.01%]:
  if (numpats.187_1258 != 4)
    goto <bb 119>; [85.00%]
  else
    goto <bb 145>; [15.00%]

  <bb 119> [0.03%]:
  # error_915 = PHI <error_911(118), 1(117)>
  if (_1391 != 0)
    goto <bb 120>; [50.00%]
  else
    goto <bb 121>; [50.00%]

  <bb 120> [0.02%]:

  <bb 121> [0.03%]:
  # result_247 = PHI <result_240(119), 0(120)>
  _248 = tot_out_error[4];
  if (_248 >= 1.6e+1)
    goto <bb 122>; [50.00%]
  else
    goto <bb 123>; [50.00%]

  <bb 122> [0.01%]:
  if (numpats.187_1258 != 5)
    goto <bb 124>; [85.00%]
  else
    goto <bb 102>; [15.00%]

  <bb 123> [0.02%]:
  if (numpats.187_1258 != 5)
    goto <bb 124>; [85.00%]
  else
    goto <bb 145>; [15.00%]

  <bb 124> [0.02%]:
  # error_919 = PHI <error_915(123), 1(122)>
  if (_1391 != 0)
    goto <bb 125>; [50.00%]
  else
    goto <bb 126>; [50.00%]

  <bb 125> [0.01%]:

  <bb 126> [0.02%]:
  # result_254 = PHI <result_247(124), 0(125)>
  _255 = tot_out_error[5];
  if (_255 >= 1.6e+1)
    goto <bb 127>; [50.00%]
  else
    goto <bb 128>; [50.00%]

  <bb 127> [0.01%]:
  if (numpats.187_1258 != 6)
    goto <bb 129>; [85.00%]
  else
    goto <bb 102>; [15.00%]

  <bb 128> [0.01%]:
  if (numpats.187_1258 != 6)
    goto <bb 129>; [85.00%]
  else
    goto <bb 145>; [15.00%]

  <bb 129> [0.02%]:
  # error_923 = PHI <error_919(128), 1(127)>
  if (_1391 != 0)
    goto <bb 130>; [50.00%]
  else
    goto <bb 131>; [50.00%]

  <bb 130> [0.01%]:

  <bb 131> [0.02%]:
  # result_261 = PHI <result_254(129), 0(130)>
  _262 = tot_out_error[6];
  if (_262 >= 1.6e+1)
    goto <bb 132>; [50.00%]
  else
    goto <bb 133>; [50.00%]

  <bb 132> [0.01%]:
  if (numpats.187_1258 != 7)
    goto <bb 134>; [85.00%]
  else
    goto <bb 102>; [15.00%]

  <bb 133> [0.01%]:
  if (numpats.187_1258 != 7)
    goto <bb 134>; [85.00%]
  else
    goto <bb 145>; [15.00%]

  <bb 134> [0.02%]:
  # error_927 = PHI <error_923(133), 1(132)>
  if (_1391 != 0)
    goto <bb 135>; [50.00%]
  else
    goto <bb 136>; [50.00%]

  <bb 135> [0.01%]:

  <bb 136> [0.02%]:
  # result_268 = PHI <result_261(134), 0(135)>
  _269 = tot_out_error[7];
  if (_269 >= 1.6e+1)
    goto <bb 137>; [50.00%]
  else
    goto <bb 138>; [50.00%]

  <bb 137> [0.01%]:
  if (numpats.187_1258 != 8)
    goto <bb 139>; [85.00%]
  else
    goto <bb 102>; [15.00%]

  <bb 138> [0.01%]:
  if (numpats.187_1258 != 8)
    goto <bb 139>; [85.00%]
  else
    goto <bb 145>; [15.00%]

  <bb 139> [0.01%]:
  # error_931 = PHI <error_927(138), 1(137)>
  if (_1391 != 0)
    goto <bb 140>; [50.00%]
  else
    goto <bb 141>; [50.00%]

  <bb 140> [0.01%]:

  <bb 141> [0.01%]:
  # result_275 = PHI <result_268(139), 0(140)>
  _276 = tot_out_error[8];
  if (_276 >= 1.6e+1)
    goto <bb 154>; [50.00%]
  else
    goto <bb 142>; [50.00%]

  <bb 142> [0.00%]:
  if (numpats.187_1258 == 10)
    goto <bb 143>; [85.00%]
  else
    goto <bb 145>; [15.00%]

  <bb 143> [0.01%]:
  # error_529 = PHI <error_931(142), 1(154)>
  if (_1391 != 0)
    goto <bb 144>; [50.00%]
  else
    goto <bb 155>; [50.00%]

  <bb 144> [0.01%]:
  goto <bb 155>; [100.00%]

  <bb 145> [0.05%]:
  # result_181 = PHI <result_1471(155), result_275(142), result_268(138), result_30(108), result_233(113), result_240(118), result_247(123), result_254(128), result_261(133)>
  # error_174 = PHI <error_529(155), error_931(142), error_927(138), error_907(108), error_903(113), error_911(118), error_915(123), error_919(128), error_923(133)>
  if (error_174 == 1)
    goto <bb 102>; [1.30%]
  else
    goto <bb 147>; [98.70%]

  <bb 146> [0.00%]:

  <bb 147> [0.06%]:
  # result_175 = PHI <result_181(145), -1(146), 1(153), _94(158)>
  learned = result_175;
  if (result_175 == 0)
    goto <bb 148>; [85.00%]
  else
    goto <bb 149>; [15.00%]

  <bb 148> [0.06%]:
  numpats.187_878 = numpats;
  if (numpats.187_878 > 0)
    goto <bb 13>; [85.00%]
  else
    goto <bb 156>; [15.00%]

  <bb 149> [0.01%]:
  # nloops_8 = PHI <nloops_16(D)(2), nloops_17(147)>
  nloops_17 = nloops_8 + 18446744073709551615;
  if (nloops_17 != 18446744073709551615)
    goto <bb 150>; [85.00%]
  else
    goto <bb 151>; [15.00%]

  <bb 150> [0.01%]:
  ivtmp.1020_1474 = (unsigned long) &mid_wts;
  _1472 = (unsigned long) &mid_wts;
  _1466 = _1472 + 2240;
  goto <bb 5>; [100.00%]

  <bb 151> [0.00%]:
  _19 = StopStopwatch (elapsed_15);
  return _19;

  <bb 152> [0.02%]:
  # error_442 = PHI <_371(101), error_363(100)>
  _443 = avg_out_error[9];
  sum_444 = sum_365 + _443;
  goto <bb 157>; [100.00%]

  <bb 153> [0.01%]:
  # numpats.187_1314 = PHI <numpats.187_1258(72), numpats.187_878(156)>
  worst_error = 0.0;
  _474 = (double) numpats.187_1314;
  _475 = 0.0 / _474;
  average_error = _475;
  goto <bb 147>; [100.00%]

  <bb 154> [0.01%]:
  if (numpats.187_1258 == 10)
    goto <bb 143>; [100.00%]
  else
    goto <bb 146>; [0.00%]

  <bb 155> [0.02%]:
  # result_1471 = PHI <0(144), result_275(143)>
  _1470 = tot_out_error[9];
  if (_1470 >= 1.6e+1)
    goto <bb 102>; [15.00%]
  else
    goto <bb 145>; [85.00%]

  <bb 156> [0.01%]:
  numpasses.188_11 = numpasses;
  _10 = numpasses.188_11 + 1;
  numpasses = _10;
  goto <bb 153>; [100.00%]

  <bb 157> [0.04%]:
  # error_72 = PHI <error_442(152), error_300(78), error_309(81), error_318(84), error_327(87), error_336(90), error_345(93), error_354(96), error_363(99)>
  # sum_270 = PHI <sum_444(152), sum_302(78), sum_311(81), sum_320(84), sum_329(87), sum_338(90), sum_347(93), sum_356(96), sum_365(99)>
  worst_error = error_72;
  _284 = sum_270 / _1528;
  average_error = _284;
  _1391 = error_72 >= 1.000000000000000055511151231257827021181583404541015625e-1;
  _1431 = ~_1391;
  _1451 = (int) _1431;
  if (_290 >= 1.6e+1)
    goto <bb 104>; [42.50%]
  else
    goto <bb 103>; [57.50%]

  <bb 158> [0.01%]:
  worst_error = error_291;
  _1343 = sum_293 / _1528;
  average_error = _1343;
  _89 = error_291 >= 1.000000000000000055511151231257827021181583404541015625e-1;
  _90 = ~_89;
  _94 = (int) _90;
  if (_290 >= 1.6e+1)
    goto <bb 102>; [40.00%]
  else
    goto <bb 147>; [60.00%]

}



;; Function lusolve.constprop (lusolve.constprop.6, funcdef_no=135, decl_uid=6548, cgraph_uid=62, symbol_order=202)

;; 18 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
;;
;; Loop 10
;;  header 55, latch 54
;;  depth 1, outer 0
;;  nodes: 55 54 60 58 57 56
;;
;; Loop 11
;;  header 57, latch 57
;;  depth 2, outer 10
;;  nodes: 57
;;
;; Loop 12
;;  header 45, latch 52
;;  depth 1, outer 0
;;  nodes: 45 52 49 50 51 46 48 47
;;
;; Loop 13
;;  header 48, latch 48
;;  depth 2, outer 12
;;  nodes: 48
;;
;; Loop 1
;;  header 19, latch 18
;;  depth 1, outer 0
;;  nodes: 19 18 17 10 44 43 42 40 38 39 27 37 36 35 28 34 33 32 31 30 29 26 24 25 20 23 22 21 16 11 12 15 14 13
;;
;; Loop 6
;;  header 17, latch 16
;;  depth 2, outer 1
;;  nodes: 17 16 12 15 14 13
;;
;; Loop 7
;;  header 14, latch 14
;;  depth 3, outer 6
;;  nodes: 14
;;
;; Loop 2
;;  header 43, latch 43
;;  depth 2, outer 1
;;  nodes: 43
;;
;; Loop 15
;;  header 35, latch 35
;;  depth 2, outer 1
;;  nodes: 35
;;
;; Loop 3
;;  header 32, latch 32
;;  depth 2, outer 1
;;  nodes: 32
;;
;; Loop 4
;;  header 20, latch 26
;;  depth 2, outer 1
;;  nodes: 20 26 24 25 23 22 21
;;
;; Loop 5
;;  header 22, latch 22
;;  depth 3, outer 4
;;  nodes: 22
;;
;; Loop 8
;;  header 9, latch 7
;;  depth 1, outer 0
;;  nodes: 9 7 6 5 3 4
;;
;; Loop 14
;;  header 3, latch 5
;;  depth 2, outer 8
;;  nodes: 3 5 4
;; 2 succs { 9 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 59 7 }
;; 7 succs { 9 8 }
;; 8 succs { 19 }
;; 9 succs { 3 }
;; 10 succs { 11 18 }
;; 11 succs { 17 }
;; 12 succs { 13 16 }
;; 13 succs { 14 }
;; 14 succs { 14 15 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 12 18 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 21 24 }
;; 21 succs { 22 }
;; 22 succs { 22 23 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 20 27 }
;; 27 succs { 28 38 }
;; 28 succs { 35 29 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 32 33 }
;; 33 succs { 34 36 }
;; 34 succs { 36 }
;; 35 succs { 35 37 }
;; 36 succs { 37 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 42 41 }
;; 41 succs { 45 }
;; 42 succs { 43 }
;; 43 succs { 43 44 }
;; 44 succs { 10 41 }
;; 45 succs { 46 50 }
;; 46 succs { 47 52 }
;; 47 succs { 48 }
;; 48 succs { 48 49 }
;; 49 succs { 52 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 45 53 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 56 60 }
;; 56 succs { 57 }
;; 57 succs { 57 58 }
;; 58 succs { 54 59 }
;; 59 succs { 1 }
;; 60 succs { 54 }
lusolve.constprop (double[101] * a, double * b)
{
  unsigned long ivtmp.1193;
  unsigned long ivtmp.1192;
  unsigned long ivtmp.1185;
  unsigned int ivtmp.1175;
  unsigned long ivtmp.1168;
  unsigned long ivtmp.1167;
  unsigned long ivtmp.1166;
  unsigned long ivtmp.1165;
  sizetype ivtmp.1160;
  unsigned long ivtmp.1159;
  unsigned long ivtmp.1156;
  unsigned long ivtmp.1155;
  unsigned long ivtmp.1146;
  unsigned long ivtmp.1145;
  sizetype ivtmp.1134;
  unsigned int ivtmp.1130;
  sizetype ivtmp.1129;
  unsigned long ivtmp.1118;
  unsigned long ivtmp.1101;
  unsigned long ivtmp.1100;
  unsigned long ivtmp.1096;
  unsigned long ivtmp.1089;
  sizetype ivtmp.1086;
  sizetype ivtmp.1074;
  unsigned long ivtmp.1071;
  unsigned long ivtmp.1065;
  sizetype ivtmp.1060;
  sizetype ivtmp.1057;
  vector(2) double * vectp.1047;
  vector(2) double * vectp.1046;
  vector(2) double * vectp.1045;
  vector(2) double * vectp.1044;
  vector(2) double vect__78.1043;
  vector(2) double * vectp.1042;
  vector(2) double * vectp.1041;
  vector(2) double vect_dum_74.1040;
  vector(2) double * vectp.1039;
  vector(2) double * vectp.1038;
  unsigned int tmp.1037;
  int tmp.1036;
  unsigned int niters_vector_mult_vf.1035;
  unsigned int bnd.1034;
  unsigned int niters.1033;
  sizetype prolog_loop_adjusted_niters.1032;
  unsigned int prolog_loop_niters.1031;
  vector(2) double * vectp.1030;
  double sum;
  int ii;
  int ip;
  int j;
  int i;
  int imax;
  int k;
  int j;
  int i;
  double dum;
  double sum;
  double big;
  int D.7508;
  int indx[101];
  int d;
  double[101] * _2;
  int _4;
  unsigned long _7;
  unsigned long _8;
  sizetype _10;
  unsigned long _11;
  unsigned long _12;
  sizetype _13;
  unsigned long _14;
  unsigned long _15;
  double[101] * _17;
  unsigned long _18;
  fardouble * LUtempvv.215_21;
  sizetype _22;
  unsigned int _23;
  double _25;
  double[101] * _28;
  double[101] * _31;
  double _34;
  double _38;
  double _39;
  double[101] * _45;
  double _51;
  double _55;
  double _56;
  double _64;
  double _65;
  long unsigned int _70;
  long unsigned int _71;
  double[101] * _72;
  long unsigned int _73;
  unsigned long _75;
  unsigned long _76;
  sizetype _81;
  unsigned long _82;
  long unsigned int _84;
  fardouble * _85;
  unsigned long _87;
  double _90;
  unsigned long _91;
  double _96;
  double _105;
  double _106;
  long unsigned int _108;
  void * _118;
  long unsigned int _123;
  long unsigned int _124;
  double * _125;
  double _129;
  void * _130;
  double[101] * _132;
  double _134;
  double _138;
  double _139;
  fardouble * _140;
  long unsigned int _152;
  long unsigned int _153;
  double _155;
  double _159;
  double _160;
  double _161;
  double[101] * _164;
  void * _165;
  sizetype _166;
  double _168;
  void * _169;
  sizetype _186;
  unsigned int _189;
  sizetype _196;
  sizetype _200;
  unsigned int _201;
  unsigned int _205;
  unsigned int _206;
  double * _207;
  sizetype _208;
  sizetype _209;
  double[101] * _210;
  sizetype _211;
  sizetype _212;
  unsigned int _215;
  long unsigned int _221;
  long unsigned int _222;
  long unsigned int _223;
  long unsigned int _228;
  long unsigned int _229;
  long unsigned int _230;
  long unsigned int _231;
  long unsigned int _236;
  long unsigned int _237;
  long unsigned int _238;
  long unsigned int _244;
  long unsigned int _245;
  long unsigned int _247;
  int _252;
  unsigned int _260;
  unsigned int ivtmp_261;
  double _266;
  unsigned int ivtmp_270;
  unsigned int _271;
  unsigned int ivtmp_294;
  unsigned int _300;
  unsigned long _301;
  unsigned long _302;
  unsigned long _303;
  long unsigned int _305;
  sizetype _308;
  double _314;
  sizetype _316;
  unsigned long _317;
  unsigned long _318;
  unsigned long _319;
  unsigned int _324;
  unsigned long _326;
  void * _327;
  void * _328;
  double _340;
  _Bool _349;
  _Bool _350;
  ssizetype _351;
  double[101] * _355;
  double prephitmp_357;
  ssizetype _358;
  long unsigned int _359;
  void * _363;
  void * _364;
  long unsigned int _366;
  _Bool _367;
  ssizetype _368;
  long unsigned int _373;
  long unsigned int _374;
  ssizetype _375;
  double[101] * _377;
  double pretmp_378;
  int _379;
  double _386;
  double _387;
  sizetype _391;
  void * _394;
  double[101] * _395;
  double pretmp_398;
  sizetype _401;
  void * _414;
  double[101] * _425;
  double[101] * _432;
  void * _435;
  void * _436;
  void * _437;
  unsigned long _438;
  unsigned long _440;
  ssizetype _441;
  unsigned long _442;
  unsigned long _443;
  ssizetype _444;
  long unsigned int _445;
  long unsigned int _446;
  void * _447;
  void * _448;
  unsigned long _449;
  void * _453;
  unsigned long _454;
  unsigned long _455;
  unsigned long _462;
  void * _463;
  unsigned long _464;
  unsigned long _465;
  unsigned long _466;

  <bb 2> [0.93%]:
  LUtempvv.215_21 = LUtempvv;
  ivtmp.1192_458 = (unsigned long) LUtempvv.215_21;
  _462 = (unsigned long) a_1(D);
  ivtmp.1193_461 = _462 + 808;
  _464 = (unsigned long) a_1(D);
  _465 = _464 + 82416;
  goto <bb 9>; [100.00%]

  <bb 3> [33.94%]:
  # big_389 = PHI <0.0(9), big_385(5)>
  # ivtmp.1185_450 = PHI <ivtmp.1185_452(9), ivtmp.1185_451(5)>
  _453 = (void *) ivtmp.1185_450;
  _387 = MEM[base: _453, offset: 0B];
  _386 = ABS_EXPR <_387>;
  if (_386 > big_389)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [16.97%]:

  <bb 5> [33.94%]:
  # big_385 = PHI <big_389(3), _386(4)>
  ivtmp.1185_451 = ivtmp.1185_450 + 8;
  if (ivtmp.1185_451 != _455)
    goto <bb 3>; [82.35%]
  else
    goto <bb 6>; [17.65%]

  <bb 6> [5.99%]:
  # big_411 = PHI <big_385(5)>
  if (big_411 == 0.0)
    goto <bb 59>; [7.50%]
  else
    goto <bb 7>; [92.50%]

  <bb 7> [5.55%]:
  _25 = 1.0e+0 / big_411;
  _463 = (void *) ivtmp.1192_456;
  MEM[base: _463, offset: 0B] = _25;
  ivtmp.1192_457 = ivtmp.1192_456 + 8;
  ivtmp.1193_460 = ivtmp.1193_459 + 808;
  if (ivtmp.1193_460 != _465)
    goto <bb 9>; [91.24%]
  else
    goto <bb 8>; [8.76%]

  <bb 8> [0.49%]:
  ivtmp.1165_421 = (unsigned long) a_1(D);
  _425 = a_1(D) + 8;
  ivtmp.1166_424 = (unsigned long) _425;
  ivtmp.1167_428 = (unsigned long) a_1(D);
  _432 = a_1(D) + 808;
  ivtmp.1168_431 = (unsigned long) _432;
  goto <bb 19>; [100.00%]

  <bb 9> [5.99%]:
  # ivtmp.1192_456 = PHI <ivtmp.1192_457(7), ivtmp.1192_458(2)>
  # ivtmp.1193_459 = PHI <ivtmp.1193_460(7), ivtmp.1193_461(2)>
  _466 = ivtmp.1193_459 + 18446744073709550808;
  ivtmp.1185_452 = _466;
  _455 = ivtmp.1193_459;
  goto <bb 3>; [100.00%]

  <bb 10> [2.26%]:
  _435 = (void *) ivtmp.1166_422;
  pretmp_398 = MEM[base: _435, offset: 0B];
  if (i_100 != 0)
    goto <bb 11>; [100.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 11> [2.26%]:
  _45 = (double[101] *) ivtmp.1165_419;
  _449 = ivtmp.1160_417 * 8;
  _18 = _449;
  goto <bb 17>; [100.00%]

  <bb 12> [12.35%]:
  _8 = (unsigned long) _28;
  _7 = _8 + 808;
  _2 = (double[101] *) _7;
  _31 = _2;
  _10 = ivtmp.1160_417;
  sum_32 = MEM[base: _31, index: _10, step: 8, offset: 0B];
  if (i_44 != 0)
    goto <bb 13>; [100.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 13> [12.35%]:
  ivtmp.1100_175 = (unsigned long) _31;
  ivtmp.1101_172 = ivtmp.1166_422;
  _87 = (unsigned long) a_1(D);
  _15 = (unsigned long) _31;
  _11 = _15 + _18;
  _82 = _11;

  <bb 14> [81.76%]:
  # sum_277 = PHI <sum_41(14), sum_32(13)>
  # ivtmp.1100_179 = PHI <ivtmp.1100_178(14), ivtmp.1100_175(13)>
  # ivtmp.1101_174 = PHI <ivtmp.1101_173(14), ivtmp.1101_172(13)>
  _130 = (void *) ivtmp.1100_179;
  _34 = MEM[base: _130, offset: 0B];
  _118 = (void *) ivtmp.1101_174;
  _38 = MEM[base: _118, offset: 0B];
  _39 = _34 * _38;
  sum_41 = sum_277 - _39;
  ivtmp.1100_178 = ivtmp.1100_179 + 8;
  ivtmp.1101_173 = ivtmp.1101_174 + 808;
  if (ivtmp.1101_173 != _82)
    goto <bb 14>; [82.35%]
  else
    goto <bb 15>; [17.65%]

  <bb 15> [14.43%]:
  # sum_259 = PHI <sum_41(14)>

  <bb 16> [14.43%]:
  # sum_117 = PHI <sum_32(12), sum_259(15)>

  <bb 17> [15.00%]:
  # sum_43 = PHI <sum_117(16), pretmp_398(11)>
  # _28 = PHI <_31(16), a_1(D)(11)>
  # i_40 = PHI <i_44(16), 0(11)>
  _81 = ivtmp.1160_417;
  MEM[base: _28, index: _81, step: 8, offset: 0B] = sum_43;
  i_44 = i_40 + 1;
  if (_28 != _45)
    goto <bb 12>; [82.35%]
  else
    goto <bb 18>; [17.65%]

  <bb 18> [2.65%]:
  # i_57 = PHI <i_100(17), 0(10)>
  ivtmp.1159_416 = ivtmp.1159_415 + 1;
  ivtmp.1160_418 = ivtmp.1160_417 + 1;
  ivtmp.1165_420 = ivtmp.1165_419 + 808;
  ivtmp.1166_423 = ivtmp.1166_422 + 8;
  ivtmp.1167_427 = ivtmp.1167_426 + 8;
  ivtmp.1168_430 = ivtmp.1168_429 + 816;
  ivtmp.1175_434 = ivtmp.1175_433 + 1;

  <bb 19> [2.75%]:
  # i_69 = PHI <i_57(18), 0(8)>
  # j_33 = PHI <i_100(18), 0(8)>
  # imax_268 = PHI <imax_410(18), 0(8)>
  # ivtmp.1159_415 = PHI <ivtmp.1159_416(18), 0(8)>
  # ivtmp.1160_417 = PHI <ivtmp.1160_418(18), 1(8)>
  # ivtmp.1165_419 = PHI <ivtmp.1165_420(18), ivtmp.1165_421(8)>
  # ivtmp.1166_422 = PHI <ivtmp.1166_423(18), ivtmp.1166_424(8)>
  # ivtmp.1167_426 = PHI <ivtmp.1167_427(18), ivtmp.1167_428(8)>
  # ivtmp.1168_429 = PHI <ivtmp.1168_430(18), ivtmp.1168_431(8)>
  # ivtmp.1175_433 = PHI <ivtmp.1175_434(18), 4294967295(8)>
  _108 = (long unsigned int) i_69;
  _73 = _108 * 8;
  _140 = LUtempvv.215_21 + _73;
  ivtmp.1155_98 = (unsigned long) _140;
  _152 = (long unsigned int) i_69;
  _153 = _152 * 808;
  _164 = a_1(D) + _153;
  ivtmp.1156_246 = (unsigned long) _164;
  _326 = ivtmp.1159_415;
  _324 = ivtmp.1175_433;
  _319 = (unsigned long) _324;
  _318 = _319 * 101;
  _317 = _318 + _326;
  _75 = _317 * 8;
  _76 = (unsigned long) a_1(D);
  _454 = _76 + 808;
  _91 = _454 + _75;

  <bb 20> [15.59%]:
  # i_278 = PHI <i_69(19), i_68(26)>
  # big_281 = PHI <0.0(19), big_115(26)>
  # imax_285 = PHI <imax_268(19), imax_116(26)>
  # ivtmp.1155_94 = PHI <ivtmp.1155_98(19), ivtmp.1155_95(26)>
  # ivtmp.1156_133 = PHI <ivtmp.1156_246(19), ivtmp.1156_146(26)>
  _165 = (void *) ivtmp.1156_133;
  _166 = (sizetype) ivtmp.1159_415;
  sum_49 = MEM[base: _165, index: _166, step: 8, offset: 0B];
  if (j_33 != 0)
    goto <bb 21>; [96.19%]
  else
    goto <bb 24>; [3.81%]

  <bb 21> [15.00%]:
  ivtmp.1145_335 = ivtmp.1156_133;
  ivtmp.1146_332 = ivtmp.1167_426;

  <bb 22> [85.00%]:
  # sum_280 = PHI <sum_58(22), sum_49(21)>
  # ivtmp.1145_342 = PHI <ivtmp.1145_341(22), ivtmp.1145_335(21)>
  # ivtmp.1146_334 = PHI <ivtmp.1146_333(22), ivtmp.1146_332(21)>
  _328 = (void *) ivtmp.1145_342;
  _51 = MEM[base: _328, offset: 0B];
  _327 = (void *) ivtmp.1146_334;
  _55 = MEM[base: _327, offset: 0B];
  _56 = _51 * _55;
  sum_58 = sum_280 - _56;
  ivtmp.1145_341 = ivtmp.1145_342 + 8;
  ivtmp.1146_333 = ivtmp.1146_334 + 808;
  if (ivtmp.1146_333 != _91)
    goto <bb 22>; [82.35%]
  else
    goto <bb 23>; [17.65%]

  <bb 23> [15.00%]:
  # sum_412 = PHI <sum_58(22)>

  <bb 24> [15.59%]:
  # sum_60 = PHI <sum_49(20), sum_412(23)>
  _169 = (void *) ivtmp.1156_133;
  _22 = (sizetype) ivtmp.1159_415;
  MEM[base: _169, index: _22, step: 8, offset: 0B] = sum_60;
  _414 = (void *) ivtmp.1155_94;
  _64 = MEM[base: _414, offset: 0B];
  _65 = ABS_EXPR <sum_60>;
  dum_66 = _64 * _65;
  if (dum_66 >= big_281)
    goto <bb 25>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 25> [7.80%]:

  <bb 26> [15.60%]:
  # big_115 = PHI <big_281(24), dum_66(25)>
  # imax_116 = PHI <imax_285(24), i_278(25)>
  i_68 = i_278 + 1;
  ivtmp.1155_95 = ivtmp.1155_94 + 8;
  ivtmp.1156_146 = ivtmp.1156_133 + 808;
  if (i_68 <= 100)
    goto <bb 20>; [82.36%]
  else
    goto <bb 27>; [17.64%]

  <bb 27> [2.75%]:
  # imax_410 = PHI <imax_116(26)>
  _355 = (double[101] *) ivtmp.1165_419;
  if (j_33 != imax_410)
    goto <bb 28>; [50.00%]
  else
    goto <bb 38>; [50.00%]

  <bb 28> [1.38%]:
  _70 = (long unsigned int) imax_410;
  _71 = _70 * 808;
  _72 = a_1(D) + _71;
  _438 = (unsigned long) a_1(D);
  _12 = -_438;
  _14 = 16 - _438;
  _440 = _14 + ivtmp.1165_419;
  _441 = (ssizetype) _440;
  _375 = _441;
  _374 = (long unsigned int) imax_410;
  _373 = _374 * 808;
  _368 = (ssizetype) _373;
  _367 = _368 >= _375;
  _366 = _374 * 808;
  _359 = _366 + 16;
  _358 = (ssizetype) _359;
  _442 = (unsigned long) a_1(D);
  _443 = ivtmp.1165_419 - _442;
  _444 = (ssizetype) _443;
  _351 = _444;
  _350 = _351 >= _358;
  _349 = _350 | _367;
  if (_349 != 0)
    goto <bb 29>; [80.00%]
  else
    goto <bb 35>; [20.00%]

  <bb 29> [1.10%]:
  _305 = _374 * 808;
  vectp.1030_306 = a_1(D) + _305;
  _303 = (unsigned long) vectp.1030_306;
  _302 = _303 >> 3;
  _301 = -_302;
  _300 = (unsigned int) _301;
  prolog_loop_niters.1031_304 = _300 & 1;
  if (prolog_loop_niters.1031_304 == 0)
    goto <bb 31>; [33.34%]
  else
    goto <bb 30>; [66.66%]

  <bb 30> [0.73%]:
  dum_315 = *_72[0];
  _447 = (void *) ivtmp.1165_419;
  _314 = MEM[base: _447, offset: 0B];
  *_72[0] = _314;
  _448 = (void *) ivtmp.1165_419;
  MEM[base: _448, offset: 0B] = dum_315;

  <bb 31> [1.10%]:
  # k_297 = PHI <1(30), 0(29)>
  # ivtmp_294 = PHI <100(30), 101(29)>
  prolog_loop_adjusted_niters.1032_290 = (sizetype) prolog_loop_niters.1031_304;
  niters.1033_284 = 101 - prolog_loop_niters.1031_304;
  bnd.1034_258 = niters.1033_284 >> 1;
  _247 = _374 * 101;
  _245 = prolog_loop_adjusted_niters.1032_290 + _247;
  _244 = _245 * 8;
  vectp.1039_248 = a_1(D) + _244;
  _445 = ivtmp.1159_415 * 101;
  _238 = _445;
  _237 = prolog_loop_adjusted_niters.1032_290 + _238;
  _236 = _237 * 8;
  vectp.1042_240 = a_1(D) + _236;
  _231 = (long unsigned int) imax_410;
  _230 = _231 * 101;
  _229 = prolog_loop_adjusted_niters.1032_290 + _230;
  _228 = _229 * 8;
  vectp.1045_232 = a_1(D) + _228;
  _446 = ivtmp.1159_415 * 101;
  _223 = _446;
  _222 = prolog_loop_adjusted_niters.1032_290 + _223;
  _221 = _222 * 8;
  vectp.1047_224 = a_1(D) + _221;

  <bb 32> [6.60%]:
  # ivtmp.1130_360 = PHI <ivtmp.1130_356(32), 0(31)>
  # ivtmp.1134_344 = PHI <ivtmp.1134_343(32), 0(31)>
  vect_dum_74.1040_241 = MEM[base: vectp.1039_248, index: ivtmp.1134_344, offset: 0B];
  vect__78.1043_233 = MEM[base: vectp.1042_240, index: ivtmp.1134_344, offset: 0B];
  MEM[base: vectp.1045_232, index: ivtmp.1134_344, offset: 0B] = vect__78.1043_233;
  MEM[base: vectp.1047_224, index: ivtmp.1134_344, offset: 0B] = vect_dum_74.1040_241;
  ivtmp.1130_356 = ivtmp.1130_360 + 1;
  ivtmp.1134_343 = ivtmp.1134_344 + 16;
  if (ivtmp.1130_356 < bnd.1034_258)
    goto <bb 32>; [83.34%]
  else
    goto <bb 33>; [16.66%]

  <bb 33> [1.10%]:
  niters_vector_mult_vf.1035_257 = bnd.1034_258 << 1;
  _252 = (int) niters_vector_mult_vf.1035_257;
  tmp.1036_256 = _252 + k_297;
  tmp.1037_250 = ivtmp_294 - niters_vector_mult_vf.1035_257;
  if (niters_vector_mult_vf.1035_257 == niters.1033_284)
    goto <bb 36>; [33.34%]
  else
    goto <bb 34>; [66.66%]

  <bb 34> [4.16%]:
  # k_275 = PHI <tmp.1036_256(33)>
  # ivtmp_270 = PHI <tmp.1037_250(33)>
  dum_269 = *_72[k_275];
  _266 = *_355[k_275];
  *_72[k_275] = _266;
  *_355[k_275] = dum_269;
  k_262 = k_275 + 1;
  ivtmp_261 = ivtmp_270 - 1;
  goto <bb 36>; [100.00%]

  <bb 35> [1.56%]:
  # ivtmp.1129_362 = PHI <0(28), ivtmp.1129_361(35)>
  dum_345 = MEM[base: _72, index: ivtmp.1129_362, offset: 0B];
  _340 = MEM[base: _355, index: ivtmp.1129_362, offset: 0B];
  MEM[base: _72, index: ivtmp.1129_362, offset: 0B] = _340;
  MEM[base: _355, index: ivtmp.1129_362, offset: 0B] = dum_345;
  ivtmp.1129_361 = ivtmp.1129_362 + 8;
  if (ivtmp.1129_361 != 808)
    goto <bb 35>; [82.34%]
  else
    goto <bb 37>; [17.66%]

  <bb 36> [1.10%]:

  <bb 37> [1.38%]:
  _84 = _70 * 8;
  _85 = LUtempvv.215_21 + _84;
  dum_86 = *_85;
  _90 = MEM[base: LUtempvv.215_21, index: ivtmp.1159_415, step: 8, offset: 0B];
  *_85 = _90;
  MEM[base: LUtempvv.215_21, index: ivtmp.1159_415, step: 8, offset: 0B] = dum_86;

  <bb 38> [2.75%]:
  MEM[symbol: indx, index: ivtmp.1159_415, step: 4, offset: 0B] = imax_410;
  _436 = (void *) ivtmp.1168_429;
  _96 = MEM[base: _436, offset: -808B];
  if (_96 == 0.0)
    goto <bb 39>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 39> [1.38%]:
  _437 = (void *) ivtmp.1168_429;
  MEM[base: _437, offset: -808B] = 9.99999999999999945153271454209571651729503702787392447108e-21;

  <bb 40> [2.75%]:
  # prephitmp_357 = PHI <_96(38), 9.99999999999999945153271454209571651729503702787392447108e-21(39)>
  if (j_33 != 100)
    goto <bb 42>; [98.00%]
  else
    goto <bb 41>; [2.00%]

  <bb 41> [0.49%]:
  ivtmp.1096_180 = (unsigned long) a_1(D);
  goto <bb 45>; [100.00%]

  <bb 42> [2.70%]:
  dum_99 = 1.0e+0 / prephitmp_357;
  i_100 = j_33 + 1;
  ivtmp.1118_403 = ivtmp.1168_429;

  <bb 43> [15.28%]:
  # i_283 = PHI <i_107(43), i_100(42)>
  # ivtmp.1118_405 = PHI <ivtmp.1118_404(43), ivtmp.1118_403(42)>
  _364 = (void *) ivtmp.1118_405;
  _105 = MEM[base: _364, offset: 0B];
  _106 = dum_99 * _105;
  _363 = (void *) ivtmp.1118_405;
  MEM[base: _363, offset: 0B] = _106;
  i_107 = i_283 + 1;
  ivtmp.1118_404 = ivtmp.1118_405 + 808;
  if (i_107 <= 100)
    goto <bb 43>; [82.35%]
  else
    goto <bb 44>; [17.65%]

  <bb 44> [2.69%]:
  if (i_100 != 101)
    goto <bb 10>; [84.01%]
  else
    goto <bb 41>; [15.99%]

  <bb 45> [1.94%]:
  # ii_253 = PHI <ii_170(52), -1(41)>
  # ivtmp.1089_184 = PHI <ivtmp.1089_183(52), 0(41)>
  # ivtmp.1096_182 = PHI <ivtmp.1096_181(52), ivtmp.1096_180(41)>
  i_113 = (int) ivtmp.1089_184;
  ip_122 = MEM[symbol: indx, index: ivtmp.1089_184, step: 4, offset: 0B];
  _123 = (long unsigned int) ip_122;
  _124 = _123 * 8;
  _125 = b_3(D) + _124;
  sum_126 = *_125;
  _129 = MEM[base: b_3(D), index: ivtmp.1089_184, step: 8, offset: 0B];
  *_125 = _129;
  if (ii_253 != -1)
    goto <bb 46>; [50.00%]
  else
    goto <bb 50>; [50.00%]

  <bb 46> [0.97%]:
  if (i_113 > ii_253)
    goto <bb 47>; [85.00%]
  else
    goto <bb 52>; [15.00%]

  <bb 47> [0.82%]:
  _132 = (double[101] *) ivtmp.1096_182;
  _206 = (unsigned int) ivtmp.1089_184;
  _205 = (unsigned int) ii_253;
  _271 = -_205;
  _23 = _206 + 4294967295;
  _201 = _23 - _205;
  _200 = (sizetype) _201;
  _196 = _200 + 1;
  _186 = _196 * 8;
  _212 = (sizetype) ii_253;
  _211 = _212 * 8;
  _210 = _132 + _211;
  _209 = (sizetype) ii_253;
  _208 = _209 * 8;
  _207 = b_3(D) + _208;

  <bb 48> [5.50%]:
  # sum_203 = PHI <sum_141(48), sum_126(47)>
  # ivtmp.1086_214 = PHI <ivtmp.1086_213(48), 0(47)>
  _134 = MEM[base: _210, index: ivtmp.1086_214, offset: 0B];
  _138 = MEM[base: _207, index: ivtmp.1086_214, offset: 0B];
  _139 = _134 * _138;
  sum_141 = sum_203 - _139;
  ivtmp.1086_213 = ivtmp.1086_214 + 8;
  if (ivtmp.1086_213 != _186)
    goto <bb 48>; [85.00%]
  else
    goto <bb 49>; [15.00%]

  <bb 49> [0.83%]:
  # sum_409 = PHI <sum_141(48)>
  goto <bb 52>; [100.00%]

  <bb 50> [0.97%]:
  if (sum_126 != 0.0)
    goto <bb 51>; [50.00%]
  else
    goto <bb 52>; [50.00%]

  <bb 51> [0.49%]:

  <bb 52> [1.94%]:
  # ii_170 = PHI <ii_253(49), -1(50), i_113(51), ii_253(46)>
  # sum_143 = PHI <sum_409(49), sum_126(50), sum_126(51), sum_126(46)>
  MEM[base: b_3(D), index: ivtmp.1089_184, step: 8, offset: 0B] = sum_143;
  ivtmp.1089_183 = ivtmp.1089_184 + 1;
  ivtmp.1096_181 = ivtmp.1096_182 + 808;
  if (ivtmp.1089_183 != 101)
    goto <bb 45>; [85.00%]
  else
    goto <bb 53>; [15.00%]

  <bb 53> [0.29%]:
  _395 = a_1(D) + 81600;
  ivtmp.1065_322 = (unsigned long) _395;
  _17 = a_1(D) + 80800;
  ivtmp.1071_16 = (unsigned long) _17;
  goto <bb 55>; [100.00%]

  <bb 54> [1.60%]:
  ivtmp.1060_78 = ivtmp.1060_74 - 1;
  ivtmp.1065_400 = ivtmp.1065_79 - 816;
  ivtmp.1071_272 = ivtmp.1071_273 - 808;
  ivtmp.1074_19 = ivtmp.1074_110 - 1;

  <bb 55> [1.94%]:
  # i_286 = PHI <_379(54), 100(53)>
  # ivtmp.1060_74 = PHI <ivtmp.1060_78(54), 100(53)>
  # ivtmp.1065_79 = PHI <ivtmp.1065_400(54), ivtmp.1065_322(53)>
  # ivtmp.1071_273 = PHI <ivtmp.1071_272(54), ivtmp.1071_16(53)>
  # ivtmp.1074_110 = PHI <ivtmp.1074_19(54), 101(53)>
  sum_150 = MEM[base: b_3(D), index: ivtmp.1060_74, step: 8, offset: 0B];
  _377 = (double[101] *) ivtmp.1071_273;
  _394 = (void *) ivtmp.1065_79;
  pretmp_378 = MEM[base: _394, offset: 0B];
  _379 = i_286 + -1;
  i_190 = (int) ivtmp.1060_74;
  if (i_190 != 100)
    goto <bb 56>; [98.00%]
  else
    goto <bb 60>; [2.00%]

  <bb 56> [1.90%]:
  ivtmp.1057_298 = ivtmp.1074_110 * 8;
  _316 = ivtmp.1074_110;
  _189 = (unsigned int) _379;
  _215 = 98 - _189;
  _260 = _215;
  _401 = (sizetype) _260;
  _13 = _316 + 1;
  _308 = _13 + _401;
  _391 = _308 * 8;

  <bb 57> [10.78%]:
  # sum_288 = PHI <sum_162(57), sum_150(56)>
  # ivtmp.1057_307 = PHI <ivtmp.1057_309(57), ivtmp.1057_298(56)>
  _155 = MEM[base: _377, index: ivtmp.1057_307, offset: 0B];
  _159 = MEM[base: b_3(D), index: ivtmp.1057_307, offset: 0B];
  _160 = _155 * _159;
  sum_162 = sum_288 - _160;
  ivtmp.1057_309 = ivtmp.1057_307 + 8;
  if (ivtmp.1057_309 != _391)
    goto <bb 57>; [82.36%]
  else
    goto <bb 58>; [17.64%]

  <bb 58> [1.90%]:
  # sum_408 = PHI <sum_162(57)>
  _168 = sum_408 / pretmp_378;
  MEM[base: b_3(D), index: ivtmp.1060_74, step: 8, offset: 0B] = _168;
  if (_379 != -1)
    goto <bb 54>; [82.01%]
  else
    goto <bb 59>; [17.99%]

  <bb 59> [0.93%]:
  # _4 = PHI <0(6), 1(58)>
  indx ={v} {CLOBBER};
  return _4;

  <bb 60> [0.04%]:
  _161 = sum_150 / pretmp_378;
  MEM[base: b_3(D), index: ivtmp.1060_74, step: 8, offset: 0B] = _161;
  goto <bb 54>; [100.00%]

}



;; Function DoFPUTransIteration (DoFPUTransIteration, funcdef_no=70, decl_uid=4582, cgraph_uid=70, symbol_order=95)

;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 5, latch 10
;;  depth 1, outer 0
;;  nodes: 5 10 9 8 7 6
;;
;; Loop 3
;;  header 8, latch 8
;;  depth 2, outer 1
;;  nodes: 8
;;
;; Loop 4
;;  header 6, latch 6
;;  depth 2, outer 1
;;  nodes: 6
;;
;; Loop 2
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 5 11 }
;; 5 succs { 6 }
;; 6 succs { 6 7 }
;; 7 succs { 8 }
;; 8 succs { 8 9 }
;; 9 succs { 10 11 }
;; 10 succs { 5 }
;; 11 succs { 1 }
DoFPUTransIteration (fardouble * abase, fardouble * bbase, long unsigned int arraysize)
{
  double D.7821;
  double D.7811;
  double D.7801;
  double D.7795;
  double D.7784;
  double D.7778;
  double D.7767;
  double D.7761;
  double D.7750;
  int nsteps;
  double rvalue;
  double dx;
  double x;
  double D.7746;
  int nsteps;
  double rvalue;
  double dx;
  double x;
  double D.7737;
  double D.7721;
  double D.7710;
  double D.7699;
  int nsteps;
  double rvalue;
  double dx;
  double x;
  double D.7695;
  long unsigned int elapsed;
  long unsigned int i;
  double _2;
  double _3;
  double _4;
  long unsigned int _20;
  unsigned int ivtmp_30;
  unsigned int ivtmp_32;
  unsigned int ivtmp_35;
  double _43;
  unsigned int ivtmp_45;
  double _57;
  double _58;
  unsigned int ivtmp_69;
  double _92;
  double _95;
  double _97;
  complex double prephitmp_108;
  double _113;
  double _115;
  double _119;
  double _132;
  double _133;
  unsigned int ivtmp_137;
  double _147;
  double _148;
  double _149;
  double _150;
  double _151;
  double _167;
  double _168;
  double _169;
  complex double sincostmp_176;
  double _177;
  double _185;
  double _186;
  double _187;
  double _188;
  double _189;
  double _199;
  double _200;
  complex double _205;

  <bb 2> [2.65%]:
  elapsed_14 = StartStopwatch ();

  <bb 3> [15.00%]:
  # x_89 = PHI <x_34(3), 0.0(2)>
  # rvalue_224 = PHI <rvalue_37(3), 5.0e-1(2)>
  # ivtmp_32 = PHI <ivtmp_30(3), 198(2)>
  x_34 = x_89 + 1.00000000000000002081668171172168513294309377670288085938e-2;
  _57 = x_34 + 1.0e+0;
  _58 = pow (_57, x_34);
  rvalue_37 = _58 + rvalue_224;
  ivtmp_30 = ivtmp_32 - 1;
  if (ivtmp_30 != 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 4> [2.65%]:
  # rvalue_131 = PHI <rvalue_37(3)>
  _43 = rvalue_131 + 4.5e+0;
  rvalue_44 = _43 * 1.00000000000000002081668171172168513294309377670288085938e-2;
  _2 = rvalue_44 * 5.0e-1;
  *abase_16(D) = _2;
  if (arraysize_18(D) > 1)
    goto <bb 5>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 5> [15.00%]:
  # i_219 = PHI <i_26(10), 1(4)>
  # prephitmp_108 = PHI <_205(10), __complex__ (1.0e+0, 0.0)(4)>
  _3 = (double) i_219;
  _4 = _3 * 3.141592653589793115997963468544185161590576171875e+0;
  _132 = REALPART_EXPR <prephitmp_108>;
  rvalue_103 = _132 * 5.0e-1;

  <bb 6> [85.00%]:
  # x_28 = PHI <x_106(6), 0.0(5)>
  # rvalue_29 = PHI <rvalue_109(6), rvalue_103(5)>
  # ivtmp_45 = PHI <ivtmp_35(6), 198(5)>
  x_106 = x_28 + 1.00000000000000002081668171172168513294309377670288085938e-2;
  _147 = x_106 + 1.0e+0;
  _148 = pow (_147, x_106);
  _149 = _4 * x_106;
  _150 = cos (_149);
  _151 = _148 * _150;
  rvalue_109 = rvalue_29 + _151;
  ivtmp_35 = ivtmp_45 - 1;
  if (ivtmp_35 != 0)
    goto <bb 6>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 7> [15.00%]:
  # rvalue_212 = PHI <rvalue_109(6)>
  _167 = _4 * 2.0e+0;
  sincostmp_176 = __builtin_cexpi (_167);
  _168 = REALPART_EXPR <sincostmp_176>;
  _169 = _168 * 9.0e+0;
  _113 = _169 * 5.0e-1;
  _115 = rvalue_212 + _113;
  rvalue_116 = _115 * 1.00000000000000002081668171172168513294309377670288085938e-2;
  MEM[base: abase_16(D), index: i_219, step: 8, offset: 0B] = rvalue_116;
  _177 = IMAGPART_EXPR <prephitmp_108>;
  rvalue_85 = _177 * 5.0e-1;

  <bb 8> [85.00%]:
  # x_107 = PHI <x_88(8), 0.0(7)>
  # rvalue_227 = PHI <rvalue_91(8), rvalue_85(7)>
  # ivtmp_137 = PHI <ivtmp_69(8), 198(7)>
  x_88 = x_107 + 1.00000000000000002081668171172168513294309377670288085938e-2;
  _185 = x_88 + 1.0e+0;
  _186 = pow (_185, x_88);
  _187 = _4 * x_88;
  _188 = sin (_187);
  _189 = _186 * _188;
  rvalue_91 = _189 + rvalue_227;
  ivtmp_69 = ivtmp_137 - 1;
  if (ivtmp_69 != 0)
    goto <bb 8>; [85.00%]
  else
    goto <bb 9>; [15.00%]

  <bb 9> [15.00%]:
  # rvalue_222 = PHI <rvalue_91(8)>
  _199 = IMAGPART_EXPR <sincostmp_176>;
  _200 = _199 * 9.0e+0;
  _95 = _200 * 5.0e-1;
  _97 = rvalue_222 + _95;
  rvalue_98 = _97 * 1.00000000000000002081668171172168513294309377670288085938e-2;
  MEM[base: bbase_23(D), index: i_219, step: 8, offset: 0B] = rvalue_98;
  i_26 = i_219 + 1;
  if (i_26 != arraysize_18(D))
    goto <bb 10>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 10> [12.75%]:
  _92 = (double) i_26;
  _119 = _92 * 3.141592653589793115997963468544185161590576171875e+0;
  _133 = _119 * 0.0;
  _205 = __builtin_cexpi (_133);
  goto <bb 5>; [100.00%]

  <bb 11> [2.65%]:
  _20 = StopStopwatch (elapsed_14);
  return _20;

}



;; Function cipher_idea (cipher_idea, funcdef_no=88, decl_uid=4647, cgraph_uid=88, symbol_order=113)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 2
;;  header 3, latch 23
;;  depth 1, outer 0
;;  nodes: 3 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 4 7 }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 12 }
;; 9 succs { 10 11 }
;; 10 succs { 13 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 17 }
;; 14 succs { 15 16 }
;; 15 succs { 18 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 22 }
;; 19 succs { 20 21 }
;; 20 succs { 23 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 3 24 }
;; 24 succs { 25 28 }
;; 25 succs { 26 27 }
;; 26 succs { 29 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 30 33 }
;; 30 succs { 31 32 }
;; 31 succs { 34 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 1 }
cipher_idea (u16 * in, u16 * out, u16 * Z)
{
  register u32 p;
  u16 D.7896;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7892;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7888;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7884;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7880;
  u16 a;
  u16 b;
  register u32 p;
  u16 D.7876;
  u16 a;
  u16 b;
  int r;
  register u16 t2;
  register u16 t1;
  register u16 x4;
  register u16 x3;
  register u16 x2;
  register u16 x1;
  short unsigned int _1;
  short unsigned int _15;
  int _16;
  int _17;
  short unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  int _23;
  int _24;
  short unsigned int _27;
  short unsigned int _28;
  short unsigned int _29;
  short unsigned int _30;
  unsigned int _44;
  int _63;
  int _67;
  int _68;
  short unsigned int _69;
  short unsigned int _70;
  short unsigned int _74;
  short unsigned int _76;
  short unsigned int _81;
  short unsigned int _82;
  short unsigned int _83;
  short unsigned int _84;
  short unsigned int _85;
  short unsigned int _86;
  short unsigned int _87;
  short unsigned int _88;
  short unsigned int _89;
  short unsigned int _90;
  _Bool _91;
  short unsigned int _92;
  unsigned int _103;
  int _106;
  int _116;
  int _117;
  short unsigned int _118;
  short unsigned int _119;
  short unsigned int _120;
  short unsigned int _130;
  u16 * _131;
  unsigned long _146;
  _Bool _147;
  int _149;
  unsigned int _152;
  short unsigned int _154;
  _Bool _155;
  short unsigned int _156;
  short unsigned int _157;
  int _163;
  unsigned int _166;
  short unsigned int _168;
  _Bool _169;
  short unsigned int _170;
  short unsigned int _171;
  u16 * _195;
  short unsigned int _196;
  short unsigned int _197;
  short unsigned int _198;
  short unsigned int _205;
  short unsigned int _206;
  short unsigned int _207;
  short unsigned int _208;
  short unsigned int _209;
  short unsigned int _211;
  int _212;
  int _213;
  int _214;
  unsigned int _217;
  short unsigned int _219;
  _Bool _220;
  short unsigned int _221;
  short unsigned int _222;
  short unsigned int _223;
  short unsigned int _224;
  short unsigned int _227;
  short unsigned int _228;
  short unsigned int _229;
  int _230;
  int _231;
  int _232;
  unsigned int _235;
  short unsigned int _237;
  _Bool _238;
  short unsigned int _239;
  short unsigned int _240;
  short unsigned int _241;
  unsigned long _247;
  short unsigned int _248;

  <bb 2> [12.50%]:
  x1_34 = *in_32(D);
  x2_35 = MEM[(u16 *)in_32(D) + 2B];
  x3_36 = MEM[(u16 *)in_32(D) + 4B];
  x4_37 = MEM[(u16 *)in_32(D) + 6B];
  _131 = Z_38(D) + 96;

  <bb 3> [100.00%]:
  # Z_145 = PHI <Z_38(D)(2), Z_226(23)>
  # x1_144 = PHI <x1_34(2), x1_243(23)>
  # x2_134 = PHI <x2_35(2), x2_246(23)>
  # x3_133 = PHI <x3_36(2), t2_245(23)>
  # x4_132 = PHI <x4_37(2), x4_244(23)>
  _120 = MEM[base: Z_145, offset: 0B];
  if (x1_144 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [50.00%]:
  if (_120 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [25.00%]:
  _117 = (int) x1_144;
  _116 = (int) _120;
  _106 = _116 * _117;
  p_105 = (u32) _106;
  b_104 = (u16) _106;
  _103 = p_105 >> 16;
  a_102 = (u16) _103;
  _27 = -a_102;
  _92 = b_104 - a_102;
  _91 = b_104 < a_102;
  _90 = (short unsigned int) _91;
  _89 = _92 + _90;
  goto <bb 8>; [100.00%]

  <bb 6> [25.00%]:
  _118 = 1 - x1_144;
  goto <bb 8>; [100.00%]

  <bb 7> [50.00%]:
  _119 = 1 - _120;

  <bb 8> [100.00%]:
  # _85 = PHI <_119(7), _118(6), _89(5)>
  _81 = MEM[base: Z_145, offset: 2B];
  x2_77 = x2_134 + _81;
  _76 = MEM[base: Z_145, offset: 4B];
  x3_75 = x3_133 + _76;
  _74 = MEM[base: Z_145, offset: 6B];
  if (x4_132 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 9> [50.00%]:
  if (_74 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [25.00%]:
  _68 = (int) x4_132;
  _67 = (int) _74;
  _63 = _67 * _68;
  p_62 = (u32) _63;
  b_61 = (u16) _63;
  _44 = p_62 >> 16;
  a_31 = (u16) _44;
  _28 = -a_31;
  _1 = b_61 - a_31;
  _147 = b_61 < a_31;
  _205 = (short unsigned int) _147;
  _206 = _1 + _205;
  goto <bb 13>; [100.00%]

  <bb 11> [25.00%]:
  _69 = 1 - x4_132;
  goto <bb 13>; [100.00%]

  <bb 12> [50.00%]:
  _70 = 1 - _74;

  <bb 13> [100.00%]:
  # _207 = PHI <_70(12), _69(11), _206(10)>
  _208 = MEM[base: Z_145, offset: 8B];
  if (x3_75 != _85)
    goto <bb 14>; [66.00%]
  else
    goto <bb 17>; [34.00%]

  <bb 14> [66.00%]:
  t2_210 = _85 ^ x3_75;
  if (_208 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [33.00%]:
  _212 = (int) t2_210;
  _213 = (int) _208;
  _214 = _213 * _212;
  p_215 = (u32) _214;
  b_216 = (u16) _214;
  _217 = p_215 >> 16;
  a_218 = (u16) _217;
  _29 = -a_218;
  _219 = b_216 - a_218;
  _220 = b_216 < a_218;
  _221 = (short unsigned int) _220;
  _222 = _219 + _221;
  goto <bb 18>; [100.00%]

  <bb 16> [33.00%]:
  _211 = 1 - t2_210;
  goto <bb 18>; [100.00%]

  <bb 17> [34.00%]:
  _209 = 1 - _208;

  <bb 18> [100.00%]:
  # _223 = PHI <_209(17), _211(16), _222(15)>
  _224 = _207 ^ x2_77;
  t1_225 = _223 + _224;
  _146 = (unsigned long) Z_145;
  _247 = _146 + 12;
  _195 = (u16 *) _247;
  Z_226 = _195;
  _227 = MEM[base: Z_226, offset: -2B];
  if (t1_225 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 19> [50.00%]:
  if (_227 != 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 20> [25.00%]:
  _230 = (int) t1_225;
  _231 = (int) _227;
  _232 = _231 * _230;
  p_233 = (u32) _232;
  b_234 = (u16) _232;
  _235 = p_233 >> 16;
  a_236 = (u16) _235;
  _30 = -a_236;
  _237 = b_234 - a_236;
  _238 = b_234 < a_236;
  _239 = (short unsigned int) _238;
  _240 = _237 + _239;
  goto <bb 23>; [100.00%]

  <bb 21> [25.00%]:
  _229 = 1 - t1_225;
  goto <bb 23>; [100.00%]

  <bb 22> [50.00%]:
  _228 = 1 - _227;

  <bb 23> [100.00%]:
  # _241 = PHI <_228(22), _229(21), _240(20)>
  t2_242 = _241 + _223;
  x1_243 = _241 ^ _85;
  x4_244 = t2_242 ^ _207;
  t2_245 = t2_242 ^ x2_77;
  x2_246 = _241 ^ x3_75;
  if (Z_226 != _131)
    goto <bb 3>; [87.50%]
  else
    goto <bb 24>; [12.50%]

  <bb 24> [12.50%]:
  # t2_203 = PHI <t2_242(23)>
  # x1_202 = PHI <x1_243(23)>
  # x4_201 = PHI <x4_244(23)>
  # t2_200 = PHI <t2_245(23)>
  # x2_199 = PHI <x2_246(23)>
  # _198 = PHI <_241(23)>
  # _197 = PHI <_207(23)>
  # _196 = PHI <_85(23)>
  Z_204 = Z_38(D) + 84;
  _15 = MEM[(u16 *)Z_204 + 12B];
  if (_198 != _196)
    goto <bb 25>; [66.00%]
  else
    goto <bb 28>; [34.00%]

  <bb 25> [8.25%]:
  if (_15 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 26> [4.12%]:
  _17 = (int) x1_202;
  _16 = (int) _15;
  _149 = _16 * _17;
  p_150 = (u32) _149;
  b_151 = (u16) _149;
  _152 = p_150 >> 16;
  a_153 = (u16) _152;
  _248 = -a_153;
  _154 = b_151 - a_153;
  _155 = b_151 < a_153;
  _156 = (short unsigned int) _155;
  _157 = _154 + _156;
  goto <bb 29>; [100.00%]

  <bb 27> [4.12%]:
  _86 = 1 - x1_202;
  goto <bb 29>; [100.00%]

  <bb 28> [4.25%]:
  _87 = 1 - _15;

  <bb 29> [12.50%]:
  # _88 = PHI <_157(26), _86(27), _87(28)>
  *out_54(D) = _88;
  _18 = MEM[(u16 *)Z_204 + 14B];
  _19 = t2_200 + _18;
  MEM[(u16 *)out_54(D) + 2B] = _19;
  _20 = MEM[(u16 *)Z_204 + 16B];
  _21 = x2_199 + _20;
  MEM[(u16 *)out_54(D) + 4B] = _21;
  _22 = MEM[(u16 *)Z_204 + 18B];
  if (t2_203 != _197)
    goto <bb 30>; [66.00%]
  else
    goto <bb 33>; [34.00%]

  <bb 30> [8.25%]:
  if (_22 != 0)
    goto <bb 31>; [50.00%]
  else
    goto <bb 32>; [50.00%]

  <bb 31> [4.12%]:
  _24 = (int) x4_201;
  _23 = (int) _22;
  _163 = _23 * _24;
  p_164 = (u32) _163;
  b_165 = (u16) _163;
  _166 = p_164 >> 16;
  a_167 = (u16) _166;
  _130 = -a_167;
  _168 = b_165 - a_167;
  _169 = b_165 < a_167;
  _170 = (short unsigned int) _169;
  _171 = _168 + _170;
  goto <bb 34>; [100.00%]

  <bb 32> [4.12%]:
  _82 = 1 - x4_201;
  goto <bb 34>; [100.00%]

  <bb 33> [4.25%]:
  _83 = 1 - _22;

  <bb 34> [12.50%]:
  # _84 = PHI <_171(31), _82(32), _83(33)>
  MEM[(u16 *)out_54(D) + 6B] = _84;
  return;

}



;; Function DoNumSortIteration (DoNumSortIteration, funcdef_no=53, decl_uid=4494, cgraph_uid=53, symbol_order=78)

;; 13 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
;;
;; Loop 1
;;  header 24, latch 44
;;  depth 1, outer 0
;;  nodes: 24 44 34 42 41 40 39 38 35 37 36 43 32 31 30 28 25 26 27 33 29
;;
;; Loop 5
;;  header 43, latch 42
;;  depth 2, outer 1
;;  nodes: 43 42 41 40 39 38 35 37 36
;;
;; Loop 8
;;  header 35, latch 41
;;  depth 3, outer 5
;;  nodes: 35 41 40 39 38 37 36
;;
;; Loop 6
;;  header 33, latch 32
;;  depth 2, outer 1
;;  nodes: 33 32 31 30 28 25 26 27 29
;;
;; Loop 7
;;  header 30, latch 29
;;  depth 3, outer 6
;;  nodes: 30 29 28 25 26 27 31
;;
;; Loop 9
;;  header 31, latch 28
;;  depth 4, outer 7
;;  nodes: 31 28 25 26 27
;;
;; Loop 2
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20 6 19 18 17 16 7 15 13 14 8 12 11 10 9
;;
;; Loop 10
;;  header 17, latch 17
;;  depth 2, outer 2
;;  nodes: 17
;;
;; Loop 3
;;  header 12, latch 12
;;  depth 2, outer 2
;;  nodes: 12
;;
;; Loop 4
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 21 }
;; 6 succs { 7 20 }
;; 7 succs { 16 8 }
;; 8 succs { 9 14 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 12 13 }
;; 13 succs { 14 18 }
;; 14 succs { 15 18 }
;; 15 succs { 18 }
;; 16 succs { 17 }
;; 17 succs { 17 19 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 6 22 }
;; 22 succs { 23 45 }
;; 23 succs { 24 }
;; 24 succs { 33 34 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 31 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 25 32 }
;; 32 succs { 33 34 }
;; 33 succs { 30 }
;; 34 succs { 43 44 }
;; 35 succs { 36 38 }
;; 36 succs { 38 37 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 41 }
;; 40 succs { 41 }
;; 41 succs { 35 42 }
;; 42 succs { 43 44 }
;; 43 succs { 35 }
;; 44 succs { 24 45 }
;; 45 succs { 1 }
DoNumSortIteration (farlong * arraybase, long unsigned int arraysize, unsigned int numarrays)
{
  unsigned long ivtmp.1305;
  sizetype ivtmp.1285;
  unsigned long ivtmp.1283;
  unsigned long ivtmp.1274;
  long unsigned int ivtmp.1265;
  vector(2) long int * vectp.1257;
  vector(2) long int * vectp.1256;
  vector(2) long int vect__33.1255;
  vector(2) long int * vectp_arraybase.1254;
  vector(2) long int * vectp_arraybase.1253;
  long int tmp.1252;
  long unsigned int tmp.1251;
  long unsigned int niters_vector_mult_vf.1250;
  long unsigned int bnd.1249;
  long unsigned int niters.1248;
  long unsigned int prolog_loop_niters.1247;
  vector(2) long int * vectp_arraybase.1246;
  long unsigned int niters.1245;
  long unsigned int k;
  long unsigned int i;
  long unsigned int k;
  long unsigned int i;
  long unsigned int i;
  long int i;
  farlong * darray;
  unsigned int numarrays;
  long unsigned int i;
  long unsigned int elapsed;
  long unsigned int _1;
  farlong * _4;
  long int _5;
  long unsigned int _6;
  long unsigned int _12;
  int _19;
  long unsigned int _21;
  long int _23;
  long unsigned int i.12_24;
  long unsigned int _26;
  long unsigned int i.12_29;
  farlong * _30;
  farlong * _31;
  long int _32;
  long int _42;
  long int _45;
  long unsigned int _47;
  long unsigned int i.12_49;
  sizetype _51;
  sizetype _52;
  farlong * _53;
  long int _54;
  long unsigned int _56;
  farlong * _57;
  long int _58;
  long unsigned int _61;
  farlong * _62;
  long unsigned int _63;
  long unsigned int _65;
  farlong * _66;
  long int _67;
  sizetype _69;
  sizetype _70;
  farlong * _71;
  long int _72;
  long unsigned int _74;
  farlong * _75;
  long int _76;
  long unsigned int i.12_79;
  sizetype _83;
  unsigned long _84;
  long int _90;
  farlong * _106;
  long unsigned int _114;
  _Bool _115;
  unsigned long _116;
  _Bool _117;
  long int _118;
  farlong * prephitmp_120;
  long int prephitmp_121;
  unsigned long _125;
  _Bool _128;
  unsigned long _130;
  long unsigned int _131;
  farlong * _132;
  _Bool _133;
  long unsigned int _135;
  long unsigned int _136;
  farlong * _137;
  long int pretmp_138;
  farlong * prephitmp_140;
  long int prephitmp_141;
  long unsigned int _142;
  void * _145;
  long unsigned int _146;
  _Bool _147;
  long unsigned int _149;
  farlong * _150;
  long int pretmp_151;
  void * _152;
  farlong * prephitmp_153;
  long int prephitmp_154;
  _Bool _155;
  _Bool _156;
  _Bool _157;
  _Bool _158;
  _Bool _159;
  long int _161;
  farlong * _163;
  sizetype _164;
  _Bool _165;
  _Bool _166;
  long unsigned int _172;
  long unsigned int _173;
  long unsigned int i.12_174;
  long int _181;
  sizetype _184;
  sizetype _189;
  long unsigned int _190;
  unsigned long _197;
  unsigned long _198;
  unsigned long _199;
  unsigned long _201;
  farlong * _202;
  unsigned long _203;
  unsigned long _204;
  unsigned long _205;
  unsigned long _206;
  farlong * _207;
  void * _211;
  unsigned long _212;
  unsigned long _213;
  unsigned long _214;

  <bb 2> [0.47%]:
  randnum (13);
  if (arraysize_10(D) != 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 5>; [15.00%]

  <bb 3> [0.40%]:
  ivtmp.1305_210 = (unsigned long) arraybase_9(D);
  _212 = arraysize_10(D) * 8;
  _213 = (unsigned long) arraybase_9(D);
  _214 = _213 + _212;

  <bb 4> [2.65%]:
  # ivtmp.1305_208 = PHI <ivtmp.1305_209(4), ivtmp.1305_210(3)>
  _19 = randnum (0);
  _23 = (long int) _19;
  _211 = (void *) ivtmp.1305_208;
  MEM[base: _211, offset: 0B] = _23;
  ivtmp.1305_209 = ivtmp.1305_208 + 8;
  if (ivtmp.1305_209 != _214)
    goto <bb 4>; [85.00%]
  else
    goto <bb 5>; [15.00%]

  <bb 5> [0.47%]:
  _26 = arraysize_10(D) * 8;
  _146 = arraysize_10(D) + 2;
  _135 = _146 * 8;
  _197 = arraysize_10(D) * 8;
  _114 = -_26;
  _198 = _197 - _26;
  _131 = arraysize_10(D) * 8;
  _203 = arraysize_10(D) * 8;
  _21 = -_26;
  _204 = _203 - _26;
  _130 = (unsigned long) arraybase_9(D);
  _116 = _130 >> 3;
  _84 = -_116;
  prolog_loop_niters.1247_139 = _84 & 1;
  _172 = arraysize_10(D) + 18446744073709551615;
  _173 = prolog_loop_niters.1247_139 + 1;
  niters.1248_48 = arraysize_10(D) - prolog_loop_niters.1247_139;
  bnd.1249_177 = niters.1248_48 >> 1;
  _184 = prolog_loop_niters.1247_139 * 8;
  vectp_arraybase.1254_183 = arraybase_9(D) + _184;
  _189 = prolog_loop_niters.1247_139 * 8;
  _190 = _189 + _131;
  niters_vector_mult_vf.1250_178 = bnd.1249_177 << 1;
  _181 = (long int) niters_vector_mult_vf.1250_178;
  goto <bb 21>; [100.00%]

  <bb 6> [2.65%]:
  darray_28 = darray_27 + _26;
  if (arraysize_10(D) != 0)
    goto <bb 7>; [85.00%]
  else
    goto <bb 20>; [15.00%]

  <bb 7> [2.25%]:
  _147 = arraysize_10(D) > 24;
  _199 = (unsigned long) darray_28;
  _125 = _198 + 16;
  _201 = _125 + _199;
  _202 = (farlong *) _201;
  _133 = arraybase_9(D) >= _202;
  _132 = arraybase_9(D) + 16;
  _205 = (unsigned long) darray_28;
  _206 = _205 + _204;
  _207 = (farlong *) _206;
  _128 = _207 >= _132;
  _117 = _133 | _128;
  _115 = _117 & _147;
  if (_115 != 0)
    goto <bb 8>; [80.00%]
  else
    goto <bb 16>; [20.00%]

  <bb 8> [1.80%]:
  if (_172 < _173)
    goto <bb 14>; [10.00%]
  else
    goto <bb 9>; [90.00%]

  <bb 9> [1.62%]:
  if (prolog_loop_niters.1247_139 == 0)
    goto <bb 11>; [33.34%]
  else
    goto <bb 10>; [66.66%]

  <bb 10> [1.08%]:
  _163 = arraybase_9(D);
  _161 = *_163;
  MEM[base: darray_28, offset: 0B] = _161;

  <bb 11> [1.62%]:
  # i.12_24 = PHI <1(10), 0(9)>
  # i_17 = PHI <1(10), 0(9)>
  vectp.1257_188 = darray_27 + _190;

  <bb 12> [9.72%]:
  # ivtmp.1283_34 = PHI <ivtmp.1283_39(12), 0(11)>
  # ivtmp.1285_99 = PHI <ivtmp.1285_196(12), 0(11)>
  vect__33.1255_187 = MEM[base: vectp_arraybase.1254_183, index: ivtmp.1285_99, offset: 0B];
  MEM[base: vectp.1257_188, index: ivtmp.1285_99, offset: 0B] = vect__33.1255_187;
  ivtmp.1283_39 = ivtmp.1283_34 + 1;
  ivtmp.1285_196 = ivtmp.1285_99 + 16;
  if (ivtmp.1283_39 < bnd.1249_177)
    goto <bb 12>; [83.34%]
  else
    goto <bb 13>; [16.66%]

  <bb 13> [1.62%]:
  tmp.1251_179 = i.12_24 + niters_vector_mult_vf.1250_178;
  tmp.1252_180 = i_17 + _181;
  if (niters.1248_48 == niters_vector_mult_vf.1250_178)
    goto <bb 18>; [33.34%]
  else
    goto <bb 14>; [66.66%]

  <bb 14> [1.26%]:
  # i.12_174 = PHI <tmp.1251_179(13), 0(8)>
  # i_175 = PHI <tmp.1252_180(13), 0(8)>
  _142 = i.12_174 * 8;
  _30 = arraybase_9(D) + _142;
  _31 = darray_28 + _142;
  _32 = *_30;
  *_31 = _32;
  i_35 = i_175 + 1;
  i.12_29 = (long unsigned int) i_35;
  if (arraysize_10(D) > i.12_29)
    goto <bb 15>; [85.00%]
  else
    goto <bb 18>; [15.00%]

  <bb 15> [1.07%]:
  # i.12_49 = PHI <i.12_29(14)>
  # i_50 = PHI <i_35(14)>
  _61 = i.12_49 * 8;
  _62 = arraybase_9(D) + _61;
  _66 = darray_28 + _61;
  _67 = *_62;
  *_66 = _67;
  i_78 = i_50 + 1;
  i.12_79 = (long unsigned int) i_78;
  goto <bb 18>; [100.00%]

  <bb 16> [0.45%]:
  _5 = (long int) arraysize_10(D);

  <bb 17> [3.00%]:
  # i_108 = PHI <0(16), i_87(17)>
  _164 = (sizetype) i_108;
  _90 = MEM[base: arraybase_9(D), index: _164, step: 8, offset: 0B];
  _83 = (sizetype) i_108;
  MEM[base: darray_28, index: _83, step: 8, offset: 0B] = _90;
  i_87 = i_108 + 1;
  if (i_87 != _5)
    goto <bb 17>; [85.00%]
  else
    goto <bb 19>; [15.00%]

  <bb 18> [1.80%]:

  <bb 19> [2.25%]:

  <bb 20> [2.65%]:

  <bb 21> [3.11%]:
  # numarrays_36 = PHI <numarrays_11(D)(5), numarrays_37(20)>
  # darray_27 = PHI <arraybase_9(D)(5), darray_28(20)>
  numarrays_37 = numarrays_36 + 4294967295;
  if (numarrays_37 != 0)
    goto <bb 6>; [85.00%]
  else
    goto <bb 22>; [15.00%]

  <bb 22> [0.47%]:
  elapsed_14 = StartStopwatch ();
  _12 = (long unsigned int) numarrays_11(D);
  if (_12 != 0)
    goto <bb 23>; [85.00%]
  else
    goto <bb 45>; [15.00%]

  <bb 23> [0.40%]:
  _1 = arraysize_10(D) + 18446744073709551615;
  i_38 = _1 >> 1;
  ivtmp.1274_144 = (unsigned long) arraybase_9(D);
  _63 = (long unsigned int) numarrays_11(D);

  <bb 24> [2.65%]:
  # i_126 = PHI <i_18(44), 0(23)>
  # ivtmp.1274_80 = PHI <ivtmp.1274_143(44), ivtmp.1274_144(23)>
  _4 = (farlong *) ivtmp.1274_80;
  if (i_38 != 0)
    goto <bb 33>; [85.00%]
  else
    goto <bb 34>; [15.00%]

  <bb 25> [85.00%]:
  _136 = _47 * 8;
  _137 = _4 + _136;
  pretmp_138 = *_137;
  if (_1 > _47)
    goto <bb 26>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 26> [42.50%]:
  _51 = _47 + 1;
  _52 = _51 * 8;
  _53 = _4 + _52;
  _54 = *_53;
  if (_54 > pretmp_138)
    goto <bb 27>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 27> [21.25%]:

  <bb 28> [85.00%]:
  # k_59 = PHI <_47(25), _47(26), _51(27)>
  # prephitmp_140 = PHI <_137(25), _137(26), _53(27)>
  # prephitmp_141 = PHI <pretmp_138(25), pretmp_138(26), _54(27)>
  _56 = i_55 * 8;
  _57 = _4 + _56;
  _58 = *_57;
  if (_58 < prephitmp_141)
    goto <bb 29>; [50.00%]
  else
    goto <bb 31>; [50.00%]

  <bb 29> [42.50%]:
  # _106 = PHI <_57(28)>
  # _118 = PHI <_58(28)>
  # k_127 = PHI <k_59(28)>
  # prephitmp_120 = PHI <prephitmp_140(28)>
  # prephitmp_121 = PHI <prephitmp_141(28)>
  *prephitmp_120 = _118;
  *_106 = prephitmp_121;

  <bb 30> [57.50%]:
  # i_89 = PHI <i_124(33), k_127(29)>

  <bb 31> [100.00%]:
  # i_55 = PHI <i_89(30), arraysize_10(D)(28)>
  _47 = i_55 * 2;
  if (_1 >= _47)
    goto <bb 25>; [85.00%]
  else
    goto <bb 32>; [15.00%]

  <bb 32> [15.00%]:
  i_40 = i_124 + 18446744073709551615;
  if (i_40 != 0)
    goto <bb 33>; [85.00%]
  else
    goto <bb 34>; [15.00%]

  <bb 33> [15.00%]:
  # i_124 = PHI <i_40(32), i_38(24)>
  goto <bb 30>; [100.00%]

  <bb 34> [2.65%]:
  if (_1 != 0)
    goto <bb 43>; [85.00%]
  else
    goto <bb 44>; [15.00%]

  <bb 35> [85.00%]:
  # _6 = PHI <_65(41), 0(43)>
  # i_91 = PHI <i_64(41), 0(43)>
  _149 = _6 * 8;
  _150 = _4 + _149;
  pretmp_151 = *_150;
  if (_6 < i_122)
    goto <bb 36>; [50.00%]
  else
    goto <bb 38>; [50.00%]

  <bb 36> [42.50%]:
  _69 = _6 + 1;
  _70 = _69 * 8;
  _71 = _4 + _70;
  _72 = *_71;
  if (_72 > pretmp_151)
    goto <bb 38>; [50.00%]
  else
    goto <bb 37>; [50.00%]

  <bb 37> [21.25%]:

  <bb 38> [85.00%]:
  # k_77 = PHI <_6(35), _6(37), _69(36)>
  # prephitmp_153 = PHI <_150(35), _150(37), _71(36)>
  # prephitmp_154 = PHI <pretmp_151(35), pretmp_151(37), _72(36)>
  _74 = i_91 * 8;
  _75 = _4 + _74;
  _76 = *_75;
  if (_76 < prephitmp_154)
    goto <bb 39>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 39> [42.50%]:
  *prephitmp_153 = _76;
  *_75 = prephitmp_154;
  goto <bb 41>; [100.00%]

  <bb 40> [42.50%]:
  i_81 = ivtmp.1265_112;

  <bb 41> [85.00%]:
  # i_64 = PHI <i_81(40), k_77(39)>
  _65 = i_64 * 2;
  if (_65 <= i_122)
    goto <bb 35>; [82.35%]
  else
    goto <bb 42>; [17.65%]

  <bb 42> [15.00%]:
  _145 = (void *) ivtmp.1274_80;
  _42 = MEM[base: _145, offset: 0B];
  _45 = MEM[base: _4, index: i_122, step: 8, offset: 0B];
  _152 = (void *) ivtmp.1274_80;
  MEM[base: _152, offset: 0B] = _45;
  MEM[base: _4, index: i_122, step: 8, offset: 0B] = _42;
  i_46 = i_122 + 18446744073709551615;
  ivtmp.1265_111 = ivtmp.1265_112 - 1;
  if (i_46 != 0)
    goto <bb 43>; [85.00%]
  else
    goto <bb 44>; [15.00%]

  <bb 43> [15.00%]:
  # i_122 = PHI <i_46(42), _1(34)>
  # ivtmp.1265_112 = PHI <ivtmp.1265_111(42), arraysize_10(D)(34)>
  goto <bb 35>; [100.00%]

  <bb 44> [2.65%]:
  i_18 = i_126 + 1;
  ivtmp.1274_143 = ivtmp.1274_80 + _26;
  if (i_18 != _63)
    goto <bb 24>; [85.00%]
  else
    goto <bb 45>; [15.00%]

  <bb 45> [0.47%]:
  elapsed_16 = StopStopwatch (elapsed_14);
  return elapsed_16;

}



;; Function strsift (strsift, funcdef_no=63, decl_uid=4541, cgraph_uid=63, symbol_order=88)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;;
;; Loop 1
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 9 10 17 8 16 7 3 14 15 5 6 4
;; 2 succs { 12 }
;; 3 succs { 4 7 }
;; 4 succs { 14 15 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 16 17 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 3 13 }
;; 13 succs { 1 }
;; 14 succs { 7 5 }
;; 15 succs { 7 5 }
;; 16 succs { 9 8 }
;; 17 succs { 10 8 }
strsift (farulong * optrarray, faruchar * strarray, long unsigned int numstrings, long unsigned int i, long unsigned int j)
{
  int slen;
  int D.7998;
  int slen;
  int D.7992;
  unsigned char tlen;
  unsigned char temp[80];
  long unsigned int k;
  long unsigned int _1;
  int prephitmp_8;
  int _9;
  long unsigned int _10;
  farulong * prephitmp_11;
  faruchar * prephitmp_12;
  long unsigned int _13;
  faruchar * _14;
  int _15;
  int _16;
  long unsigned int _17;
  long unsigned int _18;
  faruchar * _19;
  long unsigned int _20;
  faruchar * _21;
  int _22;
  int _23;
  long unsigned int _24;
  long unsigned int _25;
  faruchar * _26;
  long unsigned int _27;
  unsigned char prephitmp_41;
  long unsigned int _55;
  farulong * _56;
  long unsigned int _57;
  faruchar * _58;
  unsigned char _59;
  int _60;
  long unsigned int _65;
  farulong * _66;
  long unsigned int _67;
  faruchar * _68;
  unsigned char _69;
  long unsigned int pretmp_84;
  unsigned char pretmp_85;
  int _86;
  farulong * _87;
  faruchar * _88;
  long unsigned int _89;
  long unsigned int _100;
  long unsigned int _103;
  long unsigned int _106;
  long unsigned int _109;

  <bb 2> [15.00%]:
  goto <bb 12>; [100.00%]

  <bb 3> [85.00%]:
  _89 = _27 * 8;
  _87 = optrarray_36(D) + _89;
  pretmp_84 = *_87;
  _88 = strarray_37(D) + pretmp_84;
  pretmp_85 = *_88;
  _86 = (int) pretmp_85;
  if (_27 < j_33(D))
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [42.50%]:
  _1 = _27 + 1;
  _55 = _1 * 8;
  _56 = optrarray_36(D) + _55;
  _57 = *_56;
  _58 = strarray_37(D) + _57;
  _59 = *_58;
  _60 = (int) _59;
  if (_59 < pretmp_85)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 5> [21.25%]:
  # slen_111 = PHI <slen_104(15), slen_101(14)>
  if (slen_111 < 0)
    goto <bb 6>; [32.39%]
  else
    goto <bb 7>; [67.61%]

  <bb 6> [6.88%]:

  <bb 7> [85.00%]:
  # k_29 = PHI <_27(3), _1(14), _27(15), _27(5), _1(6)>
  # prephitmp_11 = PHI <_87(3), _56(14), _87(15), _87(5), _56(6)>
  # prephitmp_12 = PHI <_88(3), _58(14), _88(15), _88(5), _58(6)>
  # prephitmp_41 = PHI <pretmp_85(3), _59(14), pretmp_85(15), pretmp_85(5), _59(6)>
  # prephitmp_8 = PHI <_86(3), _60(14), _86(15), _86(5), _60(6)>
  _65 = i_28 * 8;
  _66 = optrarray_36(D) + _65;
  _67 = *_66;
  _68 = strarray_37(D) + _67;
  _69 = *_68;
  if (prephitmp_41 < _69)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 8> [42.50%]:
  # slen_112 = PHI <slen_110(17), slen_107(16)>
  if (slen_112 < 0)
    goto <bb 9>; [32.39%]
  else
    goto <bb 10>; [67.61%]

  <bb 9> [28.05%]:
  _9 = prephitmp_8 + 1;
  _10 = (long unsigned int) _9;
  MoveMemory (&temp[0], prephitmp_12, _10);
  _13 = *_66;
  _14 = strarray_37(D) + _13;
  tlen_43 = *_14;
  _15 = (int) tlen_43;
  stradjust (optrarray_36(D), strarray_37(D), numstrings_38(D), k_29, _15);
  _16 = _15 + 1;
  _17 = (long unsigned int) _16;
  _18 = *_66;
  _19 = strarray_37(D) + _18;
  _20 = *prephitmp_11;
  _21 = strarray_37(D) + _20;
  MoveMemory (_21, _19, _17);
  tlen_46 = temp[0];
  _22 = (int) tlen_46;
  stradjust (optrarray_36(D), strarray_37(D), numstrings_38(D), i_28, _22);
  _23 = _22 + 1;
  _24 = (long unsigned int) _23;
  _25 = *_66;
  _26 = strarray_37(D) + _25;
  MoveMemory (_26, &temp[0], _24);
  goto <bb 11>; [100.00%]

  <bb 10> [56.95%]:
  i_40 = j_33(D) + 1;

  <bb 11> [85.00%]:
  # i_39 = PHI <k_29(9), i_40(10)>

  <bb 12> [100.00%]:
  # i_28 = PHI <i_39(11), i_31(D)(2)>
  _27 = i_28 * 2;
  if (_27 <= j_33(D))
    goto <bb 3>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 13> [15.00%]:
  temp ={v} {CLOBBER};
  return;

  <bb 14> [21.25%]:
  _100 = (long unsigned int) _59;
  slen_101 = strncmp (_88, _58, _100);
  if (slen_101 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 15> [21.25%]:
  _103 = (long unsigned int) pretmp_85;
  slen_104 = strncmp (_88, _58, _103);
  if (slen_104 == 0)
    goto <bb 7>; [49.98%]
  else
    goto <bb 5>; [50.02%]

  <bb 16> [42.50%]:
  _106 = (long unsigned int) prephitmp_41;
  slen_107 = strncmp (_68, prephitmp_12, _106);
  if (slen_107 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 17> [42.50%]:
  _109 = (long unsigned int) _69;
  slen_110 = strncmp (_68, prephitmp_12, _109);
  if (slen_110 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 8>; [50.00%]

}



;; Function DoStringSortIteration (DoStringSortIteration, funcdef_no=58, decl_uid=4512, cgraph_uid=58, symbol_order=83)

;; 17 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
;;
;; Loop 1
;;  header 29, latch 55
;;  depth 1, outer 0
;;  nodes: 29 55 31 54 33 50 49 40 43 41 42 35 34 39 38 37 36 53 51 52 44 48 47 46 45 32 30
;;
;; Loop 9
;;  header 33, latch 54
;;  depth 2, outer 1
;;  nodes: 33 54 50 49 40 43 41 42 35 34 39 38 37 36 53 51 52 44 48 47 46 45
;;
;; Loop 12
;;  header 39, latch 39
;;  depth 3, outer 9
;;  nodes: 39
;;
;; Loop 11
;;  header 48, latch 48
;;  depth 3, outer 9
;;  nodes: 48
;;
;; Loop 10
;;  header 30, latch 30
;;  depth 2, outer 1
;;  nodes: 30
;;
;; Loop 2
;;  header 23, latch 25
;;  depth 1, outer 0
;;  nodes: 23 25 24
;;
;; Loop 3
;;  header 24, latch 24
;;  depth 2, outer 2
;;  nodes: 24
;;
;; Loop 4
;;  header 20, latch 20
;;  depth 1, outer 0
;;  nodes: 20
;;
;; Loop 5
;;  header 12, latch 14
;;  depth 1, outer 0
;;  nodes: 12 14 13
;;
;; Loop 6
;;  header 13, latch 13
;;  depth 2, outer 5
;;  nodes: 13
;;
;; Loop 7
;;  header 3, latch 9
;;  depth 1, outer 0
;;  nodes: 3 9 8 5 4 7 6
;;
;; Loop 8
;;  header 7, latch 7
;;  depth 2, outer 7
;;  nodes: 7
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 9 }
;; 6 succs { 7 }
;; 7 succs { 7 8 }
;; 8 succs { 9 }
;; 9 succs { 3 10 }
;; 10 succs { 11 16 }
;; 11 succs { 12 15 }
;; 12 succs { 13 }
;; 13 succs { 13 14 }
;; 14 succs { 12 15 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 21 }
;; 19 succs { 20 }
;; 20 succs { 20 21 }
;; 21 succs { 22 27 }
;; 22 succs { 23 26 }
;; 23 succs { 24 }
;; 24 succs { 24 25 }
;; 25 succs { 23 26 }
;; 26 succs { 27 }
;; 27 succs { 28 56 }
;; 28 succs { 29 }
;; 29 succs { 30 31 }
;; 30 succs { 30 31 }
;; 31 succs { 32 55 }
;; 32 succs { 33 }
;; 33 succs { 34 54 }
;; 34 succs { 35 44 }
;; 35 succs { 36 42 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 }
;; 39 succs { 39 41 }
;; 40 succs { 50 }
;; 41 succs { 42 40 }
;; 42 succs { 43 40 }
;; 43 succs { 40 }
;; 44 succs { 45 52 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 }
;; 48 succs { 48 51 }
;; 49 succs { 50 }
;; 50 succs { 54 }
;; 51 succs { 52 49 }
;; 52 succs { 53 49 }
;; 53 succs { 49 }
;; 54 succs { 33 55 }
;; 55 succs { 29 56 }
;; 56 succs { 1 }
DoStringSortIteration (faruchar * arraybase, unsigned int numarrays, long unsigned int arraysize)
{
  unsigned long ivtmp.1405;
  unsigned long ivtmp.1388;
  unsigned long ivtmp.1373;
  unsigned long ivtmp.1372;
  sizetype ivtmp.1347;
  unsigned long ivtmp.1345;
  sizetype ivtmp.1339;
  unsigned long ivtmp.1337;
  vector(2) long unsigned int * vectp_tempobase.1335;
  vector(2) long unsigned int * vectp_tempobase.1334;
  vector(2) long unsigned int vect__158.1333;
  vector(2) long unsigned int vect_pretmp_96.1332;
  vector(2) long unsigned int * vectp_tempobase.1331;
  vector(2) long unsigned int * vectp_tempobase.1330;
  long unsigned int tmp.1329;
  long unsigned int niters_vector_mult_vf.1328;
  long unsigned int bnd.1327;
  long unsigned int niters.1326;
  long unsigned int prolog_loop_niters.1325;
  vector(2) long unsigned int * vectp_tempobase.1324;
  long unsigned int niters.1323;
  vector(2) long unsigned int * vectp_tempobase.1322;
  vector(2) long unsigned int * vectp_tempobase.1321;
  vector(2) long unsigned int vect__238.1320;
  vector(2) long unsigned int vect_pretmp_236.1319;
  vector(2) long unsigned int * vectp_tempobase.1318;
  vector(2) long unsigned int * vectp_tempobase.1317;
  long unsigned int tmp.1316;
  long unsigned int niters_vector_mult_vf.1315;
  long unsigned int bnd.1314;
  long unsigned int niters.1313;
  long unsigned int prolog_loop_niters.1312;
  vector(2) long unsigned int * vectp_tempobase.1311;
  long unsigned int niters.1310;
  unsigned char adjamount;
  int direction;
  long unsigned int j;
  long unsigned int nbytes;
  unsigned char l;
  long unsigned int i;
  unsigned char tlen;
  unsigned char temp[80];
  faruchar * tempsbase;
  farulong * optrarray;
  farulong * tempobase;
  long unsigned int curroffset;
  int fullflag;
  unsigned char stringlength;
  unsigned char i;
  long unsigned int j;
  unsigned int k;
  unsigned int l;
  int systemerror;
  farulong * D.8017;
  faruchar * tempsbase;
  farulong * tempobase;
  unsigned int i;
  int syserror;
  long unsigned int nstrings;
  long unsigned int elapsed;
  farulong * optrarray;
  unsigned char _2;
  sizetype _15;
  unsigned int _27;
  unsigned char _28;
  long unsigned int _30;
  unsigned long _32;
  long unsigned int _33;
  unsigned char _34;
  unsigned char _35;
  unsigned long _36;
  faruchar * _38;
  vector(2) long unsigned int vect_cst__40;
  unsigned int _41;
  long unsigned int _43;
  unsigned char _44;
  unsigned char _45;
  long unsigned int _46;
  long unsigned int _47;
  unsigned long _48;
  long unsigned int _49;
  sizetype _52;
  long unsigned int _54;
  faruchar * _55;
  faruchar * _56;
  unsigned char _57;
  sizetype _60;
  long unsigned int _63;
  long unsigned int _65;
  int systemerror.26_67;
  unsigned long _69;
  sizetype _71;
  faruchar * _72;
  unsigned char _73;
  long unsigned int _74;
  unsigned long _77;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _83;
  long unsigned int _84;
  farulong * _85;
  farulong * _86;
  long unsigned int _87;
  int _102;
  int _103;
  long unsigned int _104;
  long unsigned int _107;
  faruchar * _108;
  int _110;
  int _111;
  long unsigned int _112;
  long unsigned int _113;
  faruchar * _114;
  int _116;
  int _117;
  long unsigned int _118;
  long unsigned int _119;
  faruchar * _120;
  long unsigned int _122;
  farulong * _123;
  long unsigned int _126;
  faruchar * _127;
  unsigned char _128;
  int _129;
  int _131;
  long unsigned int _132;
  long unsigned int pretmp_133;
  long unsigned int _134;
  sizetype _135;
  long unsigned int _137;
  faruchar * _138;
  unsigned char _139;
  long unsigned int _140;
  long unsigned int _141;
  unsigned char _142;
  long unsigned int _143;
  long unsigned int _144;
  long unsigned int _145;
  faruchar * _148;
  sizetype _149;
  sizetype _151;
  faruchar * _152;
  sizetype _153;
  vector(2) long unsigned int * _156;
  sizetype _159;
  long unsigned int _163;
  long unsigned int _164;
  long unsigned int _165;
  faruchar * _166;
  sizetype _168;
  long unsigned int pretmp_170;
  farulong * _174;
  long unsigned int _175;
  long unsigned int _178;
  void * _184;
  void * _197;
  long unsigned int _198;
  unsigned long _210;
  long unsigned int pretmp_216;
  long unsigned int _217;
  long unsigned int _219;
  long unsigned int _221;
  long unsigned int _224;
  long unsigned int _227;
  long unsigned int _236;
  long unsigned int pretmp_240;
  farulong * _244;
  long unsigned int _250;
  long unsigned int pretmp_259;
  long unsigned int _260;
  farulong * _262;
  long unsigned int _264;
  unsigned long _267;
  unsigned long _268;
  unsigned long _269;
  sizetype _271;
  long unsigned int _277;
  farulong * _278;
  long unsigned int pretmp_279;
  long unsigned int _280;
  long unsigned int _284;
  sizetype _292;
  sizetype _293;
  vector(2) long unsigned int vect_cst__297;
  sizetype _300;
  sizetype _301;
  farulong * _307;
  void * _308;
  void * _309;
  void * _310;
  void * _311;
  void * _312;
  void * _313;
  void * _317;
  unsigned long _318;
  unsigned long _319;
  unsigned long _320;
  long unsigned int _324;
  faruchar * _325;
  void * _326;
  unsigned long _327;
  unsigned char _329;
  unsigned long _330;
  unsigned long _332;

  <bb 2> [0.88%]:
  randnum (13);

  <bb 3> [1.06%]:
  # curroffset_31 = PHI <0(2), curroffset_218(9)>
  # nstrings_208 = PHI <0(2), _49(9)>
  _27 = abs_randwc (76);
  _28 = (unsigned char) _27;
  stringlength_29 = _28 + 1;
  _30 = (long unsigned int) stringlength_29;
  _143 = curroffset_31 + 1;
  _33 = _30 + _143;
  if (arraysize_13(D) <= _33)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [0.53%]:
  _34 = (unsigned char) arraysize_13(D);
  _35 = (unsigned char) curroffset_31;
  _2 = _34 + 255;
  _45 = -_35;
  stringlength_37 = _2 - _35;

  <bb 5> [1.06%]:
  # fullflag_50 = PHI <0(3), 1(4)>
  # stringlength_39 = PHI <stringlength_29(3), stringlength_37(4)>
  _38 = arraybase_11(D) + curroffset_31;
  *_38 = stringlength_39;
  if (stringlength_39 != 0)
    goto <bb 6>; [85.00%]
  else
    goto <bb 9>; [15.00%]

  <bb 6> [0.90%]:
  _324 = curroffset_31 + 1;
  _325 = arraybase_11(D) + _324;
  ivtmp.1405_323 = (unsigned long) _325;
  _327 = (unsigned long) arraybase_11(D);
  _69 = _327 + 2;
  _329 = stringlength_39 + 255;
  _330 = (unsigned long) _329;
  _77 = _69 + curroffset_31;
  _332 = _77 + _330;

  <bb 7> [6.04%]:
  # ivtmp.1405_321 = PHI <ivtmp.1405_322(7), ivtmp.1405_323(6)>
  _41 = abs_randwc (254);
  _44 = (unsigned char) _41;
  _326 = (void *) ivtmp.1405_321;
  MEM[base: _326, offset: 0B] = _44;
  ivtmp.1405_322 = ivtmp.1405_321 + 1;
  if (ivtmp.1405_322 != _332)
    goto <bb 7>; [85.00%]
  else
    goto <bb 8>; [15.00%]

  <bb 8> [0.91%]:
  _142 = stringlength_39 + 255;
  _141 = (long unsigned int) _142;
  _224 = _143 + 1;
  curroffset_248 = _224 + _141;

  <bb 9> [1.06%]:
  # curroffset_218 = PHI <curroffset_248(8), _143(5)>
  _49 = nstrings_208 + 1;
  if (fullflag_50 == 0)
    goto <bb 3>; [17.00%]
  else
    goto <bb 10>; [83.00%]

  <bb 10> [0.88%]:
  # _250 = PHI <_49(9)>
  # nstrings_246 = PHI <nstrings_208(9)>
  if (numarrays_12(D) > 1)
    goto <bb 11>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 11> [0.75%]:
  _153 = arraysize_13(D) + 100;
  if (arraysize_13(D) != 0)
    goto <bb 12>; [85.00%]
  else
    goto <bb 15>; [15.00%]

  <bb 12> [4.26%]:
  # tempsbase_220 = PHI <tempsbase_53(14), arraybase_11(D)(11)>
  # k_223 = PHI <k_61(14), 1(11)>
  tempsbase_53 = tempsbase_220 + _153;

  <bb 13> [28.37%]:
  # _221 = PHI <_54(13), 0(12)>
  # l_222 = PHI <l_59(13), 0(12)>
  _55 = arraybase_11(D) + _221;
  _56 = tempsbase_53 + _221;
  _57 = *_55;
  *_56 = _57;
  l_59 = l_222 + 1;
  _54 = (long unsigned int) l_59;
  if (arraysize_13(D) > _54)
    goto <bb 13>; [85.00%]
  else
    goto <bb 14>; [15.00%]

  <bb 14> [4.26%]:
  k_61 = k_223 + 1;
  if (k_61 != numarrays_12(D))
    goto <bb 12>; [85.00%]
  else
    goto <bb 15>; [15.00%]

  <bb 15> [0.75%]:

  <bb 16> [0.88%]:
  _63 = (long unsigned int) numarrays_12(D);
  _198 = _63 * 8;
  _65 = _198 * _250;
  optrarray_66 = AllocateMemory (_65, &systemerror);
  systemerror.26_67 = systemerror;
  if (systemerror.26_67 != 0)
    goto <bb 17>; [33.00%]
  else
    goto <bb 18>; [67.00%]

  <bb 17> [0.29%]:
  ReportError ("CPU:Stringsort", systemerror.26_67);
  FreeMemory (arraybase_11(D), &systemerror);
  ErrorExit ();

  <bb 18> [0.88%]:
  if (_250 != 0)
    goto <bb 19>; [85.00%]
  else
    goto <bb 21>; [15.00%]

  <bb 19> [0.75%]:
  ivtmp.1388_316 = (unsigned long) optrarray_66;
  _318 = _250 * 8;
  _319 = (unsigned long) optrarray_66;
  _320 = _319 + _318;

  <bb 20> [5.01%]:
  # curroffset_225 = PHI <curroffset_76(20), 0(19)>
  # ivtmp.1388_314 = PHI <ivtmp.1388_315(20), ivtmp.1388_316(19)>
  _317 = (void *) ivtmp.1388_314;
  MEM[base: _317, offset: 0B] = curroffset_225;
  _72 = arraybase_11(D) + curroffset_225;
  _73 = *_72;
  _74 = (long unsigned int) _73;
  _178 = _74 + 1;
  curroffset_76 = _178 + curroffset_225;
  ivtmp.1388_315 = ivtmp.1388_314 + 8;
  if (ivtmp.1388_315 != _320)
    goto <bb 20>; [85.00%]
  else
    goto <bb 21>; [15.00%]

  <bb 21> [0.88%]:
  if (numarrays_12(D) > 1)
    goto <bb 22>; [85.00%]
  else
    goto <bb 27>; [15.00%]

  <bb 22> [0.75%]:
  _80 = _250 * 8;
  if (_250 != 0)
    goto <bb 23>; [85.00%]
  else
    goto <bb 26>; [15.00%]

  <bb 23> [4.26%]:
  # tempobase_226 = PHI <tempobase_82(25), optrarray_66(22)>
  # k_229 = PHI <k_92(25), 1(22)>
  tempobase_82 = tempobase_226 + _80;

  <bb 24> [28.37%]:
  # _227 = PHI <_83(24), 0(23)>
  # l_228 = PHI <l_89(24), 0(23)>
  _84 = _227 * 8;
  _85 = optrarray_66 + _84;
  _86 = tempobase_82 + _84;
  _87 = *_85;
  *_86 = _87;
  l_89 = l_228 + 1;
  _83 = (long unsigned int) l_89;
  if (_250 > _83)
    goto <bb 24>; [85.00%]
  else
    goto <bb 25>; [15.00%]

  <bb 25> [4.26%]:
  k_92 = k_229 + 1;
  if (k_92 != numarrays_12(D))
    goto <bb 23>; [85.00%]
  else
    goto <bb 26>; [15.00%]

  <bb 26> [0.75%]:

  <bb 27> [0.88%]:
  systemerror ={v} {CLOBBER};
  elapsed_17 = StartStopwatch ();
  if (numarrays_12(D) != 0)
    goto <bb 28>; [85.00%]
  else
    goto <bb 56>; [15.00%]

  <bb 28> [0.75%]:
  i_97 = nstrings_246 >> 1;
  _134 = _250 * 8;
  _135 = _134 + 18446744073709551608;
  _71 = arraysize_13(D) + 100;
  _271 = _134 + 18446744073709551608;
  _262 = optrarray_66 + _271;
  ivtmp.1372_263 = (unsigned long) _262;
  _156 = optrarray_66 + 8;
  ivtmp.1373_5 = (unsigned long) _156;
  _284 = _250 + 18446744073709551614;
  _122 = _250 + 18446744073709551614;

  <bb 29> [5.01%]:
  # i_212 = PHI <i_26(55), 0(28)>
  # tempsbase_214 = PHI <tempsbase_25(55), arraybase_11(D)(28)>
  # ivtmp.1372_23 = PHI <ivtmp.1372_176(55), ivtmp.1372_263(28)>
  # ivtmp.1373_257 = PHI <ivtmp.1373_270(55), ivtmp.1373_5(28)>
  _210 = ivtmp.1373_257 + 18446744073709551608;
  _307 = (farulong *) _210;
  tempobase_213 = _307;
  if (i_97 != 0)
    goto <bb 30>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 30> [28.37%]:
  # i_230 = PHI <i_99(30), i_97(29)>
  strsift (tempobase_213, tempsbase_214, _250, i_230, nstrings_246);
  i_99 = i_230 + 18446744073709551615;
  if (i_99 != 0)
    goto <bb 30>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 31> [5.01%]:
  if (nstrings_246 != 0)
    goto <bb 32>; [85.00%]
  else
    goto <bb 55>; [15.00%]

  <bb 32> [4.26%]:
  niters.1323_157 = _250 + 18446744073709551615;
  _267 = ivtmp.1373_257;
  _268 = _267 >> 3;
  _269 = -_268;
  prolog_loop_niters.1325_266 = _269 & 1;
  j_272 = prolog_loop_niters.1325_266 == 0 ? 1 : 2;
  _219 = -prolog_loop_niters.1325_266;
  niters.1326_274 = niters.1323_157 - prolog_loop_niters.1325_266;
  bnd.1327_287 = niters.1326_274 >> 1;
  _292 = prolog_loop_niters.1325_266 + 1;
  _293 = _292 * 8;
  vectp_tempobase.1331_291 = tempobase_213 + _293;
  _300 = prolog_loop_niters.1325_266 + 1;
  _301 = _300 * 8;
  vectp_tempobase.1335_299 = tempobase_213 + _301;
  niters_vector_mult_vf.1328_288 = bnd.1327_287 << 1;
  tmp.1329_289 = niters_vector_mult_vf.1328_288 + j_272;
  niters.1310_251 = _250 + 18446744073709551615;
  _48 = ivtmp.1373_257;
  _36 = _48 >> 3;
  _32 = -_36;
  prolog_loop_niters.1312_64 = _32 & 1;
  j_9 = prolog_loop_niters.1312_64 == 0 ? 1 : 2;
  _217 = -prolog_loop_niters.1312_64;
  niters.1313_3 = niters.1310_251 - prolog_loop_niters.1312_64;
  bnd.1314_90 = niters.1313_3 >> 1;
  _60 = prolog_loop_niters.1312_64 + 1;
  _52 = _60 * 8;
  vectp_tempobase.1318_68 = tempobase_213 + _52;
  _168 = prolog_loop_niters.1312_64 + 1;
  _159 = _168 * 8;
  vectp_tempobase.1322_4 = tempobase_213 + _159;
  niters_vector_mult_vf.1315_88 = bnd.1314_90 << 1;
  tmp.1316_81 = niters_vector_mult_vf.1315_88 + j_9;

  <bb 33> [28.37%]:
  # i_231 = PHI <i_121(54), nstrings_246(32)>
  strsift (tempobase_213, tempsbase_214, _250, 0, i_231);
  tlen_101 = MEM[base: tempsbase_214, offset: 0B];
  _102 = (int) tlen_101;
  _103 = _102 + 1;
  _104 = (long unsigned int) _103;
  MoveMemory (&temp[0], tempsbase_214, _104);
  _107 = MEM[base: tempobase_213, index: i_231, step: 8, offset: 0B];
  _108 = tempsbase_214 + _107;
  tlen_109 = *_108;
  _110 = (int) tlen_109;
  _197 = (void *) ivtmp.1373_257;
  _126 = MEM[base: _197, offset: -8B];
  _127 = tempsbase_214 + _126;
  _128 = *_127;
  _129 = (int) _128;
  direction_130 = _110 - _129;
  _131 = ABS_EXPR <direction_130>;
  _308 = (void *) ivtmp.1372_23;
  _137 = MEM[base: _308, offset: 0B];
  _138 = tempsbase_214 + _137;
  _139 = *_138;
  _140 = (long unsigned int) _139;
  _309 = (void *) ivtmp.1373_257;
  _145 = MEM[base: _309, offset: 0B];
  _47 = -_145;
  _43 = _137 + 1;
  _144 = _43 - _145;
  nbytes_147 = _144 + _140;
  _148 = tempsbase_214 + _145;
  _149 = (sizetype) tlen_109;
  _15 = _126 + 1;
  _151 = _15 + _149;
  _152 = tempsbase_214 + _151;
  MoveMemory (_152, _148, nbytes_147);
  if (_250 > 1)
    goto <bb 34>; [85.00%]
  else
    goto <bb 54>; [15.00%]

  <bb 34> [24.11%]:
  _46 = (long unsigned int) _131;
  if (direction_130 < 0)
    goto <bb 44>; [36.00%]
  else
    goto <bb 35>; [64.00%]

  <bb 35> [15.43%]:
  if (_122 <= 1)
    goto <bb 42>; [10.00%]
  else
    goto <bb 36>; [90.00%]

  <bb 36> [13.89%]:
  if (prolog_loop_niters.1312_64 == 0)
    goto <bb 38>; [33.34%]
  else
    goto <bb 37>; [66.66%]

  <bb 37> [9.26%]:
  _310 = (void *) ivtmp.1373_257;
  pretmp_170 = MEM[base: _310, offset: 0B];
  _163 = _46 + pretmp_170;
  _311 = (void *) ivtmp.1373_257;
  MEM[base: _311, offset: 0B] = _163;

  <bb 38> [13.89%]:
  vect_cst__40 = {_46, _46};

  <bb 39> [55.57%]:
  # ivtmp.1337_158 = PHI <0(38), ivtmp.1337_96(39)>
  # ivtmp.1339_232 = PHI <0(38), ivtmp.1339_283(39)>
  vect_pretmp_236.1319_1 = MEM[base: vectp_tempobase.1318_68, index: ivtmp.1339_232, offset: 0B];
  vect__238.1320_51 = vect_pretmp_236.1319_1 + vect_cst__40;
  MEM[base: vectp_tempobase.1322_4, index: ivtmp.1339_232, offset: 0B] = vect__238.1320_51;
  ivtmp.1337_96 = ivtmp.1337_158 + 1;
  ivtmp.1339_283 = ivtmp.1339_232 + 16;
  if (ivtmp.1337_96 < bnd.1314_90)
    goto <bb 39>; [75.00%]
  else
    goto <bb 41>; [25.00%]

  <bb 40> [8.16%]:
  goto <bb 50>; [100.00%]

  <bb 41> [13.89%]:
  if (niters.1313_3 == niters_vector_mult_vf.1315_88)
    goto <bb 40>; [33.34%]
  else
    goto <bb 42>; [66.66%]

  <bb 42> [10.81%]:
  # j_100 = PHI <tmp.1316_81(41), 1(35)>
  _264 = j_100 * 8;
  _123 = tempobase_213 + _264;
  pretmp_216 = *_123;
  _79 = pretmp_216 + _46;
  *_123 = _79;
  j_94 = j_100 + 1;
  if (_250 > j_94)
    goto <bb 43>; [85.00%]
  else
    goto <bb 40>; [15.00%]

  <bb 43> [9.17%]:
  # j_209 = PHI <j_94(42)>
  _175 = j_209 * 8;
  _174 = tempobase_213 + _175;
  pretmp_133 = *_174;
  _132 = pretmp_133 + _46;
  *_174 = _132;
  j_124 = j_209 + 1;
  goto <bb 40>; [100.00%]

  <bb 44> [8.68%]:
  if (_284 <= 1)
    goto <bb 52>; [10.00%]
  else
    goto <bb 45>; [90.00%]

  <bb 45> [7.81%]:
  if (prolog_loop_niters.1325_266 == 0)
    goto <bb 47>; [33.34%]
  else
    goto <bb 46>; [66.66%]

  <bb 46> [5.21%]:
  _312 = (void *) ivtmp.1373_257;
  pretmp_259 = MEM[base: _312, offset: 0B];
  _260 = pretmp_259 - _46;
  _313 = (void *) ivtmp.1373_257;
  MEM[base: _313, offset: 0B] = _260;

  <bb 47> [7.81%]:
  vect_cst__297 = {_46, _46};

  <bb 48> [31.23%]:
  # ivtmp.1345_91 = PHI <ivtmp.1345_21(48), 0(47)>
  # ivtmp.1347_146 = PHI <ivtmp.1347_14(48), 0(47)>
  vect_pretmp_96.1332_296 = MEM[base: vectp_tempobase.1331_291, index: ivtmp.1347_146, offset: 0B];
  vect__158.1333_298 = vect_pretmp_96.1332_296 - vect_cst__297;
  MEM[base: vectp_tempobase.1335_299, index: ivtmp.1347_146, offset: 0B] = vect__158.1333_298;
  ivtmp.1345_21 = ivtmp.1345_91 + 1;
  ivtmp.1347_14 = ivtmp.1347_146 + 16;
  if (ivtmp.1345_21 < bnd.1327_287)
    goto <bb 48>; [75.00%]
  else
    goto <bb 51>; [25.00%]

  <bb 49> [4.59%]:

  <bb 50> [12.75%]:
  goto <bb 54>; [100.00%]

  <bb 51> [7.81%]:
  if (niters.1326_274 == niters_vector_mult_vf.1328_288)
    goto <bb 49>; [33.34%]
  else
    goto <bb 52>; [66.66%]

  <bb 52> [6.08%]:
  # j_285 = PHI <tmp.1329_289(51), 1(44)>
  _164 = j_285 * 8;
  _244 = tempobase_213 + _164;
  pretmp_240 = *_244;
  _236 = pretmp_240 - _46;
  *_244 = _236;
  j_173 = j_285 + 1;
  if (_250 > j_173)
    goto <bb 53>; [85.00%]
  else
    goto <bb 49>; [15.00%]

  <bb 53> [5.16%]:
  # j_275 = PHI <j_173(52)>
  _277 = j_275 * 8;
  _278 = tempobase_213 + _277;
  pretmp_279 = *_278;
  _280 = pretmp_279 - _46;
  *_278 = _280;
  j_282 = j_275 + 1;
  goto <bb 49>; [100.00%]

  <bb 54> [28.37%]:
  _184 = (void *) ivtmp.1373_257;
  _165 = MEM[base: _184, offset: -8B];
  _166 = tempsbase_214 + _165;
  *_166 = tlen_109;
  _111 = _110 + 1;
  _112 = (long unsigned int) _111;
  _113 = MEM[base: tempobase_213, index: i_231, step: 8, offset: 0B];
  _114 = tempsbase_214 + _113;
  MoveMemory (tempsbase_214, _114, _112);
  tlen_115 = temp[0];
  _116 = (int) tlen_115;
  stradjust (tempobase_213, tempsbase_214, _250, i_231, _116);
  _117 = _116 + 1;
  _118 = (long unsigned int) _117;
  _119 = MEM[base: tempobase_213, index: i_231, step: 8, offset: 0B];
  _120 = tempsbase_214 + _119;
  MoveMemory (_120, &temp[0], _118);
  i_121 = i_231 + 18446744073709551615;
  if (i_121 != 0)
    goto <bb 33>; [85.00%]
  else
    goto <bb 55>; [15.00%]

  <bb 55> [5.01%]:
  temp ={v} {CLOBBER};
  tempsbase_25 = tempsbase_214 + _71;
  i_26 = i_212 + 1;
  ivtmp.1372_176 = ivtmp.1372_23 + _134;
  ivtmp.1373_270 = ivtmp.1373_257 + _134;
  if (i_26 != numarrays_12(D))
    goto <bb 29>; [85.00%]
  else
    goto <bb 56>; [15.00%]

  <bb 56> [0.88%]:
  elapsed_19 = StopStopwatch (elapsed_17);
  FreeMemory (optrarray_66, &syserror);
  syserror ={v} {CLOBBER};
  return elapsed_19;

}



;; Function DoNumSort (DoNumSort, funcdef_no=52, decl_uid=4490, cgraph_uid=52, symbol_order=77)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 2
;;  header 15, latch 15
;;  depth 1, outer 0
;;  nodes: 15
;;
;; Loop 1
;;  header 4, latch 11
;;  depth 1, outer 0
;;  nodes: 4 11 9 7 5 6 10
;;
;; Loop 3
;;  header 5, latch 10
;;  depth 2, outer 1
;;  nodes: 5 10 9 7 6
;; 2 succs { 3 12 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 14 }
;; 9 succs { 11 10 }
;; 10 succs { 5 }
;; 11 succs { 4 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 15 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 1 }
DoNumSort ()
{
  int systemerror;
  double iterations;
  long int accumtime;
  farlong * arraybase;
  int _1;
  long unsigned int _3;
  long unsigned int _6;
  int systemerror.0_7;
  short unsigned int _9;
  unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int global_min_ticks.2_13;
  short unsigned int _14;
  short unsigned int _15;
  short unsigned int _16;
  long unsigned int _17;
  long unsigned int _20;
  int systemerror.3_21;
  short unsigned int _23;
  unsigned int _24;
  long unsigned int _25;
  long unsigned int accumtime.5_26;
  long unsigned int _27;
  long unsigned int _29;
  long unsigned int _30;
  short unsigned int _31;
  double _32;
  double _33;
  double _34;
  double _35;
  int _36;
  long unsigned int _62;
  long unsigned int _85;
  long unsigned int _88;
  long unsigned int pretmp_89;
  short unsigned int pretmp_91;
  short unsigned int prephitmp_92;
  long unsigned int pretmp_94;
  long unsigned int prephitmp_95;
  short unsigned int prephitmp_96;
  long unsigned int pretmp_97;
  long unsigned int prephitmp_98;
  long unsigned int _99;

  <bb 2> [11.19%]:
  _1 = global_numsortstruct.adjust;
  pretmp_89 = global_numsortstruct.arraysize;
  if (_1 == 0)
    goto <bb 3>; [67.00%]
  else
    goto <bb 12>; [33.00%]

  <bb 3> [7.50%]:
  global_numsortstruct.numarrays = 1;

  <bb 4> [14.44%]:
  # prephitmp_92 = PHI <1(3), pretmp_91(11)>
  # prephitmp_95 = PHI <pretmp_89(3), pretmp_94(11)>

  <bb 5> [100.00%]:
  # prephitmp_96 = PHI <prephitmp_92(4), _15(10)>
  # prephitmp_98 = PHI <prephitmp_95(4), pretmp_97(10)>
  _3 = (long unsigned int) prephitmp_96;
  _85 = _3 * 8;
  _6 = _85 * prephitmp_98;
  arraybase_53 = AllocateMemory (_6, &systemerror);
  systemerror.0_7 = systemerror;
  if (systemerror.0_7 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [33.00%]:
  ReportError ("CPU:Numeric Sort", systemerror.0_7);
  FreeMemory (arraybase_53, &systemerror);
  ErrorExit ();

  <bb 7> [100.00%]:
  _9 = global_numsortstruct.numarrays;
  _10 = (unsigned int) _9;
  _11 = global_numsortstruct.arraysize;
  _12 = DoNumSortIteration (arraybase_53, _11, _10);
  global_min_ticks.2_13 = global_min_ticks;
  if (_12 > global_min_ticks.2_13)
    goto <bb 8>; [7.50%]
  else
    goto <bb 9>; [92.50%]

  <bb 8> [7.50%]:
  # arraybase_87 = PHI <arraybase_53(7)>
  goto <bb 14>; [100.00%]

  <bb 9> [92.50%]:
  FreeMemory (arraybase_53, &systemerror);
  _14 = global_numsortstruct.numarrays;
  _15 = _14 + 1;
  global_numsortstruct.numarrays = _15;
  if (_14 > 10000)
    goto <bb 11>; [7.50%]
  else
    goto <bb 10>; [92.50%]

  <bb 10> [85.56%]:
  pretmp_97 = global_numsortstruct.arraysize;
  goto <bb 5>; [100.00%]

  <bb 11> [6.94%]:
  __builtin_puts (&"CPU:NSORT -- NUMNUMARRAYS hit."[0]);
  ErrorExit ();
  pretmp_91 = global_numsortstruct.numarrays;
  pretmp_94 = global_numsortstruct.arraysize;
  goto <bb 4>; [100.00%]

  <bb 12> [3.69%]:
  _16 = global_numsortstruct.numarrays;
  _17 = (long unsigned int) _16;
  _99 = pretmp_89 * 8;
  _20 = _99 * _17;
  arraybase_47 = AllocateMemory (_20, &systemerror);
  systemerror.3_21 = systemerror;
  if (systemerror.3_21 != 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 13> [1.22%]:
  ReportError ("CPU:Numeric Sort", systemerror.3_21);
  FreeMemory (arraybase_47, &systemerror);
  ErrorExit ();

  <bb 14> [11.19%]:
  # arraybase_37 = PHI <arraybase_87(8), arraybase_47(12), arraybase_47(13)>

  <bb 15> [74.63%]:
  # accumtime_38 = PHI <0(14), accumtime_63(15)>
  # iterations_39 = PHI <0.0(14), iterations_64(15)>
  _23 = global_numsortstruct.numarrays;
  _24 = (unsigned int) _23;
  _25 = global_numsortstruct.arraysize;
  _62 = DoNumSortIteration (arraybase_37, _25, _24);
  accumtime.5_26 = (long unsigned int) accumtime_38;
  _27 = _62 + accumtime.5_26;
  accumtime_63 = (long int) _27;
  iterations_64 = iterations_39 + 1.0e+0;
  _29 = TicksToSecs (_27);
  _30 = global_numsortstruct.request_secs;
  if (_29 < _30)
    goto <bb 15>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 16> [11.19%]:
  # _88 = PHI <_27(15)>
  # iterations_86 = PHI <iterations_64(15)>
  FreeMemory (arraybase_37, &systemerror);
  _31 = global_numsortstruct.numarrays;
  _32 = (double) _31;
  _33 = _32 * iterations_86;
  _34 = TicksToFracSecs (_88);
  _35 = _33 / _34;
  global_numsortstruct.sortspersec = _35;
  _36 = global_numsortstruct.adjust;
  if (_36 == 0)
    goto <bb 17>; [54.00%]
  else
    goto <bb 18>; [46.00%]

  <bb 17> [6.04%]:
  global_numsortstruct.adjust = 1;

  <bb 18> [11.19%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoStringSort (DoStringSort, funcdef_no=57, decl_uid=4508, cgraph_uid=57, symbol_order=82)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 2
;;  header 12, latch 12
;;  depth 1, outer 0
;;  nodes: 12
;;
;; Loop 1
;;  header 4, latch 8
;;  depth 1, outer 0
;;  nodes: 4 8 6 5
;; 2 succs { 3 9 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 4 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 12 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
DoStringSort ()
{
  int systemerror;
  double iterations;
  long int accumtime;
  faruchar * arraybase;
  int _1;
  long unsigned int _3;
  long unsigned int _5;
  long unsigned int _6;
  int systemerror.14_7;
  long unsigned int _9;
  short unsigned int _10;
  unsigned int _11;
  long unsigned int _12;
  long unsigned int global_min_ticks.16_13;
  short unsigned int _14;
  short unsigned int _15;
  short unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  int systemerror.17_21;
  long unsigned int _23;
  short unsigned int _24;
  unsigned int _25;
  long unsigned int accumtime.19_26;
  long unsigned int _27;
  short unsigned int _28;
  double _29;
  long unsigned int _30;
  long unsigned int _31;
  double _32;
  double _33;
  int _34;
  long unsigned int _57;
  long unsigned int _74;
  long unsigned int pretmp_75;
  long unsigned int _76;
  long unsigned int pretmp_78;
  long unsigned int prephitmp_79;
  short unsigned int prephitmp_81;

  <bb 2> [15.00%]:
  _1 = global_strsortstruct.adjust;
  pretmp_75 = global_strsortstruct.arraysize;
  if (_1 == 0)
    goto <bb 3>; [67.00%]
  else
    goto <bb 9>; [33.00%]

  <bb 3> [10.05%]:
  global_strsortstruct.numarrays = 1;

  <bb 4> [67.00%]:
  # prephitmp_79 = PHI <pretmp_75(3), pretmp_78(8)>
  # prephitmp_81 = PHI <1(3), _15(8)>
  _3 = prephitmp_79 + 100;
  _5 = (long unsigned int) prephitmp_81;
  _6 = _5 * _3;
  arraybase_50 = AllocateMemory (_6, &systemerror);
  systemerror.14_7 = systemerror;
  if (systemerror.14_7 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [22.11%]:
  ReportError ("CPU:String Sort", systemerror.14_7);
  ErrorExit ();

  <bb 6> [67.00%]:
  _9 = global_strsortstruct.arraysize;
  _10 = global_strsortstruct.numarrays;
  _11 = (unsigned int) _10;
  _12 = DoStringSortIteration (arraybase_50, _11, _9);
  global_min_ticks.16_13 = global_min_ticks;
  if (_12 > global_min_ticks.16_13)
    goto <bb 7>; [15.00%]
  else
    goto <bb 8>; [85.00%]

  <bb 7> [10.05%]:
  # arraybase_73 = PHI <arraybase_50(6)>
  goto <bb 11>; [100.00%]

  <bb 8> [56.95%]:
  FreeMemory (arraybase_50, &systemerror);
  _14 = global_strsortstruct.numarrays;
  _15 = _14 + 1;
  global_strsortstruct.numarrays = _15;
  pretmp_78 = global_strsortstruct.arraysize;
  goto <bb 4>; [100.00%]

  <bb 9> [4.95%]:
  _18 = global_strsortstruct.numarrays;
  _19 = (long unsigned int) _18;
  _76 = pretmp_75 + 100;
  _20 = _76 * _19;
  arraybase_45 = AllocateMemory (_20, &systemerror);
  systemerror.17_21 = systemerror;
  if (systemerror.17_21 != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 10> [1.63%]:
  ReportError ("CPU:String Sort", systemerror.17_21);
  ErrorExit ();

  <bb 11> [15.00%]:
  # arraybase_35 = PHI <arraybase_73(7), arraybase_45(9), arraybase_45(10)>

  <bb 12> [100.00%]:
  # accumtime_36 = PHI <0(11), accumtime_58(12)>
  # iterations_37 = PHI <0.0(11), iterations_59(12)>
  _23 = global_strsortstruct.arraysize;
  _24 = global_strsortstruct.numarrays;
  _25 = (unsigned int) _24;
  _57 = DoStringSortIteration (arraybase_35, _25, _23);
  accumtime.19_26 = (long unsigned int) accumtime_36;
  _27 = _57 + accumtime.19_26;
  accumtime_58 = (long int) _27;
  _28 = global_strsortstruct.numarrays;
  _29 = (double) _28;
  iterations_59 = _29 + iterations_37;
  _30 = TicksToSecs (_27);
  _31 = global_strsortstruct.request_secs;
  if (_30 < _31)
    goto <bb 12>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 13> [15.00%]:
  # _74 = PHI <_27(12)>
  # iterations_72 = PHI <iterations_59(12)>
  FreeMemory (arraybase_35, &systemerror);
  _32 = TicksToFracSecs (_74);
  _33 = iterations_72 / _32;
  global_strsortstruct.sortspersec = _33;
  _34 = global_strsortstruct.adjust;
  if (_34 == 0)
    goto <bb 14>; [54.00%]
  else
    goto <bb 15>; [46.00%]

  <bb 14> [8.10%]:
  global_strsortstruct.adjust = 1;

  <bb 15> [15.00%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoBitops (DoBitops, funcdef_no=64, decl_uid=4543, cgraph_uid=64, symbol_order=89)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;;
;; Loop 2
;;  header 16, latch 16
;;  depth 1, outer 0
;;  nodes: 16
;;
;; Loop 1
;;  header 6, latch 10
;;  depth 1, outer 0
;;  nodes: 6 10 8 7
;; 2 succs { 3 11 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 15 }
;; 10 succs { 6 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 16 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 1 }
DoBitops ()
{
  int ticks;
  int systemerror;
  double iterations;
  long unsigned int accumtime;
  long unsigned int nbitops;
  farulong * bitoparraybase;
  farulong * bitarraybase;
  int _1;
  int systemerror.28_4;
  long unsigned int _6;
  int systemerror.30_7;
  long unsigned int _8;
  long int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int global_min_ticks.32_12;
  long unsigned int _13;
  long unsigned int _14;
  int systemerror.33_17;
  long unsigned int _19;
  long unsigned int _20;
  int systemerror.35_21;
  long unsigned int _23;
  long int _24;
  long unsigned int nbitops.37_25;
  double _26;
  long unsigned int _27;
  long unsigned int _28;
  double _29;
  double _30;
  int _31;
  long unsigned int _68;
  long unsigned int pretmp_86;
  long unsigned int _87;
  long unsigned int prephitmp_88;

  <bb 2> [15.00%]:
  _1 = global_bitopstruct.adjust;
  pretmp_86 = global_bitopstruct.bitfieldarraysize;
  _87 = pretmp_86 * 8;
  if (_1 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 3> [7.50%]:
  bitarraybase_54 = AllocateMemory (_87, &systemerror);
  systemerror.28_4 = systemerror;
  if (systemerror.28_4 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [2.48%]:
  ReportError ("CPU:Bitfields", systemerror.28_4);
  ErrorExit ();

  <bb 5> [7.50%]:
  global_bitopstruct.bitoparraysize = 30;

  <bb 6> [50.00%]:
  # prephitmp_88 = PHI <30(5), _14(10)>
  _6 = prephitmp_88 * 16;
  bitoparraybase_59 = AllocateMemory (_6, &systemerror);
  systemerror.30_7 = systemerror;
  if (systemerror.30_7 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [16.50%]:
  ReportError ("CPU:Bitfields", systemerror.30_7);
  FreeMemory (bitarraybase_54, &systemerror);
  ErrorExit ();

  <bb 8> [50.00%]:
  _8 = global_bitopstruct.bitoparraysize;
  _9 = (long int) _8;
  _10 = DoBitfieldIteration (bitarraybase_54, bitoparraybase_59, _9, &nbitops);
  ticks_64 = (int) _10;
  _11 = (long unsigned int) ticks_64;
  global_min_ticks.32_12 = global_min_ticks;
  if (_11 > global_min_ticks.32_12)
    goto <bb 9>; [15.00%]
  else
    goto <bb 10>; [85.00%]

  <bb 9> [7.50%]:
  # bitoparraybase_85 = PHI <bitoparraybase_59(8)>
  goto <bb 15>; [100.00%]

  <bb 10> [42.50%]:
  FreeMemory (bitoparraybase_59, &systemerror);
  _13 = global_bitopstruct.bitoparraysize;
  _14 = _13 + 100;
  global_bitopstruct.bitoparraysize = _14;
  goto <bb 6>; [100.00%]

  <bb 11> [7.50%]:
  bitarraybase_45 = AllocateMemory (_87, &systemerror);
  systemerror.33_17 = systemerror;
  if (systemerror.33_17 != 0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 13>; [67.00%]

  <bb 12> [2.48%]:
  ReportError ("CPU:Bitfields", systemerror.33_17);
  ErrorExit ();

  <bb 13> [7.50%]:
  _19 = global_bitopstruct.bitoparraysize;
  _20 = _19 * 16;
  bitoparraybase_49 = AllocateMemory (_20, &systemerror);
  systemerror.35_21 = systemerror;
  if (systemerror.35_21 != 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 14> [2.48%]:
  ReportError ("CPU:Bitfields", systemerror.35_21);
  FreeMemory (bitarraybase_45, &systemerror);
  ErrorExit ();

  <bb 15> [15.00%]:
  # bitarraybase_32 = PHI <bitarraybase_54(9), bitarraybase_45(13), bitarraybase_45(14)>
  # bitoparraybase_33 = PHI <bitoparraybase_85(9), bitoparraybase_49(13), bitoparraybase_49(14)>

  <bb 16> [100.00%]:
  # accumtime_34 = PHI <0(15), accumtime_69(16)>
  # iterations_35 = PHI <0.0(15), iterations_70(16)>
  _23 = global_bitopstruct.bitoparraysize;
  _24 = (long int) _23;
  _68 = DoBitfieldIteration (bitarraybase_32, bitoparraybase_33, _24, &nbitops);
  accumtime_69 = accumtime_34 + _68;
  nbitops.37_25 = nbitops;
  _26 = (double) nbitops.37_25;
  iterations_70 = _26 + iterations_35;
  _27 = TicksToSecs (accumtime_69);
  _28 = global_bitopstruct.request_secs;
  if (_27 < _28)
    goto <bb 16>; [85.00%]
  else
    goto <bb 17>; [15.00%]

  <bb 17> [15.00%]:
  # accumtime_84 = PHI <accumtime_69(16)>
  # iterations_83 = PHI <iterations_70(16)>
  FreeMemory (bitarraybase_32, &systemerror);
  FreeMemory (bitoparraybase_33, &systemerror);
  _29 = TicksToFracSecs (accumtime_84);
  _30 = iterations_83 / _29;
  global_bitopstruct.bitopspersec = _30;
  _31 = global_bitopstruct.adjust;
  if (_31 == 0)
    goto <bb 18>; [54.00%]
  else
    goto <bb 19>; [46.00%]

  <bb 18> [8.10%]:
  global_bitopstruct.adjust = 1;

  <bb 19> [15.00%]:
  nbitops ={v} {CLOBBER};
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoEmFloat (DoEmFloat, funcdef_no=68, decl_uid=4565, cgraph_uid=68, symbol_order=93)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 2
;;  header 18, latch 19
;;  depth 1, outer 0
;;  nodes: 18 19
;;
;; Loop 1
;;  header 10, latch 12
;;  depth 1, outer 0
;;  nodes: 10 12
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 14 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 15 }
;; 12 succs { 10 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 18 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 1 }
DoEmFloat ()
{
  long unsigned int loops;
  int systemerror;
  long unsigned int tickcount;
  double iterations;
  long unsigned int accumtime;
  struct InternalFPF * cbase;
  struct InternalFPF * bbase;
  struct InternalFPF * abase;
  long unsigned int _1;
  long unsigned int _2;
  int systemerror.50_3;
  long unsigned int _5;
  long unsigned int _6;
  int systemerror.52_7;
  unsigned int ivtmp_8;
  long unsigned int _9;
  long unsigned int _10;
  int systemerror.54_11;
  long unsigned int _13;
  int _14;
  long unsigned int _15;
  long unsigned int global_min_ticks.56_16;
  unsigned int ivtmp_17;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  double _23;
  double _24;
  double _25;
  double _26;
  int _27;
  long unsigned int pretmp_30;
  long unsigned int pretmp_34;
  long unsigned int _68;
  long unsigned int prephitmp_81;
  long unsigned int pretmp_82;
  long unsigned int prephitmp_83;
  long unsigned int pretmp_84;
  long unsigned int prephitmp_85;

  <bb 2> [15.00%]:
  _1 = global_emfloatstruct.arraysize;
  _2 = _1 * 12;
  abase_43 = AllocateMemory (_2, &systemerror);
  systemerror.50_3 = systemerror;
  if (systemerror.50_3 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [4.95%]:
  ReportError ("CPU:Floating Emulation", systemerror.50_3);
  ErrorExit ();

  <bb 4> [15.00%]:
  _5 = global_emfloatstruct.arraysize;
  _6 = _5 * 12;
  bbase_47 = AllocateMemory (_6, &systemerror);
  systemerror.52_7 = systemerror;
  if (systemerror.52_7 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [4.95%]:
  ReportError ("CPU:Floating Emulation", systemerror.52_7);
  FreeMemory (abase_43, &systemerror);
  ErrorExit ();

  <bb 6> [15.00%]:
  _9 = global_emfloatstruct.arraysize;
  _10 = _9 * 12;
  cbase_52 = AllocateMemory (_10, &systemerror);
  systemerror.54_11 = systemerror;
  if (systemerror.54_11 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [4.95%]:
  ReportError ("CPU:Floating Emulation", systemerror.54_11);
  FreeMemory (abase_43, &systemerror);
  FreeMemory (bbase_47, &systemerror);
  ErrorExit ();

  <bb 8> [15.00%]:
  _13 = global_emfloatstruct.arraysize;
  SetupCPUEmFloatArrays (abase_43, bbase_47, cbase_52, _13);
  _14 = global_emfloatstruct.adjust;
  if (_14 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 9> [7.50%]:
  global_emfloatstruct.loops = 0;

  <bb 10> [58.76%]:
  # loops_86 = PHI <loops_61(12), 1(9)>
  # ivtmp_8 = PHI <ivtmp_17(12), 19(9)>
  _15 = global_emfloatstruct.arraysize;
  tickcount_60 = DoEmFloatIteration (abase_43, bbase_47, cbase_52, _15, loops_86);
  global_min_ticks.56_16 = global_min_ticks;
  if (global_min_ticks.56_16 < tickcount_60)
    goto <bb 11>; [7.50%]
  else
    goto <bb 12>; [92.50%]

  <bb 11> [4.41%]:
  # loops_12 = PHI <loops_86(10)>
  global_emfloatstruct.loops = loops_12;
  goto <bb 15>; [100.00%]

  <bb 12> [54.36%]:
  loops_61 = loops_86 * 2;
  ivtmp_17 = ivtmp_8 - 1;
  if (ivtmp_17 != 0)
    goto <bb 10>; [94.31%]
  else
    goto <bb 13>; [5.69%]

  <bb 13> [3.09%]:
  pretmp_84 = global_emfloatstruct.loops;
  goto <bb 15>; [100.00%]

  <bb 14> [7.50%]:
  pretmp_30 = global_emfloatstruct.loops;

  <bb 15> [15.00%]:
  # prephitmp_85 = PHI <pretmp_30(14), loops_12(11), pretmp_84(13)>
  if (prephitmp_85 == 0)
    goto <bb 16>; [33.00%]
  else
    goto <bb 17>; [67.00%]

  <bb 16> [4.95%]:
  __builtin_puts (&"CPU:EMFPU -- CMPUEMFLOATLOOPMAX limit hit"[0]);
  FreeMemory (abase_43, &systemerror);
  FreeMemory (bbase_47, &systemerror);
  FreeMemory (cbase_52, &systemerror);
  ErrorExit ();
  pretmp_34 = global_emfloatstruct.loops;

  <bb 17> [15.00%]:
  # prephitmp_83 = PHI <pretmp_34(16), prephitmp_85(15)>

  <bb 18> [100.00%]:
  # accumtime_28 = PHI <0(17), accumtime_69(19)>
  # iterations_29 = PHI <0.0(17), iterations_70(19)>
  # prephitmp_81 = PHI <prephitmp_83(17), pretmp_82(19)>
  _19 = global_emfloatstruct.arraysize;
  _68 = DoEmFloatIteration (abase_43, bbase_47, cbase_52, _19, prephitmp_81);
  accumtime_69 = accumtime_28 + _68;
  iterations_70 = iterations_29 + 1.0e+0;
  _20 = TicksToSecs (accumtime_69);
  _21 = global_emfloatstruct.request_secs;
  if (_20 < _21)
    goto <bb 19>; [85.00%]
  else
    goto <bb 20>; [15.00%]

  <bb 19> [85.00%]:
  pretmp_82 = global_emfloatstruct.loops;
  goto <bb 18>; [100.00%]

  <bb 20> [15.00%]:
  # accumtime_39 = PHI <accumtime_69(18)>
  # iterations_36 = PHI <iterations_70(18)>
  FreeMemory (abase_43, &systemerror);
  FreeMemory (bbase_47, &systemerror);
  FreeMemory (cbase_52, &systemerror);
  _22 = global_emfloatstruct.loops;
  _23 = (double) _22;
  _24 = _23 * iterations_36;
  _25 = TicksToFracSecs (accumtime_39);
  _26 = _24 / _25;
  global_emfloatstruct.emflops = _26;
  _27 = global_emfloatstruct.adjust;
  if (_27 == 0)
    goto <bb 21>; [54.00%]
  else
    goto <bb 22>; [46.00%]

  <bb 21> [8.10%]:
  global_emfloatstruct.adjust = 1;

  <bb 22> [15.00%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoFourier (DoFourier, funcdef_no=69, decl_uid=4578, cgraph_uid=69, symbol_order=94)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;;
;; Loop 2
;;  header 16, latch 16
;;  depth 1, outer 0
;;  nodes: 16
;;
;; Loop 1
;;  header 4, latch 10
;;  depth 1, outer 0
;;  nodes: 4 10 8 6 7 5
;; 2 succs { 3 11 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 15 }
;; 10 succs { 4 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 16 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 1 }
DoFourier ()
{
  int systemerror;
  double iterations;
  long unsigned int accumtime;
  fardouble * bbase;
  fardouble * abase;
  int _1;
  long unsigned int _3;
  int systemerror.57_4;
  long unsigned int _5;
  long unsigned int _6;
  int systemerror.59_7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int global_min_ticks.61_10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  int systemerror.62_15;
  long unsigned int _17;
  long unsigned int _18;
  int systemerror.64_19;
  long unsigned int _21;
  long unsigned int _22;
  double _23;
  double _24;
  double _25;
  long unsigned int _26;
  long unsigned int _27;
  double _28;
  double _29;
  int _30;
  long unsigned int _67;
  long unsigned int prephitmp_78;

  <bb 2> [15.00%]:
  _1 = global_fourierstruct.adjust;
  if (_1 == 0)
    goto <bb 3>; [67.00%]
  else
    goto <bb 11>; [33.00%]

  <bb 3> [10.05%]:
  global_fourierstruct.arraysize = 100;

  <bb 4> [67.00%]:
  # prephitmp_78 = PHI <100(3), _12(10)>
  _3 = prephitmp_78 * 8;
  abase_54 = AllocateMemory (_3, &systemerror);
  systemerror.57_4 = systemerror;
  if (systemerror.57_4 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [22.11%]:
  ReportError ("FPU:Transcendental", systemerror.57_4);
  ErrorExit ();

  <bb 6> [67.00%]:
  _5 = global_fourierstruct.arraysize;
  _6 = _5 * 8;
  bbase_58 = AllocateMemory (_6, &systemerror);
  systemerror.59_7 = systemerror;
  if (systemerror.59_7 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [22.11%]:
  ReportError ("FPU:Transcendental", systemerror.59_7);
  FreeMemory (abase_54, &systemerror);
  ErrorExit ();

  <bb 8> [67.00%]:
  _8 = global_fourierstruct.arraysize;
  _9 = DoFPUTransIteration (abase_54, bbase_58, _8);
  global_min_ticks.61_10 = global_min_ticks;
  if (_9 > global_min_ticks.61_10)
    goto <bb 9>; [15.00%]
  else
    goto <bb 10>; [85.00%]

  <bb 9> [10.05%]:
  # abase_80 = PHI <abase_54(8)>
  # bbase_79 = PHI <bbase_58(8)>
  goto <bb 15>; [100.00%]

  <bb 10> [56.95%]:
  FreeMemory (abase_54, &systemerror);
  FreeMemory (bbase_58, &systemerror);
  _11 = global_fourierstruct.arraysize;
  _12 = _11 + 50;
  global_fourierstruct.arraysize = _12;
  goto <bb 4>; [100.00%]

  <bb 11> [4.95%]:
  _13 = global_fourierstruct.arraysize;
  _14 = _13 * 8;
  abase_44 = AllocateMemory (_14, &systemerror);
  systemerror.62_15 = systemerror;
  if (systemerror.62_15 != 0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 13>; [67.00%]

  <bb 12> [1.63%]:
  ReportError ("FPU:Transcendental", systemerror.62_15);
  ErrorExit ();

  <bb 13> [4.95%]:
  _17 = global_fourierstruct.arraysize;
  _18 = _17 * 8;
  bbase_48 = AllocateMemory (_18, &systemerror);
  systemerror.64_19 = systemerror;
  if (systemerror.64_19 != 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 14> [1.63%]:
  ReportError ("FPU:Transcendental", systemerror.64_19);
  FreeMemory (abase_44, &systemerror);
  ErrorExit ();

  <bb 15> [15.00%]:
  # abase_31 = PHI <abase_80(9), abase_44(13), abase_44(14)>
  # bbase_32 = PHI <bbase_79(9), bbase_48(13), bbase_48(14)>

  <bb 16> [100.00%]:
  # accumtime_33 = PHI <0(15), accumtime_68(16)>
  # iterations_34 = PHI <0.0(15), iterations_69(16)>
  _21 = global_fourierstruct.arraysize;
  _67 = DoFPUTransIteration (abase_31, bbase_32, _21);
  accumtime_68 = accumtime_33 + _67;
  _22 = global_fourierstruct.arraysize;
  _23 = (double) _22;
  _24 = _23 * 2.0e+0;
  _25 = _24 - 1.0e+0;
  iterations_69 = _25 + iterations_34;
  _26 = TicksToSecs (accumtime_68);
  _27 = global_fourierstruct.request_secs;
  if (_26 < _27)
    goto <bb 16>; [85.00%]
  else
    goto <bb 17>; [15.00%]

  <bb 17> [15.00%]:
  # accumtime_20 = PHI <accumtime_68(16)>
  # iterations_16 = PHI <iterations_69(16)>
  FreeMemory (abase_31, &systemerror);
  FreeMemory (bbase_32, &systemerror);
  _28 = TicksToFracSecs (accumtime_20);
  _29 = iterations_16 / _28;
  global_fourierstruct.fflops = _29;
  _30 = global_fourierstruct.adjust;
  if (_30 == 0)
    goto <bb 18>; [54.00%]
  else
    goto <bb 19>; [46.00%]

  <bb 18> [8.10%]:
  global_fourierstruct.adjust = 1;

  <bb 19> [15.00%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoAssign (DoAssign, funcdef_no=73, decl_uid=4600, cgraph_uid=73, symbol_order=98)

;; 21 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
;;
;; Loop 2
;;  header 32, latch 52
;;  depth 1, outer 0
;;  nodes: 32 52 49 51 50 36 48 46 45 40 47 37 39 38 44 43 42 41 34 33 35
;;
;; Loop 9
;;  header 51, latch 51
;;  depth 2, outer 2
;;  nodes: 51
;;
;; Loop 10
;;  header 37, latch 48
;;  depth 2, outer 2
;;  nodes: 37 48 46 45 40 47 39 38 44 43 42 41
;;
;; Loop 11
;;  header 47, latch 46
;;  depth 3, outer 10
;;  nodes: 47 46 45 40 39 38 44 43 42 41
;;
;; Loop 15
;;  header 40, latch 40
;;  depth 4, outer 11
;;  nodes: 40
;;
;; Loop 12
;;  header 44, latch 44
;;  depth 4, outer 11
;;  nodes: 44
;;
;; Loop 13
;;  header 35, latch 34
;;  depth 2, outer 2
;;  nodes: 35 34 33
;;
;; Loop 14
;;  header 33, latch 33
;;  depth 3, outer 13
;;  nodes: 33
;;
;; Loop 1
;;  header 4, latch 28
;;  depth 1, outer 0
;;  nodes: 4 28 26 23 25 24 10 22 20 19 14 21 11 13 12 18 17 16 15 8 7 9 6 5
;;
;; Loop 3
;;  header 25, latch 25
;;  depth 2, outer 1
;;  nodes: 25
;;
;; Loop 4
;;  header 11, latch 22
;;  depth 2, outer 1
;;  nodes: 11 22 20 19 14 21 13 12 18 17 16 15
;;
;; Loop 5
;;  header 21, latch 20
;;  depth 3, outer 4
;;  nodes: 21 20 19 14 13 12 18 17 16 15
;;
;; Loop 18
;;  header 14, latch 14
;;  depth 4, outer 5
;;  nodes: 14
;;
;; Loop 6
;;  header 18, latch 18
;;  depth 4, outer 5
;;  nodes: 18
;;
;; Loop 7
;;  header 9, latch 8
;;  depth 2, outer 1
;;  nodes: 9 8 7
;;
;; Loop 8
;;  header 7, latch 7
;;  depth 3, outer 7
;;  nodes: 7
;; 2 succs { 3 29 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 9 }
;; 7 succs { 7 8 }
;; 8 succs { 9 10 }
;; 9 succs { 7 }
;; 10 succs { 11 23 }
;; 11 succs { 21 }
;; 12 succs { 13 19 }
;; 13 succs { 19 }
;; 14 succs { 14 20 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 18 12 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 14 15 }
;; 22 succs { 11 23 }
;; 23 succs { 24 26 }
;; 24 succs { 25 }
;; 25 succs { 25 26 }
;; 26 succs { 27 28 }
;; 27 succs { 31 }
;; 28 succs { 4 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 35 }
;; 33 succs { 33 34 }
;; 34 succs { 35 36 }
;; 35 succs { 33 }
;; 36 succs { 37 49 }
;; 37 succs { 47 }
;; 38 succs { 39 45 }
;; 39 succs { 45 }
;; 40 succs { 40 46 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 44 succs { 44 38 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 40 41 }
;; 48 succs { 37 49 }
;; 49 succs { 50 52 }
;; 50 succs { 51 }
;; 51 succs { 51 52 }
;; 52 succs { 32 53 }
;; 53 succs { 54 55 }
;; 54 succs { 55 }
;; 55 succs { 1 }
DoAssign ()
{
  unsigned long ivtmp.1581;
  unsigned long ivtmp.1573;
  long unsigned int ivtmp.1557;
  unsigned long ivtmp.1553;
  unsigned long ivtmp.1552;
  unsigned long ivtmp.1551;
  sizetype ivtmp.1538;
  unsigned int ivtmp.1535;
  sizetype ivtmp.1534;
  unsigned long ivtmp.1524;
  unsigned long ivtmp.1516;
  unsigned long ivtmp.1508;
  long unsigned int ivtmp.1491;
  unsigned long ivtmp.1488;
  unsigned long ivtmp.1485;
  sizetype ivtmp.1472;
  unsigned int ivtmp.1469;
  sizetype ivtmp.1468;
  unsigned long ivtmp.1458;
  vector(2) long int * vectp.1452;
  vector(2) long int * vectp.1451;
  vector(2) long int vect__72.1450;
  vector(2) long int * vectp.1449;
  vector(2) long int * vectp.1448;
  short unsigned int tmp.1447;
  short unsigned int tmp.1446;
  short unsigned int niters_vector_mult_vf.1445;
  short unsigned int bnd.1444;
  short unsigned int niters.1443;
  sizetype prolog_loop_adjusted_niters.1442;
  short unsigned int prolog_loop_niters.1441;
  vector(2) long int * vectp.1440;
  vector(2) long int * vectp.1439;
  vector(2) long int * vectp.1438;
  vector(2) long int vect__102.1437;
  vector(2) long int * vectp.1436;
  vector(2) long int * vectp.1435;
  short unsigned int tmp.1434;
  short unsigned int tmp.1433;
  short unsigned int niters_vector_mult_vf.1432;
  short unsigned int bnd.1431;
  short unsigned int niters.1430;
  sizetype prolog_loop_adjusted_niters.1429;
  short unsigned int prolog_loop_niters.1428;
  vector(2) long int * vectp.1427;
  short unsigned int i;
  short unsigned int j;
  long unsigned int i;
  short unsigned int j;
  short unsigned int i;
  long int * abase1$ptrs$p;
  long unsigned int elapsed;
  long unsigned int i;
  long int * abase$ptrs$p;
  long unsigned int D.8187;
  short unsigned int i;
  short unsigned int j;
  long unsigned int i;
  short unsigned int j;
  short unsigned int i;
  long int * abase1$ptrs$p;
  long unsigned int elapsed;
  long unsigned int i;
  long int * abase$ptrs$p;
  long unsigned int D.8170;
  double iterations;
  long unsigned int accumtime;
  int systemerror;
  farlong * arraybase;
  int _1;
  long int _2;
  long unsigned int _3;
  int systemerror.66_4;
  long unsigned int _6;
  long unsigned int global_min_ticks.68_8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  int systemerror.69_13;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  double _19;
  double _20;
  double _21;
  double _22;
  int _23;
  unsigned long _48;
  long unsigned int _62;
  long int * _64;
  farlong[101] * _68;
  unsigned long _70;
  farlong[101] * _71;
  unsigned int _77;
  long unsigned int _79;
  long int _84;
  farlong[101] * _90;
  long unsigned int _92;
  long int * _94;
  farlong[101] * _98;
  long unsigned int _100;
  farlong[101] * _101;
  void * _102;
  void * _103;
  unsigned int _107;
  long int _114;
  long int _119;
  _Bool _126;
  _Bool _127;
  farlong[101] * _128;
  unsigned long _132;
  unsigned long _143;
  farlong[101] * _149;
  unsigned long _152;
  short unsigned int _153;
  long unsigned int _155;
  farlong[101] * _162;
  _Bool _169;
  farlong[101] * _170;
  long unsigned int prephitmp_173;
  farlong[101] * _174;
  unsigned long _177;
  unsigned long _180;
  unsigned long _181;
  long unsigned int _187;
  unsigned long _191;
  short unsigned int ivtmp_207;
  short unsigned int ivtmp_212;
  int _213;
  long int _214;
  short unsigned int ivtmp_217;
  unsigned long _218;
  sizetype _225;
  long unsigned int _226;
  long unsigned int _231;
  long unsigned int _233;
  long unsigned int _234;
  farlong[101] * _244;
  farlong[101] * _247;
  _Bool _248;
  farlong[101] * _251;
  long unsigned int _252;
  farlong[101] * _253;
  _Bool _254;
  _Bool _255;
  long int _260;
  void * _265;
  long int _270;
  unsigned long _275;
  short unsigned int _276;
  unsigned long _279;
  unsigned long _280;
  unsigned long _281;
  short unsigned int _282;
  short unsigned int ivtmp_287;
  short unsigned int ivtmp_292;
  int _293;
  long int _294;
  short unsigned int ivtmp_297;
  long unsigned int _298;
  sizetype _305;
  long unsigned int _306;
  long unsigned int _311;
  long unsigned int _313;
  long unsigned int _314;
  short unsigned int _329;
  farlong[101] * _333;
  unsigned long _343;
  farlong[101] * _344;
  unsigned long _345;
  unsigned long _346;
  long unsigned int _347;
  long unsigned int _348;
  void * _349;
  void * _350;
  void * _354;
  unsigned long _356;
  unsigned long _360;
  unsigned long _361;

  <bb 2> [0.00%]:
  _1 = global_assignstruct.adjust;
  if (_1 == 0)
    goto <bb 3>; [67.00%]
  else
    goto <bb 29>; [33.00%]

  <bb 3> [0.00%]:
  global_assignstruct.numarrays = 1;

  <bb 4> [0.00%]:
  # prephitmp_173 = PHI <1(3), _10(28)>
  _3 = prephitmp_173 * 81608;
  arraybase_40 = AllocateMemory (_3, &systemerror);
  systemerror.66_4 = systemerror;
  if (systemerror.66_4 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [0.00%]:
  ReportError ("CPU:Assignment", systemerror.66_4);
  FreeMemory (arraybase_40, &systemerror);
  ErrorExit ();

  <bb 6> [0.00%]:
  _6 = global_assignstruct.numarrays;
  randnum (13);
  ivtmp.1581_359 = (unsigned long) arraybase_40;
  _360 = (unsigned long) arraybase_40;
  _361 = _360 + 81608;
  goto <bb 9>; [100.00%]

  <bb 7> [17.31%]:
  # ivtmp.1573_351 = PHI <ivtmp.1573_352(7), ivtmp.1573_353(9)>
  _77 = abs_randwc (5000000);
  _84 = (long int) _77;
  _354 = (void *) ivtmp.1573_351;
  MEM[base: _354, offset: 0B] = _84;
  ivtmp.1573_352 = ivtmp.1573_351 + 8;
  if (ivtmp.1573_352 != _356)
    goto <bb 7>; [98.99%]
  else
    goto <bb 8>; [1.01%]

  <bb 8> [0.18%]:
  ivtmp.1581_358 = ivtmp.1581_357 + 808;
  if (ivtmp.1581_358 != _361)
    goto <bb 9>; [99.00%]
  else
    goto <bb 10>; [1.00%]

  <bb 9> [0.18%]:
  # ivtmp.1581_357 = PHI <ivtmp.1581_358(8), ivtmp.1581_359(6)>
  ivtmp.1573_353 = ivtmp.1581_357;
  _356 = ivtmp.1581_357 + 808;
  goto <bb 7>; [100.00%]

  <bb 10> [0.00%]:
  if (_6 > 1)
    goto <bb 11>; [67.61%]
  else
    goto <bb 23>; [32.39%]

  <bb 11> [0.01%]:
  # abase1$ptrs$p_183 = PHI <_64(22), arraybase_40(10)>
  # i_186 = PHI <i_76(22), 1(10)>
  _64 = abase1$ptrs$p_183 + 81608;
  _333 = arraybase_40 + 16;
  ivtmp.1551_332 = (unsigned long) _333;
  ivtmp.1552_336 = (unsigned long) arraybase_40;
  ivtmp.1553_339 = (unsigned long) _64;
  _345 = (unsigned long) arraybase_40;
  _346 = _345 + 81624;
  goto <bb 21>; [100.00%]

  <bb 12> [0.54%]:
  niters_vector_mult_vf.1445_300 = bnd.1444_299 << 1;
  tmp.1446_301 = j_285 + niters_vector_mult_vf.1445_300;
  tmp.1447_302 = ivtmp_287 - niters_vector_mult_vf.1445_300;
  if (niters.1443_289 == niters_vector_mult_vf.1445_300)
    goto <bb 19>; [33.34%]
  else
    goto <bb 13>; [66.66%]

  <bb 13> [35.39%]:
  # j_290 = PHI <tmp.1446_301(12)>
  # ivtmp_292 = PHI <tmp.1447_302(12)>
  _293 = (int) j_290;
  _294 = *_68[_293];
  *_71[_293] = _294;
  j_296 = j_290 + 1;
  ivtmp_297 = ivtmp_292 - 1;
  goto <bb 19>; [100.00%]

  <bb 14> [13.27%]:
  # ivtmp.1534_323 = PHI <0(21), ivtmp.1534_324(14)>
  _260 = MEM[base: _68, index: ivtmp.1534_323, offset: 0B];
  MEM[base: _71, index: ivtmp.1534_323, offset: 0B] = _260;
  ivtmp.1534_324 = ivtmp.1534_323 + 8;
  if (ivtmp.1534_324 != 808)
    goto <bb 14>; [98.99%]
  else
    goto <bb 20>; [1.01%]

  <bb 15> [0.54%]:
  _279 = ivtmp.1552_334;
  _280 = _279 >> 3;
  _281 = -_280;
  _282 = (short unsigned int) _281;
  prolog_loop_niters.1441_278 = _282 & 1;
  if (prolog_loop_niters.1441_278 == 0)
    goto <bb 17>; [33.34%]
  else
    goto <bb 16>; [66.66%]

  <bb 16> [0.37%]:
  _349 = (void *) ivtmp.1552_334;
  _270 = MEM[base: _349, offset: 0B];
  _350 = (void *) ivtmp.1553_337;
  MEM[base: _350, offset: 0B] = _270;

  <bb 17> [0.54%]:
  # j_285 = PHI <1(16), 0(15)>
  # ivtmp_287 = PHI <100(16), 101(15)>
  prolog_loop_adjusted_niters.1442_288 = (sizetype) prolog_loop_niters.1441_278;
  niters.1443_289 = 101 - prolog_loop_niters.1441_278;
  bnd.1444_299 = niters.1443_289 >> 1;
  _305 = prolog_loop_adjusted_niters.1442_288 * 8;
  _306 = _305 + _252;
  vectp.1449_304 = arraybase_40 + _306;
  _311 = ivtmp.1557_341;
  _79 = _311 + 10201;
  _313 = _79 + prolog_loop_adjusted_niters.1442_288;
  _314 = _313 * 8;
  vectp.1452_310 = abase1$ptrs$p_183 + _314;

  <bb 18> [27.01%]:
  # ivtmp.1535_325 = PHI <ivtmp.1535_326(18), 0(17)>
  # ivtmp.1538_327 = PHI <ivtmp.1538_328(18), 0(17)>
  vect__72.1450_309 = MEM[base: vectp.1449_304, index: ivtmp.1538_327, offset: 0B];
  MEM[base: vectp.1452_310, index: ivtmp.1538_327, offset: 0B] = vect__72.1450_309;
  ivtmp.1535_326 = ivtmp.1535_325 + 1;
  ivtmp.1538_328 = ivtmp.1538_327 + 16;
  _329 = (short unsigned int) ivtmp.1535_326;
  if (_329 < bnd.1444_299)
    goto <bb 18>; [98.00%]
  else
    goto <bb 12>; [2.00%]

  <bb 19> [0.54%]:

  <bb 20> [0.67%]:
  ivtmp.1551_331 = ivtmp.1551_330 + 808;
  ivtmp.1552_335 = ivtmp.1552_334 + 808;
  ivtmp.1553_338 = ivtmp.1553_337 + 808;
  ivtmp.1557_342 = ivtmp.1557_341 + 101;
  if (ivtmp.1551_331 != _346)
    goto <bb 21>; [98.99%]
  else
    goto <bb 22>; [1.01%]

  <bb 21> [0.67%]:
  # ivtmp.1551_330 = PHI <ivtmp.1551_331(20), ivtmp.1551_332(11)>
  # ivtmp.1552_334 = PHI <ivtmp.1552_335(20), ivtmp.1552_336(11)>
  # ivtmp.1553_337 = PHI <ivtmp.1553_338(20), ivtmp.1553_339(11)>
  # ivtmp.1557_341 = PHI <ivtmp.1557_342(20), 0(11)>
  _68 = (farlong[101] *) ivtmp.1552_334;
  _71 = (farlong[101] *) ivtmp.1553_337;
  _244 = (farlong[101] *) ivtmp.1551_330;
  _247 = (farlong[101] *) ivtmp.1553_337;
  _248 = _244 <= _247;
  _343 = ivtmp.1553_337 + 16;
  _344 = (farlong[101] *) _343;
  _251 = _344;
  _347 = (long unsigned int) arraybase_40;
  _348 = ivtmp.1552_334 - _347;
  _252 = _348;
  _253 = (farlong[101] *) ivtmp.1552_334;
  _254 = _251 <= _253;
  _255 = _254 | _248;
  if (_255 != 0)
    goto <bb 15>; [80.00%]
  else
    goto <bb 14>; [20.00%]

  <bb 22> [0.01%]:
  i_76 = i_186 + 1;
  if (i_76 != _6)
    goto <bb 11>; [85.00%]
  else
    goto <bb 23>; [15.00%]

  <bb 23> [0.00%]:
  elapsed_57 = StartStopwatch ();
  if (_6 != 0)
    goto <bb 24>; [85.00%]
  else
    goto <bb 26>; [15.00%]

  <bb 24> [0.00%]:
  ivtmp.1524_322 = (unsigned long) arraybase_40;

  <bb 25> [0.01%]:
  # i_105 = PHI <i_61(25), 0(24)>
  # ivtmp.1524_320 = PHI <ivtmp.1524_321(25), ivtmp.1524_322(24)>
  abase$ptrs$p_93 = (long int *) ivtmp.1524_320;
  Assignment (abase$ptrs$p_93);
  i_61 = i_105 + 1;
  ivtmp.1524_321 = ivtmp.1524_320 + 81608;
  if (i_61 != _6)
    goto <bb 25>; [85.00%]
  else
    goto <bb 26>; [15.00%]

  <bb 26> [0.00%]:
  _62 = StopStopwatch (elapsed_57);
  global_min_ticks.68_8 = global_min_ticks;
  if (global_min_ticks.68_8 < _62)
    goto <bb 27>; [15.00%]
  else
    goto <bb 28>; [85.00%]

  <bb 27> [0.00%]:
  # arraybase_108 = PHI <arraybase_40(26)>
  goto <bb 31>; [100.00%]

  <bb 28> [0.00%]:
  FreeMemory (arraybase_40, &systemerror);
  _9 = global_assignstruct.numarrays;
  _10 = _9 + 1;
  global_assignstruct.numarrays = _10;
  goto <bb 4>; [100.00%]

  <bb 29> [0.00%]:
  _11 = global_assignstruct.numarrays;
  _12 = _11 * 81608;
  arraybase_34 = AllocateMemory (_12, &systemerror);
  systemerror.69_13 = systemerror;
  if (systemerror.69_13 != 0)
    goto <bb 30>; [33.00%]
  else
    goto <bb 31>; [67.00%]

  <bb 30> [0.00%]:
  ReportError ("CPU:Assignment", systemerror.69_13);
  FreeMemory (arraybase_34, &systemerror);
  ErrorExit ();

  <bb 31> [0.00%]:
  # arraybase_24 = PHI <arraybase_108(27), arraybase_34(29), arraybase_34(30)>

  <bb 32> [0.00%]:
  # accumtime_25 = PHI <0(31), accumtime_49(52)>
  # iterations_26 = PHI <0.0(31), iterations_50(52)>
  _15 = global_assignstruct.numarrays;
  randnum (13);
  ivtmp.1516_140 = (unsigned long) arraybase_24;
  _181 = (unsigned long) arraybase_24;
  _180 = _181 + 81608;
  goto <bb 35>; [100.00%]

  <bb 33> [25.84%]:
  # ivtmp.1508_72 = PHI <ivtmp.1508_73(33), ivtmp.1508_88(35)>
  _107 = abs_randwc (5000000);
  _114 = (long int) _107;
  _265 = (void *) ivtmp.1508_72;
  MEM[base: _265, offset: 0B] = _114;
  ivtmp.1508_73 = ivtmp.1508_72 + 8;
  if (ivtmp.1508_73 != _132)
    goto <bb 33>; [98.99%]
  else
    goto <bb 34>; [1.01%]

  <bb 34> [0.26%]:
  ivtmp.1516_241 = ivtmp.1516_240 + 808;
  if (ivtmp.1516_241 != _180)
    goto <bb 35>; [99.00%]
  else
    goto <bb 36>; [1.00%]

  <bb 35> [0.26%]:
  # ivtmp.1516_240 = PHI <ivtmp.1516_241(34), ivtmp.1516_140(32)>
  ivtmp.1508_88 = ivtmp.1516_240;
  _132 = ivtmp.1516_240 + 808;
  goto <bb 33>; [100.00%]

  <bb 36> [0.00%]:
  if (_15 > 1)
    goto <bb 37>; [67.61%]
  else
    goto <bb 49>; [32.39%]

  <bb 37> [0.01%]:
  # abase1$ptrs$p_189 = PHI <_94(48), arraybase_24(36)>
  # i_192 = PHI <i_106(48), 1(36)>
  _94 = abase1$ptrs$p_189 + 81608;
  ivtmp.1485_273 = (unsigned long) _94;
  ivtmp.1488_268 = (unsigned long) arraybase_24;
  _177 = (unsigned long) _94;
  _70 = _177 + 81608;
  _275 = _70;
  goto <bb 47>; [100.00%]

  <bb 38> [0.80%]:
  niters_vector_mult_vf.1432_220 = bnd.1431_219 << 1;
  tmp.1433_221 = j_205 + niters_vector_mult_vf.1432_220;
  tmp.1434_222 = ivtmp_207 - niters_vector_mult_vf.1432_220;
  if (niters.1430_209 == niters_vector_mult_vf.1432_220)
    goto <bb 45>; [33.34%]
  else
    goto <bb 39>; [66.66%]

  <bb 39> [52.83%]:
  # j_210 = PHI <tmp.1433_221(38)>
  # ivtmp_212 = PHI <tmp.1434_222(38)>
  _213 = (int) j_210;
  _214 = *_98[_213];
  *_101[_213] = _214;
  j_216 = j_210 + 1;
  ivtmp_217 = ivtmp_212 - 1;
  goto <bb 45>; [100.00%]

  <bb 40> [19.80%]:
  # ivtmp.1468_160 = PHI <0(47), ivtmp.1468_159(40)>
  _119 = MEM[base: _98, index: ivtmp.1468_160, offset: 0B];
  MEM[base: _101, index: ivtmp.1468_160, offset: 0B] = _119;
  ivtmp.1468_159 = ivtmp.1468_160 + 8;
  if (ivtmp.1468_159 != 808)
    goto <bb 40>; [98.99%]
  else
    goto <bb 46>; [1.01%]

  <bb 41> [0.80%]:
  _152 = ivtmp.1488_269;
  _48 = _152 >> 3;
  _143 = -_48;
  _153 = (short unsigned int) _143;
  prolog_loop_niters.1428_151 = _153 & 1;
  if (prolog_loop_niters.1428_151 == 0)
    goto <bb 43>; [33.34%]
  else
    goto <bb 42>; [66.66%]

  <bb 42> [0.55%]:
  _102 = (void *) ivtmp.1488_269;
  _2 = MEM[base: _102, offset: 0B];
  _103 = (void *) ivtmp.1485_274;
  MEM[base: _103, offset: 0B] = _2;

  <bb 43> [0.80%]:
  # j_205 = PHI <1(42), 0(41)>
  # ivtmp_207 = PHI <100(42), 101(41)>
  prolog_loop_adjusted_niters.1429_208 = (sizetype) prolog_loop_niters.1428_151;
  niters.1430_209 = 101 - prolog_loop_niters.1428_151;
  bnd.1431_219 = niters.1430_209 >> 1;
  _225 = prolog_loop_adjusted_niters.1429_208 * 8;
  _226 = _225 + _155;
  vectp.1436_224 = arraybase_24 + _226;
  _231 = ivtmp.1491_266;
  _187 = _231 + 10201;
  _233 = _187 + prolog_loop_adjusted_niters.1429_208;
  _234 = _233 * 8;
  vectp.1439_230 = abase1$ptrs$p_189 + _234;

  <bb 44> [40.00%]:
  # ivtmp.1469_63 = PHI <ivtmp.1469_154(44), 0(43)>
  # ivtmp.1472_65 = PHI <ivtmp.1472_75(44), 0(43)>
  vect__102.1437_229 = MEM[base: vectp.1436_224, index: ivtmp.1472_65, offset: 0B];
  MEM[base: vectp.1439_230, index: ivtmp.1472_65, offset: 0B] = vect__102.1437_229;
  ivtmp.1469_154 = ivtmp.1469_63 + 1;
  ivtmp.1472_75 = ivtmp.1472_65 + 16;
  _276 = (short unsigned int) ivtmp.1469_154;
  if (_276 < bnd.1431_219)
    goto <bb 44>; [98.00%]
  else
    goto <bb 38>; [2.00%]

  <bb 45> [0.80%]:

  <bb 46> [1.00%]:
  ivtmp.1485_284 = ivtmp.1485_274 + 808;
  ivtmp.1488_283 = ivtmp.1488_269 + 808;
  ivtmp.1491_122 = ivtmp.1491_266 + 101;
  if (ivtmp.1485_284 != _275)
    goto <bb 47>; [98.99%]
  else
    goto <bb 48>; [1.01%]

  <bb 47> [1.00%]:
  # ivtmp.1485_274 = PHI <ivtmp.1485_284(46), ivtmp.1485_273(37)>
  # ivtmp.1488_269 = PHI <ivtmp.1488_283(46), ivtmp.1488_268(37)>
  # ivtmp.1491_266 = PHI <ivtmp.1491_122(46), 0(37)>
  _98 = (farlong[101] *) ivtmp.1488_269;
  _101 = (farlong[101] *) ivtmp.1485_274;
  _191 = ivtmp.1488_269 + 16;
  _149 = (farlong[101] *) _191;
  _174 = _149;
  _170 = (farlong[101] *) ivtmp.1485_274;
  _169 = _170 >= _174;
  _218 = ivtmp.1485_274 + 16;
  _90 = (farlong[101] *) _218;
  _162 = _90;
  _298 = (long unsigned int) arraybase_24;
  _100 = ivtmp.1488_269 - _298;
  _155 = _100;
  _128 = (farlong[101] *) ivtmp.1488_269;
  _127 = _128 >= _162;
  _126 = _127 | _169;
  if (_126 != 0)
    goto <bb 41>; [80.00%]
  else
    goto <bb 40>; [20.00%]

  <bb 48> [0.01%]:
  i_106 = i_192 + 1;
  if (i_106 != _15)
    goto <bb 37>; [85.00%]
  else
    goto <bb 49>; [15.00%]

  <bb 49> [0.00%]:
  elapsed_87 = StartStopwatch ();
  if (_15 != 0)
    goto <bb 50>; [85.00%]
  else
    goto <bb 52>; [15.00%]

  <bb 50> [0.00%]:
  ivtmp.1458_135 = (unsigned long) arraybase_24;

  <bb 51> [0.02%]:
  # i_95 = PHI <i_91(51), 0(50)>
  # ivtmp.1458_7 = PHI <ivtmp.1458_47(51), ivtmp.1458_135(50)>
  abase$ptrs$p_161 = (long int *) ivtmp.1458_7;
  Assignment (abase$ptrs$p_161);
  i_91 = i_95 + 1;
  ivtmp.1458_47 = ivtmp.1458_7 + 81608;
  if (i_91 != _15)
    goto <bb 51>; [85.00%]
  else
    goto <bb 52>; [15.00%]

  <bb 52> [0.00%]:
  _92 = StopStopwatch (elapsed_87);
  accumtime_49 = _92 + accumtime_25;
  iterations_50 = iterations_26 + 1.0e+0;
  _16 = TicksToSecs (accumtime_49);
  _17 = global_assignstruct.request_secs;
  if (_16 < _17)
    goto <bb 32>; [85.00%]
  else
    goto <bb 53>; [15.00%]

  <bb 53> [0.00%]:
  # accumtime_129 = PHI <accumtime_49(52)>
  # iterations_163 = PHI <iterations_50(52)>
  FreeMemory (arraybase_24, &systemerror);
  _18 = global_assignstruct.numarrays;
  _19 = (double) _18;
  _20 = _19 * iterations_163;
  _21 = TicksToFracSecs (accumtime_129);
  _22 = _20 / _21;
  global_assignstruct.iterspersec = _22;
  _23 = global_assignstruct.adjust;
  if (_23 == 0)
    goto <bb 54>; [54.00%]
  else
    goto <bb 55>; [46.00%]

  <bb 54> [0.00%]:
  global_assignstruct.adjust = 1;

  <bb 55> [0.00%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoIDEA (DoIDEA, funcdef_no=82, decl_uid=4624, cgraph_uid=82, symbol_order=107)

;; 22 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
;;
;; Loop 5
;;  header 78, latch 84
;;  depth 1, outer 0
;;  nodes: 78 84 83 81 80 82 79
;;
;; Loop 19
;;  header 82, latch 81
;;  depth 2, outer 5
;;  nodes: 82 81 80 79
;;
;; Loop 20
;;  header 80, latch 80
;;  depth 3, outer 19
;;  nodes: 80
;;
;; Loop 21
;;  header 79, latch 79
;;  depth 3, outer 19
;;  nodes: 79
;;
;; Loop 4
;;  header 67, latch 74
;;  depth 1, outer 0
;;  nodes: 67 74 72 70 69 71 68
;;
;; Loop 16
;;  header 71, latch 70
;;  depth 2, outer 4
;;  nodes: 71 70 69 68
;;
;; Loop 17
;;  header 69, latch 69
;;  depth 3, outer 16
;;  nodes: 69
;;
;; Loop 18
;;  header 68, latch 68
;;  depth 3, outer 16
;;  nodes: 68
;;
;; Loop 3
;;  header 63, latch 63
;;  depth 1, outer 0
;;  nodes: 63
;;
;; Loop 15
;;  header 52, latch 54
;;  depth 1, outer 0
;;  nodes: 52 54
;;
;; Loop 14
;;  header 44, latch 46
;;  depth 1, outer 0
;;  nodes: 44 46
;;
;; Loop 7
;;  header 23, latch 39
;;  depth 1, outer 0
;;  nodes: 23 39 31 36 33 38 37 35 34 32 28 25 30 29 27 26 24
;;
;; Loop 13
;;  header 35, latch 37
;;  depth 2, outer 7
;;  nodes: 35 37
;;
;; Loop 12
;;  header 27, latch 29
;;  depth 2, outer 7
;;  nodes: 27 29
;;
;; Loop 11
;;  header 18, latch 20
;;  depth 1, outer 0
;;  nodes: 18 20
;;
;; Loop 10
;;  header 10, latch 12
;;  depth 1, outer 0
;;  nodes: 10 12
;;
;; Loop 8
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 14 7 }
;; 7 succs { 8 9 }
;; 8 succs { 14 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 14 }
;; 12 succs { 10 13 }
;; 13 succs { 14 }
;; 14 succs { 22 15 }
;; 15 succs { 16 17 }
;; 16 succs { 22 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 22 }
;; 20 succs { 18 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 31 24 }
;; 24 succs { 25 26 }
;; 25 succs { 31 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 31 }
;; 29 succs { 27 30 }
;; 30 succs { 31 }
;; 31 succs { 39 32 }
;; 32 succs { 33 34 }
;; 33 succs { 39 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 39 }
;; 37 succs { 35 38 }
;; 38 succs { 39 }
;; 39 succs { 23 40 }
;; 40 succs { 48 41 }
;; 41 succs { 42 43 }
;; 42 succs { 48 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 48 }
;; 46 succs { 44 47 }
;; 47 succs { 48 }
;; 48 succs { 56 49 }
;; 49 succs { 50 51 }
;; 50 succs { 56 }
;; 51 succs { 52 }
;; 52 succs { 53 54 }
;; 53 succs { 56 }
;; 54 succs { 52 55 }
;; 55 succs { 56 }
;; 56 succs { 57 58 }
;; 57 succs { 58 }
;; 58 succs { 59 60 }
;; 59 succs { 60 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 63 65 }
;; 63 succs { 63 64 }
;; 64 succs { 65 }
;; 65 succs { 66 76 }
;; 66 succs { 67 }
;; 67 succs { 71 72 }
;; 68 succs { 68 69 }
;; 69 succs { 69 70 }
;; 70 succs { 71 72 }
;; 71 succs { 68 70 }
;; 72 succs { 73 74 }
;; 73 succs { 77 }
;; 74 succs { 67 75 }
;; 75 succs { 77 }
;; 76 succs { 77 }
;; 77 succs { 78 }
;; 78 succs { 82 83 }
;; 79 succs { 79 80 }
;; 80 succs { 80 81 }
;; 81 succs { 82 83 }
;; 82 succs { 79 81 }
;; 83 succs { 84 85 }
;; 84 succs { 78 }
;; 85 succs { 86 87 }
;; 86 succs { 87 }
;; 87 succs { 1 }
DoIDEA ()
{
  unsigned long ivtmp.1645;
  register long unsigned int i;
  register long unsigned int j;
  long unsigned int elapsed;
  long unsigned int D.8430;
  register long unsigned int i;
  register long unsigned int j;
  long unsigned int elapsed;
  long unsigned int D.8419;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8408;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8402;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8396;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8390;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8384;
  u16 x;
  u16 y;
  u16 q;
  u16 t1;
  u16 t0;
  u16 D.8378;
  u16 x;
  int i;
  int j;
  u16 * userkey;
  u16 * Z;
  u16 TT[52];
  int j;
  u16 t1;
  u16 t2;
  u16 t3;
  u16 * p;
  u16 * Z;
  u16 * DK;
  faruchar * plain2;
  faruchar * crypt1;
  faruchar * plain1;
  int systemerror;
  double iterations;
  long unsigned int accumtime;
  u16 userkey[8];
  u16 DK[52];
  u16 Z[52];
  int i;
  unsigned int _1;
  short unsigned int _2;
  long unsigned int _3;
  int systemerror.102_4;
  long unsigned int _6;
  int systemerror.104_7;
  long unsigned int _9;
  int systemerror.106_10;
  unsigned int _12;
  unsigned char _15;
  long unsigned int _16;
  long unsigned int _17;
  int _18;
  long unsigned int _20;
  long unsigned int global_min_ticks.108_22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _28;
  double _29;
  long unsigned int _30;
  long unsigned int _31;
  double _32;
  double _33;
  int _34;
  faruchar * _90;
  unsigned long _91;
  short unsigned int _95;
  int _96;
  short unsigned int _98;
  short unsigned int _100;
  short unsigned int _103;
  int _104;
  short unsigned int _106;
  short unsigned int _107;
  short unsigned int _110;
  short unsigned int _112;
  int _113;
  short unsigned int _115;
  short unsigned int _117;
  short unsigned int _120;
  int _121;
  short unsigned int _123;
  short unsigned int _125;
  unsigned long _127;
  short unsigned int _130;
  short unsigned int _132;
  int _133;
  short unsigned int _135;
  short unsigned int _137;
  short unsigned int _139;
  int _140;
  short unsigned int _142;
  short unsigned int _143;
  unsigned long _145;
  unsigned long _147;
  unsigned long _148;
  faruchar * _150;
  unsigned int ivtmp_152;
  unsigned long _156;
  faruchar * _157;
  unsigned long _158;
  long unsigned int _161;
  int _162;
  long unsigned int _163;
  long unsigned int _164;
  u16 * _166;
  short unsigned int _167;
  int _168;
  int _169;
  signed short _170;
  int _171;
  int _172;
  long unsigned int _173;
  long unsigned int _174;
  u16 * _175;
  short unsigned int _176;
  short unsigned int _177;
  signed short _178;
  signed short _179;
  sizetype _180;
  sizetype _181;
  u16 * _182;
  short unsigned int _183;
  int _184;
  long unsigned int _185;
  long unsigned int _186;
  faruchar * _189;
  int _192;
  int _194;
  short unsigned int _196;
  short unsigned int _202;
  short unsigned int _207;
  short unsigned int _210;
  int _214;
  int _216;
  short unsigned int _218;
  short unsigned int _224;
  short unsigned int _229;
  short unsigned int _232;
  int _236;
  int _238;
  short unsigned int _240;
  short unsigned int _246;
  short unsigned int _251;
  short unsigned int _254;
  int _258;
  int _260;
  short unsigned int _262;
  short unsigned int _268;
  short unsigned int _273;
  short unsigned int _276;
  int _280;
  int _282;
  short unsigned int _284;
  short unsigned int _290;
  short unsigned int _295;
  short unsigned int _298;
  int _302;
  int _304;
  short unsigned int _306;
  short unsigned int _312;
  short unsigned int _317;
  short unsigned int _320;
  faruchar * _324;
  faruchar * _325;
  faruchar * _328;
  faruchar * _329;
  long unsigned int _333;
  faruchar * _336;
  faruchar * _337;
  faruchar * _340;
  faruchar * _341;
  long unsigned int _345;
  long unsigned int _349;
  faruchar * _381;
  unsigned long _382;
  unsigned long _392;
  long unsigned int _408;
  long unsigned int _409;
  long unsigned int _410;
  long unsigned int _411;
  unsigned long _428;
  unsigned long _430;
  unsigned long _433;
  faruchar * _434;
  unsigned long _435;
  unsigned long _436;
  unsigned int ivtmp_437;
  unsigned long _441;
  faruchar * _445;
  long unsigned int prephitmp_468;
  long unsigned int pretmp_469;
  long unsigned int pretmp_470;
  long unsigned int prephitmp_471;
  long unsigned int pretmp_472;
  long unsigned int pretmp_473;
  long unsigned int prephitmp_474;
  long unsigned int pretmp_475;
  long unsigned int prephitmp_476;
  long unsigned int pretmp_477;
  long unsigned int prephitmp_478;
  unsigned long _507;
  unsigned long _508;
  void * _509;
  u16 * _513;
  unsigned long _514;
  unsigned long _515;
  u16 * _516;
  unsigned long _517;
  unsigned long _518;
  u16[52] * _519;
  long unsigned int _520;
  faruchar * _521;
  unsigned long _522;

  <bb 2> [0.40%]:
  randnum (3);
  ivtmp.1645_510 = (unsigned long) &userkey;
  _508 = (unsigned long) &userkey;
  _507 = _508 + 16;

  <bb 3> [3.18%]:
  # ivtmp.1645_512 = PHI <ivtmp.1645_511(3), ivtmp.1645_510(2)>
  _1 = abs_randwc (60000);
  _2 = (short unsigned int) _1;
  _509 = (void *) ivtmp.1645_512;
  MEM[base: _509, offset: 0B] = _2;
  ivtmp.1645_511 = ivtmp.1645_512 + 2;
  if (ivtmp.1645_511 != _507)
    goto <bb 3>; [87.49%]
  else
    goto <bb 4>; [12.51%]

  <bb 4> [0.40%]:
  __builtin_memset (&Z, 0, 104);
  __builtin_memcpy (&Z, &userkey, 16);

  <bb 5> [17.49%]:
  # i_439 = PHI <_162(5), 0(4)>
  # Z_440 = PHI <Z_187(5), &Z(4)>
  # ivtmp_437 = PHI <ivtmp_152(5), 44(4)>
  i_160 = i_439 + 1;
  _161 = (long unsigned int) i_160;
  _162 = i_160 & 7;
  _163 = (long unsigned int) _162;
  _164 = _163 * 2;
  _166 = Z_440 + _164;
  _167 = *_166;
  _168 = (int) _167;
  _169 = _168 << 9;
  _170 = (signed short) _169;
  _171 = i_439 + 2;
  _172 = _171 & 7;
  _173 = (long unsigned int) _172;
  _174 = _173 * 2;
  _175 = Z_440 + _174;
  _176 = *_175;
  _177 = _176 >> 7;
  _178 = (signed short) _177;
  _179 = _170 | _178;
  _180 = _161 + 7;
  _181 = _180 * 2;
  _182 = Z_440 + _181;
  _183 = (short unsigned int) _179;
  *_182 = _183;
  _184 = i_160 & 8;
  _185 = (long unsigned int) _184;
  _186 = _185 * 2;
  Z_187 = Z_440 + _186;
  ivtmp_152 = ivtmp_437 - 1;
  if (ivtmp_152 != 0)
    goto <bb 5>; [97.73%]
  else
    goto <bb 6>; [2.27%]

  <bb 6> [0.40%]:
  _95 = MEM[(u16 *)&Z];
  if (_95 <= 1)
    goto <bb 14>; [53.32%]
  else
    goto <bb 7>; [46.68%]

  <bb 7> [0.19%]:
  _96 = (int) _95;
  _192 = 65537 / _96;
  t1_193 = (u16) _192;
  _194 = 65537 % _96;
  if (_194 == 1)
    goto <bb 8>; [30.50%]
  else
    goto <bb 9>; [69.50%]

  <bb 8> [0.06%]:
  _196 = 1 - t1_193;
  goto <bb 14>; [100.00%]

  <bb 9> [0.13%]:
  y_195 = (u16) _194;

  <bb 10> [0.89%]:
  # x_197 = PHI <_95(9), x_200(12)>
  # t0_203 = PHI <1(9), t0_204(12)>
  # t1_201 = PHI <t1_193(9), t1_208(12)>
  # y_198 = PHI <y_195(9), y_206(12)>
  q_199 = x_197 / y_198;
  x_200 = x_197 % y_198;
  _202 = q_199 * t1_201;
  t0_204 = t0_203 + _202;
  if (x_200 == 1)
    goto <bb 11>; [7.50%]
  else
    goto <bb 12>; [92.50%]

  <bb 11> [0.07%]:
  # t0_540 = PHI <t0_204(10)>
  goto <bb 14>; [100.00%]

  <bb 12> [0.83%]:
  q_205 = y_198 / x_200;
  y_206 = y_198 % x_200;
  _207 = t0_204 * q_205;
  t1_208 = _207 + t1_201;
  if (y_206 != 1)
    goto <bb 10>; [92.50%]
  else
    goto <bb 13>; [7.50%]

  <bb 13> [0.06%]:
  # t1_539 = PHI <t1_208(12)>
  _210 = 1 - t1_539;

  <bb 14> [0.40%]:
  # _107 = PHI <_95(6), t0_540(11), _196(8), _210(13)>
  _98 = MEM[(u16 *)&Z + 2B];
  t2_99 = -_98;
  _100 = MEM[(u16 *)&Z + 4B];
  t3_101 = -_100;
  _103 = MEM[(u16 *)&Z + 6B];
  if (_103 <= 1)
    goto <bb 22>; [53.32%]
  else
    goto <bb 15>; [46.68%]

  <bb 15> [0.19%]:
  _104 = (int) _103;
  _214 = 65537 / _104;
  t1_215 = (u16) _214;
  _216 = 65537 % _104;
  if (_216 == 1)
    goto <bb 16>; [30.50%]
  else
    goto <bb 17>; [69.50%]

  <bb 16> [0.06%]:
  _218 = 1 - t1_215;
  goto <bb 22>; [100.00%]

  <bb 17> [0.13%]:
  y_217 = (u16) _216;

  <bb 18> [0.89%]:
  # x_219 = PHI <_103(17), x_222(20)>
  # t0_225 = PHI <1(17), t0_226(20)>
  # t1_223 = PHI <t1_215(17), t1_230(20)>
  # y_220 = PHI <y_217(17), y_228(20)>
  q_221 = x_219 / y_220;
  x_222 = x_219 % y_220;
  _224 = q_221 * t1_223;
  t0_226 = t0_225 + _224;
  if (x_222 == 1)
    goto <bb 19>; [7.50%]
  else
    goto <bb 20>; [92.50%]

  <bb 19> [0.07%]:
  # t0_538 = PHI <t0_226(18)>
  goto <bb 22>; [100.00%]

  <bb 20> [0.83%]:
  q_227 = y_220 / x_222;
  y_228 = y_220 % x_222;
  _229 = t0_226 * q_227;
  t1_230 = _229 + t1_223;
  if (y_228 != 1)
    goto <bb 18>; [92.50%]
  else
    goto <bb 21>; [7.50%]

  <bb 21> [0.06%]:
  # t1_537 = PHI <t1_230(20)>
  _232 = 1 - t1_537;

  <bb 22> [0.40%]:
  # _106 = PHI <_103(14), t0_538(19), _218(16), _232(21)>
  MEM[(u16 *)&TT + 102B] = _106;
  MEM[(u16 *)&TT + 100B] = t3_101;
  MEM[(u16 *)&TT + 98B] = t2_99;
  MEM[(u16 *)&TT + 96B] = _107;
  _519 = &Z + 92;

  <bb 23> [2.78%]:
  # Z_431 = PHI <Z_119(39), &MEM[(void *)&Z + 8B](22)>
  # p_432 = PHI <p_124(39), &MEM[(void *)&TT + 96B](22)>
  t1_109 = MEM[base: Z_431, offset: 0B];
  _110 = MEM[base: Z_431, offset: 2B];
  MEM[base: p_432, offset: -2B] = _110;
  MEM[base: p_432, offset: -4B] = t1_109;
  _112 = MEM[base: Z_431, offset: 4B];
  if (_112 <= 1)
    goto <bb 31>; [53.32%]
  else
    goto <bb 24>; [46.68%]

  <bb 24> [1.30%]:
  _113 = (int) _112;
  _236 = 65537 / _113;
  t1_237 = (u16) _236;
  _238 = 65537 % _113;
  if (_238 == 1)
    goto <bb 25>; [30.50%]
  else
    goto <bb 26>; [69.50%]

  <bb 25> [0.40%]:
  _240 = 1 - t1_237;
  goto <bb 31>; [100.00%]

  <bb 26> [0.90%]:
  y_239 = (u16) _238;

  <bb 27> [6.25%]:
  # x_241 = PHI <_112(26), x_244(29)>
  # t0_247 = PHI <1(26), t0_248(29)>
  # t1_245 = PHI <t1_237(26), t1_252(29)>
  # y_242 = PHI <y_239(26), y_250(29)>
  q_243 = x_241 / y_242;
  x_244 = x_241 % y_242;
  _246 = q_243 * t1_245;
  t0_248 = t0_247 + _246;
  if (x_244 == 1)
    goto <bb 28>; [7.50%]
  else
    goto <bb 29>; [92.50%]

  <bb 28> [0.47%]:
  # t0_536 = PHI <t0_248(27)>
  goto <bb 31>; [100.00%]

  <bb 29> [5.78%]:
  q_249 = y_242 / x_244;
  y_250 = y_242 % x_244;
  _251 = t0_248 * q_249;
  t1_252 = _251 + t1_245;
  if (y_250 != 1)
    goto <bb 27>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 30> [0.43%]:
  # t1_535 = PHI <t1_252(29)>
  _254 = 1 - t1_535;

  <bb 31> [2.78%]:
  # _125 = PHI <_112(23), t0_536(28), _240(25), _254(30)>
  _115 = MEM[base: Z_431, offset: 6B];
  t2_116 = -_115;
  _117 = MEM[base: Z_431, offset: 8B];
  t3_118 = -_117;
  _518 = (unsigned long) Z_431;
  _517 = _518 + 12;
  _516 = (u16 *) _517;
  Z_119 = _516;
  _120 = MEM[base: Z_119, offset: -2B];
  if (_120 <= 1)
    goto <bb 39>; [53.32%]
  else
    goto <bb 32>; [46.68%]

  <bb 32> [1.30%]:
  _121 = (int) _120;
  _258 = 65537 / _121;
  t1_259 = (u16) _258;
  _260 = 65537 % _121;
  if (_260 == 1)
    goto <bb 33>; [30.50%]
  else
    goto <bb 34>; [69.50%]

  <bb 33> [0.40%]:
  _262 = 1 - t1_259;
  goto <bb 39>; [100.00%]

  <bb 34> [0.90%]:
  y_261 = (u16) _260;

  <bb 35> [6.25%]:
  # x_263 = PHI <_120(34), x_266(37)>
  # t0_269 = PHI <1(34), t0_270(37)>
  # t1_267 = PHI <t1_259(34), t1_274(37)>
  # y_264 = PHI <y_261(34), y_272(37)>
  q_265 = x_263 / y_264;
  x_266 = x_263 % y_264;
  _268 = q_265 * t1_267;
  t0_270 = t0_269 + _268;
  if (x_266 == 1)
    goto <bb 36>; [7.50%]
  else
    goto <bb 37>; [92.50%]

  <bb 36> [0.47%]:
  # t0_534 = PHI <t0_270(35)>
  goto <bb 39>; [100.00%]

  <bb 37> [5.78%]:
  q_271 = y_264 / x_266;
  y_272 = y_264 % x_266;
  _273 = t0_270 * q_271;
  t1_274 = _273 + t1_267;
  if (y_272 != 1)
    goto <bb 35>; [92.50%]
  else
    goto <bb 38>; [7.50%]

  <bb 38> [0.43%]:
  # t1_533 = PHI <t1_274(37)>
  _276 = 1 - t1_533;

  <bb 39> [2.78%]:
  # _123 = PHI <_120(31), t0_534(36), _262(33), _276(38)>
  MEM[base: p_432, offset: -6B] = _123;
  MEM[base: p_432, offset: -8B] = t2_116;
  MEM[base: p_432, offset: -10B] = t3_118;
  _515 = (unsigned long) p_432;
  _514 = _515 + 18446744073709551604;
  _513 = (u16 *) _514;
  p_124 = _513;
  MEM[base: p_124, offset: 0B] = _125;
  if (Z_119 != _519)
    goto <bb 23>; [85.70%]
  else
    goto <bb 40>; [14.30%]

  <bb 40> [0.40%]:
  Z_528 = &MEM[(void *)&Z + 8B] + 72;
  p_527 = &MEM[(void *)&TT + 96B] + 18446744073709551544;
  t1_129 = MEM[(u16 *)Z_528 + 12B];
  _130 = MEM[(u16 *)Z_528 + 14B];
  MEM[(u16 *)p_527 + -14B] = _130;
  MEM[(u16 *)p_527 + -16B] = t1_129;
  _132 = MEM[(u16 *)Z_528 + 16B];
  if (_132 <= 1)
    goto <bb 48>; [53.32%]
  else
    goto <bb 41>; [46.68%]

  <bb 41> [0.19%]:
  _133 = (int) _132;
  _280 = 65537 / _133;
  t1_281 = (u16) _280;
  _282 = 65537 % _133;
  if (_282 == 1)
    goto <bb 42>; [30.50%]
  else
    goto <bb 43>; [69.50%]

  <bb 42> [0.06%]:
  _284 = 1 - t1_281;
  goto <bb 48>; [100.00%]

  <bb 43> [0.13%]:
  y_283 = (u16) _282;

  <bb 44> [0.89%]:
  # x_285 = PHI <_132(43), x_288(46)>
  # t0_291 = PHI <1(43), t0_292(46)>
  # t1_289 = PHI <t1_281(43), t1_296(46)>
  # y_286 = PHI <y_283(43), y_294(46)>
  q_287 = x_285 / y_286;
  x_288 = x_285 % y_286;
  _290 = q_287 * t1_289;
  t0_292 = t0_291 + _290;
  if (x_288 == 1)
    goto <bb 45>; [7.50%]
  else
    goto <bb 46>; [92.50%]

  <bb 45> [0.07%]:
  # t0_532 = PHI <t0_292(44)>
  goto <bb 48>; [100.00%]

  <bb 46> [0.83%]:
  q_293 = y_286 / x_288;
  y_294 = y_286 % x_288;
  _295 = t0_292 * q_293;
  t1_296 = _295 + t1_289;
  if (y_294 != 1)
    goto <bb 44>; [92.50%]
  else
    goto <bb 47>; [7.50%]

  <bb 47> [0.06%]:
  # t1_531 = PHI <t1_296(46)>
  _298 = 1 - t1_531;

  <bb 48> [0.40%]:
  # _143 = PHI <_132(40), t0_532(45), _284(42), _298(47)>
  _135 = MEM[(u16 *)Z_528 + 18B];
  t2_136 = -_135;
  _137 = MEM[(u16 *)Z_528 + 20B];
  t3_138 = -_137;
  _139 = MEM[(u16 *)Z_528 + 22B];
  if (_139 <= 1)
    goto <bb 56>; [53.32%]
  else
    goto <bb 49>; [46.68%]

  <bb 49> [0.19%]:
  _140 = (int) _139;
  _302 = 65537 / _140;
  t1_303 = (u16) _302;
  _304 = 65537 % _140;
  if (_304 == 1)
    goto <bb 50>; [30.50%]
  else
    goto <bb 51>; [69.50%]

  <bb 50> [0.06%]:
  _306 = 1 - t1_303;
  goto <bb 56>; [100.00%]

  <bb 51> [0.13%]:
  y_305 = (u16) _304;

  <bb 52> [0.89%]:
  # x_307 = PHI <_139(51), x_310(54)>
  # t0_313 = PHI <1(51), t0_314(54)>
  # t1_311 = PHI <t1_303(51), t1_318(54)>
  # y_308 = PHI <y_305(51), y_316(54)>
  q_309 = x_307 / y_308;
  x_310 = x_307 % y_308;
  _312 = q_309 * t1_311;
  t0_314 = t0_313 + _312;
  if (x_310 == 1)
    goto <bb 53>; [7.50%]
  else
    goto <bb 54>; [92.50%]

  <bb 53> [0.07%]:
  # t0_530 = PHI <t0_314(52)>
  goto <bb 56>; [100.00%]

  <bb 54> [0.83%]:
  q_315 = y_308 / x_310;
  y_316 = y_308 % x_310;
  _317 = t0_314 * q_315;
  t1_318 = _317 + t1_311;
  if (y_316 != 1)
    goto <bb 52>; [92.50%]
  else
    goto <bb 55>; [7.50%]

  <bb 55> [0.06%]:
  # t1_529 = PHI <t1_318(54)>
  _320 = 1 - t1_529;

  <bb 56> [0.40%]:
  # _142 = PHI <_139(48), t0_530(53), _306(50), _320(55)>
  MEM[(u16 *)p_527 + -18B] = _142;
  MEM[(u16 *)p_527 + -20B] = t3_138;
  MEM[(u16 *)p_527 + -22B] = t2_136;
  MEM[(u16 *)p_527 + -24B] = _143;
  __builtin_memcpy (&DK, &TT, 104);
  __builtin_memset (&TT, 0, 104);
  TT ={v} {CLOBBER};
  _3 = global_ideastruct.arraysize;
  plain1_55 = AllocateMemory (_3, &systemerror);
  systemerror.102_4 = systemerror;
  if (systemerror.102_4 != 0)
    goto <bb 57>; [33.00%]
  else
    goto <bb 58>; [67.00%]

  <bb 57> [0.13%]:
  ReportError ("CPU:IDEA", systemerror.102_4);
  ErrorExit ();

  <bb 58> [0.40%]:
  _6 = global_ideastruct.arraysize;
  crypt1_59 = AllocateMemory (_6, &systemerror);
  systemerror.104_7 = systemerror;
  if (systemerror.104_7 != 0)
    goto <bb 59>; [33.00%]
  else
    goto <bb 60>; [67.00%]

  <bb 59> [0.13%]:
  ReportError ("CPU:IDEA", systemerror.104_7);
  FreeMemory (plain1_55, &systemerror);
  ErrorExit ();

  <bb 60> [0.40%]:
  _9 = global_ideastruct.arraysize;
  plain2_64 = AllocateMemory (_9, &systemerror);
  systemerror.106_10 = systemerror;
  if (systemerror.106_10 != 0)
    goto <bb 61>; [33.00%]
  else
    goto <bb 62>; [67.00%]

  <bb 61> [0.13%]:
  ReportError ("CPU:IDEA", systemerror.106_10);
  FreeMemory (plain1_55, &systemerror);
  FreeMemory (crypt1_59, &systemerror);
  ErrorExit ();

  <bb 62> [0.40%]:
  _410 = global_ideastruct.arraysize;
  if (_410 != 0)
    goto <bb 63>; [85.00%]
  else
    goto <bb 65>; [15.00%]

  <bb 63> [2.25%]:
  # _409 = PHI <_16(63), 0(62)>
  _12 = abs_randwc (255);
  _15 = (unsigned char) _12;
  MEM[base: plain1_55, index: _409, offset: 0B] = _15;
  _520 = _409 + 1;
  _16 = _520;
  _17 = global_ideastruct.arraysize;
  if (_16 < _17)
    goto <bb 63>; [85.00%]
  else
    goto <bb 64>; [15.00%]

  <bb 64> [0.34%]:
  # _411 = PHI <_17(63)>

  <bb 65> [0.40%]:
  # prephitmp_468 = PHI <_411(64), _410(62)>
  _18 = global_ideastruct.adjust;
  if (_18 == 0)
    goto <bb 66>; [50.00%]
  else
    goto <bb 76>; [50.00%]

  <bb 66> [0.20%]:
  global_ideastruct.loops = 100;

  <bb 67> [1.27%]:
  # _408 = PHI <_24(74), 100(66)>
  _20 = global_ideastruct.arraysize;
  elapsed_322 = StartStopwatch ();
  if (_408 != 0)
    goto <bb 71>; [85.00%]
  else
    goto <bb 72>; [15.00%]

  <bb 68> [40.84%]:
  # j_413 = PHI <j_326(68), 0(71)>
  _91 = (unsigned long) crypt1_59;
  _522 = j_413 + _91;
  _521 = (faruchar *) _522;
  _324 = _521;
  _430 = (unsigned long) plain1_55;
  _428 = j_413 + _430;
  _90 = (faruchar *) _428;
  _325 = _90;
  cipher_idea (_325, _324, &Z);
  j_326 = j_413 + 8;
  if (_20 > j_326)
    goto <bb 68>; [85.00%]
  else
    goto <bb 69>; [15.00%]

  <bb 69> [40.84%]:
  # j_412 = PHI <j_330(69), 0(68)>
  _148 = (unsigned long) plain2_64;
  _382 = j_412 + _148;
  _150 = (faruchar *) _382;
  _328 = _150;
  _145 = (unsigned long) crypt1_59;
  _147 = j_412 + _145;
  _381 = (faruchar *) _147;
  _329 = _381;
  cipher_idea (_329, _328, &DK);
  j_330 = j_412 + 8;
  if (_20 > j_330)
    goto <bb 69>; [85.00%]
  else
    goto <bb 70>; [15.00%]

  <bb 70> [7.21%]:
  i_332 = i_188 + 1;
  if (i_332 != _408)
    goto <bb 71>; [85.00%]
  else
    goto <bb 72>; [15.00%]

  <bb 71> [7.21%]:
  # i_188 = PHI <i_332(70), 0(67)>
  if (_20 != 0)
    goto <bb 68>; [85.00%]
  else
    goto <bb 70>; [15.00%]

  <bb 72> [1.27%]:
  _333 = StopStopwatch (elapsed_322);
  global_min_ticks.108_22 = global_min_ticks;
  if (global_min_ticks.108_22 < _333)
    goto <bb 73>; [7.50%]
  else
    goto <bb 74>; [92.50%]

  <bb 73> [0.10%]:
  pretmp_470 = global_ideastruct.loops;
  pretmp_472 = global_ideastruct.arraysize;
  goto <bb 77>; [100.00%]

  <bb 74> [1.18%]:
  _23 = global_ideastruct.loops;
  _24 = _23 + 10;
  global_ideastruct.loops = _24;
  if (_24 <= 499999)
    goto <bb 67>; [92.50%]
  else
    goto <bb 75>; [7.50%]

  <bb 75> [0.09%]:
  # _349 = PHI <_24(74)>
  pretmp_473 = global_ideastruct.arraysize;
  goto <bb 77>; [100.00%]

  <bb 76> [0.20%]:
  pretmp_469 = global_ideastruct.loops;

  <bb 77> [0.40%]:
  # prephitmp_471 = PHI <pretmp_469(76), pretmp_470(73), _349(75)>
  # prephitmp_474 = PHI <prephitmp_468(76), pretmp_472(73), pretmp_473(75)>

  <bb 78> [2.65%]:
  # accumtime_38 = PHI <0(77), accumtime_74(84)>
  # iterations_39 = PHI <0.0(77), iterations_75(84)>
  # prephitmp_476 = PHI <prephitmp_471(77), pretmp_475(84)>
  # prephitmp_478 = PHI <prephitmp_474(77), pretmp_477(84)>
  elapsed_334 = StartStopwatch ();
  if (prephitmp_476 != 0)
    goto <bb 82>; [85.00%]
  else
    goto <bb 83>; [15.00%]

  <bb 79> [85.00%]:
  # j_159 = PHI <j_338(79), 0(82)>
  _436 = (unsigned long) crypt1_59;
  _435 = j_159 + _436;
  _434 = (faruchar *) _435;
  _336 = _434;
  _392 = (unsigned long) plain1_55;
  _158 = j_159 + _392;
  _445 = (faruchar *) _158;
  _337 = _445;
  cipher_idea (_337, _336, &Z);
  j_338 = j_159 + 8;
  if (j_338 < prephitmp_478)
    goto <bb 79>; [85.00%]
  else
    goto <bb 80>; [15.00%]

  <bb 80> [85.00%]:
  # j_165 = PHI <j_342(80), 0(79)>
  _127 = (unsigned long) plain2_64;
  _156 = j_165 + _127;
  _157 = (faruchar *) _156;
  _340 = _157;
  _433 = (unsigned long) crypt1_59;
  _441 = j_165 + _433;
  _189 = (faruchar *) _441;
  _341 = _189;
  cipher_idea (_341, _340, &DK);
  j_342 = j_165 + 8;
  if (j_342 < prephitmp_478)
    goto <bb 80>; [85.00%]
  else
    goto <bb 81>; [15.00%]

  <bb 81> [15.00%]:
  i_344 = i_153 + 1;
  if (i_344 != prephitmp_476)
    goto <bb 82>; [85.00%]
  else
    goto <bb 83>; [15.00%]

  <bb 82> [15.00%]:
  # i_153 = PHI <i_344(81), 0(78)>
  if (prephitmp_478 != 0)
    goto <bb 79>; [85.00%]
  else
    goto <bb 81>; [15.00%]

  <bb 83> [2.65%]:
  _345 = StopStopwatch (elapsed_334);
  accumtime_74 = _345 + accumtime_38;
  _28 = global_ideastruct.loops;
  _29 = (double) _28;
  iterations_75 = _29 + iterations_39;
  _30 = TicksToSecs (accumtime_74);
  _31 = global_ideastruct.request_secs;
  if (_30 < _31)
    goto <bb 84>; [85.00%]
  else
    goto <bb 85>; [15.00%]

  <bb 84> [2.25%]:
  pretmp_475 = global_ideastruct.loops;
  pretmp_477 = global_ideastruct.arraysize;
  goto <bb 78>; [100.00%]

  <bb 85> [0.40%]:
  # accumtime_425 = PHI <accumtime_74(83)>
  # iterations_426 = PHI <iterations_75(83)>
  FreeMemory (plain1_55, &systemerror);
  FreeMemory (crypt1_59, &systemerror);
  FreeMemory (plain2_64, &systemerror);
  _32 = TicksToFracSecs (accumtime_425);
  _33 = iterations_426 / _32;
  global_ideastruct.iterspersec = _33;
  _34 = global_ideastruct.adjust;
  if (_34 == 0)
    goto <bb 86>; [54.00%]
  else
    goto <bb 87>; [46.00%]

  <bb 86> [0.21%]:
  global_ideastruct.adjust = 1;

  <bb 87> [0.40%]:
  Z ={v} {CLOBBER};
  DK ={v} {CLOBBER};
  userkey ={v} {CLOBBER};
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoHuffman (DoHuffman, funcdef_no=89, decl_uid=4657, cgraph_uid=89, symbol_order=114)

;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
;;
;; Loop 2
;;  header 28, latch 29
;;  depth 1, outer 0
;;  nodes: 28 29
;;
;; Loop 1
;;  header 22, latch 24
;;  depth 1, outer 0
;;  nodes: 22 24
;;
;; Loop 3
;;  header 11, latch 19
;;  depth 1, outer 0
;;  nodes: 11 19 13 18 17 15 16 14 12
;;
;; Loop 4
;;  header 15, latch 17
;;  depth 2, outer 3
;;  nodes: 15 17 16
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 19 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 15 18 }
;; 18 succs { 19 }
;; 19 succs { 11 20 }
;; 20 succs { 21 26 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 22 25 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 28 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 1 }
DoHuffman ()
{
  long int charssofar;
  long int tomove;
  char myword[40];
  farchar * wordptr;
  farchar * dt;
  long unsigned int linelen;
  long unsigned int bytessofar;
  farchar * tb;
  farchar * plaintext;
  farchar * decomparray;
  farchar * comparray;
  double iterations;
  long unsigned int accumtime;
  int systemerror;
  long unsigned int _1;
  int systemerror.143_2;
  long unsigned int _4;
  int systemerror.145_5;
  long unsigned int _7;
  int systemerror.147_8;
  farvoid * _10;
  int systemerror.149_11;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  sizetype _16;
  farchar * _17;
  long unsigned int _19;
  int _20;
  struct huff_node * hufftree.151_21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int global_min_ticks.152_24;
  long unsigned int _25;
  long unsigned int _26;
  struct huff_node * hufftree.153_28;
  long unsigned int _30;
  long unsigned int _31;
  double _32;
  long unsigned int _33;
  long unsigned int _34;
  struct huff_node * hufftree.154_35;
  double _36;
  double _37;
  int _38;
  long unsigned int _80;
  long unsigned int prephitmp_94;
  unsigned int _95;
  unsigned int _96;
  long unsigned int _99;
  long int linelen.155_102;
  sizetype _104;
  unsigned int _108;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _112;
  long unsigned int _113;
  long int _115;
  long int _117;
  long unsigned int tomove.157_120;
  long unsigned int _136;
  long int prephitmp_137;
  long unsigned int prephitmp_138;
  long unsigned int pretmp_139;
  long unsigned int pretmp_140;
  long unsigned int prephitmp_141;
  long unsigned int pretmp_142;

  <bb 2> [4.82%]:
  _1 = global_huffstruct.arraysize;
  plaintext_51 = AllocateMemory (_1, &systemerror);
  systemerror.143_2 = systemerror;
  if (systemerror.143_2 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [1.59%]:
  ReportError ("CPU:Huffman", systemerror.143_2);
  ErrorExit ();

  <bb 4> [4.82%]:
  _4 = global_huffstruct.arraysize;
  comparray_55 = AllocateMemory (_4, &systemerror);
  systemerror.145_5 = systemerror;
  if (systemerror.145_5 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [1.59%]:
  ReportError ("CPU:Huffman", systemerror.145_5);
  FreeMemory (plaintext_51, &systemerror);
  ErrorExit ();

  <bb 6> [4.82%]:
  _7 = global_huffstruct.arraysize;
  decomparray_60 = AllocateMemory (_7, &systemerror);
  systemerror.147_8 = systemerror;
  if (systemerror.147_8 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [1.59%]:
  ReportError ("CPU:Huffman", systemerror.147_8);
  FreeMemory (plaintext_51, &systemerror);
  FreeMemory (comparray_55, &systemerror);
  ErrorExit ();

  <bb 8> [4.82%]:
  _10 = AllocateMemory (10240, &systemerror);
  hufftree = _10;
  systemerror.149_11 = systemerror;
  if (systemerror.149_11 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [1.59%]:
  ReportError ("CPU:Huffman", systemerror.149_11);
  FreeMemory (plaintext_51, &systemerror);
  FreeMemory (comparray_55, &systemerror);
  FreeMemory (decomparray_60, &systemerror);
  ErrorExit ();

  <bb 10> [4.82%]:
  randnum (13);
  _13 = global_huffstruct.arraysize;
  _14 = _13 + 18446744073709551615;

  <bb 11> [32.13%]:
  # tb_103 = PHI <plaintext_51(10), tb_106(19)>
  # bytessofar_98 = PHI <0(10), prephitmp_94(19)>
  _95 = abs_randwc (494);
  _96 = _95 + 6;
  linelen_97 = (long unsigned int) _96;
  _99 = linelen_97 + bytessofar_98;
  if (_14 < _99)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [16.07%]:
  linelen_100 = _14 - bytessofar_98;

  <bb 13> [32.13%]:
  # linelen_101 = PHI <linelen_97(11), linelen_100(12)>
  # prephitmp_94 = PHI <_99(11), _14(12)>
  if (linelen_101 > 1)
    goto <bb 14>; [46.68%]
  else
    goto <bb 19>; [53.32%]

  <bb 14> [15.00%]:
  linelen.155_102 = (long int) linelen_101;

  <bb 15> [100.00%]:
  # dt_121 = PHI <tb_103(14), dt_123(17)>
  # charssofar_116 = PHI <0(14), prephitmp_137(17)>
  _108 = abs_randwc (50);
  wordptr_109 = wordcatarray[_108];
  _110 = strlen (wordptr_109);
  _111 = _110 + 1;
  MoveMemory (&myword, wordptr_109, _111);
  _112 = strlen (&myword);
  _113 = _112 + 1;
  tomove_114 = (long int) _113;
  _115 = tomove_114 + -1;
  myword[_115] = 32;
  _117 = tomove_114 + charssofar_116;
  if (linelen.155_102 < _117)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 16> [50.00%]:
  tomove_118 = linelen.155_102 - charssofar_116;

  <bb 17> [100.00%]:
  # tomove_119 = PHI <tomove_114(15), tomove_118(16)>
  # prephitmp_137 = PHI <_117(15), linelen.155_102(16)>
  tomove.157_120 = (long unsigned int) tomove_119;
  MoveMemory (dt_121, &myword, tomove.157_120);
  dt_123 = dt_121 + tomove.157_120;
  if (linelen.155_102 > prephitmp_137)
    goto <bb 15>; [85.00%]
  else
    goto <bb 18>; [15.00%]

  <bb 18> [15.00%]:
  myword ={v} {CLOBBER};

  <bb 19> [32.13%]:
  _104 = linelen_101 + 18446744073709551615;
  tb_105 = tb_103 + _104;
  tb_106 = tb_103 + linelen_101;
  *tb_105 = 10;
  if (_14 > prephitmp_94)
    goto <bb 11>; [85.00%]
  else
    goto <bb 20>; [15.00%]

  <bb 20> [4.82%]:
  _15 = global_huffstruct.arraysize;
  _16 = _15 + 18446744073709551615;
  _17 = plaintext_51 + _16;
  *_17 = 0;
  _20 = global_huffstruct.adjust;
  if (_20 == 0)
    goto <bb 21>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 21> [2.41%]:
  global_huffstruct.loops = 100;

  <bb 22> [15.44%]:
  # _19 = PHI <_26(24), 100(21)>
  hufftree.151_21 = hufftree;
  _22 = global_huffstruct.arraysize;
  _23 = DoHuffIteration (plaintext_51, comparray_55, decomparray_60, _22, _19, hufftree.151_21);
  global_min_ticks.152_24 = global_min_ticks;
  if (_23 > global_min_ticks.152_24)
    goto <bb 23>; [7.50%]
  else
    goto <bb 24>; [92.50%]

  <bb 23> [1.16%]:
  pretmp_142 = global_huffstruct.loops;
  goto <bb 27>; [100.00%]

  <bb 24> [14.29%]:
  _25 = global_huffstruct.loops;
  _26 = _25 + 10;
  global_huffstruct.loops = _26;
  if (_26 <= 499999)
    goto <bb 22>; [92.50%]
  else
    goto <bb 25>; [7.50%]

  <bb 25> [1.07%]:
  # _136 = PHI <_26(24)>
  goto <bb 27>; [100.00%]

  <bb 26> [2.41%]:
  pretmp_140 = global_huffstruct.loops;

  <bb 27> [4.82%]:
  # prephitmp_138 = PHI <pretmp_140(26), pretmp_142(23), _136(25)>

  <bb 28> [32.13%]:
  # accumtime_39 = PHI <0(27), accumtime_81(29)>
  # iterations_40 = PHI <0.0(27), iterations_82(29)>
  # prephitmp_141 = PHI <prephitmp_138(27), pretmp_139(29)>
  hufftree.153_28 = hufftree;
  _30 = global_huffstruct.arraysize;
  _80 = DoHuffIteration (plaintext_51, comparray_55, decomparray_60, _30, prephitmp_141, hufftree.153_28);
  accumtime_81 = accumtime_39 + _80;
  _31 = global_huffstruct.loops;
  _32 = (double) _31;
  iterations_82 = _32 + iterations_40;
  _33 = TicksToSecs (accumtime_81);
  _34 = global_huffstruct.request_secs;
  if (_33 < _34)
    goto <bb 29>; [85.00%]
  else
    goto <bb 30>; [15.00%]

  <bb 29> [27.31%]:
  pretmp_139 = global_huffstruct.loops;
  goto <bb 28>; [100.00%]

  <bb 30> [4.82%]:
  # accumtime_92 = PHI <accumtime_81(28)>
  # iterations_45 = PHI <iterations_82(28)>
  FreeMemory (plaintext_51, &systemerror);
  FreeMemory (comparray_55, &systemerror);
  FreeMemory (decomparray_60, &systemerror);
  hufftree.154_35 = hufftree;
  FreeMemory (hufftree.154_35, &systemerror);
  _36 = TicksToFracSecs (accumtime_92);
  _37 = iterations_45 / _36;
  global_huffstruct.iterspersec = _37;
  _38 = global_huffstruct.adjust;
  if (_38 == 0)
    goto <bb 31>; [54.00%]
  else
    goto <bb 32>; [46.00%]

  <bb 31> [2.60%]:
  global_huffstruct.adjust = 1;

  <bb 32> [4.82%]:
  systemerror ={v} {CLOBBER};
  return;

}



;; Function DoNNET (DoNNET, funcdef_no=95, decl_uid=4701, cgraph_uid=95, symbol_order=120)

;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 2
;;  header 30, latch 30
;;  depth 1, outer 0
;;  nodes: 30
;;
;; Loop 1
;;  header 27, latch 28
;;  depth 1, outer 0
;;  nodes: 27 28
;;
;; Loop 3
;;  header 22, latch 20
;;  depth 1, outer 0
;;  nodes: 22 20 19 17 18 16 15 14 13 11
;;
;; Loop 4
;;  header 15, latch 19
;;  depth 2, outer 3
;;  nodes: 15 19 17 18 16
;;
;; Loop 5
;;  header 11, latch 13
;;  depth 2, outer 3
;;  nodes: 11 13
;; 2 succs { 3 4 }
;; 3 succs { 24 }
;; 4 succs { 5 6 }
;; 5 succs { 24 }
;; 6 succs { 7 8 }
;; 7 succs { 24 }
;; 8 succs { 9 10 }
;; 9 succs { 21 }
;; 10 succs { 21 23 }
;; 11 succs { 12 13 }
;; 12 succs { 24 }
;; 13 succs { 11 14 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 19 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 15 20 }
;; 20 succs { 22 23 }
;; 21 succs { 22 }
;; 22 succs { 11 14 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 26 29 }
;; 26 succs { 27 }
;; 27 succs { 29 28 }
;; 28 succs { 27 29 }
;; 29 succs { 30 }
;; 30 succs { 30 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 1 }
DoNNET ()
{
  unsigned long ivtmp.1667;
  unsigned long ivtmp.1666;
  unsigned long ivtmp.1658;
  vector(2) double * vectp.1651;
  vector(2) double * vectp_out_pats.1650;
  struct FILE * infile;
  int xinsize;
  int yinsize;
  int youtsize;
  int patt;
  int element;
  int i;
  int row;
  int vals_read;
  int val1;
  int val2;
  int val3;
  int val4;
  int val5;
  int val6;
  int val7;
  int val8;
  int D.8552;
  double iterations;
  long unsigned int accumtime;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int global_min_ticks.167_5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _9;
  long unsigned int _10;
  double _11;
  long unsigned int _12;
  long unsigned int _13;
  double _14;
  double _15;
  int _16;
  vector(2) double vect_cst__24;
  _Bool _35;
  long unsigned int _38;
  char * inpath.168_45;
  int numpats.169_49;
  int xinsize.170_51;
  int val1.171_54;
  double _55;
  vector(2) double vect_cst__56;
  int val2.172_58;
  double _59;
  int val3.173_61;
  double _62;
  int val4.174_64;
  double _65;
  int val5.175_67;
  double _68;
  int yinsize.176_70;
  double _72;
  _Bool _73;
  int val1.177_75;
  double _76;
  int val2.178_77;
  double _78;
  int val3.179_79;
  double _80;
  int val4.180_81;
  double _82;
  int val5.181_83;
  double _84;
  int val6.182_85;
  double _86;
  int val7.183_87;
  double _88;
  int val8.184_89;
  double _90;
  int numpats.185_92;
  void * _93;
  vector(2) double vect_cst__96;
  _Bool _97;
  void * _108;
  void * _109;
  _Bool _129;
  _Bool _137;
  _Bool _138;
  vector(2) double vect_cst__139;
  _Bool _149;
  _Bool _162;
  _Bool _175;
  int yinsize.176_188;
  unsigned long _203;
  unsigned long _204;
  unsigned long _205;
  unsigned long _212;
  void * _213;
  void * _214;
  void * _215;
  void * _216;
  unsigned long _217;

  <bb 2> [3.21%]:
  randnum (3);
  inpath.168_45 = inpath;
  infile_46 = fopen (inpath.168_45, "r");
  if (infile_46 == 0B)
    goto <bb 3>; [0.87%]
  else
    goto <bb 4>; [99.13%]

  <bb 3> [0.03%]:
  __printf_chk (1, "\n CPU:NNET--error in opening file!");
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 24>; [100.00%]

  <bb 4> [3.19%]:
  vals_read_47 = fscanf (infile_46, "%d  %d  %d", &xinsize, &yinsize, &youtsize);
  if (vals_read_47 != 3)
    goto <bb 5>; [3.81%]
  else
    goto <bb 6>; [96.19%]

  <bb 5> [0.12%]:
  __printf_chk (1, "\n CPU:NNET -- Should read 3 items in line one; did read %d", vals_read_47);
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 24>; [100.00%]

  <bb 6> [3.06%]:
  vals_read_48 = fscanf (infile_46, "%d", &numpats);
  if (vals_read_48 != 1)
    goto <bb 7>; [1.91%]
  else
    goto <bb 8>; [98.09%]

  <bb 7> [0.06%]:
  __printf_chk (1, "\n CPU:NNET -- Should read 1 item in line 2; did read %d", vals_read_48);
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 24>; [100.00%]

  <bb 8> [3.01%]:
  numpats.169_49 = numpats;
  if (numpats.169_49 > 10)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [1.50%]:
  numpats = 10;
  goto <bb 21>; [100.00%]

  <bb 10> [1.51%]:
  if (numpats.169_49 > 0)
    goto <bb 21>; [85.05%]
  else
    goto <bb 23>; [14.95%]

  <bb 11> [34.29%]:
  # row_132 = PHI <row_69(13), 0(22)>
  vals_read_50 = fscanf (infile_46, "%d  %d  %d  %d  %d", &val1, &val2, &val3, &val4, &val5);
  if (vals_read_50 != 5)
    goto <bb 12>; [7.50%]
  else
    goto <bb 13>; [92.50%]

  <bb 12> [2.57%]:
  __printf_chk (1, "\n CPU:NNET -- failure in reading input!");
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 24>; [100.00%]

  <bb 13> [31.72%]:
  xinsize.170_51 = xinsize;
  element_53 = xinsize.170_51 * row_132;
  val1.171_54 = val1;
  _55 = (double) val1.171_54;
  in_pats[patt_131][element_53] = _55;
  element_57 = element_53 + 1;
  val2.172_58 = val2;
  _59 = (double) val2.172_58;
  in_pats[patt_131][element_57] = _59;
  element_60 = element_53 + 2;
  val3.173_61 = val3;
  _62 = (double) val3.173_61;
  in_pats[patt_131][element_60] = _62;
  element_63 = element_53 + 3;
  val4.174_64 = val4;
  _65 = (double) val4.174_64;
  in_pats[patt_131][element_63] = _65;
  element_66 = element_53 + 4;
  val5.175_67 = val5;
  _68 = (double) val5.175_67;
  in_pats[patt_131][element_66] = _68;
  row_69 = row_132 + 1;
  yinsize.176_70 = yinsize;
  if (row_69 < yinsize.176_70)
    goto <bb 11>; [92.50%]
  else
    goto <bb 14>; [7.50%]

  <bb 14> [2.78%]:
  _217 = ivtmp.1667_209 + 18446744073709551336;
  ivtmp.1658_113 = _217;
  _203 = (unsigned long) &in_pats;
  _204 = _203 + 280;
  _205 = ivtmp.1667_209;

  <bb 15> [97.22%]:
  # ivtmp.1658_115 = PHI <ivtmp.1658_114(19), ivtmp.1658_113(14)>
  _109 = (void *) ivtmp.1658_115;
  _72 = MEM[base: _109, offset: 0B];
  if (_72 >= 9.0000000000000002220446049250313080847263336181640625e-1)
    goto <bb 16>; [50.00%]
  else
    goto <bb 17>; [50.00%]

  <bb 16> [48.61%]:
  _93 = (void *) ivtmp.1658_115;
  MEM[base: _93, offset: 0B] = 9.0000000000000002220446049250313080847263336181640625e-1;
  goto <bb 19>; [100.00%]

  <bb 17> [48.61%]:
  if (_72 <= 1.000000000000000055511151231257827021181583404541015625e-1)
    goto <bb 18>; [100.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 18> [48.61%]:
  _108 = (void *) ivtmp.1658_115;
  MEM[base: _108, offset: 0B] = 1.000000000000000055511151231257827021181583404541015625e-1;

  <bb 19> [97.22%]:
  ivtmp.1658_114 = ivtmp.1658_115 + 8;
  if (ivtmp.1658_114 != _205)
    goto <bb 15>; [97.14%]
  else
    goto <bb 20>; [2.86%]

  <bb 20> [2.78%]:
  fscanf (infile_46, "%d  %d  %d  %d  %d  %d  %d  %d", &val1, &val2, &val3, &val4, &val5, &val6, &val7, &val8);
  val1.177_75 = val1;
  _76 = (double) val1.177_75;
  val2.178_77 = val2;
  _78 = (double) val2.178_77;
  val3.179_79 = val3;
  _80 = (double) val3.179_79;
  val4.180_81 = val4;
  _82 = (double) val4.180_81;
  val5.181_83 = val5;
  _84 = (double) val5.181_83;
  val6.182_85 = val6;
  _86 = (double) val6.182_85;
  val7.183_87 = val7;
  _88 = (double) val7.183_87;
  val8.184_89 = val8;
  _90 = (double) val8.184_89;
  vect_cst__24 = {_88, _90};
  vect_cst__139 = {_84, _86};
  vect_cst__56 = {_80, _82};
  vect_cst__96 = {_76, _78};
  _213 = (void *) ivtmp.1666_206;
  MEM[base: _213, offset: 0B] = vect_cst__96;
  _214 = (void *) ivtmp.1666_206;
  MEM[base: _214, offset: 16B] = vect_cst__56;
  _215 = (void *) ivtmp.1666_206;
  MEM[base: _215, offset: 32B] = vect_cst__139;
  _216 = (void *) ivtmp.1666_206;
  MEM[base: _216, offset: 48B] = vect_cst__24;
  patt_91 = patt_131 + 1;
  numpats.185_92 = numpats;
  ivtmp.1666_207 = ivtmp.1666_206 + 64;
  ivtmp.1667_210 = ivtmp.1667_209 + 280;
  if (patt_91 < numpats.185_92)
    goto <bb 22>; [92.50%]
  else
    goto <bb 23>; [7.50%]

  <bb 21> [2.78%]:
  ivtmp.1666_208 = (unsigned long) &out_pats;
  _212 = (unsigned long) &in_pats;
  ivtmp.1667_211 = _212 + 280;

  <bb 22> [5.38%]:
  # patt_131 = PHI <0(21), patt_91(20)>
  # ivtmp.1666_206 = PHI <ivtmp.1666_208(21), ivtmp.1666_207(20)>
  # ivtmp.1667_209 = PHI <ivtmp.1667_211(21), ivtmp.1667_210(20)>
  yinsize.176_188 = yinsize;
  if (yinsize.176_188 > 0)
    goto <bb 11>; [92.50%]
  else
    goto <bb 14>; [7.50%]

  <bb 23> [0.44%]:
  fclose (infile_46);
  xinsize ={v} {CLOBBER};
  yinsize ={v} {CLOBBER};
  youtsize ={v} {CLOBBER};
  val1 ={v} {CLOBBER};
  val2 ={v} {CLOBBER};
  val3 ={v} {CLOBBER};
  val4 ={v} {CLOBBER};
  val5 ={v} {CLOBBER};
  val6 ={v} {CLOBBER};
  val7 ={v} {CLOBBER};
  val8 ={v} {CLOBBER};
  goto <bb 25>; [100.00%]

  <bb 24> [1.06%]:
  ErrorExit ();

  <bb 25> [3.21%]:
  _2 = global_nnetstruct.adjust;
  if (_2 == 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 29>; [50.00%]

  <bb 26> [1.61%]:
  global_nnetstruct.loops = 1;

  <bb 27> [10.29%]:
  randnum (3);
  _3 = global_nnetstruct.loops;
  _4 = DoNNetIteration (_3);
  global_min_ticks.167_5 = global_min_ticks;
  if (_4 > global_min_ticks.167_5)
    goto <bb 29>; [7.50%]
  else
    goto <bb 28>; [92.50%]

  <bb 28> [9.52%]:
  _6 = global_nnetstruct.loops;
  _7 = _6 + 1;
  global_nnetstruct.loops = _7;
  if (_7 <= 499999)
    goto <bb 27>; [92.50%]
  else
    goto <bb 29>; [7.50%]

  <bb 29> [3.21%]:

  <bb 30> [21.42%]:
  # accumtime_17 = PHI <0(29), accumtime_39(30)>
  # iterations_18 = PHI <0.0(29), iterations_40(30)>
  randnum (3);
  _9 = global_nnetstruct.loops;
  _38 = DoNNetIteration (_9);
  accumtime_39 = accumtime_17 + _38;
  _10 = global_nnetstruct.loops;
  _11 = (double) _10;
  iterations_40 = _11 + iterations_18;
  _12 = TicksToSecs (accumtime_39);
  _13 = global_nnetstruct.request_secs;
  if (_12 < _13)
    goto <bb 30>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 31> [3.21%]:
  # accumtime_130 = PHI <accumtime_39(30)>
  # iterations_134 = PHI <iterations_40(30)>
  _14 = TicksToFracSecs (accumtime_130);
  _15 = iterations_134 / _14;
  global_nnetstruct.iterspersec = _15;
  _16 = global_nnetstruct.adjust;
  if (_16 == 0)
    goto <bb 32>; [54.00%]
  else
    goto <bb 33>; [46.00%]

  <bb 32> [1.74%]:
  global_nnetstruct.adjust = 1;

  <bb 33> [3.21%]:
  return;

}



;; Function DoLU (DoLU, funcdef_no=111, decl_uid=4732, cgraph_uid=111, symbol_order=136)

;; 30 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
;;
;; Loop 2
;;  header 71, latch 94
;;  depth 1, outer 0
;;  nodes: 71 94 93 92 103 102 91 90 89 82 81 80 73 72 79 78 77 76 75 74 88 87 86 85 84 83
;;
;; Loop 11
;;  header 92, latch 92
;;  depth 2, outer 2
;;  nodes: 92
;;
;; Loop 12
;;  header 73, latch 91
;;  depth 2, outer 2
;;  nodes: 73 91 90 89 82 81 80 79 78 77 76 75 74 88 87 86 85 84 83
;;
;; Loop 15
;;  header 89, latch 89
;;  depth 3, outer 12
;;  nodes: 89
;;
;; Loop 13
;;  header 86, latch 86
;;  depth 3, outer 12
;;  nodes: 86
;;
;; Loop 18
;;  header 80, latch 80
;;  depth 3, outer 12
;;  nodes: 80
;;
;; Loop 14
;;  header 77, latch 77
;;  depth 3, outer 12
;;  nodes: 77
;;
;; Loop 1
;;  header 25, latch 55
;;  depth 1, outer 0
;;  nodes: 25 55 53 52 51 50 49 48 41 40 39 32 31 27 30 29 28 26 38 37 36 35 34 33 47 46 45 44 43 42
;;
;; Loop 7
;;  header 52, latch 52
;;  depth 2, outer 1
;;  nodes: 52
;;
;; Loop 8
;;  header 32, latch 50
;;  depth 2, outer 1
;;  nodes: 32 50 49 48 41 40 39 38 37 36 35 34 33 47 46 45 44 43 42
;;
;; Loop 21
;;  header 48, latch 48
;;  depth 3, outer 8
;;  nodes: 48
;;
;; Loop 9
;;  header 45, latch 45
;;  depth 3, outer 8
;;  nodes: 45
;;
;; Loop 24
;;  header 39, latch 39
;;  depth 3, outer 8
;;  nodes: 39
;;
;; Loop 10
;;  header 36, latch 36
;;  depth 3, outer 8
;;  nodes: 36
;;
;; Loop 3
;;  header 9, latch 22
;;  depth 1, outer 0
;;  nodes: 9 22 21 20 19 12 10 11 18 17 16 15 14 13
;;
;; Loop 27
;;  header 19, latch 19
;;  depth 2, outer 3
;;  nodes: 19
;;
;; Loop 4
;;  header 16, latch 16
;;  depth 2, outer 3
;;  nodes: 16
;;
;; Loop 5
;;  header 3, latch 8
;;  depth 1, outer 0
;;  nodes: 3 8 7 5 6 4
;;
;; Loop 6
;;  header 4, latch 7
;;  depth 2, outer 5
;;  nodes: 4 7 5 6
;; 2 succs { 3 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 4 8 }
;; 8 succs { 3 9 }
;; 9 succs { 10 22 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 19 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 16 17 }
;; 17 succs { 18 20 }
;; 18 succs { 20 }
;; 19 succs { 19 21 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 9 23 }
;; 23 succs { 24 63 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 31 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 39 33 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 }
;; 36 succs { 36 37 }
;; 37 succs { 38 40 }
;; 38 succs { 40 }
;; 39 succs { 39 41 }
;; 40 succs { 41 }
;; 41 succs { 48 42 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 }
;; 45 succs { 45 46 }
;; 46 succs { 47 49 }
;; 47 succs { 49 }
;; 48 succs { 48 50 }
;; 49 succs { 50 }
;; 50 succs { 32 51 }
;; 51 succs { 52 }
;; 52 succs { 52 53 }
;; 53 succs { 54 55 }
;; 54 succs { 57 }
;; 55 succs { 25 56 }
;; 56 succs { 57 }
;; 57 succs { 58 70 }
;; 58 succs { 59 60 }
;; 59 succs { 60 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 70 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 67 66 }
;; 66 succs { 70 }
;; 67 succs { 68 69 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 103 }
;; 72 succs { 73 }
;; 73 succs { 80 74 }
;; 74 succs { 75 76 }
;; 75 succs { 76 }
;; 76 succs { 77 }
;; 77 succs { 77 78 }
;; 78 succs { 79 81 }
;; 79 succs { 81 }
;; 80 succs { 80 82 }
;; 81 succs { 82 }
;; 82 succs { 89 83 }
;; 83 succs { 84 85 }
;; 84 succs { 85 }
;; 85 succs { 86 }
;; 86 succs { 86 87 }
;; 87 succs { 88 90 }
;; 88 succs { 90 }
;; 89 succs { 89 91 }
;; 90 succs { 91 }
;; 91 succs { 73 102 }
;; 92 succs { 92 93 }
;; 93 succs { 94 95 }
;; 94 succs { 71 }
;; 95 succs { 96 97 }
;; 96 succs { 97 }
;; 97 succs { 98 99 }
;; 98 succs { 99 }
;; 99 succs { 100 101 }
;; 100 succs { 101 }
;; 101 succs { 1 }
;; 102 succs { 92 }
;; 103 succs { 93 }
DoLU ()
{
  unsigned long ivtmp.1883;
  sizetype ivtmp.1857;
  unsigned long ivtmp.1855;
  long unsigned int ivtmp.1843;
  long unsigned int ivtmp.1842;
  long unsigned int ivtmp.1840;
  long unsigned int ivtmp.1832;
  long unsigned int ivtmp.1831;
  unsigned long ivtmp.1829;
  unsigned long ivtmp.1828;
  sizetype ivtmp.1819;
  unsigned long ivtmp.1817;
  sizetype ivtmp.1802;
  unsigned long ivtmp.1800;
  unsigned long ivtmp.1789;
  unsigned long ivtmp.1788;
  long unsigned int ivtmp.1784;
  long unsigned int ivtmp.1783;
  unsigned long ivtmp.1781;
  unsigned long ivtmp.1780;
  sizetype ivtmp.1771;
  unsigned long ivtmp.1769;
  sizetype ivtmp.1754;
  unsigned long ivtmp.1752;
  unsigned long ivtmp.1741;
  unsigned long ivtmp.1740;
  vector(2) double * vectp.1736;
  vector(2) double * vectp.1735;
  vector(2) double vect__131.1734;
  vector(2) double vect__130.1733;
  vector(2) double vect__128.1732;
  vector(2) double * vectp.1731;
  vector(2) double * vectp.1730;
  vector(2) double vect__124.1729;
  vector(2) double * vectp.1728;
  vector(2) double * vectp.1727;
  unsigned long tmp.1726;
  long int tmp.1725;
  unsigned long niters_vector_mult_vf.1724;
  unsigned long bnd.1723;
  unsigned long niters.1722;
  unsigned long prolog_loop_niters.1721;
  vector(2) double * vectp.1720;
  vector(2) double * vectp.1719;
  vector(2) double * vectp.1718;
  vector(2) double vect__158.1717;
  vector(2) double * vectp_a.1716;
  vector(2) double * vectp_a.1715;
  long unsigned int tmp.1714;
  long unsigned int tmp.1713;
  long unsigned int niters_vector_mult_vf.1712;
  long unsigned int bnd.1711;
  long unsigned int niters.1710;
  long unsigned int prolog_loop_niters.1709;
  vector(2) double * vectp_a.1708;
  vector(2) double * vectp.1707;
  vector(2) double * vectp.1706;
  vector(2) double vect__165.1705;
  vector(2) double * vectp_b.1704;
  vector(2) double * vectp_b.1703;
  long unsigned int tmp.1702;
  long unsigned int tmp.1701;
  long unsigned int niters_vector_mult_vf.1700;
  long unsigned int bnd.1699;
  long unsigned int niters.1698;
  long unsigned int prolog_loop_niters.1697;
  vector(2) double * vectp_b.1696;
  vector(2) double * vectp.1695;
  vector(2) double * vectp.1694;
  vector(2) double vect__187.1693;
  vector(2) double * vectp_a.1692;
  vector(2) double * vectp_a.1691;
  long unsigned int tmp.1690;
  long unsigned int tmp.1689;
  long unsigned int niters_vector_mult_vf.1688;
  long unsigned int bnd.1687;
  long unsigned int niters.1686;
  long unsigned int prolog_loop_niters.1685;
  vector(2) double * vectp_a.1684;
  vector(2) double * vectp.1683;
  vector(2) double * vectp.1682;
  vector(2) double vect__194.1681;
  vector(2) double * vectp_b.1680;
  vector(2) double * vectp_b.1679;
  long unsigned int tmp.1678;
  long unsigned int tmp.1677;
  long unsigned int niters_vector_mult_vf.1676;
  long unsigned int bnd.1675;
  long unsigned int niters.1674;
  long unsigned int prolog_loop_niters.1673;
  vector(2) double * vectp_b.1672;
  int systemerror;
  fardouble * locabase;
  fardouble * locbbase;
  long unsigned int elapsed;
  long unsigned int j;
  long unsigned int i;
  long unsigned int D.8639;
  int systemerror;
  int systemerror;
  int systemerror;
  fardouble * locabase;
  fardouble * locbbase;
  long unsigned int elapsed;
  long unsigned int j;
  long unsigned int i;
  long unsigned int D.8613;
  int systemerror;
  int systemerror;
  double rcon;
  long int k1;
  long int k;
  long int j;
  long int i;
  double iterations;
  long unsigned int accumtime;
  int i;
  fardouble * bbase;
  fardouble * abase;
  fardouble * b;
  fardouble * a;
  int systemerror;
  farvoid * _1;
  sizetype _2;
  int _3;
  long unsigned int _6;
  int systemerror.195_7;
  long unsigned int _9;
  int systemerror.197_10;
  long unsigned int _11;
  long unsigned int global_min_ticks.199_13;
  long unsigned int _15;
  long unsigned int _16;
  int systemerror.200_17;
  long unsigned int _19;
  long unsigned int _20;
  int systemerror.202_21;
  long unsigned int _24;
  double _25;
  long unsigned int _26;
  long unsigned int _27;
  double _28;
  double _29;
  int _30;
  double _37;
  long unsigned int pretmp_42;
  sizetype _73;
  unsigned int _97;
  unsigned int _98;
  double _103;
  unsigned int _105;
  unsigned int _106;
  long unsigned int _107;
  double _109;
  double[101] * _111;
  unsigned int _116;
  unsigned int _118;
  long unsigned int k.209_120;
  long unsigned int _121;
  double[101] * _122;
  unsigned long _124;
  long unsigned int k1.210_125;
  long unsigned int _126;
  double[101] * _127;
  fardouble * _128;
  fardouble * _130;
  unsigned long _131;
  fardouble * _132;
  long unsigned int _135;
  double * _136;
  double _137;
  _Bool _138;
  long unsigned int _139;
  double * _140;
  double _141;
  double _142;
  double _143;
  _Bool _144;
  fardouble * LUtempvv.221_148;
  fardouble * LUtempvv.221_149;
  long unsigned int _150;
  long unsigned int _151;
  long unsigned int _152;
  fardouble * _153;
  sizetype _155;
  sizetype _156;
  _Bool _160;
  long unsigned int _175;
  fardouble * LUtempvv.221_176;
  fardouble * LUtempvv.221_177;
  fardouble * LUtempvv.221_178;
  long unsigned int _180;
  long unsigned int _181;
  void * _183;
  void * _184;
  sizetype _191;
  sizetype _192;
  sizetype _193;
  long unsigned int _204;
  fardouble * LUtempvv.221_205;
  long unsigned int ivtmp_208;
  double _213;
  long unsigned int prephitmp_214;
  long unsigned int pretmp_215;
  long unsigned int prephitmp_216;
  long unsigned int pretmp_220;
  long unsigned int pretmp_221;
  fardouble * _259;
  unsigned long ivtmp_278;
  unsigned long ivtmp_279;
  long unsigned int _280;
  fardouble * _281;
  long unsigned int _282;
  long unsigned int ivtmp_283;
  long unsigned int ivtmp_287;
  fardouble * _290;
  unsigned long _292;
  unsigned long _295;
  unsigned long _297;
  unsigned long _299;
  sizetype _300;
  fardouble * _331;
  double _343;
  fardouble * _348;
  unsigned long _350;
  unsigned long _352;
  long unsigned int _354;
  long unsigned int pretmp_355;
  long unsigned int prephitmp_356;
  _Bool _363;
  fardouble * _364;
  long unsigned int _365;
  _Bool _367;
  _Bool _368;
  double _376;
  fardouble * _385;
  fardouble * _386;
  double _389;
  fardouble * _394;
  fardouble * _395;
  unsigned long _397;
  unsigned long _398;
  unsigned long _399;
  long unsigned int ivtmp_404;
  long unsigned int ivtmp_408;
  long unsigned int _409;
  fardouble * _410;
  long unsigned int _411;
  fardouble * _412;
  double _413;
  long unsigned int ivtmp_416;
  sizetype _424;
  sizetype _429;
  long unsigned int _430;
  _Bool _439;
  fardouble * _440;
  long unsigned int _441;
  _Bool _443;
  _Bool _444;
  double _452;
  fardouble * _462;
  double _465;
  unsigned long _473;
  unsigned long _474;
  unsigned long _475;
  long unsigned int ivtmp_480;
  long unsigned int ivtmp_484;
  long unsigned int _485;
  fardouble * _486;
  long unsigned int _487;
  fardouble * _488;
  double _489;
  long unsigned int ivtmp_492;
  sizetype _500;
  sizetype _505;
  long unsigned int _506;
  _Bool _515;
  fardouble * _516;
  long unsigned int _517;
  _Bool _519;
  _Bool _520;
  double _528;
  unsigned long _534;
  unsigned long _536;
  unsigned long _537;
  fardouble * _538;
  double _541;
  fardouble * _543;
  fardouble * _544;
  unsigned long _549;
  unsigned long _550;
  unsigned long _551;
  unsigned long _552;
  unsigned long _553;
  long unsigned int ivtmp_556;
  long unsigned int ivtmp_560;
  long unsigned int _561;
  fardouble * _562;
  long unsigned int _563;
  fardouble * _564;
  double _565;
  long unsigned int ivtmp_568;
  sizetype _576;
  sizetype _581;
  long unsigned int _582;
  long unsigned int _588;
  long unsigned int _589;
  ssizetype _590;
  long unsigned int _591;
  ssizetype _592;
  _Bool _593;
  long unsigned int _594;
  long unsigned int _595;
  ssizetype _596;
  long unsigned int _597;
  ssizetype _598;
  _Bool _599;
  _Bool _600;
  double _604;
  double _605;
  double _606;
  double _607;
  double _616;
  double _617;
  double _618;
  double _619;
  void * _622;
  fardouble * _623;
  fardouble * _625;
  long unsigned int _627;
  unsigned long _629;
  unsigned long _630;
  unsigned long _631;
  void * _633;
  unsigned long ivtmp_636;
  unsigned long ivtmp_640;
  double _641;
  double _642;
  double _643;
  double _644;
  unsigned long ivtmp_647;
  long int _652;
  long unsigned int _656;
  long unsigned int _657;
  long unsigned int _658;
  long unsigned int _663;
  long unsigned int _664;
  long unsigned int _665;
  vector(2) double vect_cst__669;
  long unsigned int _673;
  long unsigned int _674;
  long unsigned int _675;

  <bb 2> [0.02%]:
  a_51 = AllocateMemory (81608, &systemerror);
  b_53 = AllocateMemory (808, &systemerror);
  _1 = AllocateMemory (808, &systemerror);
  LUtempvv = _1;
  randnum (13);
  ivtmp.1883_159 = (unsigned long) a_51;

  <bb 3> [0.13%]:
  # i_322 = PHI <i_114(8), 0(2)>
  # ivtmp.1883_157 = PHI <ivtmp.1883_158(8), ivtmp.1883_159(2)>
  _97 = abs_randwc (100);
  _98 = _97 + 1;
  _103 = (double) _98;
  _300 = (sizetype) i_322;
  MEM[base: b_53, index: _300, step: 8, offset: 0B] = _103;
  _111 = (double[101] *) ivtmp.1883_157;

  <bb 4> [0.72%]:
  # j_323 = PHI <j_112(7), 0(3)>
  if (i_322 == j_323)
    goto <bb 5>; [0.52%]
  else
    goto <bb 6>; [99.48%]

  <bb 5> [0.00%]:
  _105 = abs_randwc (1000);
  _106 = _105 + 1;
  _109 = (double) _106;
  _155 = (sizetype) j_323;
  MEM[base: _111, index: _155, step: 8, offset: 0B] = _109;
  goto <bb 7>; [100.00%]

  <bb 6> [0.72%]:
  _156 = (sizetype) j_323;
  MEM[base: _111, index: _156, step: 8, offset: 0B] = 0.0;

  <bb 7> [0.72%]:
  j_112 = j_323 + 1;
  if (j_112 != 101)
    goto <bb 4>; [82.29%]
  else
    goto <bb 8>; [17.71%]

  <bb 8> [0.13%]:
  i_114 = i_322 + 1;
  ivtmp.1883_158 = ivtmp.1883_157 + 808;
  if (i_114 != 101)
    goto <bb 3>; [82.69%]
  else
    goto <bb 9>; [17.31%]

  <bb 9> [0.13%]:
  # ivtmp_279 = PHI <ivtmp_278(22), 808(8)>
  _116 = abs_randwc (101);
  k_117 = (long int) _116;
  _118 = abs_randwc (101);
  k1_119 = (long int) _118;
  if (k_117 != k1_119)
    goto <bb 10>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 10> [0.06%]:
  if (k_117 < k1_119)
    goto <bb 12>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [0.03%]:

  <bb 12> [0.06%]:
  # rcon_129 = PHI <1.0e+0(10), -1.0e+0(11)>
  k.209_120 = (long unsigned int) _116;
  _121 = k.209_120 * 808;
  _122 = a_51 + _121;
  k1.210_125 = (long unsigned int) _118;
  _126 = k1.210_125 * 808;
  _127 = a_51 + _126;
  _588 = k.209_120 * 808;
  _589 = _588 + 16;
  _590 = (ssizetype) _589;
  _591 = k1.210_125 * 808;
  _592 = (ssizetype) _591;
  _593 = _590 <= _592;
  _594 = k1.210_125 * 808;
  _595 = _594 + 16;
  _596 = (ssizetype) _595;
  _597 = k.209_120 * 808;
  _598 = (ssizetype) _597;
  _599 = _596 <= _598;
  _600 = _599 | _593;
  if (_600 != 0)
    goto <bb 13>; [80.00%]
  else
    goto <bb 19>; [20.00%]

  <bb 13> [0.05%]:
  _627 = k.209_120 * 808;
  vectp.1720_626 = a_51 + _627;
  _629 = (unsigned long) vectp.1720_626;
  _630 = _629 >> 3;
  _631 = -_630;
  prolog_loop_niters.1721_628 = _631 & 1;
  if (prolog_loop_niters.1721_628 == 0)
    goto <bb 15>; [33.34%]
  else
    goto <bb 14>; [66.66%]

  <bb 14> [0.03%]:
  _616 = *_122[0];
  _617 = *_127[0];
  _618 = _617 * rcon_129;
  _619 = _616 + _618;
  *_122[0] = _619;

  <bb 15> [0.05%]:
  # j_634 = PHI <1(14), 0(13)>
  # ivtmp_636 = PHI <100(14), 101(13)>
  niters.1722_637 = 101 - prolog_loop_niters.1721_628;
  bnd.1723_649 = niters.1722_637 >> 1;
  _656 = k.209_120 * 101;
  _657 = prolog_loop_niters.1721_628 + _656;
  _658 = _657 * 8;
  vectp.1728_655 = a_51 + _658;
  _663 = k1.210_125 * 101;
  _664 = prolog_loop_niters.1721_628 + _663;
  _665 = _664 * 8;
  vectp.1731_662 = a_51 + _665;
  vect_cst__669 = {rcon_129, rcon_129};
  _673 = k.209_120 * 101;
  _674 = prolog_loop_niters.1721_628 + _673;
  _675 = _674 * 8;
  vectp.1736_672 = a_51 + _675;

  <bb 16> [0.30%]:
  # ivtmp.1855_194 = PHI <ivtmp.1855_195(16), 0(15)>
  # ivtmp.1857_313 = PHI <ivtmp.1857_154(16), 0(15)>
  vect__124.1729_661 = MEM[base: vectp.1728_655, index: ivtmp.1857_313, offset: 0B];
  vect__128.1732_668 = MEM[base: vectp.1731_662, index: ivtmp.1857_313, offset: 0B];
  vect__130.1733_670 = vect__128.1732_668 * vect_cst__669;
  vect__131.1734_671 = vect__124.1729_661 + vect__130.1733_670;
  MEM[base: vectp.1736_672, index: ivtmp.1857_313, offset: 0B] = vect__131.1734_671;
  ivtmp.1855_195 = ivtmp.1855_194 + 1;
  ivtmp.1857_154 = ivtmp.1857_313 + 16;
  if (ivtmp.1855_195 < bnd.1723_649)
    goto <bb 16>; [83.34%]
  else
    goto <bb 17>; [16.66%]

  <bb 17> [0.05%]:
  niters_vector_mult_vf.1724_650 = bnd.1723_649 << 1;
  _652 = (long int) niters_vector_mult_vf.1724_650;
  tmp.1725_651 = j_634 + _652;
  tmp.1726_653 = ivtmp_636 - niters_vector_mult_vf.1724_650;
  if (niters.1722_637 == niters_vector_mult_vf.1724_650)
    goto <bb 20>; [33.34%]
  else
    goto <bb 18>; [66.66%]

  <bb 18> [0.19%]:
  # j_638 = PHI <tmp.1725_651(17)>
  # ivtmp_640 = PHI <tmp.1726_653(17)>
  _641 = *_122[j_638];
  _642 = *_127[j_638];
  _643 = _642 * rcon_129;
  _644 = _641 + _643;
  *_122[j_638] = _644;
  j_646 = j_638 + 1;
  ivtmp_647 = ivtmp_640 - 1;
  goto <bb 20>; [100.00%]

  <bb 19> [0.07%]:
  # j_601 = PHI <0(12), j_609(19)>
  _191 = (sizetype) j_601;
  _604 = MEM[base: _122, index: _191, step: 8, offset: 0B];
  _193 = (sizetype) j_601;
  _605 = MEM[base: _127, index: _193, step: 8, offset: 0B];
  _606 = _605 * rcon_129;
  _607 = _604 + _606;
  _192 = (sizetype) j_601;
  MEM[base: _122, index: _192, step: 8, offset: 0B] = _607;
  j_609 = j_601 + 1;
  if (j_609 != 101)
    goto <bb 19>; [82.50%]
  else
    goto <bb 21>; [17.50%]

  <bb 20> [0.05%]:

  <bb 21> [0.06%]:
  _135 = k.209_120 * 8;
  _136 = b_53 + _135;
  _137 = *_136;
  _139 = k1.210_125 * 8;
  _140 = b_53 + _139;
  _141 = *_140;
  _142 = rcon_129 * _141;
  _143 = _137 + _142;
  *_136 = _143;

  <bb 22> [0.13%]:
  ivtmp_278 = ivtmp_279 - 1;
  if (ivtmp_278 != 0)
    goto <bb 9>; [82.69%]
  else
    goto <bb 23>; [17.31%]

  <bb 23> [0.02%]:
  _3 = global_lustruct.adjust;
  if (_3 == 0)
    goto <bb 24>; [67.00%]
  else
    goto <bb 63>; [33.00%]

  <bb 24> [0.02%]:
  global_lustruct.numarrays = 0;
  _549 = (unsigned long) a_51;
  _550 = _549 >> 3;
  _551 = -_550;
  prolog_loop_niters.1709_548 = _551 & 1;
  niters.1710_557 = 10201 - prolog_loop_niters.1709_548;
  bnd.1711_570 = niters.1710_557 >> 1;
  _576 = prolog_loop_niters.1709_548 * 8;
  vectp_a.1716_575 = a_51 + _576;
  _581 = prolog_loop_niters.1709_548 * 8;
  niters_vector_mult_vf.1712_571 = bnd.1711_570 << 1;
  _473 = (unsigned long) b_53;
  _474 = _473 >> 3;
  _475 = -_474;
  prolog_loop_niters.1697_472 = _475 & 1;
  niters.1698_481 = 101 - prolog_loop_niters.1697_472;
  bnd.1699_494 = niters.1698_481 >> 1;
  _500 = prolog_loop_niters.1697_472 * 8;
  vectp_b.1704_499 = b_53 + _500;
  _505 = prolog_loop_niters.1697_472 * 8;
  niters_vector_mult_vf.1700_495 = bnd.1699_494 << 1;

  <bb 25> [0.18%]:
  # ivtmp.1840_185 = PHI <ivtmp.1840_186(55), 163216(24)>
  # ivtmp.1842_187 = PHI <ivtmp.1842_188(55), 1(24)>
  # ivtmp.1843_311 = PHI <ivtmp.1843_190(55), 1616(24)>
  _6 = ivtmp.1840_185;
  abase_71 = AllocateMemory (_6, &systemerror);
  systemerror.195_7 = systemerror;
  if (systemerror.195_7 != 0)
    goto <bb 26>; [33.00%]
  else
    goto <bb 27>; [67.00%]

  <bb 26> [0.06%]:
  ReportError ("FPU:LU", systemerror.195_7);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_148 = LUtempvv;
  FreeMemory (LUtempvv.221_148, &systemerror);
  systemerror ={v} {CLOBBER};
  ErrorExit ();

  <bb 27> [0.18%]:
  _9 = ivtmp.1843_311;
  bbase_76 = AllocateMemory (_9, &systemerror);
  systemerror.197_10 = systemerror;
  if (systemerror.197_10 != 0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 31>; [67.00%]

  <bb 28> [0.06%]:
  ReportError ("FPU:LU", systemerror.197_10);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_149 = LUtempvv;
  FreeMemory (LUtempvv.221_149, &systemerror);
  if (abase_71 != 0B)
    goto <bb 29>; [53.47%]
  else
    goto <bb 30>; [46.53%]

  <bb 29> [0.03%]:
  FreeMemory (abase_71, &systemerror);

  <bb 30> [0.06%]:
  systemerror ={v} {CLOBBER};
  ErrorExit ();

  <bb 31> [0.18%]:
  _11 = ivtmp.1842_187;
  ivtmp.1828_327 = (unsigned long) abase_71;
  ivtmp.1829_293 = (unsigned long) bbase_76;

  <bb 32> [1.00%]:
  # j_326 = PHI <j_167(50), 0(31)>
  # ivtmp.1828_569 = PHI <ivtmp.1828_304(50), ivtmp.1828_327(31)>
  # ivtmp.1829_546 = PHI <ivtmp.1829_648(50), ivtmp.1829_293(31)>
  # ivtmp.1831_324 = PHI <ivtmp.1831_624(50), 0(31)>
  # ivtmp.1832_325 = PHI <ivtmp.1832_145(50), 0(31)>
  _151 = ivtmp.1831_324;
  _152 = ivtmp.1832_325;
  _124 = ivtmp.1828_569 + 16;
  _128 = (fardouble *) _124;
  _515 = a_51 >= _128;
  _516 = a_51 + 16;
  _517 = ivtmp.1831_324;
  _130 = (fardouble *) ivtmp.1828_569;
  _519 = _516 <= _130;
  _520 = _515 | _519;
  if (_520 != 0)
    goto <bb 33>; [80.00%]
  else
    goto <bb 39>; [20.00%]

  <bb 33> [0.80%]:
  if (prolog_loop_niters.1709_548 == 0)
    goto <bb 35>; [33.34%]
  else
    goto <bb 34>; [66.66%]

  <bb 34> [0.55%]:
  _538 = a_51;
  _541 = *_538;
  _183 = (void *) ivtmp.1828_569;
  MEM[base: _183, offset: 0B] = _541;

  <bb 35> [0.80%]:
  # i_554 = PHI <1(34), 0(33)>
  # ivtmp_556 = PHI <10200(34), 10201(33)>
  _582 = _517 + _581;
  vectp.1719_580 = abase_71 + _582;

  <bb 36> [40.00%]:
  # ivtmp.1817_493 = PHI <ivtmp.1817_310(36), 0(35)>
  # ivtmp.1819_328 = PHI <ivtmp.1819_470(36), 0(35)>
  vect__158.1717_579 = MEM[base: vectp_a.1716_575, index: ivtmp.1819_328, offset: 0B];
  MEM[base: vectp.1719_580, index: ivtmp.1819_328, offset: 0B] = vect__158.1717_579;
  ivtmp.1817_310 = ivtmp.1817_493 + 1;
  ivtmp.1819_470 = ivtmp.1819_328 + 16;
  if (ivtmp.1817_310 < bnd.1711_570)
    goto <bb 36>; [98.00%]
  else
    goto <bb 37>; [2.00%]

  <bb 37> [0.80%]:
  tmp.1713_572 = i_554 + niters_vector_mult_vf.1712_571;
  tmp.1714_573 = ivtmp_556 - niters_vector_mult_vf.1712_571;
  if (niters.1710_557 == niters_vector_mult_vf.1712_571)
    goto <bb 40>; [33.34%]
  else
    goto <bb 38>; [66.66%]

  <bb 38> [52.83%]:
  # i_558 = PHI <tmp.1713_572(37)>
  # ivtmp_560 = PHI <tmp.1714_573(37)>
  _561 = i_558 * 8;
  _562 = a_51 + _561;
  _563 = _561 + _151;
  _564 = abase_71 + _563;
  _565 = *_562;
  *_564 = _565;
  i_567 = i_558 + 1;
  ivtmp_568 = ivtmp_560 - 1;
  goto <bb 40>; [100.00%]

  <bb 39> [19.80%]:
  # i_521 = PHI <0(32), i_530(39)>
  _528 = MEM[base: a_51, index: i_521, step: 8, offset: 0B];
  _394 = (fardouble *) ivtmp.1828_569;
  MEM[base: _394, index: i_521, step: 8, offset: 0B] = _528;
  i_530 = i_521 + 1;
  if (i_530 != 10201)
    goto <bb 39>; [98.99%]
  else
    goto <bb 41>; [1.01%]

  <bb 40> [0.80%]:

  <bb 41> [1.00%]:
  _131 = ivtmp.1829_546 + 16;
  _132 = (fardouble *) _131;
  _439 = b_53 >= _132;
  _440 = b_53 + 16;
  _441 = ivtmp.1832_325;
  _290 = (fardouble *) ivtmp.1829_546;
  _443 = _440 <= _290;
  _444 = _439 | _443;
  if (_444 != 0)
    goto <bb 42>; [80.00%]
  else
    goto <bb 48>; [20.00%]

  <bb 42> [0.80%]:
  if (prolog_loop_niters.1697_472 == 0)
    goto <bb 44>; [33.34%]
  else
    goto <bb 43>; [66.66%]

  <bb 43> [0.55%]:
  _462 = b_53;
  _465 = *_462;
  _184 = (void *) ivtmp.1829_546;
  MEM[base: _184, offset: 0B] = _465;

  <bb 44> [0.80%]:
  # i_478 = PHI <1(43), 0(42)>
  # ivtmp_480 = PHI <100(43), 101(42)>
  _506 = _441 + _505;
  vectp.1707_504 = bbase_76 + _506;

  <bb 45> [40.00%]:
  # ivtmp.1800_305 = PHI <ivtmp.1800_417(45), 0(44)>
  # ivtmp.1802_312 = PHI <ivtmp.1802_330(45), 0(44)>
  vect__165.1705_503 = MEM[base: vectp_b.1704_499, index: ivtmp.1802_312, offset: 0B];
  MEM[base: vectp.1707_504, index: ivtmp.1802_312, offset: 0B] = vect__165.1705_503;
  ivtmp.1800_417 = ivtmp.1800_305 + 1;
  ivtmp.1802_330 = ivtmp.1802_312 + 16;
  if (ivtmp.1800_417 < bnd.1699_494)
    goto <bb 45>; [98.00%]
  else
    goto <bb 46>; [2.00%]

  <bb 46> [0.80%]:
  tmp.1701_496 = i_478 + niters_vector_mult_vf.1700_495;
  tmp.1702_497 = ivtmp_480 - niters_vector_mult_vf.1700_495;
  if (niters.1698_481 == niters_vector_mult_vf.1700_495)
    goto <bb 49>; [33.34%]
  else
    goto <bb 47>; [66.66%]

  <bb 47> [52.83%]:
  # i_482 = PHI <tmp.1701_496(46)>
  # ivtmp_484 = PHI <tmp.1702_497(46)>
  _485 = i_482 * 8;
  _486 = b_53 + _485;
  _487 = _485 + _152;
  _488 = bbase_76 + _487;
  _489 = *_486;
  *_488 = _489;
  i_491 = i_482 + 1;
  ivtmp_492 = ivtmp_484 - 1;
  goto <bb 49>; [100.00%]

  <bb 48> [19.80%]:
  # i_445 = PHI <0(41), i_454(48)>
  _452 = MEM[base: b_53, index: i_445, step: 8, offset: 0B];
  _331 = (fardouble *) ivtmp.1829_546;
  MEM[base: _331, index: i_445, step: 8, offset: 0B] = _452;
  i_454 = i_445 + 1;
  if (i_454 != 101)
    goto <bb 48>; [98.99%]
  else
    goto <bb 50>; [1.01%]

  <bb 49> [0.80%]:

  <bb 50> [1.00%]:
  j_167 = j_326 + 1;
  ivtmp.1828_304 = ivtmp.1828_569 + 81608;
  ivtmp.1829_648 = ivtmp.1829_546 + 808;
  ivtmp.1831_624 = ivtmp.1831_324 + 81608;
  ivtmp.1832_145 = ivtmp.1832_325 + 808;
  if (_11 > j_167)
    goto <bb 32>; [82.30%]
  else
    goto <bb 51>; [17.70%]

  <bb 51> [0.18%]:
  elapsed_168 = StartStopwatch ();
  ivtmp.1788_615 = (unsigned long) abase_71;
  ivtmp.1789_314 = (unsigned long) bbase_76;

  <bb 52> [1.00%]:
  # i_329 = PHI <i_174(52), 0(51)>
  # ivtmp.1788_621 = PHI <ivtmp.1788_632(52), ivtmp.1788_615(51)>
  # ivtmp.1789_613 = PHI <ivtmp.1789_207(52), ivtmp.1789_314(51)>
  locabase_171 = (fardouble *) ivtmp.1788_621;
  locbbase_173 = (fardouble *) ivtmp.1789_613;
  lusolve.constprop (locabase_171, locbbase_173);
  i_174 = i_329 + 1;
  ivtmp.1788_632 = ivtmp.1788_621 + 81608;
  ivtmp.1789_207 = ivtmp.1789_613 + 808;
  if (_11 > i_174)
    goto <bb 52>; [82.30%]
  else
    goto <bb 53>; [17.70%]

  <bb 53> [0.18%]:
  _175 = StopStopwatch (elapsed_168);
  global_min_ticks.199_13 = global_min_ticks;
  if (global_min_ticks.199_13 < _175)
    goto <bb 54>; [7.50%]
  else
    goto <bb 55>; [92.50%]

  <bb 54> [0.01%]:
  # _354 = PHI <_11(53)>
  # abase_353 = PHI <abase_71(53)>
  # bbase_346 = PHI <bbase_76(53)>
  global_lustruct.numarrays = _354;
  goto <bb 57>; [100.00%]

  <bb 55> [0.16%]:
  FreeMemory (abase_71, &systemerror);
  FreeMemory (bbase_76, &systemerror);
  ivtmp.1840_186 = ivtmp.1840_185 + 81608;
  ivtmp.1842_188 = ivtmp.1842_187 + 1;
  ivtmp.1843_190 = ivtmp.1843_311 + 808;
  if (ivtmp.1840_186 != 816243216)
    goto <bb 25>; [98.88%]
  else
    goto <bb 56>; [1.13%]

  <bb 56> [0.00%]:
  # abase_347 = PHI <abase_71(55)>
  # bbase_319 = PHI <bbase_76(55)>
  pretmp_355 = global_lustruct.numarrays;

  <bb 57> [0.02%]:
  # prephitmp_356 = PHI <_354(54), pretmp_355(56)>
  # abase_316 = PHI <abase_353(54), abase_347(56)>
  # bbase_315 = PHI <bbase_346(54), bbase_319(56)>
  if (prephitmp_356 == 0)
    goto <bb 58>; [33.00%]
  else
    goto <bb 70>; [67.00%]

  <bb 58> [0.00%]:
  __builtin_puts (&"FPU:LU -- Array limit reached"[0]);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_176 = LUtempvv;
  FreeMemory (LUtempvv.221_176, &systemerror);
  if (abase_316 != 0B)
    goto <bb 59>; [53.47%]
  else
    goto <bb 60>; [46.53%]

  <bb 59> [0.00%]:
  FreeMemory (abase_316, &systemerror);

  <bb 60> [0.00%]:
  if (bbase_315 != 0B)
    goto <bb 61>; [57.44%]
  else
    goto <bb 62>; [42.56%]

  <bb 61> [0.00%]:
  FreeMemory (bbase_315, &systemerror);

  <bb 62> [0.00%]:
  systemerror ={v} {CLOBBER};
  ErrorExit ();
  pretmp_221 = global_lustruct.numarrays;
  goto <bb 70>; [100.00%]

  <bb 63> [0.01%]:
  _15 = global_lustruct.numarrays;
  _16 = _15 * 81608;
  abase_58 = AllocateMemory (_16, &systemerror);
  systemerror.200_17 = systemerror;
  if (systemerror.200_17 != 0)
    goto <bb 64>; [33.00%]
  else
    goto <bb 65>; [67.00%]

  <bb 64> [0.00%]:
  ReportError ("FPU:LU", systemerror.200_17);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_177 = LUtempvv;
  FreeMemory (LUtempvv.221_177, &systemerror);
  systemerror ={v} {CLOBBER};
  ErrorExit ();

  <bb 65> [0.01%]:
  _19 = global_lustruct.numarrays;
  _20 = _19 * 808;
  bbase_63 = AllocateMemory (_20, &systemerror);
  systemerror.202_21 = systemerror;
  if (systemerror.202_21 != 0)
    goto <bb 67>; [33.00%]
  else
    goto <bb 66>; [67.00%]

  <bb 66> [0.01%]:
  pretmp_220 = global_lustruct.numarrays;
  goto <bb 70>; [100.00%]

  <bb 67> [0.00%]:
  ReportError ("FPU:LU", systemerror.202_21);
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_178 = LUtempvv;
  FreeMemory (LUtempvv.221_178, &systemerror);
  if (abase_58 != 0B)
    goto <bb 68>; [53.47%]
  else
    goto <bb 69>; [46.53%]

  <bb 68> [0.00%]:
  FreeMemory (abase_58, &systemerror);

  <bb 69> [0.00%]:
  systemerror ={v} {CLOBBER};
  ErrorExit ();
  pretmp_42 = global_lustruct.numarrays;

  <bb 70> [0.02%]:
  # abase_33 = PHI <abase_316(62), abase_58(66), abase_58(69), abase_316(57)>
  # bbase_36 = PHI <bbase_315(62), bbase_63(66), bbase_63(69), bbase_315(57)>
  # prephitmp_216 = PHI <pretmp_221(62), pretmp_220(66), pretmp_42(69), prephitmp_356(57)>
  _397 = (unsigned long) a_51;
  _398 = _397 >> 3;
  _399 = -_398;
  prolog_loop_niters.1685_396 = _399 & 1;
  niters.1686_405 = 10201 - prolog_loop_niters.1685_396;
  bnd.1687_418 = niters.1686_405 >> 1;
  _424 = prolog_loop_niters.1685_396 * 8;
  vectp_a.1692_423 = a_51 + _424;
  _429 = prolog_loop_niters.1685_396 * 8;
  niters_vector_mult_vf.1688_419 = bnd.1687_418 << 1;
  _299 = (unsigned long) b_53;
  _297 = _299 >> 3;
  _295 = -_297;
  prolog_loop_niters.1673_301 = _295 & 1;
  niters.1674_286 = 101 - prolog_loop_niters.1673_301;
  bnd.1675_115 = niters.1674_286 >> 1;
  _73 = prolog_loop_niters.1673_301 * 8;
  vectp_b.1680_78 = b_53 + _73;
  _2 = prolog_loop_niters.1673_301 * 8;
  niters_vector_mult_vf.1676_94 = bnd.1675_115 << 1;

  <bb 71> [0.15%]:
  # accumtime_38 = PHI <0(70), accumtime_88(94)>
  # iterations_39 = PHI <0.0(70), iterations_89(94)>
  # prephitmp_214 = PHI <prephitmp_216(70), pretmp_215(94)>
  if (prephitmp_214 != 0)
    goto <bb 72>; [85.00%]
  else
    goto <bb 103>; [15.00%]

  <bb 72> [0.13%]:
  ivtmp.1780_468 = (unsigned long) abase_33;
  ivtmp.1781_476 = (unsigned long) bbase_36;
  _537 = prephitmp_214 * 81608;
  _552 = (unsigned long) abase_33;
  _536 = _537 + _552;

  <bb 73> [0.85%]:
  # ivtmp.1780_469 = PHI <ivtmp.1780_477(91), ivtmp.1780_468(72)>
  # ivtmp.1781_467 = PHI <ivtmp.1781_461(91), ivtmp.1781_476(72)>
  # ivtmp.1783_460 = PHI <ivtmp.1783_458(91), 0(72)>
  # ivtmp.1784_547 = PHI <ivtmp.1784_545(91), 0(72)>
  _180 = ivtmp.1783_460;
  _181 = ivtmp.1784_547;
  _553 = ivtmp.1780_469 + 16;
  _544 = (fardouble *) _553;
  _363 = a_51 >= _544;
  _364 = a_51 + 16;
  _365 = ivtmp.1783_460;
  _543 = (fardouble *) ivtmp.1780_469;
  _367 = _364 <= _543;
  _368 = _363 | _367;
  if (_368 != 0)
    goto <bb 74>; [80.00%]
  else
    goto <bb 80>; [20.00%]

  <bb 74> [0.68%]:
  if (prolog_loop_niters.1685_396 == 0)
    goto <bb 76>; [33.34%]
  else
    goto <bb 75>; [66.66%]

  <bb 75> [0.47%]:
  _386 = a_51;
  _389 = *_386;
  _633 = (void *) ivtmp.1780_469;
  MEM[base: _633, offset: 0B] = _389;

  <bb 76> [0.68%]:
  # i_402 = PHI <1(75), 0(74)>
  # ivtmp_404 = PHI <10200(75), 10201(74)>
  _430 = _365 + _429;
  vectp.1695_428 = abase_33 + _430;

  <bb 77> [34.00%]:
  # ivtmp.1769_400 = PHI <ivtmp.1769_384(77), 0(76)>
  # ivtmp.1771_382 = PHI <ivtmp.1771_471(77), 0(76)>
  vect__187.1693_427 = MEM[base: vectp_a.1692_423, index: ivtmp.1771_382, offset: 0B];
  MEM[base: vectp.1695_428, index: ivtmp.1771_382, offset: 0B] = vect__187.1693_427;
  ivtmp.1769_384 = ivtmp.1769_400 + 1;
  ivtmp.1771_471 = ivtmp.1771_382 + 16;
  if (ivtmp.1769_384 < bnd.1687_418)
    goto <bb 77>; [98.00%]
  else
    goto <bb 78>; [2.00%]

  <bb 78> [0.68%]:
  tmp.1689_420 = i_402 + niters_vector_mult_vf.1688_419;
  tmp.1690_421 = ivtmp_404 - niters_vector_mult_vf.1688_419;
  if (niters.1686_405 == niters_vector_mult_vf.1688_419)
    goto <bb 81>; [33.34%]
  else
    goto <bb 79>; [66.66%]

  <bb 79> [44.73%]:
  # i_406 = PHI <tmp.1689_420(78)>
  # ivtmp_408 = PHI <tmp.1690_421(78)>
  _409 = i_406 * 8;
  _410 = a_51 + _409;
  _411 = _409 + _180;
  _412 = abase_33 + _411;
  _413 = *_410;
  *_412 = _413;
  i_415 = i_406 + 1;
  ivtmp_416 = ivtmp_408 - 1;
  goto <bb 81>; [100.00%]

  <bb 80> [16.77%]:
  # i_369 = PHI <0(73), i_378(80)>
  _376 = MEM[base: a_51, index: i_369, step: 8, offset: 0B];
  _385 = (fardouble *) ivtmp.1780_469;
  MEM[base: _385, index: i_369, step: 8, offset: 0B] = _376;
  i_378 = i_369 + 1;
  if (i_378 != 10201)
    goto <bb 80>; [98.99%]
  else
    goto <bb 82>; [1.01%]

  <bb 81> [0.68%]:

  <bb 82> [0.85%]:
  _534 = ivtmp.1781_467 + 16;
  _625 = (fardouble *) _534;
  _160 = b_53 >= _625;
  _153 = b_53 + 16;
  _150 = ivtmp.1784_547;
  _623 = (fardouble *) ivtmp.1781_467;
  _144 = _623 >= _153;
  _138 = _160 | _144;
  if (_138 != 0)
    goto <bb 83>; [80.00%]
  else
    goto <bb 89>; [20.00%]

  <bb 83> [0.68%]:
  if (prolog_loop_niters.1673_301 == 0)
    goto <bb 85>; [33.34%]
  else
    goto <bb 84>; [66.66%]

  <bb 84> [0.47%]:
  _348 = b_53;
  _343 = *_348;
  _622 = (void *) ivtmp.1781_467;
  MEM[base: _622, offset: 0B] = _343;

  <bb 85> [0.68%]:
  # i_289 = PHI <1(84), 0(83)>
  # ivtmp_287 = PHI <100(84), 101(83)>
  _107 = _150 + _2;
  vectp.1683_8 = bbase_36 + _107;

  <bb 86> [34.00%]:
  # ivtmp.1752_393 = PHI <ivtmp.1752_401(86), 0(85)>
  # ivtmp.1754_392 = PHI <ivtmp.1754_391(86), 0(85)>
  vect__194.1681_56 = MEM[base: vectp_b.1680_78, index: ivtmp.1754_392, offset: 0B];
  MEM[base: vectp.1683_8, index: ivtmp.1754_392, offset: 0B] = vect__194.1681_56;
  ivtmp.1752_401 = ivtmp.1752_393 + 1;
  ivtmp.1754_391 = ivtmp.1754_392 + 16;
  if (ivtmp.1752_401 < bnd.1675_115)
    goto <bb 86>; [98.00%]
  else
    goto <bb 87>; [2.00%]

  <bb 87> [0.68%]:
  tmp.1677_87 = i_289 + niters_vector_mult_vf.1676_94;
  tmp.1678_84 = ivtmp_287 - niters_vector_mult_vf.1676_94;
  if (niters_vector_mult_vf.1676_94 == niters.1674_286)
    goto <bb 90>; [33.34%]
  else
    goto <bb 88>; [66.66%]

  <bb 88> [44.73%]:
  # i_285 = PHI <tmp.1677_87(87)>
  # ivtmp_283 = PHI <tmp.1678_84(87)>
  _282 = i_285 * 8;
  _281 = b_53 + _282;
  _280 = _282 + _181;
  _259 = bbase_36 + _280;
  _213 = *_281;
  *_259 = _213;
  i_209 = i_285 + 1;
  ivtmp_208 = ivtmp_283 - 1;
  goto <bb 90>; [100.00%]

  <bb 89> [16.77%]:
  # i_134 = PHI <0(82), i_31(89)>
  _37 = MEM[base: b_53, index: i_134, step: 8, offset: 0B];
  _395 = (fardouble *) ivtmp.1781_467;
  MEM[base: _395, index: i_134, step: 8, offset: 0B] = _37;
  i_31 = i_134 + 1;
  if (i_31 != 101)
    goto <bb 89>; [98.99%]
  else
    goto <bb 91>; [1.01%]

  <bb 90> [0.68%]:

  <bb 91> [0.85%]:
  ivtmp.1780_477 = ivtmp.1780_469 + 81608;
  ivtmp.1781_461 = ivtmp.1781_467 + 808;
  ivtmp.1783_458 = ivtmp.1783_460 + 81608;
  ivtmp.1784_545 = ivtmp.1784_547 + 808;
  if (ivtmp.1780_477 != _536)
    goto <bb 73>; [85.00%]
  else
    goto <bb 102>; [15.00%]

  <bb 92> [0.85%]:
  # ivtmp.1740_303 = PHI <ivtmp.1740_307(92), ivtmp.1740_291(102)>
  # ivtmp.1741_308 = PHI <ivtmp.1741_309(92), ivtmp.1741_349(102)>
  locabase_200 = (fardouble *) ivtmp.1740_303;
  locbbase_202 = (fardouble *) ivtmp.1741_308;
  lusolve.constprop (locabase_200, locbbase_202);
  ivtmp.1740_307 = ivtmp.1740_303 + 81608;
  ivtmp.1741_309 = ivtmp.1741_308 + 808;
  if (ivtmp.1740_307 != _352)
    goto <bb 92>; [85.00%]
  else
    goto <bb 93>; [15.00%]

  <bb 93> [0.15%]:
  # elapsed_22 = PHI <elapsed_302(92), elapsed_179(103)>
  _204 = StopStopwatch (elapsed_22);
  accumtime_88 = _204 + accumtime_38;
  _24 = global_lustruct.numarrays;
  _25 = (double) _24;
  iterations_89 = _25 + iterations_39;
  _26 = TicksToSecs (accumtime_88);
  _27 = global_lustruct.request_secs;
  if (_26 < _27)
    goto <bb 94>; [85.00%]
  else
    goto <bb 95>; [15.00%]

  <bb 94> [0.13%]:
  pretmp_215 = global_lustruct.numarrays;
  goto <bb 71>; [100.00%]

  <bb 95> [0.02%]:
  # accumtime_318 = PHI <accumtime_88(93)>
  # iterations_317 = PHI <iterations_89(93)>
  _28 = TicksToFracSecs (accumtime_318);
  _29 = iterations_317 / _28;
  global_lustruct.iterspersec = _29;
  _30 = global_lustruct.adjust;
  if (_30 == 0)
    goto <bb 96>; [54.00%]
  else
    goto <bb 97>; [46.00%]

  <bb 96> [0.01%]:
  global_lustruct.adjust = 1;

  <bb 97> [0.02%]:
  FreeMemory (a_51, &systemerror);
  FreeMemory (b_53, &systemerror);
  LUtempvv.221_205 = LUtempvv;
  FreeMemory (LUtempvv.221_205, &systemerror);
  if (abase_33 != 0B)
    goto <bb 98>; [53.47%]
  else
    goto <bb 99>; [46.53%]

  <bb 98> [0.01%]:
  FreeMemory (abase_33, &systemerror);

  <bb 99> [0.02%]:
  if (bbase_36 != 0B)
    goto <bb 100>; [57.44%]
  else
    goto <bb 101>; [42.56%]

  <bb 100> [0.01%]:
  FreeMemory (bbase_36, &systemerror);

  <bb 101> [0.02%]:
  systemerror ={v} {CLOBBER};
  systemerror ={v} {CLOBBER};
  return;

  <bb 102> [0.13%]:
  elapsed_302 = StartStopwatch ();
  ivtmp.1740_291 = (unsigned long) abase_33;
  ivtmp.1741_349 = (unsigned long) bbase_36;
  _292 = prephitmp_214 * 81608;
  _350 = (unsigned long) abase_33;
  _352 = _292 + _350;
  goto <bb 92>; [100.00%]

  <bb 103> [0.02%]:
  elapsed_179 = StartStopwatch ();
  goto <bb 93>; [100.00%]

}


