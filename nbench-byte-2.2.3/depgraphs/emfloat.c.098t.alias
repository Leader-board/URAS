
;; Function DivideInternalFPF (DivideInternalFPF, funcdef_no=51, decl_uid=2827, cgraph_uid=51, symbol_order=51)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
x = &NONLOCAL
y = &NONLOCAL
z = &NONLOCAL
_1 = *x
_2 = _1
_3 = _2
_3 = &NONLOCAL
_4 = *y
_5 = _4
_6 = _3
_6 = _5
derefaddrtmp(17) = &NONLOCAL
*z = derefaddrtmp(17)
derefaddrtmp(18) = &NONLOCAL
*z + 16 = derefaddrtmp(18)
derefaddrtmp(19) = &NONLOCAL
*z + 8 = derefaddrtmp(19)
derefaddrtmp(20) = &NONLOCAL
*z + 32 = derefaddrtmp(20)
derefaddrtmp(21) = &NULL
*z + 48 = derefaddrtmp(21)
i_404 = &NONLOCAL
derefaddrtmp(23) = &NULL
*z + UNKNOWN = derefaddrtmp(23)
i_408 = &NONLOCAL
derefaddrtmp(25) = &NULL
*z + UNKNOWN = derefaddrtmp(25)
i_412 = &NONLOCAL
_7 = y + UNKNOWN
_71 = i_70
_72 = _71
_72 = &NONLOCAL
_73 = _7 + UNKNOWN
_74 = *_73
_75 = _74
n_77 = _75
n_77 = n_76
i_78 = i_70
i_78 = &NONLOCAL
i_70 = &NULL
i_70 = i_78
n_76 = &NULL
n_76 = n_77
n_186 = n_76
derefaddrtmp(38) = &NONLOCAL
*z = derefaddrtmp(38)
derefaddrtmp(39) = &NONLOCAL
*z + 16 = derefaddrtmp(39)
derefaddrtmp(40) = &NONLOCAL
*z + 8 = derefaddrtmp(40)
derefaddrtmp(41) = &NONLOCAL
*z + 32 = derefaddrtmp(41)
derefaddrtmp(42) = &NULL
*z + 48 = derefaddrtmp(42)
i_416 = &NONLOCAL
derefaddrtmp(44) = &NULL
*z + UNKNOWN = derefaddrtmp(44)
i_420 = &NONLOCAL
derefaddrtmp(46) = &NULL
*z + UNKNOWN = derefaddrtmp(46)
i_424 = &NONLOCAL
_8 = *x + 8
_9 = *y + 8
_10 = _8
_10 = _9
derefaddrtmp(51) = &NULL
*z = derefaddrtmp(51)
*z + 8 = _10
derefaddrtmp(52) = &NONLOCAL
*z + 16 = derefaddrtmp(52)
derefaddrtmp(53) = &NULL
*z + 32 = derefaddrtmp(53)
i_428 = &NONLOCAL
derefaddrtmp(55) = &NULL
*z + UNKNOWN = derefaddrtmp(55)
i_432 = &NONLOCAL
derefaddrtmp(57) = &NULL
*z + UNKNOWN = derefaddrtmp(57)
i_436 = &NONLOCAL
derefaddrtmp(59) = &NULL
*z + UNKNOWN = derefaddrtmp(59)
i_440 = &NONLOCAL
_11 = x + UNKNOWN
_84 = i_83
_85 = _84
_85 = &NONLOCAL
_86 = _11 + UNKNOWN
_87 = *_86
_88 = _87
n_90 = _88
n_90 = n_89
i_91 = i_83
i_91 = &NONLOCAL
i_83 = &NULL
i_83 = i_91
n_89 = &NULL
n_89 = n_90
n_105 = n_89
derefaddrtmp(72) = &NONLOCAL
*z = derefaddrtmp(72)
derefaddrtmp(73) = &NONLOCAL
*z + 16 = derefaddrtmp(73)
derefaddrtmp(74) = &NONLOCAL
*z + 8 = derefaddrtmp(74)
derefaddrtmp(75) = &NONLOCAL
*z + 32 = derefaddrtmp(75)
derefaddrtmp(76) = &NULL
*z + 48 = derefaddrtmp(76)
i_444 = &NONLOCAL
derefaddrtmp(78) = &NULL
*z + UNKNOWN = derefaddrtmp(78)
i_448 = &NONLOCAL
derefaddrtmp(80) = &NULL
*z + UNKNOWN = derefaddrtmp(80)
i_452 = &NONLOCAL
derefaddrtmp(82) = &NONLOCAL
*z = derefaddrtmp(82)
derefaddrtmp(83) = &NULL
*z + 8 = derefaddrtmp(83)
derefaddrtmp(84) = &NONLOCAL
*z + 16 = derefaddrtmp(84)
derefaddrtmp(85) = &NULL
*z + 32 = derefaddrtmp(85)
i_456 = &NONLOCAL
derefaddrtmp(87) = &NULL
*z + UNKNOWN = derefaddrtmp(87)
i_460 = &NONLOCAL
derefaddrtmp(89) = &NULL
*z + UNKNOWN = derefaddrtmp(89)
i_464 = &NONLOCAL
derefaddrtmp(91) = &NULL
*z + UNKNOWN = derefaddrtmp(91)
i_468 = &NONLOCAL
_12 = *x + 8
_13 = *y + 8
_14 = _12
_14 = _13
*z + 8 = _14
CALLUSED(97) = CALLUSED(97) + UNKNOWN
CALLUSED(97) = *CALLUSED(97) + UNKNOWN
CALLUSED(97) = x
CALLUSED(97) = &NULL
_55 = CALLUSED(97)
_55 = NONLOCAL
doubledereftmp(100) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(100)
CALLUSED(101) = CALLUSED(101) + UNKNOWN
CALLUSED(101) = *CALLUSED(101) + UNKNOWN
CALLUSED(101) = y
CALLUSED(101) = &NULL
_54 = CALLUSED(101)
_54 = NONLOCAL
doubledereftmp(104) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(104)
locx = *x + UNKNOWN
_771 = &NULL
_772 = &NULL
_773 = &locx
_774 = *_773
_775 = _774
n_776 = _775
i_777 = &NONLOCAL
_780 = &NONLOCAL
_781 = &NONLOCAL
_782 = &locx
_783 = *_782
_784 = _783
_647 = _774
_647 = _783
n_785 = _647
i_786 = &NONLOCAL
_789 = &NONLOCAL
_790 = &NONLOCAL
_791 = &locx
_792 = *_791
_793 = _792
_646 = _647
_646 = _792
n_794 = _646
i_795 = &NONLOCAL
_798 = &NONLOCAL
_799 = &NONLOCAL
_800 = &locx
_801 = *_800
_802 = _801
_712 = _646
_712 = _801
n_803 = _712
i_804 = &NONLOCAL
_16 = y + UNKNOWN
_107 = i_106
_108 = _107
_108 = &NONLOCAL
_109 = _16 + UNKNOWN
_110 = *_109
_111 = _110
n_113 = _111
n_113 = n_112
i_114 = i_106
i_114 = &NONLOCAL
i_106 = &NULL
i_106 = i_114
n_112 = &NULL
n_112 = n_113
n_15 = n_112
derefaddrtmp(148) = &NONLOCAL
*z = derefaddrtmp(148)
derefaddrtmp(149) = &NONLOCAL
*z + 16 = derefaddrtmp(149)
derefaddrtmp(150) = &NONLOCAL
*z + 8 = derefaddrtmp(150)
derefaddrtmp(151) = &NONLOCAL
*z + 32 = derefaddrtmp(151)
derefaddrtmp(152) = &NULL
*z + 48 = derefaddrtmp(152)
i_472 = &NONLOCAL
derefaddrtmp(154) = &NULL
*z + UNKNOWN = derefaddrtmp(154)
i_476 = &NONLOCAL
derefaddrtmp(156) = &NULL
*z + UNKNOWN = derefaddrtmp(156)
i_480 = &NONLOCAL
derefaddrtmp(158) = &NULL
*z = derefaddrtmp(158)
derefaddrtmp(159) = &NULL
*z + 8 = derefaddrtmp(159)
derefaddrtmp(160) = &NONLOCAL
*z + 16 = derefaddrtmp(160)
derefaddrtmp(161) = &NULL
*z + 32 = derefaddrtmp(161)
i_484 = &NONLOCAL
derefaddrtmp(163) = &NULL
*z + UNKNOWN = derefaddrtmp(163)
i_488 = &NONLOCAL
derefaddrtmp(165) = &NULL
*z + UNKNOWN = derefaddrtmp(165)
i_492 = &NONLOCAL
derefaddrtmp(167) = &NULL
*z + UNKNOWN = derefaddrtmp(167)
i_496 = &NONLOCAL
_17 = y + UNKNOWN
_120 = i_119
_121 = _120
_121 = &NONLOCAL
_122 = _17 + UNKNOWN
_123 = *_122
_124 = _123
n_126 = _124
n_126 = n_125
i_127 = i_119
i_127 = &NONLOCAL
i_119 = &NULL
i_119 = i_127
n_125 = &NULL
n_125 = n_126
n_128 = n_125
derefaddrtmp(180) = &NONLOCAL
*z = derefaddrtmp(180)
derefaddrtmp(181) = &NULL
*z + 8 = derefaddrtmp(181)
derefaddrtmp(182) = &NONLOCAL
*z + 16 = derefaddrtmp(182)
derefaddrtmp(183) = &NULL
*z + 32 = derefaddrtmp(183)
i_500 = &NONLOCAL
derefaddrtmp(185) = &NULL
*z + UNKNOWN = derefaddrtmp(185)
i_504 = &NONLOCAL
derefaddrtmp(187) = &NULL
*z + UNKNOWN = derefaddrtmp(187)
i_508 = &NONLOCAL
derefaddrtmp(189) = &NULL
*z + UNKNOWN = derefaddrtmp(189)
i_512 = &NONLOCAL
*z = _1
_20 = *x + 8
_21 = *y + 8
_22 = _20
_22 = _21
*z + 8 = _22
_23 = *x + 16
_24 = _23
_25 = *y + 16
_26 = _25
_27 = _24
_27 = _26
_28 = _27
_28 = &NONLOCAL
_29 = _28
*z + 16 = _29
derefaddrtmp(201) = &NULL
*z + 32 = derefaddrtmp(201)
extra_bits = &NULL
i_753 = &NONLOCAL
derefaddrtmp(204) = &NULL
*z + UNKNOWN = derefaddrtmp(204)
extra_bits = &NULL
i_758 = &NONLOCAL
derefaddrtmp(206) = &NULL
*z + UNKNOWN = derefaddrtmp(206)
extra_bits = &NULL
i_763 = &NONLOCAL
derefaddrtmp(208) = &NULL
*z + UNKNOWN = derefaddrtmp(208)
extra_bits = &NULL
i_768 = &NONLOCAL
accum_654 = accum_653
accum_654 = &NONLOCAL
accum_655 = accum_653
accum_655 = accum_654
extra_bits = accum_655
_663 = &extra_bits
accum_664 = extra_bits
_665 = accum_664 + UNKNOWN
accum_666 = accum_664
accum_666 = &NONLOCAL
_364 = accum_651
accum_667 = accum_666
accum_667 = &NONLOCAL
accum_668 = accum_666
accum_668 = accum_667
extra_bits = accum_668
_676 = &extra_bits
accum_677 = extra_bits
_678 = accum_677 + UNKNOWN
accum_679 = accum_677
accum_679 = &NONLOCAL
_363 = accum_664
accum_680 = accum_679
accum_680 = &NONLOCAL
accum_681 = accum_679
accum_681 = accum_680
extra_bits = accum_681
_689 = &extra_bits
accum_690 = extra_bits
_691 = accum_690 + UNKNOWN
accum_692 = accum_690
accum_692 = &NONLOCAL
_359 = accum_677
accum_693 = accum_692
accum_693 = &NONLOCAL
accum_694 = accum_692
accum_694 = accum_693
extra_bits = accum_694
_297 = accum_690
_630 = *y + 32
_631 = extra_bits
_634 = *y + 48
_635 = extra_bits
_638 = *y + 64
_639 = extra_bits
_642 = *y + 80
_643 = extra_bits
j_188 = &NONLOCAL
j_188 = &NONLOCAL
j_188 = &NONLOCAL
j_188 = &NONLOCAL
j_188 = &NONLOCAL
carry_244 = &NULL
carry_244 = &NULL
carry_244 = &NULL
carry_244 = &NULL
carry_244 = &NULL
_568 = *y + UNKNOWN
_569 = extra_bits
accum_570 = _569
_571 = _568
accum_572 = accum_570
accum_572 = _571
_573 = &NULL
accum_574 = accum_572
_575 = accum_572
_575 = &NONLOCAL
_576 = _575
_577 = _576 + UNKNOWN
_578 = _569
_578 = _568
extra_bits = _578
j_580 = &NONLOCAL
_584 = *y + UNKNOWN
_585 = extra_bits
accum_586 = _585
_587 = _584
accum_588 = accum_586
accum_588 = _587
_589 = _577
accum_590 = accum_588
accum_590 = _589
_591 = accum_590
_591 = &NONLOCAL
_592 = _591
_593 = _592 + UNKNOWN
_594 = accum_590
extra_bits = _594
j_596 = &NONLOCAL
_600 = *y + UNKNOWN
_601 = extra_bits
accum_602 = _601
_603 = _600
accum_604 = accum_602
accum_604 = _603
_605 = _593
accum_606 = accum_604
accum_606 = _605
_607 = accum_606
_607 = &NONLOCAL
_608 = _607
_609 = _608 + UNKNOWN
_610 = accum_606
extra_bits = _610
j_612 = &NULL
_616 = *y + UNKNOWN
_617 = extra_bits
accum_618 = _617
_619 = _616
accum_620 = accum_618
accum_620 = _619
_621 = _609
accum_622 = accum_620
accum_622 = _621
_623 = accum_622
_623 = &NONLOCAL
_624 = _623
_625 = _624 + UNKNOWN
_626 = accum_622
extra_bits = _626
j_628 = &NONLOCAL
carry_234 = &NULL
carry_234 = &NONLOCAL
carry_234 = &NULL
carry_234 = &NULL
carry_234 = &NULL
_34 = z + UNKNOWN
_518 = z + 80
accum_519 = *z + 80
_520 = accum_519 + UNKNOWN
accum_521 = accum_519
accum_521 = &NONLOCAL
accum_522 = accum_521
accum_522 = &NONLOCAL
accum_523 = accum_521
accum_523 = accum_522
*z + 80 = accum_523
_531 = z + 64
accum_532 = *z + 64
_533 = accum_532 + UNKNOWN
accum_534 = accum_532
accum_534 = &NONLOCAL
_274 = accum_519
accum_535 = accum_534
accum_535 = &NONLOCAL
accum_536 = accum_534
accum_536 = accum_535
*z + 64 = accum_536
_544 = z + 48
accum_545 = *z + 48
_546 = accum_545 + UNKNOWN
accum_547 = accum_545
accum_547 = &NONLOCAL
_343 = accum_532
accum_548 = accum_547
accum_548 = &NONLOCAL
accum_549 = accum_547
accum_549 = accum_548
*z + 48 = accum_549
_557 = _34
accum_558 = *z + 32
_559 = accum_558 + UNKNOWN
accum_560 = accum_558
accum_560 = &NONLOCAL
_342 = accum_545
accum_561 = accum_560
accum_561 = &NONLOCAL
accum_562 = accum_560
accum_562 = accum_561
*z + 32 = accum_562
_35 = *z + 16
_36 = _35
_37 = _36
_37 = &NONLOCAL
_38 = _37
*z + 16 = _38
_39 = *z + 32
_40 = _39
_702 = &locx
accum_703 = locx
_704 = accum_703 + UNKNOWN
accum_705 = accum_703
accum_705 = &NONLOCAL
locx = accum_705
_715 = &locx
accum_716 = locx
_717 = accum_716 + UNKNOWN
accum_718 = accum_716
accum_718 = &NONLOCAL
_711 = accum_703
accum_719 = accum_718
accum_719 = &NONLOCAL
accum_720 = accum_718
accum_720 = accum_719
locx = accum_720
_728 = &locx
accum_729 = locx
_730 = accum_729 + UNKNOWN
accum_731 = accum_729
accum_731 = &NONLOCAL
_707 = accum_716
accum_732 = accum_731
accum_732 = &NONLOCAL
accum_733 = accum_731
accum_733 = accum_732
locx = accum_733
_741 = &locx
accum_742 = locx
_743 = accum_742 + UNKNOWN
accum_744 = accum_742
accum_744 = &NONLOCAL
_18 = accum_729
accum_745 = accum_744
accum_745 = &NONLOCAL
accum_746 = accum_744
accum_746 = accum_745
locx = accum_746
_650 = &extra_bits
accum_651 = extra_bits
_652 = accum_651 + UNKNOWN
accum_653 = accum_651
accum_653 = &NONLOCAL
_290 = accum_742
_238 = *x + UNKNOWN
_239 = *y + UNKNOWN
CALLUSED(359) = CALLUSED(359) + UNKNOWN
CALLUSED(359) = *CALLUSED(359) + UNKNOWN
CALLUSED(359) = x
CALLUSED(359) = &NULL
_240 = CALLUSED(359)
_240 = NONLOCAL
doubledereftmp(362) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(362)
CALLUSED(363) = CALLUSED(363) + UNKNOWN
CALLUSED(363) = *CALLUSED(363) + UNKNOWN
CALLUSED(363) = y
CALLUSED(363) = &NULL
_245 = CALLUSED(363)
_245 = NONLOCAL
doubledereftmp(366) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(366)
i_241 = i_237
i_241 = &NONLOCAL
i_237 = &NULL
i_237 = i_241
CALLUSED(369) = CALLUSED(369) + UNKNOWN
CALLUSED(369) = *CALLUSED(369) + UNKNOWN
CALLUSED(369) = x
CALLUSED(369) = &NULL
_242 = CALLUSED(369)
_242 = NONLOCAL
doubledereftmp(372) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(372)
_170 = *z
_171 = _170
_171 = &NONLOCAL
_249 = z + UNKNOWN
_251 = i_250
_252 = _251
_252 = &NONLOCAL
_253 = _249 + UNKNOWN
_254 = *_253
_255 = _254
n_257 = _255
n_257 = n_256
i_258 = i_250
i_258 = &NONLOCAL
i_250 = &NULL
i_250 = i_258
n_256 = &NULL
n_256 = n_257
n_259 = n_256
ESCAPED = &STRING
_260 = *z + 16
_261 = _260
_262 = _261
_262 = &NONLOCAL
exponent_difference_263 = _262
exponent_difference_264 = exponent_difference_263
derefaddrtmp(392) = &NULL
*z = derefaddrtmp(392)
derefaddrtmp(393) = &NONLOCAL
*z + 16 = derefaddrtmp(393)
derefaddrtmp(394) = &NULL
*z + 32 = derefaddrtmp(394)
i_315 = &NONLOCAL
derefaddrtmp(396) = &NULL
*z + UNKNOWN = derefaddrtmp(396)
i_319 = &NONLOCAL
derefaddrtmp(398) = &NULL
*z + UNKNOWN = derefaddrtmp(398)
i_323 = &NONLOCAL
derefaddrtmp(400) = &NULL
*z + UNKNOWN = derefaddrtmp(400)
i_327 = &NONLOCAL
_267 = _260
_268 = exponent_difference_264
_269 = _267
_269 = _268
_270 = _269
*z + 16 = _270
_271 = exponent_difference_264
mantissa_272 = z + UNKNOWN
_273 = *z
i_328 = &NULL
_330 = &NULL
_331 = &NULL
_332 = mantissa_272
derefaddrtmp(413) = &NULL
*_332 = derefaddrtmp(413)
i_334 = &NONLOCAL
_337 = &NONLOCAL
_338 = &NONLOCAL
_339 = mantissa_272 + 16
derefaddrtmp(418) = &NULL
*_339 = derefaddrtmp(418)
i_341 = &NONLOCAL
_344 = &NONLOCAL
_345 = &NONLOCAL
_346 = mantissa_272 + 32
derefaddrtmp(423) = &NULL
*_346 = derefaddrtmp(423)
i_348 = &NONLOCAL
derefaddrtmp(425) = &NONLOCAL
*z + 80 = derefaddrtmp(425)
_291 = *z + 80
_292 = _291
_292 = &NONLOCAL
*z + 80 = _292
i_294 = i_293
i_294 = &NONLOCAL
i_293 = &NULL
i_293 = i_294
_354 = mantissa_272
accum_355 = *z + 32
_356 = accum_355 + UNKNOWN
accum_357 = accum_355
accum_357 = &NONLOCAL
*z + 32 = accum_357
_367 = z + 48
accum_368 = *z + 48
_369 = accum_368 + UNKNOWN
accum_370 = accum_368
accum_370 = &NONLOCAL
accum_371 = accum_370
accum_371 = &NONLOCAL
accum_372 = accum_370
accum_372 = accum_371
*z + 48 = accum_372
_380 = z + 64
accum_381 = *z + 64
_382 = accum_381 + UNKNOWN
accum_383 = accum_381
accum_383 = &NONLOCAL
accum_384 = accum_383
accum_384 = &NONLOCAL
accum_385 = accum_383
accum_385 = accum_384
*z + 64 = accum_385
_393 = z + 80
accum_394 = *z + 80
_395 = accum_394 + UNKNOWN
accum_396 = accum_394
accum_396 = &NONLOCAL
accum_397 = accum_396
accum_397 = &NONLOCAL
accum_398 = accum_396
accum_398 = accum_397
*z + 80 = accum_398
_246 = *z
_247 = *z + 80
_248 = _247 + UNKNOWN
*z + 80 = _248

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"x"[label="x = { 5 }"];
"y"[label="y = { 5 }"];
"z"[label="z = { 5 }"];
"_1";
"_2";
"_3"[label="_3 = { 5 }"];
"_4";
"_5";
"_6";
"derefaddrtmp(17)"[label="derefaddrtmp(17) = { 5 }"];
"derefaddrtmp(18)"[label="derefaddrtmp(18) = { 5 }"];
"derefaddrtmp(19)"[label="derefaddrtmp(19) = { 5 }"];
"derefaddrtmp(20)"[label="derefaddrtmp(20) = { 5 }"];
"derefaddrtmp(21)"[label="derefaddrtmp(21) = { 1 }"];
"i_404"[label="i_404 = { 5 }"];
"derefaddrtmp(23)"[label="derefaddrtmp(23) = { 1 }"];
"i_408"[label="i_408 = { 5 }"];
"derefaddrtmp(25)"[label="derefaddrtmp(25) = { 1 }"];
"i_412"[label="i_412 = { 5 }"];
"_7";
"_71";
"i_70"[label="i_70 = { 1 5 }"];
"_72"[label="_72 = { 5 }"];
"_73";
"_74";
"_75";
"n_77"[label="n_77 = { 1 }"];
"n_186";
"derefaddrtmp(38)"[label="derefaddrtmp(38) = { 5 }"];
"derefaddrtmp(39)"[label="derefaddrtmp(39) = { 5 }"];
"derefaddrtmp(40)"[label="derefaddrtmp(40) = { 5 }"];
"derefaddrtmp(41)"[label="derefaddrtmp(41) = { 5 }"];
"derefaddrtmp(42)"[label="derefaddrtmp(42) = { 1 }"];
"i_416"[label="i_416 = { 5 }"];
"derefaddrtmp(44)"[label="derefaddrtmp(44) = { 1 }"];
"i_420"[label="i_420 = { 5 }"];
"derefaddrtmp(46)"[label="derefaddrtmp(46) = { 1 }"];
"i_424"[label="i_424 = { 5 }"];
"_8";
"_9";
"_10";
"derefaddrtmp(51)"[label="derefaddrtmp(51) = { 1 }"];
"derefaddrtmp(52)"[label="derefaddrtmp(52) = { 5 }"];
"derefaddrtmp(53)"[label="derefaddrtmp(53) = { 1 }"];
"i_428"[label="i_428 = { 5 }"];
"derefaddrtmp(55)"[label="derefaddrtmp(55) = { 1 }"];
"i_432"[label="i_432 = { 5 }"];
"derefaddrtmp(57)"[label="derefaddrtmp(57) = { 1 }"];
"i_436"[label="i_436 = { 5 }"];
"derefaddrtmp(59)"[label="derefaddrtmp(59) = { 1 }"];
"i_440"[label="i_440 = { 5 }"];
"_11";
"_84";
"i_83"[label="i_83 = { 1 5 }"];
"_85"[label="_85 = { 5 }"];
"_86";
"_87";
"_88";
"n_90"[label="n_90 = { 1 }"];
"n_105";
"derefaddrtmp(72)"[label="derefaddrtmp(72) = { 5 }"];
"derefaddrtmp(73)"[label="derefaddrtmp(73) = { 5 }"];
"derefaddrtmp(74)"[label="derefaddrtmp(74) = { 5 }"];
"derefaddrtmp(75)"[label="derefaddrtmp(75) = { 5 }"];
"derefaddrtmp(76)"[label="derefaddrtmp(76) = { 1 }"];
"i_444"[label="i_444 = { 5 }"];
"derefaddrtmp(78)"[label="derefaddrtmp(78) = { 1 }"];
"i_448"[label="i_448 = { 5 }"];
"derefaddrtmp(80)"[label="derefaddrtmp(80) = { 1 }"];
"i_452"[label="i_452 = { 5 }"];
"derefaddrtmp(82)"[label="derefaddrtmp(82) = { 5 }"];
"derefaddrtmp(83)"[label="derefaddrtmp(83) = { 1 }"];
"derefaddrtmp(84)"[label="derefaddrtmp(84) = { 5 }"];
"derefaddrtmp(85)"[label="derefaddrtmp(85) = { 1 }"];
"i_456"[label="i_456 = { 5 }"];
"derefaddrtmp(87)"[label="derefaddrtmp(87) = { 1 }"];
"i_460"[label="i_460 = { 5 }"];
"derefaddrtmp(89)"[label="derefaddrtmp(89) = { 1 }"];
"i_464"[label="i_464 = { 5 }"];
"derefaddrtmp(91)"[label="derefaddrtmp(91) = { 1 }"];
"i_468"[label="i_468 = { 5 }"];
"_12";
"_13";
"_14";
"__builtin_object_size";
"CALLUSED(97)"[label="CALLUSED(97) = { 1 }"];
"CALLCLOBBERED(98)";
"_55";
"doubledereftmp(100)";
"CALLUSED(101)"[label="CALLUSED(101) = { 1 }"];
"CALLCLOBBERED(102)";
"_54";
"doubledereftmp(104)";
"locx"[label="locx = { 5 }"];
"_771"[label="_771 = { 1 }"];
"_772"[label="_772 = { 1 }"];
"_773"[label="_773 = { 105 }"];
"_774";
"_775";
"n_776";
"i_777"[label="i_777 = { 5 }"];
"_780"[label="_780 = { 5 }"];
"_781"[label="_781 = { 5 }"];
"_782"[label="_782 = { 105 }"];
"_783";
"_784";
"_647";
"n_785";
"i_786"[label="i_786 = { 5 }"];
"_789"[label="_789 = { 5 }"];
"_790"[label="_790 = { 5 }"];
"_791"[label="_791 = { 105 }"];
"_792";
"_793";
"_646";
"n_794";
"i_795"[label="i_795 = { 5 }"];
"_798"[label="_798 = { 5 }"];
"_799"[label="_799 = { 5 }"];
"_800"[label="_800 = { 105 }"];
"_801";
"_802";
"_712";
"n_803";
"i_804"[label="i_804 = { 5 }"];
"_16";
"_107";
"i_106"[label="i_106 = { 1 5 }"];
"_108"[label="_108 = { 5 }"];
"_109";
"_110";
"_111";
"n_113"[label="n_113 = { 1 }"];
"n_15";
"derefaddrtmp(148)"[label="derefaddrtmp(148) = { 5 }"];
"derefaddrtmp(149)"[label="derefaddrtmp(149) = { 5 }"];
"derefaddrtmp(150)"[label="derefaddrtmp(150) = { 5 }"];
"derefaddrtmp(151)"[label="derefaddrtmp(151) = { 5 }"];
"derefaddrtmp(152)"[label="derefaddrtmp(152) = { 1 }"];
"i_472"[label="i_472 = { 5 }"];
"derefaddrtmp(154)"[label="derefaddrtmp(154) = { 1 }"];
"i_476"[label="i_476 = { 5 }"];
"derefaddrtmp(156)"[label="derefaddrtmp(156) = { 1 }"];
"i_480"[label="i_480 = { 5 }"];
"derefaddrtmp(158)"[label="derefaddrtmp(158) = { 1 }"];
"derefaddrtmp(159)"[label="derefaddrtmp(159) = { 1 }"];
"derefaddrtmp(160)"[label="derefaddrtmp(160) = { 5 }"];
"derefaddrtmp(161)"[label="derefaddrtmp(161) = { 1 }"];
"i_484"[label="i_484 = { 5 }"];
"derefaddrtmp(163)"[label="derefaddrtmp(163) = { 1 }"];
"i_488"[label="i_488 = { 5 }"];
"derefaddrtmp(165)"[label="derefaddrtmp(165) = { 1 }"];
"i_492"[label="i_492 = { 5 }"];
"derefaddrtmp(167)"[label="derefaddrtmp(167) = { 1 }"];
"i_496"[label="i_496 = { 5 }"];
"_17";
"_120";
"i_119"[label="i_119 = { 1 5 }"];
"_121"[label="_121 = { 5 }"];
"_122";
"_123";
"_124";
"n_126"[label="n_126 = { 1 }"];
"n_128";
"derefaddrtmp(180)"[label="derefaddrtmp(180) = { 5 }"];
"derefaddrtmp(181)"[label="derefaddrtmp(181) = { 1 }"];
"derefaddrtmp(182)"[label="derefaddrtmp(182) = { 5 }"];
"derefaddrtmp(183)"[label="derefaddrtmp(183) = { 1 }"];
"i_500"[label="i_500 = { 5 }"];
"derefaddrtmp(185)"[label="derefaddrtmp(185) = { 1 }"];
"i_504"[label="i_504 = { 5 }"];
"derefaddrtmp(187)"[label="derefaddrtmp(187) = { 1 }"];
"i_508"[label="i_508 = { 5 }"];
"derefaddrtmp(189)"[label="derefaddrtmp(189) = { 1 }"];
"i_512"[label="i_512 = { 5 }"];
"_20";
"_21";
"_22";
"_23";
"_24";
"_25";
"_26";
"_27";
"_28"[label="_28 = { 5 }"];
"_29";
"derefaddrtmp(201)"[label="derefaddrtmp(201) = { 1 }"];
"extra_bits"[label="extra_bits = { 1 5 }"];
"i_753"[label="i_753 = { 5 }"];
"derefaddrtmp(204)"[label="derefaddrtmp(204) = { 1 }"];
"i_758"[label="i_758 = { 5 }"];
"derefaddrtmp(206)"[label="derefaddrtmp(206) = { 1 }"];
"i_763"[label="i_763 = { 5 }"];
"derefaddrtmp(208)"[label="derefaddrtmp(208) = { 1 }"];
"i_768"[label="i_768 = { 5 }"];
"_663"[label="_663 = { 202 }"];
"_665";
"_364";
"_676"[label="_676 = { 202 }"];
"_678";
"_363";
"_689"[label="_689 = { 202 }"];
"_691";
"_359";
"_297";
"_630";
"_631";
"_634";
"_635";
"_638";
"_639";
"_642";
"_643";
"j_188"[label="j_188 = { 5 }"];
"carry_244"[label="carry_244 = { 1 }"];
"_568";
"accum_570";
"_571";
"accum_572";
"_573"[label="_573 = { 1 }"];
"accum_574";
"_575"[label="_575 = { 5 }"];
"_576";
"_577";
"j_580"[label="j_580 = { 5 }"];
"_584";
"_587";
"_589";
"_591"[label="_591 = { 5 }"];
"_592";
"_593";
"j_596"[label="j_596 = { 5 }"];
"_600";
"_603";
"_605";
"_607"[label="_607 = { 5 }"];
"_608";
"_609";
"j_612"[label="j_612 = { 1 }"];
"_616";
"_619";
"_621";
"_623"[label="_623 = { 5 }"];
"_624";
"_625";
"j_628"[label="j_628 = { 5 }"];
"carry_234"[label="carry_234 = { 1 5 }"];
"_34";
"_518";
"accum_519";
"_520";
"accum_521"[label="accum_521 = { 5 }"];
"accum_522"[label="accum_522 = { 5 }"];
"accum_523";
"_531";
"accum_532";
"_533";
"accum_534"[label="accum_534 = { 5 }"];
"_274";
"accum_535"[label="accum_535 = { 5 }"];
"accum_536";
"_544";
"accum_545";
"_546";
"accum_547"[label="accum_547 = { 5 }"];
"_343";
"accum_548"[label="accum_548 = { 5 }"];
"accum_549";
"_557";
"accum_558";
"_559";
"accum_560"[label="accum_560 = { 5 }"];
"_342";
"accum_561"[label="accum_561 = { 5 }"];
"accum_562";
"_35";
"_36";
"_37"[label="_37 = { 5 }"];
"_38";
"_39";
"_40";
"_702"[label="_702 = { 105 }"];
"_704";
"_715"[label="_715 = { 105 }"];
"_717";
"_711";
"_728"[label="_728 = { 105 }"];
"_730";
"_707";
"_741"[label="_741 = { 105 }"];
"_743";
"_18";
"_650"[label="_650 = { 202 }"];
"_652";
"_290";
"_238";
"_239";
"CALLUSED(359)"[label="CALLUSED(359) = { 1 }"];
"CALLCLOBBERED(360)";
"_240";
"doubledereftmp(362)";
"CALLUSED(363)"[label="CALLUSED(363) = { 1 }"];
"CALLCLOBBERED(364)";
"_245";
"doubledereftmp(366)";
"i_241"[label="i_241 = { 1 5 }"];
"CALLUSED(369)"[label="CALLUSED(369) = { 1 }"];
"CALLCLOBBERED(370)";
"_242";
"doubledereftmp(372)";
"_170";
"_171"[label="_171 = { 5 }"];
"_249";
"_251";
"i_250"[label="i_250 = { 1 5 }"];
"_252"[label="_252 = { 5 }"];
"_253";
"_254";
"_255";
"n_257"[label="n_257 = { 1 }"];
"n_259";
"puts";
"_260";
"_261";
"_262"[label="_262 = { 5 }"];
"exponent_difference_263";
"exponent_difference_264";
"derefaddrtmp(392)"[label="derefaddrtmp(392) = { 1 }"];
"derefaddrtmp(393)"[label="derefaddrtmp(393) = { 5 }"];
"derefaddrtmp(394)"[label="derefaddrtmp(394) = { 1 }"];
"i_315"[label="i_315 = { 5 }"];
"derefaddrtmp(396)"[label="derefaddrtmp(396) = { 1 }"];
"i_319"[label="i_319 = { 5 }"];
"derefaddrtmp(398)"[label="derefaddrtmp(398) = { 1 }"];
"i_323"[label="i_323 = { 5 }"];
"derefaddrtmp(400)"[label="derefaddrtmp(400) = { 1 }"];
"i_327"[label="i_327 = { 5 }"];
"_267";
"_268";
"_269";
"_270";
"_271";
"mantissa_272";
"_273";
"i_328"[label="i_328 = { 1 }"];
"_330"[label="_330 = { 1 }"];
"_331"[label="_331 = { 1 }"];
"_332";
"derefaddrtmp(413)"[label="derefaddrtmp(413) = { 1 }"];
"i_334"[label="i_334 = { 5 }"];
"_337"[label="_337 = { 5 }"];
"_338"[label="_338 = { 5 }"];
"_339";
"derefaddrtmp(418)"[label="derefaddrtmp(418) = { 1 }"];
"i_341"[label="i_341 = { 5 }"];
"_344"[label="_344 = { 5 }"];
"_345"[label="_345 = { 5 }"];
"_346";
"derefaddrtmp(423)"[label="derefaddrtmp(423) = { 1 }"];
"i_348"[label="i_348 = { 5 }"];
"derefaddrtmp(425)"[label="derefaddrtmp(425) = { 5 }"];
"_291";
"_292"[label="_292 = { 5 }"];
"i_294"[label="i_294 = { 1 5 }"];
"_354";
"accum_355";
"_356";
"accum_357"[label="accum_357 = { 5 }"];
"_367";
"accum_368";
"_369";
"accum_370"[label="accum_370 = { 5 }"];
"accum_371"[label="accum_371 = { 5 }"];
"accum_372";
"_380";
"accum_381";
"_382";
"accum_383"[label="accum_383 = { 5 }"];
"accum_384"[label="accum_384 = { 5 }"];
"accum_385";
"_393";
"accum_394";
"_395";
"accum_396"[label="accum_396 = { 5 }"];
"accum_397"[label="accum_397 = { 5 }"];
"accum_398";
"_246";
"_247";
"_248";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*x";
"*y";
"*z";
"*_1";
"*_2";
"*_3";
"*_4";
"*_5";
"*_6";
"*derefaddrtmp(17)";
"*derefaddrtmp(18)";
"*derefaddrtmp(19)";
"*derefaddrtmp(20)";
"*derefaddrtmp(21)";
"*i_404";
"*derefaddrtmp(23)";
"*i_408";
"*derefaddrtmp(25)";
"*i_412";
"*_7";
"*_71";
"*i_70";
"*_72";
"*_73";
"*_74";
"*_75";
"*n_77";
"*n_76";
"*i_78";
"*n_186";
"*derefaddrtmp(38)";
"*derefaddrtmp(39)";
"*derefaddrtmp(40)";
"*derefaddrtmp(41)";
"*derefaddrtmp(42)";
"*i_416";
"*derefaddrtmp(44)";
"*i_420";
"*derefaddrtmp(46)";
"*i_424";
"*_8";
"*_9";
"*_10";
"*derefaddrtmp(51)";
"*derefaddrtmp(52)";
"*derefaddrtmp(53)";
"*i_428";
"*derefaddrtmp(55)";
"*i_432";
"*derefaddrtmp(57)";
"*i_436";
"*derefaddrtmp(59)";
"*i_440";
"*_11";
"*_84";
"*i_83";
"*_85";
"*_86";
"*_87";
"*_88";
"*n_90";
"*n_89";
"*i_91";
"*n_105";
"*derefaddrtmp(72)";
"*derefaddrtmp(73)";
"*derefaddrtmp(74)";
"*derefaddrtmp(75)";
"*derefaddrtmp(76)";
"*i_444";
"*derefaddrtmp(78)";
"*i_448";
"*derefaddrtmp(80)";
"*i_452";
"*derefaddrtmp(82)";
"*derefaddrtmp(83)";
"*derefaddrtmp(84)";
"*derefaddrtmp(85)";
"*i_456";
"*derefaddrtmp(87)";
"*i_460";
"*derefaddrtmp(89)";
"*i_464";
"*derefaddrtmp(91)";
"*i_468";
"*_12";
"*_13";
"*_14";
"*__builtin_object_size";
"*CALLUSED(97)";
"*CALLCLOBBERED(98)";
"*_55";
"*doubledereftmp(100)";
"*CALLUSED(101)";
"*CALLCLOBBERED(102)";
"*_54";
"*doubledereftmp(104)";
"*locx";
"*_771";
"*_772";
"*_773";
"*_774";
"*_775";
"*n_776";
"*i_777";
"*_780";
"*_781";
"*_782";
"*_783";
"*_784";
"*_647";
"*n_785";
"*i_786";
"*_789";
"*_790";
"*_791";
"*_792";
"*_793";
"*_646";
"*n_794";
"*i_795";
"*_798";
"*_799";
"*_800";
"*_801";
"*_802";
"*_712";
"*n_803";
"*i_804";
"*_16";
"*_107";
"*i_106";
"*_108";
"*_109";
"*_110";
"*_111";
"*n_113";
"*n_112";
"*i_114";
"*n_15";
"*derefaddrtmp(148)";
"*derefaddrtmp(149)";
"*derefaddrtmp(150)";
"*derefaddrtmp(151)";
"*derefaddrtmp(152)";
"*i_472";
"*derefaddrtmp(154)";
"*i_476";
"*derefaddrtmp(156)";
"*i_480";
"*derefaddrtmp(158)";
"*derefaddrtmp(159)";
"*derefaddrtmp(160)";
"*derefaddrtmp(161)";
"*i_484";
"*derefaddrtmp(163)";
"*i_488";
"*derefaddrtmp(165)";
"*i_492";
"*derefaddrtmp(167)";
"*i_496";
"*_17";
"*_120";
"*i_119";
"*_121";
"*_122";
"*_123";
"*_124";
"*n_126";
"*n_125";
"*i_127";
"*n_128";
"*derefaddrtmp(180)";
"*derefaddrtmp(181)";
"*derefaddrtmp(182)";
"*derefaddrtmp(183)";
"*i_500";
"*derefaddrtmp(185)";
"*i_504";
"*derefaddrtmp(187)";
"*i_508";
"*derefaddrtmp(189)";
"*i_512";
"*_20";
"*_21";
"*_22";
"*_23";
"*_24";
"*_25";
"*_26";
"*_27";
"*_28";
"*_29";
"*derefaddrtmp(201)";
"*extra_bits";
"*i_753";
"*derefaddrtmp(204)";
"*i_758";
"*derefaddrtmp(206)";
"*i_763";
"*derefaddrtmp(208)";
"*i_768";
"*accum_654";
"*accum_653";
"*accum_655";
"*_663";
"*accum_664";
"*_665";
"*accum_666";
"*_364";
"*accum_651";
"*accum_667";
"*accum_668";
"*_676";
"*accum_677";
"*_678";
"*accum_679";
"*_363";
"*accum_680";
"*accum_681";
"*_689";
"*accum_690";
"*_691";
"*accum_692";
"*_359";
"*accum_693";
"*accum_694";
"*_297";
"*_630";
"*_631";
"*_634";
"*_635";
"*_638";
"*_639";
"*_642";
"*_643";
"*j_188";
"*carry_244";
"*_568";
"*_569";
"*accum_570";
"*_571";
"*accum_572";
"*_573";
"*accum_574";
"*_575";
"*_576";
"*_577";
"*_578";
"*j_580";
"*_584";
"*_585";
"*accum_586";
"*_587";
"*accum_588";
"*_589";
"*accum_590";
"*_591";
"*_592";
"*_593";
"*_594";
"*j_596";
"*_600";
"*_601";
"*accum_602";
"*_603";
"*accum_604";
"*_605";
"*accum_606";
"*_607";
"*_608";
"*_609";
"*_610";
"*j_612";
"*_616";
"*_617";
"*accum_618";
"*_619";
"*accum_620";
"*_621";
"*accum_622";
"*_623";
"*_624";
"*_625";
"*_626";
"*j_628";
"*carry_234";
"*_34";
"*_518";
"*accum_519";
"*_520";
"*accum_521";
"*accum_522";
"*accum_523";
"*_531";
"*accum_532";
"*_533";
"*accum_534";
"*_274";
"*accum_535";
"*accum_536";
"*_544";
"*accum_545";
"*_546";
"*accum_547";
"*_343";
"*accum_548";
"*accum_549";
"*_557";
"*accum_558";
"*_559";
"*accum_560";
"*_342";
"*accum_561";
"*accum_562";
"*_35";
"*_36";
"*_37";
"*_38";
"*_39";
"*_40";
"*_702";
"*accum_703";
"*_704";
"*accum_705";
"*_715";
"*accum_716";
"*_717";
"*accum_718";
"*_711";
"*accum_719";
"*accum_720";
"*_728";
"*accum_729";
"*_730";
"*accum_731";
"*_707";
"*accum_732";
"*accum_733";
"*_741";
"*accum_742";
"*_743";
"*accum_744";
"*_18";
"*accum_745";
"*accum_746";
"*_650";
"*_652";
"*_290";
"*_238";
"*_239";
"*CALLUSED(359)";
"*CALLCLOBBERED(360)";
"*_240";
"*doubledereftmp(362)";
"*CALLUSED(363)";
"*CALLCLOBBERED(364)";
"*_245";
"*doubledereftmp(366)";
"*i_241";
"*i_237";
"*CALLUSED(369)";
"*CALLCLOBBERED(370)";
"*_242";
"*doubledereftmp(372)";
"*_170";
"*_171";
"*_249";
"*_251";
"*i_250";
"*_252";
"*_253";
"*_254";
"*_255";
"*n_257";
"*n_256";
"*i_258";
"*n_259";
"*puts";
"*_260";
"*_261";
"*_262";
"*exponent_difference_263";
"*exponent_difference_264";
"*derefaddrtmp(392)";
"*derefaddrtmp(393)";
"*derefaddrtmp(394)";
"*i_315";
"*derefaddrtmp(396)";
"*i_319";
"*derefaddrtmp(398)";
"*i_323";
"*derefaddrtmp(400)";
"*i_327";
"*_267";
"*_268";
"*_269";
"*_270";
"*_271";
"*mantissa_272";
"*_273";
"*i_328";
"*_330";
"*_331";
"*_332";
"*derefaddrtmp(413)";
"*i_334";
"*_337";
"*_338";
"*_339";
"*derefaddrtmp(418)";
"*i_341";
"*_344";
"*_345";
"*_346";
"*derefaddrtmp(423)";
"*i_348";
"*derefaddrtmp(425)";
"*_291";
"*_292";
"*i_294";
"*i_293";
"*_354";
"*accum_355";
"*_356";
"*accum_357";
"*_367";
"*accum_368";
"*_369";
"*accum_370";
"*accum_371";
"*accum_372";
"*_380";
"*accum_381";
"*_382";
"*accum_383";
"*accum_384";
"*accum_385";
"*_393";
"*accum_394";
"*_395";
"*accum_396";
"*accum_397";
"*accum_398";
"*_246";
"*_247";
"*_248";

  // Edges in the constraint graph:
"*ESCAPED" -> "ESCAPED";
"*x" -> "_1";
"_1" -> "_2";
"_2" -> "_3";
"*y" -> "_4";
"_4" -> "_5";
"_3" -> "_6";
"_5" -> "_6";
"i_70" -> "_71";
"i_70" -> "i_70";
"i_70" -> "i_70";
"_71" -> "_72";
"*_73" -> "_74";
"_74" -> "_75";
"_75" -> "n_77";
"n_77" -> "n_77";
"n_77" -> "n_77";
"n_77" -> "n_186";
"_8" -> "_10";
"_9" -> "_10";
"i_83" -> "_84";
"i_83" -> "i_83";
"i_83" -> "i_83";
"_84" -> "_85";
"*_86" -> "_87";
"_87" -> "_88";
"_88" -> "n_90";
"n_90" -> "n_90";
"n_90" -> "n_90";
"n_90" -> "n_105";
"_12" -> "_14";
"_13" -> "_14";
"x" -> "CALLUSED(97)";
"NONLOCAL" -> "_55";
"CALLUSED(97)" -> "_55";
"y" -> "CALLUSED(101)";
"NONLOCAL" -> "_54";
"CALLUSED(101)" -> "_54";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"*_773" -> "_774";
"_774" -> "_775";
"_775" -> "n_776";
"*_782" -> "_783";
"_783" -> "_784";
"_774" -> "_647";
"_783" -> "_647";
"_647" -> "n_785";
"*_791" -> "_792";
"_792" -> "_793";
"_647" -> "_646";
"_792" -> "_646";
"_646" -> "n_794";
"*_800" -> "_801";
"_801" -> "_802";
"_646" -> "_712";
"_801" -> "_712";
"_712" -> "n_803";
"i_106" -> "_107";
"i_106" -> "i_106";
"i_106" -> "i_106";
"_107" -> "_108";
"*_109" -> "_110";
"_110" -> "_111";
"_111" -> "n_113";
"n_113" -> "n_113";
"n_113" -> "n_113";
"n_113" -> "n_15";
"i_119" -> "_120";
"i_119" -> "i_119";
"i_119" -> "i_119";
"_120" -> "_121";
"*_122" -> "_123";
"_123" -> "_124";
"_124" -> "n_126";
"n_126" -> "n_126";
"n_126" -> "n_126";
"n_126" -> "n_128";
"_20" -> "_22";
"_21" -> "_22";
"_23" -> "_24";
"_25" -> "_26";
"_24" -> "_27";
"_26" -> "_27";
"_27" -> "_28";
"_28" -> "_29";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"_568" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"_587" -> "extra_bits";
"extra_bits" -> "extra_bits";
"_589" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"_603" -> "extra_bits";
"extra_bits" -> "extra_bits";
"_605" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"_619" -> "extra_bits";
"extra_bits" -> "extra_bits";
"_621" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "_364";
"extra_bits" -> "_363";
"extra_bits" -> "_359";
"extra_bits" -> "_297";
"extra_bits" -> "_631";
"extra_bits" -> "_635";
"extra_bits" -> "_639";
"extra_bits" -> "_643";
"extra_bits" -> "accum_570";
"_568" -> "_571";
"accum_570" -> "accum_572";
"_571" -> "accum_572";
"accum_572" -> "accum_574";
"accum_572" -> "_575";
"_575" -> "_576";
"_584" -> "_587";
"_577" -> "_589";
"extra_bits" -> "_591";
"_591" -> "_592";
"_600" -> "_603";
"_593" -> "_605";
"extra_bits" -> "_607";
"_607" -> "_608";
"_616" -> "_619";
"_609" -> "_621";
"extra_bits" -> "_623";
"_623" -> "_624";
"accum_519" -> "accum_521";
"accum_521" -> "accum_522";
"accum_521" -> "accum_523";
"accum_522" -> "accum_523";
"accum_532" -> "accum_534";
"accum_519" -> "_274";
"accum_534" -> "accum_535";
"accum_534" -> "accum_536";
"accum_535" -> "accum_536";
"accum_545" -> "accum_547";
"accum_532" -> "_343";
"accum_547" -> "accum_548";
"accum_547" -> "accum_549";
"accum_548" -> "accum_549";
"_34" -> "_557";
"accum_558" -> "accum_560";
"accum_545" -> "_342";
"accum_560" -> "accum_561";
"accum_560" -> "accum_562";
"accum_561" -> "accum_562";
"_35" -> "_36";
"_36" -> "_37";
"_37" -> "_38";
"_39" -> "_40";
"locx" -> "_711";
"locx" -> "_707";
"locx" -> "_18";
"locx" -> "_290";
"x" -> "CALLUSED(359)";
"NONLOCAL" -> "_240";
"CALLUSED(359)" -> "_240";
"y" -> "CALLUSED(363)";
"NONLOCAL" -> "_245";
"CALLUSED(363)" -> "_245";
"i_241" -> "i_241";
"i_241" -> "i_241";
"x" -> "CALLUSED(369)";
"NONLOCAL" -> "_242";
"CALLUSED(369)" -> "_242";
"*z" -> "_170";
"_170" -> "_171";
"i_250" -> "_251";
"i_250" -> "i_250";
"i_250" -> "i_250";
"_251" -> "_252";
"*_253" -> "_254";
"_254" -> "_255";
"_255" -> "n_257";
"n_257" -> "n_257";
"n_257" -> "n_257";
"n_257" -> "n_259";
"_260" -> "_261";
"_261" -> "_262";
"_262" -> "exponent_difference_263";
"exponent_difference_263" -> "exponent_difference_264";
"_260" -> "_267";
"exponent_difference_264" -> "_268";
"_267" -> "_269";
"_268" -> "_269";
"_269" -> "_270";
"exponent_difference_264" -> "_271";
"*z" -> "_273";
"mantissa_272" -> "_332";
"_291" -> "_292";
"i_294" -> "i_294";
"i_294" -> "i_294";
"mantissa_272" -> "_354";
"accum_355" -> "accum_357";
"accum_368" -> "accum_370";
"accum_370" -> "accum_371";
"accum_370" -> "accum_372";
"accum_371" -> "accum_372";
"accum_381" -> "accum_383";
"accum_383" -> "accum_384";
"accum_383" -> "accum_385";
"accum_384" -> "accum_385";
"accum_394" -> "accum_396";
"accum_396" -> "accum_397";
"accum_396" -> "accum_398";
"accum_397" -> "accum_398";
"*z" -> "_246";
"NONLOCAL" -> "*ESCAPED";
"_1" -> "*z";
"derefaddrtmp(17)" -> "*z";
"derefaddrtmp(38)" -> "*z";
"derefaddrtmp(51)" -> "*z";
"derefaddrtmp(72)" -> "*z";
"derefaddrtmp(82)" -> "*z";
"derefaddrtmp(148)" -> "*z";
"derefaddrtmp(158)" -> "*z";
"derefaddrtmp(180)" -> "*z";
"derefaddrtmp(392)" -> "*z";
"derefaddrtmp(413)" -> "*_332";
"derefaddrtmp(418)" -> "*_339";
"derefaddrtmp(423)" -> "*_346";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"x" [label="\N\n_1 = *x\l_4 = *x\l_7 = x + UNKNOWN\l_8 = *x + 8\l_9 = *x + 8\l_11 = x + UNKNOWN\l_12 = *x + 8\l_13 = *x + 8\ldoubledereftmp(100) = *x + UNKNOWN\ldoubledereftmp(104) = *x + UNKNOWN\llocx = *x + UNKNOWN\l_16 = x + UNKNOWN\l_17 = x + UNKNOWN\l_20 = *x + 8\l_21 = *x + 8\l_23 = *x + 16\l_25 = *x + 16\l_630 = *x + 32\l_634 = *x + 48\l_638 = *x + 64\l_642 = *x + 80\l_568 = *x + UNKNOWN\l_584 = *x + UNKNOWN\l_600 = *x + UNKNOWN\l_616 = *x + UNKNOWN\l_34 = x + UNKNOWN\l_518 = x + 80\laccum_519 = *x + 80\l_531 = x + 64\laccum_532 = *x + 64\l_544 = x + 48\laccum_545 = *x + 48\laccum_558 = *x + 32\l_35 = *x + 16\l_39 = *x + 32\l_238 = *x + UNKNOWN\l_239 = *x + UNKNOWN\ldoubledereftmp(362) = *x + UNKNOWN\ldoubledereftmp(366) = *x + UNKNOWN\ldoubledereftmp(372) = *x + UNKNOWN\l_170 = *x\l_249 = x + UNKNOWN\l_260 = *x + 16\lmantissa_272 = x + UNKNOWN\l_291 = *x + 80\laccum_355 = *x + 32\l_367 = x + 48\laccum_368 = *x + 48\l_380 = x + 64\laccum_381 = *x + 64\l_393 = x + 80\laccum_394 = *x + 80\l_247 = *x + 80\l*x + UNKNOWN = derefaddrtmp(21)\l*x + UNKNOWN = doubledereftmp(100)\l*x + UNKNOWN = doubledereftmp(104)\l*x + UNKNOWN = doubledereftmp(362)\l*x + UNKNOWN = doubledereftmp(366)\l*x + UNKNOWN = doubledereftmp(372)\l*x = x\l*x = _1\l*x = derefaddrtmp(21)\l*x + 8 = x\l*x + 8 = derefaddrtmp(21)\l*x + 8 = _10\l*x + 8 = _14\l*x + 8 = _22\l*x + 16 = x\l*x + 16 = _28\l*x + 16 = _37\l*x + 16 = _262\l*x + 32 = x\l*x + 32 = derefaddrtmp(21)\l*x + 32 = accum_560\l*x + 32 = accum_357\l*x + 48 = derefaddrtmp(21)\l*x + 48 = accum_547\l*x + 48 = accum_370\l*x + 64 = accum_534\l*x + 64 = accum_383\l*x + 80 = x\l*x + 80 = accum_521\l*x + 80 = _292\l*x + 80 = accum_396\l*x + 80 = _248\l"];
"_1";
"_3";
"_4";
"_6";
"derefaddrtmp(21)";
"_7" [label="\N\n_73 = _7 + UNKNOWN\l"];
"_71";
"_73" [label="\N\n_74 = *_73\l"];
"_74";
"n_77";
"_8";
"_9";
"_10";
"_11" [label="\N\n_86 = _11 + UNKNOWN\l"];
"_86" [label="\N\n_87 = *_86\l"];
"_87";
"n_90";
"_12";
"_13";
"_14";
"__builtin_object_size";
"CALLUSED(97)" [label="\N\nCALLUSED(97) = CALLUSED(97) + UNKNOWN\lCALLUSED(97) = *CALLUSED(97) + UNKNOWN\l"];
"CALLCLOBBERED(98)";
"_55";
"doubledereftmp(100)";
"CALLUSED(101)" [label="\N\nCALLUSED(101) = CALLUSED(101) + UNKNOWN\lCALLUSED(101) = *CALLUSED(101) + UNKNOWN\l"];
"CALLCLOBBERED(102)";
"_54";
"doubledereftmp(104)";
"_773" [label="\N\n_774 = *_773\l_783 = *_773\l_792 = *_773\l_801 = *_773\l"];
"_774";
"_783";
"_647";
"_792";
"_646";
"_801";
"_712";
"_16" [label="\N\n_109 = _16 + UNKNOWN\l"];
"_109" [label="\N\n_110 = *_109\l"];
"_110";
"n_113";
"_17" [label="\N\n_122 = _17 + UNKNOWN\l"];
"_122" [label="\N\n_123 = *_122\l"];
"_123";
"n_126";
"_20";
"_21";
"_22";
"_23";
"_25";
"_27";
"_28";
"accum_654" [label="\N\n_665 = accum_654 + UNKNOWN\l_678 = accum_654 + UNKNOWN\l_691 = accum_654 + UNKNOWN\l_577 = accum_654 + UNKNOWN\l_593 = accum_654 + UNKNOWN\l_609 = accum_654 + UNKNOWN\l_625 = accum_654 + UNKNOWN\l_652 = accum_654 + UNKNOWN\l"];
"_663";
"_665";
"_678";
"_691";
"_630";
"_634";
"_638";
"_642";
"_568";
"_577";
"_584";
"_593";
"_600";
"_609";
"_616";
"_625";
"_34";
"_518";
"accum_519" [label="\N\n_520 = accum_519 + UNKNOWN\l"];
"_520";
"accum_521";
"_531";
"accum_532" [label="\N\n_533 = accum_532 + UNKNOWN\l"];
"_533";
"accum_534";
"_544";
"accum_545" [label="\N\n_546 = accum_545 + UNKNOWN\l"];
"_546";
"accum_547";
"accum_558" [label="\N\n_559 = accum_558 + UNKNOWN\l"];
"_559";
"accum_560";
"_35";
"_37";
"_39";
"accum_703" [label="\N\n_704 = accum_703 + UNKNOWN\l_717 = accum_703 + UNKNOWN\l_730 = accum_703 + UNKNOWN\l_743 = accum_703 + UNKNOWN\l"];
"_704";
"_717";
"_730";
"_743";
"_652";
"_238";
"_239";
"CALLUSED(359)" [label="\N\nCALLUSED(359) = CALLUSED(359) + UNKNOWN\lCALLUSED(359) = *CALLUSED(359) + UNKNOWN\l"];
"CALLCLOBBERED(360)";
"_240";
"doubledereftmp(362)";
"CALLUSED(363)" [label="\N\nCALLUSED(363) = CALLUSED(363) + UNKNOWN\lCALLUSED(363) = *CALLUSED(363) + UNKNOWN\l"];
"CALLCLOBBERED(364)";
"_245";
"doubledereftmp(366)";
"CALLUSED(369)" [label="\N\nCALLUSED(369) = CALLUSED(369) + UNKNOWN\lCALLUSED(369) = *CALLUSED(369) + UNKNOWN\l"];
"CALLCLOBBERED(370)";
"_242";
"doubledereftmp(372)";
"_170";
"_249" [label="\N\n_253 = _249 + UNKNOWN\l"];
"_253" [label="\N\n_254 = *_253\l"];
"_254";
"n_257";
"puts";
"_260";
"_262";
"mantissa_272" [label="\N\n_339 = mantissa_272 + 16\l_346 = mantissa_272 + 32\l*mantissa_272 = derefaddrtmp(21)\l"];
"_339" [label="\N\n*_339 = derefaddrtmp(21)\l"];
"_346" [label="\N\n*_346 = derefaddrtmp(21)\l"];
"_291";
"_292";
"accum_355" [label="\N\n_356 = accum_355 + UNKNOWN\l"];
"_356";
"accum_357";
"_367";
"accum_368" [label="\N\n_369 = accum_368 + UNKNOWN\l"];
"_369";
"accum_370";
"_380";
"accum_381" [label="\N\n_382 = accum_381 + UNKNOWN\l"];
"_382";
"accum_383";
"_393";
"accum_394" [label="\N\n_395 = accum_394 + UNKNOWN\l"];
"_395";
"accum_396";
"_247" [label="\N\n_248 = _247 + UNKNOWN\l"];
"_248";

  // Edges in the constraint graph:
"NONLOCAL" -> "_55";
"NONLOCAL" -> "_54";
"NONLOCAL" -> "_240";
"NONLOCAL" -> "_245";
"NONLOCAL" -> "_242";
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_7";
"STOREDANYTHING" -> "_73";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_11";
"STOREDANYTHING" -> "_86";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_13";
"STOREDANYTHING" -> "CALLUSED(97)";
"STOREDANYTHING" -> "doubledereftmp(100)";
"STOREDANYTHING" -> "CALLUSED(101)";
"STOREDANYTHING" -> "doubledereftmp(104)";
"STOREDANYTHING" -> "accum_703";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_109";
"STOREDANYTHING" -> "_17";
"STOREDANYTHING" -> "_122";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_21";
"STOREDANYTHING" -> "_23";
"STOREDANYTHING" -> "_25";
"STOREDANYTHING" -> "accum_654";
"STOREDANYTHING" -> "_665";
"STOREDANYTHING" -> "_678";
"STOREDANYTHING" -> "_691";
"STOREDANYTHING" -> "_630";
"STOREDANYTHING" -> "_634";
"STOREDANYTHING" -> "_638";
"STOREDANYTHING" -> "_642";
"STOREDANYTHING" -> "_568";
"STOREDANYTHING" -> "_577";
"STOREDANYTHING" -> "_584";
"STOREDANYTHING" -> "_593";
"STOREDANYTHING" -> "_600";
"STOREDANYTHING" -> "_609";
"STOREDANYTHING" -> "_616";
"STOREDANYTHING" -> "_625";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_518";
"STOREDANYTHING" -> "accum_519";
"STOREDANYTHING" -> "_520";
"STOREDANYTHING" -> "_531";
"STOREDANYTHING" -> "accum_532";
"STOREDANYTHING" -> "_533";
"STOREDANYTHING" -> "_544";
"STOREDANYTHING" -> "accum_545";
"STOREDANYTHING" -> "_546";
"STOREDANYTHING" -> "accum_558";
"STOREDANYTHING" -> "_559";
"STOREDANYTHING" -> "_35";
"STOREDANYTHING" -> "_39";
"STOREDANYTHING" -> "_704";
"STOREDANYTHING" -> "_717";
"STOREDANYTHING" -> "_730";
"STOREDANYTHING" -> "_743";
"STOREDANYTHING" -> "_652";
"STOREDANYTHING" -> "_238";
"STOREDANYTHING" -> "_239";
"STOREDANYTHING" -> "CALLUSED(359)";
"STOREDANYTHING" -> "doubledereftmp(362)";
"STOREDANYTHING" -> "CALLUSED(363)";
"STOREDANYTHING" -> "doubledereftmp(366)";
"STOREDANYTHING" -> "CALLUSED(369)";
"STOREDANYTHING" -> "doubledereftmp(372)";
"STOREDANYTHING" -> "_249";
"STOREDANYTHING" -> "_253";
"STOREDANYTHING" -> "_260";
"STOREDANYTHING" -> "mantissa_272";
"STOREDANYTHING" -> "_339";
"STOREDANYTHING" -> "_346";
"STOREDANYTHING" -> "_291";
"STOREDANYTHING" -> "accum_355";
"STOREDANYTHING" -> "_356";
"STOREDANYTHING" -> "_367";
"STOREDANYTHING" -> "accum_368";
"STOREDANYTHING" -> "_369";
"STOREDANYTHING" -> "_380";
"STOREDANYTHING" -> "accum_381";
"STOREDANYTHING" -> "_382";
"STOREDANYTHING" -> "_393";
"STOREDANYTHING" -> "accum_394";
"STOREDANYTHING" -> "_395";
"STOREDANYTHING" -> "_247";
"STOREDANYTHING" -> "_248";
"x" -> "CALLUSED(97)";
"x" -> "CALLUSED(101)";
"x" -> "CALLUSED(359)";
"x" -> "CALLUSED(363)";
"x" -> "CALLUSED(369)";
"_1" -> "_3";
"_3" -> "_6";
"_4" -> "_6";
"_74" -> "n_77";
"_8" -> "_10";
"_9" -> "_10";
"_87" -> "n_90";
"_12" -> "_14";
"_13" -> "_14";
"CALLUSED(97)" -> "_55";
"CALLUSED(101)" -> "_54";
"_774" -> "_647";
"_783" -> "_647";
"_647" -> "_646";
"_792" -> "_646";
"_646" -> "_712";
"_801" -> "_712";
"_110" -> "n_113";
"_123" -> "n_126";
"_20" -> "_22";
"_21" -> "_22";
"_23" -> "_27";
"_25" -> "_27";
"_27" -> "_28";
"_568" -> "accum_654";
"_577" -> "accum_654";
"_584" -> "accum_654";
"_593" -> "accum_654";
"_600" -> "accum_654";
"_609" -> "accum_654";
"_616" -> "accum_654";
"accum_519" -> "accum_521";
"accum_532" -> "accum_534";
"accum_545" -> "accum_547";
"accum_558" -> "accum_560";
"_35" -> "_37";
"CALLUSED(359)" -> "_240";
"CALLUSED(363)" -> "_245";
"CALLUSED(369)" -> "_242";
"_254" -> "n_257";
"_260" -> "_262";
"_291" -> "_292";
"accum_355" -> "accum_357";
"accum_368" -> "accum_370";
"accum_381" -> "accum_383";
"accum_394" -> "accum_396";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _1\l"];
"STOREDANYTHING";
"INTEGER";
"x" [label="\N\n_1 = *x\l_4 = *x\l_7 = x + UNKNOWN\l_8 = *x + 8\l_9 = *x + 8\l_11 = x + UNKNOWN\l_12 = *x + 8\l_13 = *x + 8\ldoubledereftmp(100) = *x + UNKNOWN\ldoubledereftmp(104) = *x + UNKNOWN\laccum_703 = *x + UNKNOWN\l_16 = x + UNKNOWN\l_17 = x + UNKNOWN\l_20 = *x + 8\l_21 = *x + 8\l_23 = *x + 16\l_25 = *x + 16\l_630 = *x + 32\l_634 = *x + 48\l_638 = *x + 64\l_642 = *x + 80\l_568 = *x + UNKNOWN\l_584 = *x + UNKNOWN\l_600 = *x + UNKNOWN\l_616 = *x + UNKNOWN\l_34 = x + UNKNOWN\l_518 = x + 80\laccum_519 = *x + 80\l_531 = x + 64\laccum_532 = *x + 64\l_544 = x + 48\laccum_545 = *x + 48\laccum_558 = *x + 32\l_35 = *x + 16\l_39 = *x + 32\l_238 = *x + UNKNOWN\l_239 = *x + UNKNOWN\ldoubledereftmp(362) = *x + UNKNOWN\ldoubledereftmp(366) = *x + UNKNOWN\ldoubledereftmp(372) = *x + UNKNOWN\l_170 = *x\l_249 = x + UNKNOWN\l_260 = *x + 16\lmantissa_272 = x + UNKNOWN\l_291 = *x + 80\laccum_355 = *x + 32\l_367 = x + 48\laccum_368 = *x + 48\l_380 = x + 64\laccum_381 = *x + 64\l_393 = x + 80\laccum_394 = *x + 80\l_247 = *x + 80\l*x + UNKNOWN = derefaddrtmp(21)\l*x + UNKNOWN = doubledereftmp(100)\l*x + UNKNOWN = doubledereftmp(104)\l*x + UNKNOWN = doubledereftmp(362)\l*x + UNKNOWN = doubledereftmp(366)\l*x + UNKNOWN = doubledereftmp(372)\l*x = x\l*x = _1\l*x = derefaddrtmp(21)\l*x + 8 = x\l*x + 8 = derefaddrtmp(21)\l*x + 8 = _10\l*x + 8 = _14\l*x + 8 = _22\l*x + 16 = x\l*x + 16 = _28\l*x + 16 = _37\l*x + 16 = _262\l*x + 32 = x\l*x + 32 = derefaddrtmp(21)\l*x + 32 = accum_560\l*x + 32 = accum_357\l*x + 48 = derefaddrtmp(21)\l*x + 48 = accum_547\l*x + 48 = accum_370\l*x + 64 = accum_534\l*x + 64 = accum_383\l*x + 80 = x\l*x + 80 = accum_521\l*x + 80 = _292\l*x + 80 = accum_396\l*x + 80 = _248\l"];
"_1";
"_3";
"_4";
"_6";
"derefaddrtmp(21)";
"_7" [label="\N\n_73 = _7 + UNKNOWN\l"];
"_71";
"_73" [label="\N\n_74 = *_73\l"];
"_74";
"n_77";
"_8";
"_9";
"_10";
"_11" [label="\N\n_86 = _11 + UNKNOWN\l"];
"_86" [label="\N\n_87 = *_86\l"];
"_87";
"n_90";
"_12";
"_13";
"_14";
"__builtin_object_size";
"CALLUSED(97)" [label="\N\nCALLUSED(97) = CALLUSED(97) + UNKNOWN\lCALLUSED(97) = *CALLUSED(97) + UNKNOWN\l"];
"CALLCLOBBERED(98)";
"_55";
"doubledereftmp(100)";
"CALLUSED(101)" [label="\N\nCALLUSED(101) = CALLUSED(101) + UNKNOWN\lCALLUSED(101) = *CALLUSED(101) + UNKNOWN\l"];
"CALLCLOBBERED(102)";
"_54";
"doubledereftmp(104)";
"_773" [label="\N\n_774 = *_773\l_783 = *_773\l_792 = *_773\l_801 = *_773\l"];
"_774";
"_783";
"_647";
"_792";
"_646";
"_801";
"_712";
"_16" [label="\N\n_109 = _16 + UNKNOWN\l"];
"_109" [label="\N\n_110 = *_109\l"];
"_110";
"n_113";
"_17" [label="\N\n_122 = _17 + UNKNOWN\l"];
"_122" [label="\N\n_123 = *_122\l"];
"_123";
"n_126";
"_20";
"_21";
"_22";
"_23";
"_25";
"_27";
"_28";
"accum_654" [label="\N\n_665 = accum_654 + UNKNOWN\l_678 = accum_654 + UNKNOWN\l_691 = accum_654 + UNKNOWN\l_577 = accum_654 + UNKNOWN\l_593 = accum_654 + UNKNOWN\l_609 = accum_654 + UNKNOWN\l_625 = accum_654 + UNKNOWN\l_652 = accum_654 + UNKNOWN\l"];
"_663";
"_665";
"_678";
"_691";
"_630";
"_634";
"_638";
"_642";
"_568";
"_577";
"_584";
"_593";
"_600";
"_609";
"_616";
"_625";
"_34";
"_518";
"accum_519" [label="\N\n_520 = accum_519 + UNKNOWN\l"];
"_520";
"accum_521";
"_531";
"accum_532" [label="\N\n_533 = accum_532 + UNKNOWN\l"];
"_533";
"accum_534";
"_544";
"accum_545" [label="\N\n_546 = accum_545 + UNKNOWN\l"];
"_546";
"accum_547";
"accum_558" [label="\N\n_559 = accum_558 + UNKNOWN\l"];
"_559";
"accum_560";
"_35";
"_37";
"_39";
"accum_703" [label="\N\n_704 = accum_703 + UNKNOWN\l_717 = accum_703 + UNKNOWN\l_730 = accum_703 + UNKNOWN\l_743 = accum_703 + UNKNOWN\l"];
"_704";
"_717";
"_730";
"_743";
"_652";
"_238";
"_239";
"CALLUSED(359)" [label="\N\nCALLUSED(359) = CALLUSED(359) + UNKNOWN\lCALLUSED(359) = *CALLUSED(359) + UNKNOWN\l"];
"CALLCLOBBERED(360)";
"_240";
"doubledereftmp(362)";
"CALLUSED(363)" [label="\N\nCALLUSED(363) = CALLUSED(363) + UNKNOWN\lCALLUSED(363) = *CALLUSED(363) + UNKNOWN\l"];
"CALLCLOBBERED(364)";
"_245";
"doubledereftmp(366)";
"CALLUSED(369)" [label="\N\nCALLUSED(369) = CALLUSED(369) + UNKNOWN\lCALLUSED(369) = *CALLUSED(369) + UNKNOWN\l"];
"CALLCLOBBERED(370)";
"_242";
"doubledereftmp(372)";
"_170";
"_249" [label="\N\n_253 = _249 + UNKNOWN\l"];
"_253" [label="\N\n_254 = *_253\l"];
"_254";
"n_257";
"puts";
"_260";
"_262";
"mantissa_272" [label="\N\n_339 = mantissa_272 + 16\l_346 = mantissa_272 + 32\l*mantissa_272 = derefaddrtmp(21)\l"];
"_339" [label="\N\n*_339 = derefaddrtmp(21)\l"];
"_346" [label="\N\n*_346 = derefaddrtmp(21)\l"];
"_291";
"_292";
"accum_355" [label="\N\n_356 = accum_355 + UNKNOWN\l"];
"_356";
"accum_357";
"_367";
"accum_368" [label="\N\n_369 = accum_368 + UNKNOWN\l"];
"_369";
"accum_370";
"_380";
"accum_381" [label="\N\n_382 = accum_381 + UNKNOWN\l"];
"_382";
"accum_383";
"_393";
"accum_394" [label="\N\n_395 = accum_394 + UNKNOWN\l"];
"_395";
"accum_396";
"_247" [label="\N\n_248 = _247 + UNKNOWN\l"];
"_248";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_7";
"STOREDANYTHING" -> "_73";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_11";
"STOREDANYTHING" -> "_86";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_13";
"STOREDANYTHING" -> "CALLUSED(97)";
"STOREDANYTHING" -> "doubledereftmp(100)";
"STOREDANYTHING" -> "CALLUSED(101)";
"STOREDANYTHING" -> "doubledereftmp(104)";
"STOREDANYTHING" -> "accum_703";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_109";
"STOREDANYTHING" -> "_17";
"STOREDANYTHING" -> "_122";
"STOREDANYTHING" -> "_20";
"STOREDANYTHING" -> "_21";
"STOREDANYTHING" -> "_23";
"STOREDANYTHING" -> "_25";
"STOREDANYTHING" -> "accum_654";
"STOREDANYTHING" -> "_665";
"STOREDANYTHING" -> "_678";
"STOREDANYTHING" -> "_691";
"STOREDANYTHING" -> "_630";
"STOREDANYTHING" -> "_634";
"STOREDANYTHING" -> "_638";
"STOREDANYTHING" -> "_642";
"STOREDANYTHING" -> "_568";
"STOREDANYTHING" -> "_577";
"STOREDANYTHING" -> "_584";
"STOREDANYTHING" -> "_593";
"STOREDANYTHING" -> "_600";
"STOREDANYTHING" -> "_609";
"STOREDANYTHING" -> "_616";
"STOREDANYTHING" -> "_625";
"STOREDANYTHING" -> "_34";
"STOREDANYTHING" -> "_518";
"STOREDANYTHING" -> "accum_519";
"STOREDANYTHING" -> "_520";
"STOREDANYTHING" -> "_531";
"STOREDANYTHING" -> "accum_532";
"STOREDANYTHING" -> "_533";
"STOREDANYTHING" -> "_544";
"STOREDANYTHING" -> "accum_545";
"STOREDANYTHING" -> "_546";
"STOREDANYTHING" -> "accum_558";
"STOREDANYTHING" -> "_559";
"STOREDANYTHING" -> "_35";
"STOREDANYTHING" -> "_39";
"STOREDANYTHING" -> "_704";
"STOREDANYTHING" -> "_717";
"STOREDANYTHING" -> "_730";
"STOREDANYTHING" -> "_743";
"STOREDANYTHING" -> "_652";
"STOREDANYTHING" -> "_238";
"STOREDANYTHING" -> "_239";
"STOREDANYTHING" -> "CALLUSED(359)";
"STOREDANYTHING" -> "doubledereftmp(362)";
"STOREDANYTHING" -> "CALLUSED(363)";
"STOREDANYTHING" -> "doubledereftmp(366)";
"STOREDANYTHING" -> "CALLUSED(369)";
"STOREDANYTHING" -> "doubledereftmp(372)";
"STOREDANYTHING" -> "_249";
"STOREDANYTHING" -> "_253";
"STOREDANYTHING" -> "_260";
"STOREDANYTHING" -> "mantissa_272";
"STOREDANYTHING" -> "_339";
"STOREDANYTHING" -> "_346";
"STOREDANYTHING" -> "_291";
"STOREDANYTHING" -> "accum_355";
"STOREDANYTHING" -> "_356";
"STOREDANYTHING" -> "_367";
"STOREDANYTHING" -> "accum_368";
"STOREDANYTHING" -> "_369";
"STOREDANYTHING" -> "_380";
"STOREDANYTHING" -> "accum_381";
"STOREDANYTHING" -> "_382";
"STOREDANYTHING" -> "_393";
"STOREDANYTHING" -> "accum_394";
"STOREDANYTHING" -> "_395";
"STOREDANYTHING" -> "_247";
"STOREDANYTHING" -> "_248";
"x" -> "ESCAPED";
"x" -> "CALLUSED(97)";
"x" -> "CALLUSED(101)";
"x" -> "CALLUSED(359)";
"x" -> "CALLUSED(363)";
"x" -> "CALLUSED(369)";
"_1" -> "ESCAPED";
"_1" -> "_3";
"_1" -> "_4";
"_1" -> "_74";
"_1" -> "_8";
"_1" -> "_9";
"_1" -> "_87";
"_1" -> "_12";
"_1" -> "_13";
"_1" -> "CALLUSED(97)";
"_1" -> "_55";
"_1" -> "doubledereftmp(100)";
"_1" -> "CALLUSED(101)";
"_1" -> "_54";
"_1" -> "doubledereftmp(104)";
"_1" -> "_110";
"_1" -> "_123";
"_1" -> "_20";
"_1" -> "_21";
"_1" -> "_23";
"_1" -> "_25";
"_1" -> "_630";
"_1" -> "_634";
"_1" -> "_638";
"_1" -> "_642";
"_1" -> "_568";
"_1" -> "_584";
"_1" -> "_600";
"_1" -> "_616";
"_1" -> "accum_519";
"_1" -> "accum_532";
"_1" -> "accum_545";
"_1" -> "accum_558";
"_1" -> "_35";
"_1" -> "_39";
"_1" -> "accum_703";
"_1" -> "_238";
"_1" -> "_239";
"_1" -> "CALLUSED(359)";
"_1" -> "_240";
"_1" -> "doubledereftmp(362)";
"_1" -> "CALLUSED(363)";
"_1" -> "_245";
"_1" -> "doubledereftmp(366)";
"_1" -> "CALLUSED(369)";
"_1" -> "_242";
"_1" -> "doubledereftmp(372)";
"_1" -> "_170";
"_1" -> "_254";
"_1" -> "_260";
"_1" -> "_291";
"_1" -> "accum_355";
"_1" -> "accum_368";
"_1" -> "accum_381";
"_1" -> "accum_394";
"_1" -> "_247";
"_3" -> "_6";
"_4" -> "_6";
"derefaddrtmp(21)" -> "ESCAPED";
"_74" -> "n_77";
"_8" -> "_10";
"_9" -> "_10";
"_10" -> "ESCAPED";
"_87" -> "n_90";
"_12" -> "_14";
"_13" -> "_14";
"_14" -> "ESCAPED";
"CALLUSED(97)" -> "_55";
"doubledereftmp(100)" -> "ESCAPED";
"CALLUSED(101)" -> "_54";
"doubledereftmp(104)" -> "ESCAPED";
"_774" -> "_647";
"_783" -> "_647";
"_647" -> "_646";
"_792" -> "_646";
"_646" -> "_712";
"_801" -> "_712";
"_110" -> "n_113";
"_123" -> "n_126";
"_20" -> "_22";
"_21" -> "_22";
"_22" -> "ESCAPED";
"_23" -> "_27";
"_25" -> "_27";
"_27" -> "_28";
"_28" -> "ESCAPED";
"_568" -> "accum_654";
"_577" -> "accum_654";
"_584" -> "accum_654";
"_593" -> "accum_654";
"_600" -> "accum_654";
"_609" -> "accum_654";
"_616" -> "accum_654";
"accum_519" -> "accum_521";
"accum_521" -> "ESCAPED";
"accum_532" -> "accum_534";
"accum_534" -> "ESCAPED";
"accum_545" -> "accum_547";
"accum_547" -> "ESCAPED";
"accum_558" -> "accum_560";
"accum_560" -> "ESCAPED";
"_35" -> "_37";
"_37" -> "ESCAPED";
"accum_703" -> "_774";
"accum_703" -> "_783";
"accum_703" -> "_792";
"accum_703" -> "_801";
"CALLUSED(359)" -> "_240";
"doubledereftmp(362)" -> "ESCAPED";
"CALLUSED(363)" -> "_245";
"doubledereftmp(366)" -> "ESCAPED";
"CALLUSED(369)" -> "_242";
"doubledereftmp(372)" -> "ESCAPED";
"_254" -> "n_257";
"_260" -> "_262";
"_262" -> "ESCAPED";
"_291" -> "_292";
"_292" -> "ESCAPED";
"accum_355" -> "accum_357";
"accum_357" -> "ESCAPED";
"accum_368" -> "accum_370";
"accum_370" -> "ESCAPED";
"accum_381" -> "accum_383";
"accum_383" -> "ESCAPED";
"accum_394" -> "accum_396";
"accum_396" -> "ESCAPED";
"_248" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as _1
STOREDANYTHING = { }
INTEGER = { ANYTHING }
x = { NONLOCAL }
y = { NONLOCAL } same as x
z = { NONLOCAL } same as x
_1 = { ESCAPED NONLOCAL }
_2 = { ESCAPED NONLOCAL } same as _1
_3 = { ESCAPED NONLOCAL }
_4 = { ESCAPED NONLOCAL }
_5 = { ESCAPED NONLOCAL } same as _4
_6 = { ESCAPED NONLOCAL }
derefaddrtmp(17) = { NONLOCAL } same as x
derefaddrtmp(18) = { NONLOCAL } same as x
derefaddrtmp(19) = { NONLOCAL } same as x
derefaddrtmp(20) = { NONLOCAL } same as x
derefaddrtmp(21) = { NULL }
i_404 = { NONLOCAL } same as x
derefaddrtmp(23) = { NULL } same as derefaddrtmp(21)
i_408 = { NONLOCAL } same as x
derefaddrtmp(25) = { NULL } same as derefaddrtmp(21)
i_412 = { NONLOCAL } same as x
_7 = { NONLOCAL }
_71 = { NULL NONLOCAL }
i_70 = { NULL NONLOCAL } same as _71
_72 = { NULL NONLOCAL } same as _71
_73 = { NONLOCAL }
_74 = { ESCAPED NONLOCAL }
_75 = { ESCAPED NONLOCAL } same as _74
n_77 = { NULL ESCAPED NONLOCAL }
n_76 = { NULL ESCAPED NONLOCAL } same as n_77
i_78 = { NULL NONLOCAL } same as _71
n_186 = { NULL ESCAPED NONLOCAL } same as n_77
derefaddrtmp(38) = { NONLOCAL } same as x
derefaddrtmp(39) = { NONLOCAL } same as x
derefaddrtmp(40) = { NONLOCAL } same as x
derefaddrtmp(41) = { NONLOCAL } same as x
derefaddrtmp(42) = { NULL } same as derefaddrtmp(21)
i_416 = { NONLOCAL } same as x
derefaddrtmp(44) = { NULL } same as derefaddrtmp(21)
i_420 = { NONLOCAL } same as x
derefaddrtmp(46) = { NULL } same as derefaddrtmp(21)
i_424 = { NONLOCAL } same as x
_8 = { ESCAPED NONLOCAL }
_9 = { ESCAPED NONLOCAL }
_10 = { ESCAPED NONLOCAL }
derefaddrtmp(51) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(52) = { NONLOCAL } same as x
derefaddrtmp(53) = { NULL } same as derefaddrtmp(21)
i_428 = { NONLOCAL } same as x
derefaddrtmp(55) = { NULL } same as derefaddrtmp(21)
i_432 = { NONLOCAL } same as x
derefaddrtmp(57) = { NULL } same as derefaddrtmp(21)
i_436 = { NONLOCAL } same as x
derefaddrtmp(59) = { NULL } same as derefaddrtmp(21)
i_440 = { NONLOCAL } same as x
_11 = { NONLOCAL }
_84 = { NULL NONLOCAL } same as _71
i_83 = { NULL NONLOCAL } same as _71
_85 = { NULL NONLOCAL } same as _71
_86 = { NONLOCAL }
_87 = { ESCAPED NONLOCAL }
_88 = { ESCAPED NONLOCAL } same as _87
n_90 = { NULL ESCAPED NONLOCAL }
n_89 = { NULL ESCAPED NONLOCAL } same as n_90
i_91 = { NULL NONLOCAL } same as _71
n_105 = { NULL ESCAPED NONLOCAL } same as n_90
derefaddrtmp(72) = { NONLOCAL } same as x
derefaddrtmp(73) = { NONLOCAL } same as x
derefaddrtmp(74) = { NONLOCAL } same as x
derefaddrtmp(75) = { NONLOCAL } same as x
derefaddrtmp(76) = { NULL } same as derefaddrtmp(21)
i_444 = { NONLOCAL } same as x
derefaddrtmp(78) = { NULL } same as derefaddrtmp(21)
i_448 = { NONLOCAL } same as x
derefaddrtmp(80) = { NULL } same as derefaddrtmp(21)
i_452 = { NONLOCAL } same as x
derefaddrtmp(82) = { NONLOCAL } same as x
derefaddrtmp(83) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(84) = { NONLOCAL } same as x
derefaddrtmp(85) = { NULL } same as derefaddrtmp(21)
i_456 = { NONLOCAL } same as x
derefaddrtmp(87) = { NULL } same as derefaddrtmp(21)
i_460 = { NONLOCAL } same as x
derefaddrtmp(89) = { NULL } same as derefaddrtmp(21)
i_464 = { NONLOCAL } same as x
derefaddrtmp(91) = { NULL } same as derefaddrtmp(21)
i_468 = { NONLOCAL } same as x
_12 = { ESCAPED NONLOCAL }
_13 = { ESCAPED NONLOCAL }
_14 = { ESCAPED NONLOCAL }
__builtin_object_size = { }
CALLUSED(97) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(98) = { }
_55 = { NULL ESCAPED NONLOCAL }
doubledereftmp(100) = { ESCAPED NONLOCAL }
CALLUSED(101) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(102) = { }
_54 = { NULL ESCAPED NONLOCAL }
doubledereftmp(104) = { ESCAPED NONLOCAL }
locx = { ESCAPED NONLOCAL } same as accum_703
_771 = { NULL } same as derefaddrtmp(21)
_772 = { NULL } same as derefaddrtmp(21)
_773 = { locx }
_774 = { ESCAPED NONLOCAL }
_775 = { ESCAPED NONLOCAL } same as _774
n_776 = { ESCAPED NONLOCAL } same as _774
i_777 = { NONLOCAL } same as x
_780 = { NONLOCAL } same as x
_781 = { NONLOCAL } same as x
_782 = { locx } same as _773
_783 = { ESCAPED NONLOCAL }
_784 = { ESCAPED NONLOCAL } same as _783
_647 = { ESCAPED NONLOCAL }
n_785 = { ESCAPED NONLOCAL } same as _647
i_786 = { NONLOCAL } same as x
_789 = { NONLOCAL } same as x
_790 = { NONLOCAL } same as x
_791 = { locx } same as _773
_792 = { ESCAPED NONLOCAL }
_793 = { ESCAPED NONLOCAL } same as _792
_646 = { ESCAPED NONLOCAL }
n_794 = { ESCAPED NONLOCAL } same as _646
i_795 = { NONLOCAL } same as x
_798 = { NONLOCAL } same as x
_799 = { NONLOCAL } same as x
_800 = { locx } same as _773
_801 = { ESCAPED NONLOCAL }
_802 = { ESCAPED NONLOCAL } same as _801
_712 = { ESCAPED NONLOCAL }
n_803 = { ESCAPED NONLOCAL } same as _712
i_804 = { NONLOCAL } same as x
_16 = { NONLOCAL }
_107 = { NULL NONLOCAL } same as _71
i_106 = { NULL NONLOCAL } same as _71
_108 = { NULL NONLOCAL } same as _71
_109 = { NONLOCAL }
_110 = { ESCAPED NONLOCAL }
_111 = { ESCAPED NONLOCAL } same as _110
n_113 = { NULL ESCAPED NONLOCAL }
n_112 = { NULL ESCAPED NONLOCAL } same as n_113
i_114 = { NULL NONLOCAL } same as _71
n_15 = { NULL ESCAPED NONLOCAL } same as n_113
derefaddrtmp(148) = { NONLOCAL } same as x
derefaddrtmp(149) = { NONLOCAL } same as x
derefaddrtmp(150) = { NONLOCAL } same as x
derefaddrtmp(151) = { NONLOCAL } same as x
derefaddrtmp(152) = { NULL } same as derefaddrtmp(21)
i_472 = { NONLOCAL } same as x
derefaddrtmp(154) = { NULL } same as derefaddrtmp(21)
i_476 = { NONLOCAL } same as x
derefaddrtmp(156) = { NULL } same as derefaddrtmp(21)
i_480 = { NONLOCAL } same as x
derefaddrtmp(158) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(159) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(160) = { NONLOCAL } same as x
derefaddrtmp(161) = { NULL } same as derefaddrtmp(21)
i_484 = { NONLOCAL } same as x
derefaddrtmp(163) = { NULL } same as derefaddrtmp(21)
i_488 = { NONLOCAL } same as x
derefaddrtmp(165) = { NULL } same as derefaddrtmp(21)
i_492 = { NONLOCAL } same as x
derefaddrtmp(167) = { NULL } same as derefaddrtmp(21)
i_496 = { NONLOCAL } same as x
_17 = { NONLOCAL }
_120 = { NULL NONLOCAL } same as _71
i_119 = { NULL NONLOCAL } same as _71
_121 = { NULL NONLOCAL } same as _71
_122 = { NONLOCAL }
_123 = { ESCAPED NONLOCAL }
_124 = { ESCAPED NONLOCAL } same as _123
n_126 = { NULL ESCAPED NONLOCAL }
n_125 = { NULL ESCAPED NONLOCAL } same as n_126
i_127 = { NULL NONLOCAL } same as _71
n_128 = { NULL ESCAPED NONLOCAL } same as n_126
derefaddrtmp(180) = { NONLOCAL } same as x
derefaddrtmp(181) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(182) = { NONLOCAL } same as x
derefaddrtmp(183) = { NULL } same as derefaddrtmp(21)
i_500 = { NONLOCAL } same as x
derefaddrtmp(185) = { NULL } same as derefaddrtmp(21)
i_504 = { NONLOCAL } same as x
derefaddrtmp(187) = { NULL } same as derefaddrtmp(21)
i_508 = { NONLOCAL } same as x
derefaddrtmp(189) = { NULL } same as derefaddrtmp(21)
i_512 = { NONLOCAL } same as x
_20 = { ESCAPED NONLOCAL }
_21 = { ESCAPED NONLOCAL }
_22 = { ESCAPED NONLOCAL }
_23 = { ESCAPED NONLOCAL }
_24 = { ESCAPED NONLOCAL } same as _23
_25 = { ESCAPED NONLOCAL }
_26 = { ESCAPED NONLOCAL } same as _25
_27 = { ESCAPED NONLOCAL }
_28 = { ESCAPED NONLOCAL }
_29 = { ESCAPED NONLOCAL } same as _28
derefaddrtmp(201) = { NULL } same as derefaddrtmp(21)
extra_bits = { NULL ESCAPED NONLOCAL } same as accum_654
i_753 = { NONLOCAL } same as x
derefaddrtmp(204) = { NULL } same as derefaddrtmp(21)
i_758 = { NONLOCAL } same as x
derefaddrtmp(206) = { NULL } same as derefaddrtmp(21)
i_763 = { NONLOCAL } same as x
derefaddrtmp(208) = { NULL } same as derefaddrtmp(21)
i_768 = { NONLOCAL } same as x
accum_654 = { NULL ESCAPED NONLOCAL }
accum_653 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_655 = { NULL ESCAPED NONLOCAL } same as accum_654
_663 = { extra_bits }
accum_664 = { NULL ESCAPED NONLOCAL } same as accum_654
_665 = { NULL ESCAPED NONLOCAL }
accum_666 = { NULL ESCAPED NONLOCAL } same as accum_654
_364 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_651 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_667 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_668 = { NULL ESCAPED NONLOCAL } same as accum_654
_676 = { extra_bits } same as _663
accum_677 = { NULL ESCAPED NONLOCAL } same as accum_654
_678 = { NULL ESCAPED NONLOCAL }
accum_679 = { NULL ESCAPED NONLOCAL } same as accum_654
_363 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_680 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_681 = { NULL ESCAPED NONLOCAL } same as accum_654
_689 = { extra_bits } same as _663
accum_690 = { NULL ESCAPED NONLOCAL } same as accum_654
_691 = { NULL ESCAPED NONLOCAL }
accum_692 = { NULL ESCAPED NONLOCAL } same as accum_654
_359 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_693 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_694 = { NULL ESCAPED NONLOCAL } same as accum_654
_297 = { NULL ESCAPED NONLOCAL } same as accum_654
_630 = { ESCAPED NONLOCAL }
_631 = { NULL ESCAPED NONLOCAL } same as accum_654
_634 = { ESCAPED NONLOCAL }
_635 = { NULL ESCAPED NONLOCAL } same as accum_654
_638 = { ESCAPED NONLOCAL }
_639 = { NULL ESCAPED NONLOCAL } same as accum_654
_642 = { ESCAPED NONLOCAL }
_643 = { NULL ESCAPED NONLOCAL } same as accum_654
j_188 = { NONLOCAL } same as x
carry_244 = { NULL } same as derefaddrtmp(21)
_568 = { ESCAPED NONLOCAL }
_569 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_570 = { NULL ESCAPED NONLOCAL } same as accum_654
_571 = { ESCAPED NONLOCAL } same as _568
accum_572 = { NULL ESCAPED NONLOCAL } same as accum_654
_573 = { NULL } same as derefaddrtmp(21)
accum_574 = { NULL ESCAPED NONLOCAL } same as accum_654
_575 = { NULL ESCAPED NONLOCAL } same as accum_654
_576 = { NULL ESCAPED NONLOCAL } same as accum_654
_577 = { NULL ESCAPED NONLOCAL }
_578 = { NULL ESCAPED NONLOCAL } same as accum_654
j_580 = { NONLOCAL } same as x
_584 = { ESCAPED NONLOCAL }
_585 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_586 = { NULL ESCAPED NONLOCAL } same as accum_654
_587 = { ESCAPED NONLOCAL } same as _584
accum_588 = { NULL ESCAPED NONLOCAL } same as accum_654
_589 = { NULL ESCAPED NONLOCAL } same as _577
accum_590 = { NULL ESCAPED NONLOCAL } same as accum_654
_591 = { NULL ESCAPED NONLOCAL } same as accum_654
_592 = { NULL ESCAPED NONLOCAL } same as accum_654
_593 = { NULL ESCAPED NONLOCAL }
_594 = { NULL ESCAPED NONLOCAL } same as accum_654
j_596 = { NONLOCAL } same as x
_600 = { ESCAPED NONLOCAL }
_601 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_602 = { NULL ESCAPED NONLOCAL } same as accum_654
_603 = { ESCAPED NONLOCAL } same as _600
accum_604 = { NULL ESCAPED NONLOCAL } same as accum_654
_605 = { NULL ESCAPED NONLOCAL } same as _593
accum_606 = { NULL ESCAPED NONLOCAL } same as accum_654
_607 = { NULL ESCAPED NONLOCAL } same as accum_654
_608 = { NULL ESCAPED NONLOCAL } same as accum_654
_609 = { NULL ESCAPED NONLOCAL }
_610 = { NULL ESCAPED NONLOCAL } same as accum_654
j_612 = { NULL } same as derefaddrtmp(21)
_616 = { ESCAPED NONLOCAL }
_617 = { NULL ESCAPED NONLOCAL } same as accum_654
accum_618 = { NULL ESCAPED NONLOCAL } same as accum_654
_619 = { ESCAPED NONLOCAL } same as _616
accum_620 = { NULL ESCAPED NONLOCAL } same as accum_654
_621 = { NULL ESCAPED NONLOCAL } same as _609
accum_622 = { NULL ESCAPED NONLOCAL } same as accum_654
_623 = { NULL ESCAPED NONLOCAL } same as accum_654
_624 = { NULL ESCAPED NONLOCAL } same as accum_654
_625 = { NULL ESCAPED NONLOCAL }
_626 = { NULL ESCAPED NONLOCAL } same as accum_654
j_628 = { NONLOCAL } same as x
carry_234 = { NULL NONLOCAL } same as _71
_34 = { NONLOCAL }
_518 = { NONLOCAL }
accum_519 = { ESCAPED NONLOCAL }
_520 = { ESCAPED NONLOCAL }
accum_521 = { ESCAPED NONLOCAL }
accum_522 = { ESCAPED NONLOCAL } same as accum_521
accum_523 = { ESCAPED NONLOCAL } same as accum_521
_531 = { NONLOCAL }
accum_532 = { ESCAPED NONLOCAL }
_533 = { ESCAPED NONLOCAL }
accum_534 = { ESCAPED NONLOCAL }
_274 = { ESCAPED NONLOCAL } same as accum_519
accum_535 = { ESCAPED NONLOCAL } same as accum_534
accum_536 = { ESCAPED NONLOCAL } same as accum_534
_544 = { NONLOCAL }
accum_545 = { ESCAPED NONLOCAL }
_546 = { ESCAPED NONLOCAL }
accum_547 = { ESCAPED NONLOCAL }
_343 = { ESCAPED NONLOCAL } same as accum_532
accum_548 = { ESCAPED NONLOCAL } same as accum_547
accum_549 = { ESCAPED NONLOCAL } same as accum_547
_557 = { NONLOCAL } same as _34
accum_558 = { ESCAPED NONLOCAL }
_559 = { ESCAPED NONLOCAL }
accum_560 = { ESCAPED NONLOCAL }
_342 = { ESCAPED NONLOCAL } same as accum_545
accum_561 = { ESCAPED NONLOCAL } same as accum_560
accum_562 = { ESCAPED NONLOCAL } same as accum_560
_35 = { ESCAPED NONLOCAL }
_36 = { ESCAPED NONLOCAL } same as _35
_37 = { ESCAPED NONLOCAL }
_38 = { ESCAPED NONLOCAL } same as _37
_39 = { ESCAPED NONLOCAL }
_40 = { ESCAPED NONLOCAL } same as _39
_702 = { locx } same as _773
accum_703 = { ESCAPED NONLOCAL }
_704 = { ESCAPED NONLOCAL }
accum_705 = { ESCAPED NONLOCAL } same as accum_703
_715 = { locx } same as _773
accum_716 = { ESCAPED NONLOCAL } same as accum_703
_717 = { ESCAPED NONLOCAL }
accum_718 = { ESCAPED NONLOCAL } same as accum_703
_711 = { ESCAPED NONLOCAL } same as accum_703
accum_719 = { ESCAPED NONLOCAL } same as accum_703
accum_720 = { ESCAPED NONLOCAL } same as accum_703
_728 = { locx } same as _773
accum_729 = { ESCAPED NONLOCAL } same as accum_703
_730 = { ESCAPED NONLOCAL }
accum_731 = { ESCAPED NONLOCAL } same as accum_703
_707 = { ESCAPED NONLOCAL } same as accum_703
accum_732 = { ESCAPED NONLOCAL } same as accum_703
accum_733 = { ESCAPED NONLOCAL } same as accum_703
_741 = { locx } same as _773
accum_742 = { ESCAPED NONLOCAL } same as accum_703
_743 = { ESCAPED NONLOCAL }
accum_744 = { ESCAPED NONLOCAL } same as accum_703
_18 = { ESCAPED NONLOCAL } same as accum_703
accum_745 = { ESCAPED NONLOCAL } same as accum_703
accum_746 = { ESCAPED NONLOCAL } same as accum_703
_650 = { extra_bits } same as _663
_652 = { NULL ESCAPED NONLOCAL }
_290 = { ESCAPED NONLOCAL } same as accum_703
_238 = { ESCAPED NONLOCAL }
_239 = { ESCAPED NONLOCAL }
CALLUSED(359) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(360) = { }
_240 = { NULL ESCAPED NONLOCAL }
doubledereftmp(362) = { ESCAPED NONLOCAL }
CALLUSED(363) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(364) = { }
_245 = { NULL ESCAPED NONLOCAL }
doubledereftmp(366) = { ESCAPED NONLOCAL }
i_241 = { NULL NONLOCAL } same as _71
i_237 = { NULL NONLOCAL } same as _71
CALLUSED(369) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(370) = { }
_242 = { NULL ESCAPED NONLOCAL }
doubledereftmp(372) = { ESCAPED NONLOCAL }
_170 = { ESCAPED NONLOCAL }
_171 = { ESCAPED NONLOCAL } same as _170
_249 = { NONLOCAL }
_251 = { NULL NONLOCAL } same as _71
i_250 = { NULL NONLOCAL } same as _71
_252 = { NULL NONLOCAL } same as _71
_253 = { NONLOCAL }
_254 = { ESCAPED NONLOCAL }
_255 = { ESCAPED NONLOCAL } same as _254
n_257 = { NULL ESCAPED NONLOCAL }
n_256 = { NULL ESCAPED NONLOCAL } same as n_257
i_258 = { NULL NONLOCAL } same as _71
n_259 = { NULL ESCAPED NONLOCAL } same as n_257
puts = { }
_260 = { ESCAPED NONLOCAL }
_261 = { ESCAPED NONLOCAL } same as _260
_262 = { ESCAPED NONLOCAL }
exponent_difference_263 = { ESCAPED NONLOCAL } same as _262
exponent_difference_264 = { ESCAPED NONLOCAL } same as _262
derefaddrtmp(392) = { NULL } same as derefaddrtmp(21)
derefaddrtmp(393) = { NONLOCAL } same as x
derefaddrtmp(394) = { NULL } same as derefaddrtmp(21)
i_315 = { NONLOCAL } same as x
derefaddrtmp(396) = { NULL } same as derefaddrtmp(21)
i_319 = { NONLOCAL } same as x
derefaddrtmp(398) = { NULL } same as derefaddrtmp(21)
i_323 = { NONLOCAL } same as x
derefaddrtmp(400) = { NULL } same as derefaddrtmp(21)
i_327 = { NONLOCAL } same as x
_267 = { ESCAPED NONLOCAL } same as _260
_268 = { ESCAPED NONLOCAL } same as _262
_269 = { ESCAPED NONLOCAL } same as _262
_270 = { ESCAPED NONLOCAL } same as _262
_271 = { ESCAPED NONLOCAL } same as _262
mantissa_272 = { NONLOCAL }
_273 = { ESCAPED NONLOCAL } same as _170
i_328 = { NULL } same as derefaddrtmp(21)
_330 = { NULL } same as derefaddrtmp(21)
_331 = { NULL } same as derefaddrtmp(21)
_332 = { NONLOCAL } same as mantissa_272
derefaddrtmp(413) = { NULL } same as derefaddrtmp(21)
i_334 = { NONLOCAL } same as x
_337 = { NONLOCAL } same as x
_338 = { NONLOCAL } same as x
_339 = { NONLOCAL }
derefaddrtmp(418) = { NULL } same as derefaddrtmp(21)
i_341 = { NONLOCAL } same as x
_344 = { NONLOCAL } same as x
_345 = { NONLOCAL } same as x
_346 = { NONLOCAL }
derefaddrtmp(423) = { NULL } same as derefaddrtmp(21)
i_348 = { NONLOCAL } same as x
derefaddrtmp(425) = { NONLOCAL } same as x
_291 = { ESCAPED NONLOCAL }
_292 = { ESCAPED NONLOCAL }
i_294 = { NULL NONLOCAL } same as _71
i_293 = { NULL NONLOCAL } same as _71
_354 = { NONLOCAL } same as mantissa_272
accum_355 = { ESCAPED NONLOCAL }
_356 = { ESCAPED NONLOCAL }
accum_357 = { ESCAPED NONLOCAL }
_367 = { NONLOCAL }
accum_368 = { ESCAPED NONLOCAL }
_369 = { ESCAPED NONLOCAL }
accum_370 = { ESCAPED NONLOCAL }
accum_371 = { ESCAPED NONLOCAL } same as accum_370
accum_372 = { ESCAPED NONLOCAL } same as accum_370
_380 = { NONLOCAL }
accum_381 = { ESCAPED NONLOCAL }
_382 = { ESCAPED NONLOCAL }
accum_383 = { ESCAPED NONLOCAL }
accum_384 = { ESCAPED NONLOCAL } same as accum_383
accum_385 = { ESCAPED NONLOCAL } same as accum_383
_393 = { NONLOCAL }
accum_394 = { ESCAPED NONLOCAL }
_395 = { ESCAPED NONLOCAL }
accum_396 = { ESCAPED NONLOCAL }
accum_397 = { ESCAPED NONLOCAL } same as accum_396
accum_398 = { ESCAPED NONLOCAL } same as accum_396
_246 = { ESCAPED NONLOCAL } same as _170
_247 = { ESCAPED NONLOCAL }
_248 = { ESCAPED NONLOCAL }


Alias information for DivideInternalFPF

Aliased symbols

locx, UID D.3079, struct InternalFPF, is addressable
extra_bits, UID D.3078, short unsigned int[4], is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_7, points-to non-local, points-to vars: { }
_11, points-to non-local, points-to vars: { }
_16, points-to non-local, points-to vars: { }
_17, points-to non-local, points-to vars: { }
_34, points-to non-local, points-to vars: { }
x_50(D), points-to non-local, points-to NULL, points-to vars: { }
y_51(D), points-to non-local, points-to NULL, points-to vars: { }
z_52(D), points-to non-local, points-to NULL, points-to vars: { }
_73, points-to non-local, points-to NULL, points-to vars: { }
_86, points-to non-local, points-to NULL, points-to vars: { }
_109, points-to non-local, points-to NULL, points-to vars: { }
_122, points-to non-local, points-to NULL, points-to vars: { }
_249, points-to non-local, points-to NULL, points-to vars: { }
_253, points-to non-local, points-to NULL, points-to vars: { }
mantissa_272, points-to non-local, points-to NULL, points-to vars: { }
_332, points-to non-local, points-to NULL, points-to vars: { }
_339, points-to non-local, points-to NULL, points-to vars: { }
_346, points-to non-local, points-to NULL, points-to vars: { }
_354, points-to non-local, points-to NULL, points-to vars: { }
_367, points-to non-local, points-to NULL, points-to vars: { }
_380, points-to non-local, points-to NULL, points-to vars: { }
_393, points-to non-local, points-to NULL, points-to vars: { }
_518, points-to non-local, points-to NULL, points-to vars: { }
_531, points-to non-local, points-to NULL, points-to vars: { }
_544, points-to non-local, points-to NULL, points-to vars: { }
_557, points-to non-local, points-to NULL, points-to vars: { }
_650, points-to NULL, points-to vars: { D.3078 }
_663, points-to NULL, points-to vars: { D.3078 }
_676, points-to NULL, points-to vars: { D.3078 }
_689, points-to NULL, points-to vars: { D.3078 }
_702, points-to NULL, points-to vars: { D.3079 }
_715, points-to NULL, points-to vars: { D.3079 }
_728, points-to NULL, points-to vars: { D.3079 }
_741, points-to NULL, points-to vars: { D.3079 }
_773, points-to NULL, points-to vars: { D.3079 }
_782, points-to NULL, points-to vars: { D.3079 }
_791, points-to NULL, points-to vars: { D.3079 }
_800, points-to NULL, points-to vars: { D.3079 }

DivideInternalFPF (struct InternalFPF * x, struct InternalFPF * y, struct InternalFPF * z)
{
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  int n;
  long int exponent_difference;
  int i;
  int i;
  short unsigned int accum;
  unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  int i;
  int n;
  int i;
  int i;
  int i;
  int n;
  int i;
  int n;
  int i;
  int i;
  int i;
  int n;
  int i;
  int i;
  int i;
  int n;
  int i;
  struct InternalFPF locx;
  short unsigned int extra_bits[4];
  short unsigned int carry;
  int j;
  int i;
  unsigned char _1;
  int _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  short unsigned int[4] * _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;
  short unsigned int[4] * _11;
  unsigned char _12;
  unsigned char _13;
  unsigned char _14;
  short unsigned int[4] * _16;
  short unsigned int[4] * _17;
  signed short _18;
  unsigned char _20;
  unsigned char _21;
  unsigned char _22;
  short int _23;
  unsigned short _24;
  short int _25;
  unsigned short _26;
  unsigned short _27;
  unsigned short _28;
  short int _29;
  short unsigned int[4] * _34;
  short int _35;
  unsigned short _36;
  unsigned short _37;
  short int _38;
  short unsigned int _39;
  signed short _40;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _71;
  long unsigned int _72;
  short unsigned int * _73;
  short unsigned int _74;
  int _75;
  long unsigned int _84;
  long unsigned int _85;
  short unsigned int * _86;
  short unsigned int _87;
  int _88;
  long unsigned int _107;
  long unsigned int _108;
  short unsigned int * _109;
  short unsigned int _110;
  int _111;
  long unsigned int _120;
  long unsigned int _121;
  short unsigned int * _122;
  short unsigned int _123;
  int _124;
  unsigned char _170;
  unsigned char _171;
  short unsigned int _238;
  short unsigned int _239;
  long unsigned int _240;
  long unsigned int _242;
  long unsigned int _245;
  unsigned char _246;
  short unsigned int _247;
  short unsigned int _248;
  short unsigned int[4] * _249;
  long unsigned int _251;
  long unsigned int _252;
  short unsigned int * _253;
  short unsigned int _254;
  int _255;
  short int _260;
  int _261;
  int _262;
  unsigned short _267;
  unsigned short _268;
  unsigned short _269;
  short int _270;
  int _271;
  unsigned char _273;
  signed short _274;
  signed short _290;
  short unsigned int _291;
  short unsigned int _292;
  signed short _297;
  long unsigned int _330;
  long unsigned int _331;
  short unsigned int * _332;
  long unsigned int _337;
  long unsigned int _338;
  short unsigned int * _339;
  signed short _342;
  signed short _343;
  long unsigned int _344;
  long unsigned int _345;
  short unsigned int * _346;
  short unsigned int * _354;
  short unsigned int _356;
  signed short _359;
  signed short _363;
  signed short _364;
  short unsigned int * _367;
  short unsigned int _369;
  short unsigned int * _380;
  short unsigned int _382;
  short unsigned int * _393;
  short unsigned int _395;
  short unsigned int * _518;
  short unsigned int _520;
  short unsigned int * _531;
  short unsigned int _533;
  short unsigned int * _544;
  short unsigned int _546;
  short unsigned int * _557;
  short unsigned int _559;
  short unsigned int _568;
  short unsigned int _569;
  unsigned int _571;
  unsigned int _573;
  unsigned int _575;
  short unsigned int _576;
  short unsigned int _577;
  short unsigned int _578;
  short unsigned int _584;
  short unsigned int _585;
  unsigned int _587;
  unsigned int _589;
  unsigned int _591;
  short unsigned int _592;
  short unsigned int _593;
  short unsigned int _594;
  short unsigned int _600;
  short unsigned int _601;
  unsigned int _603;
  unsigned int _605;
  unsigned int _607;
  short unsigned int _608;
  short unsigned int _609;
  short unsigned int _610;
  short unsigned int _616;
  short unsigned int _617;
  unsigned int _619;
  unsigned int _621;
  unsigned int _623;
  short unsigned int _624;
  short unsigned int _625;
  short unsigned int _626;
  short unsigned int _630;
  short unsigned int _631;
  short unsigned int _634;
  short unsigned int _635;
  short unsigned int _638;
  short unsigned int _639;
  short unsigned int _642;
  short unsigned int _643;
  short unsigned int _646;
  short unsigned int _647;
  short unsigned int * _650;
  short unsigned int _652;
  short unsigned int * _663;
  short unsigned int _665;
  short unsigned int * _676;
  short unsigned int _678;
  short unsigned int * _689;
  short unsigned int _691;
  short unsigned int * _702;
  short unsigned int _704;
  signed short _707;
  signed short _711;
  short unsigned int _712;
  short unsigned int * _715;
  short unsigned int _717;
  short unsigned int * _728;
  short unsigned int _730;
  short unsigned int * _741;
  short unsigned int _743;
  long unsigned int _771;
  long unsigned int _772;
  short unsigned int * _773;
  short unsigned int _774;
  int _775;
  long unsigned int _780;
  long unsigned int _781;
  short unsigned int * _782;
  short unsigned int _783;
  int _784;
  long unsigned int _789;
  long unsigned int _790;
  short unsigned int * _791;
  short unsigned int _792;
  int _793;
  long unsigned int _798;
  long unsigned int _799;
  short unsigned int * _800;
  short unsigned int _801;
  int _802;

  <bb 2> [81.50%]:
  _1 = x_50(D)->type;
  _2 = (int) _1;
  _3 = _2 * 5;
  _4 = y_51(D)->type;
  _5 = (int) _4;
  _6 = _3 + _5;
  switch (_6) <default: <L54> [10.00%], case 0: <L56> [10.00%], case 1 ... 2: <L2> [10.00%], case 3: <L5> [10.00%], case 4: <L58> [10.00%], case 5: <L9> [10.00%], case 6 ... 7: <L59> [10.00%], case 8: <L5> [10.00%], case 9: <L58> [10.00%], case 10: <L9> [10.00%], case 11 ... 12: <L59> [10.00%], case 13: <L5> [10.00%], case 14: <L58> [10.00%], case 15 ... 17: <L12> [10.00%], case 18: <L56> [10.00%], case 19: <L58> [10.00%], case 20 ... 23: <L57> [10.00%], case 24: <L62> [10.00%]>

<L62> [8.15%]:
  goto <bb 70> (<L61>); [100.00%]

<L56> [8.15%]:
  z_52(D)->type = 4;
  z_52(D)->exp = 32767;
  z_52(D)->sign = 1;
  z_52(D)->mantissa[0] = 16384;
  z_52(D)->mantissa[1] = 0;
  i_404 = 2;
  z_52(D)->mantissa[i_404] = 0;
  i_408 = 3;
  z_52(D)->mantissa[i_408] = 0;
  i_412 = 4;
  goto <bb 72> (<L54>); [100.00%]

<L2> [8.15%]:
  _7 = &y_51(D)->mantissa;
  goto <bb 7>; [100.00%]

  <bb 6> [32.60%]:
  _71 = (long unsigned int) i_70;
  _72 = _71 * 2;
  _73 = _7 + _72;
  _74 = *_73;
  _75 = (int) _74;
  n_77 = _75 | n_76;
  i_78 = i_70 + 1;

  <bb 7> [40.75%]:
  # i_70 = PHI <0(5), i_78(6)>
  # n_76 = PHI <0(5), n_77(6)>
  if (i_70 <= 3)
    goto <bb 6>; [80.00%]
  else
    goto <bb 8>; [20.00%]

  <bb 8> [8.15%]:
  # n_186 = PHI <n_76(7)>
  if (n_76 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10> (<L5>); [50.00%]

  <bb 9> [4.08%]:
  z_52(D)->type = 4;
  z_52(D)->exp = 32767;
  z_52(D)->sign = 1;
  z_52(D)->mantissa[0] = 16384;
  z_52(D)->mantissa[1] = 0;
  i_416 = 2;
  z_52(D)->mantissa[i_416] = 0;
  i_420 = 3;
  z_52(D)->mantissa[i_420] = 0;
  i_424 = 4;
  goto <bb 72> (<L54>); [100.00%]

<L5> [12.23%]:
  _8 = x_50(D)->sign;
  _9 = y_51(D)->sign;
  _10 = _8 ^ _9;
  z_52(D)->type = 0;
  z_52(D)->sign = _10;
  z_52(D)->exp = -32767;
  z_52(D)->mantissa[0] = 0;
  i_428 = 1;
  z_52(D)->mantissa[i_428] = 0;
  i_432 = 2;
  z_52(D)->mantissa[i_432] = 0;
  i_436 = 3;
  z_52(D)->mantissa[i_436] = 0;
  i_440 = 4;
  goto <bb 72> (<L54>); [100.00%]

<L9> [8.15%]:
  _11 = &x_50(D)->mantissa;
  goto <bb 13>; [100.00%]

  <bb 12> [32.60%]:
  _84 = (long unsigned int) i_83;
  _85 = _84 * 2;
  _86 = _11 + _85;
  _87 = *_86;
  _88 = (int) _87;
  n_90 = _88 | n_89;
  i_91 = i_83 + 1;

  <bb 13> [40.75%]:
  # i_83 = PHI <0(11), i_91(12)>
  # n_89 = PHI <0(11), n_90(12)>
  if (i_83 <= 3)
    goto <bb 12>; [80.00%]
  else
    goto <bb 14>; [20.00%]

  <bb 14> [8.15%]:
  # n_105 = PHI <n_89(13)>
  if (n_89 == 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16> (<L12>); [50.00%]

  <bb 15> [4.08%]:
  z_52(D)->type = 4;
  z_52(D)->exp = 32767;
  z_52(D)->sign = 1;
  z_52(D)->mantissa[0] = 16384;
  z_52(D)->mantissa[1] = 0;
  i_444 = 2;
  z_52(D)->mantissa[i_444] = 0;
  i_448 = 3;
  z_52(D)->mantissa[i_448] = 0;
  i_452 = 4;
  goto <bb 72> (<L54>); [100.00%]

<L12> [12.23%]:
  z_52(D)->type = 3;
  z_52(D)->sign = 0;
  z_52(D)->exp = -32767;
  z_52(D)->mantissa[0] = 0;
  i_456 = 1;
  z_52(D)->mantissa[i_456] = 0;
  i_460 = 2;
  z_52(D)->mantissa[i_460] = 0;
  i_464 = 3;
  z_52(D)->mantissa[i_464] = 0;
  i_468 = 4;
  _12 = x_50(D)->sign;
  _13 = y_51(D)->sign;
  _14 = _12 ^ _13;
  z_52(D)->sign = _14;
  goto <bb 72> (<L54>); [100.00%]

<L57> [8.15%]:
  _55 = __builtin_object_size (x_50(D), 0);
  __builtin_memmove (x_50(D), z_52(D), 12);
  goto <bb 72> (<L54>); [100.00%]

<L58> [8.15%]:
  _54 = __builtin_object_size (y_51(D), 0);
  __builtin_memmove (y_51(D), z_52(D), 12);
  goto <bb 72> (<L54>); [100.00%]

<L59> [8.15%]:
  __builtin_memcpy (&locx, x_50(D), 12);
  _771 = 0;
  _772 = 0;
  _773 = &locx.mantissa;
  _774 = *_773;
  _775 = (int) _774;
  n_776 = _775;
  i_777 = 1;
  _780 = 1;
  _781 = 2;
  _782 = &locx.mantissa + 2;
  _783 = *_782;
  _784 = (int) _783;
  _647 = _774 | _783;
  n_785 = (int) _647;
  i_786 = 2;
  _789 = 2;
  _790 = 4;
  _791 = &locx.mantissa + 4;
  _792 = *_791;
  _793 = (int) _792;
  _646 = _647 | _792;
  n_794 = (int) _646;
  i_795 = 3;
  _798 = 3;
  _799 = 6;
  _800 = &locx.mantissa + 6;
  _801 = *_800;
  _802 = (int) _801;
  _712 = _646 | _801;
  n_803 = (int) _712;
  i_804 = 4;
  if (_712 == 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 20> [4.07%]:
  _16 = &y_51(D)->mantissa;
  goto <bb 22>; [100.00%]

  <bb 21> [16.30%]:
  _107 = (long unsigned int) i_106;
  _108 = _107 * 2;
  _109 = _16 + _108;
  _110 = *_109;
  _111 = (int) _110;
  n_113 = _111 | n_112;
  i_114 = i_106 + 1;

  <bb 22> [20.37%]:
  # i_106 = PHI <0(20), i_114(21)>
  # n_112 = PHI <0(20), n_113(21)>
  if (i_106 <= 3)
    goto <bb 21>; [80.00%]
  else
    goto <bb 23>; [20.00%]

  <bb 23> [4.07%]:
  # n_15 = PHI <n_112(22)>
  if (n_112 == 0)
    goto <bb 24>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 24> [2.04%]:
  z_52(D)->type = 4;
  z_52(D)->exp = 32767;
  z_52(D)->sign = 1;
  z_52(D)->mantissa[0] = 16384;
  z_52(D)->mantissa[1] = 0;
  i_472 = 2;
  z_52(D)->mantissa[i_472] = 0;
  i_476 = 3;
  z_52(D)->mantissa[i_476] = 0;
  i_480 = 4;
  goto <bb 72> (<L54>); [100.00%]

  <bb 25> [2.04%]:
  z_52(D)->type = 0;
  z_52(D)->sign = 0;
  z_52(D)->exp = -32767;
  z_52(D)->mantissa[0] = 0;
  i_484 = 1;
  z_52(D)->mantissa[i_484] = 0;
  i_488 = 2;
  z_52(D)->mantissa[i_488] = 0;
  i_492 = 3;
  z_52(D)->mantissa[i_492] = 0;
  i_496 = 4;
  goto <bb 72> (<L54>); [100.00%]

  <bb 26> [4.07%]:
  _17 = &y_51(D)->mantissa;
  goto <bb 28>; [100.00%]

  <bb 27> [16.30%]:
  _120 = (long unsigned int) i_119;
  _121 = _120 * 2;
  _122 = _17 + _121;
  _123 = *_122;
  _124 = (int) _123;
  n_126 = _124 | n_125;
  i_127 = i_119 + 1;

  <bb 28> [20.37%]:
  # i_119 = PHI <0(26), i_127(27)>
  # n_125 = PHI <0(26), n_126(27)>
  if (i_119 <= 3)
    goto <bb 27>; [80.00%]
  else
    goto <bb 29>; [20.00%]

  <bb 29> [4.07%]:
  # n_128 = PHI <n_125(28)>
  if (n_125 == 0)
    goto <bb 30>; [50.00%]
  else
    goto <bb 31>; [50.00%]

  <bb 30> [2.04%]:
  z_52(D)->type = 3;
  z_52(D)->sign = 0;
  z_52(D)->exp = -32767;
  z_52(D)->mantissa[0] = 0;
  i_500 = 1;
  z_52(D)->mantissa[i_500] = 0;
  i_504 = 2;
  z_52(D)->mantissa[i_504] = 0;
  i_508 = 3;
  z_52(D)->mantissa[i_508] = 0;
  i_512 = 4;
  goto <bb 72> (<L54>); [100.00%]

  <bb 31> [2.04%]:
  z_52(D)->type = _1;
  _20 = x_50(D)->sign;
  _21 = y_51(D)->sign;
  _22 = _20 ^ _21;
  z_52(D)->sign = _22;
  _23 = x_50(D)->exp;
  _24 = (unsigned short) _23;
  _25 = y_51(D)->exp;
  _26 = (unsigned short) _25;
  _27 = _24 - _26;
  _28 = _27 + 128;
  _29 = (short int) _28;
  z_52(D)->exp = _29;
  z_52(D)->mantissa[0] = 0;
  extra_bits[0] = 0;
  i_753 = 1;
  z_52(D)->mantissa[i_753] = 0;
  extra_bits[i_753] = 0;
  i_758 = 2;
  z_52(D)->mantissa[i_758] = 0;
  extra_bits[i_758] = 0;
  i_763 = 3;
  z_52(D)->mantissa[i_763] = 0;
  extra_bits[i_763] = 0;
  i_768 = 4;
  goto <bb 57>; [100.00%]

  <bb 32> [5.77%]:
  accum_654 = accum_653 | 1;

  <bb 33> [11.55%]:
  # accum_655 = PHI <accum_653(64), accum_654(32)>
  MEM[(short unsigned int *)&extra_bits + 6B] = accum_655;
  _663 = &extra_bits + 4;
  accum_664 = MEM[(short unsigned int *)&extra_bits + 4B];
  _665 = accum_664 & 32768;
  accum_666 = accum_664 << 1;
  _364 = (signed short) accum_651;
  if (_364 < 0)
    goto <bb 34>; [50.00%]
  else
    goto <bb 35>; [50.00%]

  <bb 34> [5.77%]:
  accum_667 = accum_666 | 1;

  <bb 35> [11.55%]:
  # accum_668 = PHI <accum_666(33), accum_667(34)>
  MEM[(short unsigned int *)&extra_bits + 4B] = accum_668;
  _676 = &extra_bits + 2;
  accum_677 = MEM[(short unsigned int *)&extra_bits + 2B];
  _678 = accum_677 & 32768;
  accum_679 = accum_677 << 1;
  _363 = (signed short) accum_664;
  if (_363 < 0)
    goto <bb 36>; [50.00%]
  else
    goto <bb 37>; [50.00%]

  <bb 36> [5.77%]:
  accum_680 = accum_679 | 1;

  <bb 37> [11.55%]:
  # accum_681 = PHI <accum_679(35), accum_680(36)>
  MEM[(short unsigned int *)&extra_bits + 2B] = accum_681;
  _689 = &extra_bits;
  accum_690 = MEM[(short unsigned int *)&extra_bits];
  _691 = accum_690 & 32768;
  accum_692 = accum_690 << 1;
  _359 = (signed short) accum_677;
  if (_359 < 0)
    goto <bb 38>; [50.00%]
  else
    goto <bb 39>; [50.00%]

  <bb 38> [5.77%]:
  accum_693 = accum_692 | 1;

  <bb 39> [11.55%]:
  # accum_694 = PHI <accum_692(37), accum_693(38)>
  MEM[(short unsigned int *)&extra_bits] = accum_694;
  _297 = (signed short) accum_690;
  if (_297 >= 0)
    goto <bb 40>; [50.00%]
  else
    goto <bb 47>; [50.00%]

  <bb 40> [5.77%]:
  _630 = y_51(D)->mantissa[0];
  _631 = extra_bits[0];
  if (_630 > _631)
    goto <bb 48> (no_subtract); [5.00%]
  else
    goto <bb 41>; [95.00%]

  <bb 41> [5.48%]:
  if (_630 < _631)
    goto <bb 47>; [5.00%]
  else
    goto <bb 42>; [95.00%]

  <bb 42> [5.34%]:
  _634 = y_51(D)->mantissa[1];
  _635 = extra_bits[1];
  if (_634 > _635)
    goto <bb 48> (no_subtract); [5.00%]
  else
    goto <bb 43>; [95.00%]

  <bb 43> [5.07%]:
  if (_634 < _635)
    goto <bb 47>; [5.00%]
  else
    goto <bb 44>; [95.00%]

  <bb 44> [4.90%]:
  _638 = y_51(D)->mantissa[2];
  _639 = extra_bits[2];
  if (_638 > _639)
    goto <bb 48> (no_subtract); [5.00%]
  else
    goto <bb 45>; [95.00%]

  <bb 45> [4.66%]:
  if (_638 < _639)
    goto <bb 47>; [5.00%]
  else
    goto <bb 46>; [95.00%]

  <bb 46> [4.53%]:
  _642 = y_51(D)->mantissa[3];
  _643 = extra_bits[3];
  if (_642 > _643)
    goto <bb 48> (no_subtract); [5.00%]
  else
    goto <bb 47>; [95.00%]

  <bb 47> [10.72%]:
  # j_188 = PHI <3(39), 3(43), 3(45), 3(46), 3(41)>
  # carry_244 = PHI <0(39), 0(43), 0(45), 0(46), 0(41)>
  _568 = y_51(D)->mantissa[j_188];
  _569 = extra_bits[j_188];
  accum_570 = (unsigned int) _569;
  _571 = (unsigned int) _568;
  accum_572 = accum_570 - _571;
  _573 = 0;
  accum_574 = accum_572;
  _575 = accum_572 >> 16;
  _576 = (short unsigned int) _575;
  _577 = _576 & 1;
  _578 = _569 - _568;
  MEM[(short unsigned int *)&extra_bits][j_188] = _578;
  j_580 = 2;
  _584 = y_51(D)->mantissa[j_580];
  _585 = extra_bits[j_580];
  accum_586 = (unsigned int) _585;
  _587 = (unsigned int) _584;
  accum_588 = accum_586 - _587;
  _589 = (unsigned int) _577;
  accum_590 = accum_588 - _589;
  _591 = accum_590 >> 16;
  _592 = (short unsigned int) _591;
  _593 = _592 & 1;
  _594 = (short unsigned int) accum_590;
  MEM[(short unsigned int *)&extra_bits][j_580] = _594;
  j_596 = 1;
  _600 = y_51(D)->mantissa[j_596];
  _601 = extra_bits[j_596];
  accum_602 = (unsigned int) _601;
  _603 = (unsigned int) _600;
  accum_604 = accum_602 - _603;
  _605 = (unsigned int) _593;
  accum_606 = accum_604 - _605;
  _607 = accum_606 >> 16;
  _608 = (short unsigned int) _607;
  _609 = _608 & 1;
  _610 = (short unsigned int) accum_606;
  MEM[(short unsigned int *)&extra_bits][j_596] = _610;
  j_612 = 0;
  _616 = y_51(D)->mantissa[j_612];
  _617 = extra_bits[j_612];
  accum_618 = (unsigned int) _617;
  _619 = (unsigned int) _616;
  accum_620 = accum_618 - _619;
  _621 = (unsigned int) _609;
  accum_622 = accum_620 - _621;
  _623 = accum_622 >> 16;
  _624 = (short unsigned int) _623;
  _625 = _624 & 1;
  _626 = (short unsigned int) accum_622;
  MEM[(short unsigned int *)&extra_bits][j_612] = _626;
  j_628 = -1;

  # carry_234 = PHI <0(40), 1(47), 0(46), 0(44), 0(42)>
no_subtract [11.55%]:
  _34 = &z_52(D)->mantissa;
  _518 = &MEM[(void *)z_52(D) + 10B];
  accum_519 = MEM[(short unsigned int *)z_52(D) + 10B];
  _520 = accum_519 & 32768;
  accum_521 = accum_519 << 1;
  if (carry_234 != 0)
    goto <bb 49>; [50.00%]
  else
    goto <bb 50>; [50.00%]

  <bb 49> [5.77%]:
  accum_522 = accum_521 | 1;

  <bb 50> [11.55%]:
  # accum_523 = PHI <accum_521(48), accum_522(49)>
  MEM[(short unsigned int *)z_52(D) + 10B] = accum_523;
  _531 = &MEM[(void *)z_52(D) + 8B];
  accum_532 = MEM[(short unsigned int *)z_52(D) + 8B];
  _533 = accum_532 & 32768;
  accum_534 = accum_532 << 1;
  _274 = (signed short) accum_519;
  if (_274 < 0)
    goto <bb 51>; [50.00%]
  else
    goto <bb 52>; [50.00%]

  <bb 51> [5.77%]:
  accum_535 = accum_534 | 1;

  <bb 52> [11.55%]:
  # accum_536 = PHI <accum_534(50), accum_535(51)>
  MEM[(short unsigned int *)z_52(D) + 8B] = accum_536;
  _544 = &MEM[(void *)z_52(D) + 6B];
  accum_545 = MEM[(short unsigned int *)z_52(D) + 6B];
  _546 = accum_545 & 32768;
  accum_547 = accum_545 << 1;
  _343 = (signed short) accum_532;
  if (_343 < 0)
    goto <bb 53>; [50.00%]
  else
    goto <bb 54>; [50.00%]

  <bb 53> [5.77%]:
  accum_548 = accum_547 | 1;

  <bb 54> [11.55%]:
  # accum_549 = PHI <accum_547(52), accum_548(53)>
  MEM[(short unsigned int *)z_52(D) + 6B] = accum_549;
  _557 = _34;
  accum_558 = MEM[(short unsigned int *)z_52(D) + 4B];
  _559 = accum_558 & 32768;
  accum_560 = accum_558 << 1;
  _342 = (signed short) accum_545;
  if (_342 < 0)
    goto <bb 55>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 55> [5.77%]:
  accum_561 = accum_560 | 1;

  <bb 56> [11.55%]:
  # accum_562 = PHI <accum_560(54), accum_561(55)>
  MEM[(short unsigned int *)z_52(D) + 4B] = accum_562;
  _35 = z_52(D)->exp;
  _36 = (unsigned short) _35;
  _37 = _36 + 65535;
  _38 = (short int) _37;
  z_52(D)->exp = _38;

  <bb 57> [13.58%]:
  _39 = z_52(D)->mantissa[0];
  _40 = (signed short) _39;
  if (_40 >= 0)
    goto <bb 58>; [85.00%]
  else
    goto <bb 72> (<L54>); [15.00%]

  <bb 58> [11.55%]:
  _702 = &locx.mantissa + 6;
  accum_703 = MEM[(short unsigned int *)&locx + 10B];
  _704 = accum_703 & 32768;
  accum_705 = accum_703 << 1;
  MEM[(short unsigned int *)&locx + 10B] = accum_705;
  _715 = &locx.mantissa + 4;
  accum_716 = MEM[(short unsigned int *)&locx + 8B];
  _717 = accum_716 & 32768;
  accum_718 = accum_716 << 1;
  _711 = (signed short) accum_703;
  if (_711 < 0)
    goto <bb 59>; [50.00%]
  else
    goto <bb 60>; [50.00%]

  <bb 59> [5.77%]:
  accum_719 = accum_718 | 1;

  <bb 60> [11.55%]:
  # accum_720 = PHI <accum_718(58), accum_719(59)>
  MEM[(short unsigned int *)&locx + 8B] = accum_720;
  _728 = &locx.mantissa + 2;
  accum_729 = MEM[(short unsigned int *)&locx + 6B];
  _730 = accum_729 & 32768;
  accum_731 = accum_729 << 1;
  _707 = (signed short) accum_716;
  if (_707 < 0)
    goto <bb 61>; [50.00%]
  else
    goto <bb 62>; [50.00%]

  <bb 61> [5.77%]:
  accum_732 = accum_731 | 1;

  <bb 62> [11.55%]:
  # accum_733 = PHI <accum_731(60), accum_732(61)>
  MEM[(short unsigned int *)&locx + 6B] = accum_733;
  _741 = &locx.mantissa;
  accum_742 = MEM[(short unsigned int *)&locx + 4B];
  _743 = accum_742 & 32768;
  accum_744 = accum_742 << 1;
  _18 = (signed short) accum_729;
  if (_18 < 0)
    goto <bb 63>; [50.00%]
  else
    goto <bb 64>; [50.00%]

  <bb 63> [5.77%]:
  accum_745 = accum_744 | 1;

  <bb 64> [11.55%]:
  # accum_746 = PHI <accum_744(62), accum_745(63)>
  MEM[(short unsigned int *)&locx + 4B] = accum_746;
  _650 = &extra_bits + 6;
  accum_651 = MEM[(short unsigned int *)&extra_bits + 6B];
  _652 = accum_651 & 32768;
  accum_653 = accum_651 << 1;
  _290 = (signed short) accum_742;
  if (_290 < 0)
    goto <bb 32>; [50.00%]
  else
    goto <bb 33>; [50.00%]

  <bb 65> [23.45%]:
  _238 = x_50(D)->mantissa[i_237];
  _239 = y_51(D)->mantissa[i_237];
  if (_238 > _239)
    goto <bb 66>; [5.00%]
  else
    goto <bb 67>; [95.00%]

  <bb 66> [1.17%]:
  _240 = __builtin_object_size (x_50(D), 0);
  __builtin_memmove (x_50(D), z_52(D), 12);
  goto <bb 72> (<L54>); [100.00%]

  <bb 67> [22.28%]:
  if (_238 < _239)
    goto <bb 68>; [5.00%]
  else
    goto <bb 69>; [95.00%]

  <bb 68> [1.11%]:
  _245 = __builtin_object_size (y_51(D), 0);
  __builtin_memmove (y_51(D), z_52(D), 12);
  goto <bb 72> (<L54>); [100.00%]

  <bb 69> [21.17%]:
  i_241 = i_237 + 1;

  # i_237 = PHI <0(3), i_241(69)>
<L61> [29.32%]:
  if (i_237 <= 3)
    goto <bb 65>; [80.00%]
  else
    goto <bb 71>; [20.00%]

  <bb 71> [5.86%]:
  _242 = __builtin_object_size (x_50(D), 0);
  __builtin_memmove (x_50(D), z_52(D), 12);

<L54> [81.50%]:
  _170 = z_52(D)->type;
  _171 = _170 + 255;
  if (_171 <= 1)
    goto <bb 73>; [24.54%]
  else
    goto <bb 97>; [75.46%]

  <bb 73> [20.00%]:
  _249 = &z_52(D)->mantissa;
  goto <bb 75>; [100.00%]

  <bb 74> [80.00%]:
  _251 = (long unsigned int) i_250;
  _252 = _251 * 2;
  _253 = _249 + _252;
  _254 = *_253;
  _255 = (int) _254;
  n_257 = _255 | n_256;
  i_258 = i_250 + 1;

  <bb 75> [100.00%]:
  # i_250 = PHI <0(73), i_258(74)>
  # n_256 = PHI <0(73), n_257(74)>
  if (i_250 <= 3)
    goto <bb 74>; [80.00%]
  else
    goto <bb 76>; [20.00%]

  <bb 76> [20.00%]:
  # n_259 = PHI <n_256(75)>
  if (n_256 == 0)
    goto <bb 77>; [33.00%]
  else
    goto <bb 78>; [67.00%]

  <bb 77> [6.60%]:
  __builtin_puts (&"Error:  zero significand in denormalize"[0]);

  <bb 78> [20.00%]:
  _260 = z_52(D)->exp;
  _261 = (int) _260;
  _262 = _261 + 32767;
  exponent_difference_263 = (long int) _262;
  if (exponent_difference_263 < 0)
    goto <bb 79>; [39.77%]
  else
    goto <bb 95>; [60.23%]

  <bb 79> [7.95%]:
  exponent_difference_264 = -exponent_difference_263;
  if (exponent_difference_263 < -63)
    goto <bb 80>; [67.00%]
  else
    goto <bb 81>; [33.00%]

  <bb 80> [5.33%]:
  z_52(D)->type = 0;
  z_52(D)->exp = -32767;
  z_52(D)->mantissa[0] = 0;
  i_315 = 1;
  z_52(D)->mantissa[i_315] = 0;
  i_319 = 2;
  z_52(D)->mantissa[i_319] = 0;
  i_323 = 3;
  z_52(D)->mantissa[i_323] = 0;
  i_327 = 4;
  goto <bb 95>; [100.00%]

  <bb 81> [2.62%]:
  _267 = (unsigned short) _260;
  _268 = (unsigned short) exponent_difference_264;
  _269 = _267 + _268;
  _270 = (short int) _269;
  z_52(D)->exp = _270;
  _271 = (int) exponent_difference_264;
  mantissa_272 = &z_52(D)->mantissa;
  _273 = z_52(D)->type;
  if (_273 != 0)
    goto <bb 82>; [54.00%]
  else
    goto <bb 95>; [46.00%]

  <bb 82> [1.42%]:
  if (_271 > 63)
    goto <bb 84>; [50.00%]
  else
    goto <bb 83>; [50.00%]

  <bb 83> [0.71%]:
  goto <bb 87>; [100.00%]

  <bb 84> [0.71%]:
  # i_328 = PHI <0(82)>
  _330 = 0;
  _331 = 0;
  _332 = mantissa_272;
  *_332 = 0;
  i_334 = 1;
  _337 = 1;
  _338 = 2;
  _339 = mantissa_272 + 2;
  *_339 = 0;
  i_341 = 2;
  _344 = 2;
  _345 = 4;
  _346 = mantissa_272 + 4;
  *_346 = 0;
  i_348 = 3;
  MEM[(short unsigned int *)z_52(D) + 10B] = 1;
  goto <bb 95>; [100.00%]

  <bb 85> [2.01%]:
  _291 = MEM[(short unsigned int *)z_52(D) + 10B];
  _292 = _291 | 1;
  MEM[(short unsigned int *)z_52(D) + 10B] = _292;

  <bb 86> [4.02%]:
  i_294 = i_293 + 1;

  <bb 87> [4.72%]:
  # i_293 = PHI <0(83), i_294(86)>
  if (_271 > i_293)
    goto <bb 88>; [85.00%]
  else
    goto <bb 95>; [15.00%]

  <bb 88> [4.02%]:
  _354 = mantissa_272;
  accum_355 = MEM[(short unsigned int *)z_52(D) + 4B];
  _356 = accum_355 & 1;
  accum_357 = accum_355 >> 1;
  MEM[(short unsigned int *)z_52(D) + 4B] = accum_357;
  _367 = &MEM[(void *)z_52(D) + 6B];
  accum_368 = MEM[(short unsigned int *)z_52(D) + 6B];
  _369 = accum_368 & 1;
  accum_370 = accum_368 >> 1;
  if (_356 != 0)
    goto <bb 89>; [50.00%]
  else
    goto <bb 90>; [50.00%]

  <bb 89> [2.01%]:
  accum_371 = accum_370 | 32768;

  <bb 90> [4.02%]:
  # accum_372 = PHI <accum_370(88), accum_371(89)>
  MEM[(short unsigned int *)z_52(D) + 6B] = accum_372;
  _380 = &MEM[(void *)z_52(D) + 8B];
  accum_381 = MEM[(short unsigned int *)z_52(D) + 8B];
  _382 = accum_381 & 1;
  accum_383 = accum_381 >> 1;
  if (_369 != 0)
    goto <bb 91>; [50.00%]
  else
    goto <bb 92>; [50.00%]

  <bb 91> [2.01%]:
  accum_384 = accum_383 | 32768;

  <bb 92> [4.02%]:
  # accum_385 = PHI <accum_383(90), accum_384(91)>
  MEM[(short unsigned int *)z_52(D) + 8B] = accum_385;
  _393 = &MEM[(void *)z_52(D) + 10B];
  accum_394 = MEM[(short unsigned int *)z_52(D) + 10B];
  _395 = accum_394 & 1;
  accum_396 = accum_394 >> 1;
  if (_382 != 0)
    goto <bb 93>; [50.00%]
  else
    goto <bb 94>; [50.00%]

  <bb 93> [2.01%]:
  accum_397 = accum_396 | 32768;

  <bb 94> [4.02%]:
  # accum_398 = PHI <accum_396(92), accum_397(93)>
  MEM[(short unsigned int *)z_52(D) + 10B] = accum_398;
  if (_395 != 0)
    goto <bb 85>; [50.00%]
  else
    goto <bb 86>; [50.00%]

  <bb 95> [20.00%]:
  _246 = z_52(D)->type;
  if (_246 != 0)
    goto <bb 96>; [54.00%]
  else
    goto <bb 97>; [46.00%]

  <bb 96> [10.80%]:
  _247 = z_52(D)->mantissa[3];
  _248 = _247 & 65528;
  z_52(D)->mantissa[3] = _248;

  <bb 97> [81.50%]:
  extra_bits ={v} {CLOBBER};
  locx ={v} {CLOBBER};
  return;

}



;; Function AddSubInternalFPF (AddSubInternalFPF, funcdef_no=49, decl_uid=2819, cgraph_uid=49, symbol_order=49)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
operation = &NONLOCAL
x = &NONLOCAL
y = &NONLOCAL
z = &NONLOCAL
_1 = *x
_2 = _1
_3 = _2
_3 = &NONLOCAL
_4 = *y
_5 = _4
_6 = _3
_6 = _5
CALLUSED(19) = CALLUSED(19) + UNKNOWN
CALLUSED(19) = *CALLUSED(19) + UNKNOWN
CALLUSED(19) = x
CALLUSED(19) = &NULL
_83 = CALLUSED(19)
_83 = NONLOCAL
doubledereftmp(22) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(22)
_7 = *x + 8
_8 = *y + 8
_9 = _7
_9 = _8
derefaddrtmp(26) = &NULL
*z + 8 = derefaddrtmp(26)
CALLUSED(27) = CALLUSED(27) + UNKNOWN
CALLUSED(27) = *CALLUSED(27) + UNKNOWN
CALLUSED(27) = x
CALLUSED(27) = &NULL
_92 = CALLUSED(27)
_92 = NONLOCAL
doubledereftmp(30) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(30)
CALLUSED(31) = CALLUSED(31) + UNKNOWN
CALLUSED(31) = *CALLUSED(31) + UNKNOWN
CALLUSED(31) = y
CALLUSED(31) = &NULL
_93 = CALLUSED(31)
_93 = NONLOCAL
doubledereftmp(34) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(34)
CALLUSED(35) = CALLUSED(35) + UNKNOWN
CALLUSED(35) = *CALLUSED(35) + UNKNOWN
CALLUSED(35) = y
CALLUSED(35) = &NULL
_94 = CALLUSED(35)
_94 = NONLOCAL
doubledereftmp(38) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(38)
_10 = *z + 8
_11 = _10
_11 = operation
*z + 8 = _11
locx = *x + UNKNOWN
locy = *y + UNKNOWN
_12 = locx
_13 = _12
_14 = locy
_15 = _14
exponent_difference_62 = _13
exponent_difference_62 = _15
derefaddrtmp(48) = &NONLOCAL
*z = derefaddrtmp(48)
derefaddrtmp(49) = &NONLOCAL
*z = derefaddrtmp(49)
_17 = locx
*z + 8 = _17
*z + 16 = _12
_172 = locy
i_468 = &NULL
_470 = &NULL
_471 = &NULL
_472 = &locy
derefaddrtmp(56) = &NULL
*_472 = derefaddrtmp(56)
i_474 = &NONLOCAL
_477 = &NONLOCAL
_478 = &NONLOCAL
_479 = &locy
derefaddrtmp(61) = &NULL
*_479 = derefaddrtmp(61)
i_481 = &NONLOCAL
_484 = &NONLOCAL
_485 = &NONLOCAL
_486 = &locy
derefaddrtmp(66) = &NULL
*_486 = derefaddrtmp(66)
i_488 = &NONLOCAL
locy = &NONLOCAL
_190 = locy
_191 = _190
_191 = &NONLOCAL
locy = _191
i_193 = i_192
i_193 = &NONLOCAL
i_192 = &NULL
i_192 = i_193
_494 = &locy
accum_495 = locy
_496 = accum_495 + UNKNOWN
accum_497 = accum_495
accum_497 = &NONLOCAL
locy = accum_497
_507 = &locy
accum_508 = locy
_509 = accum_508 + UNKNOWN
accum_510 = accum_508
accum_510 = &NONLOCAL
accum_511 = accum_510
accum_511 = &NONLOCAL
accum_512 = accum_510
accum_512 = accum_511
locy = accum_512
_520 = &locy
accum_521 = locy
_522 = accum_521 + UNKNOWN
accum_523 = accum_521
accum_523 = &NONLOCAL
accum_524 = accum_523
accum_524 = &NONLOCAL
accum_525 = accum_523
accum_525 = accum_524
locy = accum_525
_533 = &locy
accum_534 = locy
_535 = accum_534 + UNKNOWN
accum_536 = accum_534
accum_536 = &NONLOCAL
accum_537 = accum_536
accum_537 = &NONLOCAL
accum_538 = accum_536
accum_538 = accum_537
locy = accum_538
_18 = locx
*z = _18
_19 = locx
*z + 8 = _19
_20 = locx
*z + 16 = _20
_21 = exponent_difference_62
_195 = locx
i_541 = &NULL
_543 = &NULL
_544 = &NULL
_545 = &locx
derefaddrtmp(103) = &NULL
*_545 = derefaddrtmp(103)
i_547 = &NONLOCAL
_550 = &NONLOCAL
_551 = &NONLOCAL
_552 = &locx
derefaddrtmp(108) = &NULL
*_552 = derefaddrtmp(108)
i_554 = &NONLOCAL
_557 = &NONLOCAL
_558 = &NONLOCAL
_559 = &locx
derefaddrtmp(113) = &NULL
*_559 = derefaddrtmp(113)
i_561 = &NONLOCAL
locx = &NONLOCAL
_213 = locx
_214 = _213
_214 = &NONLOCAL
locx = _214
i_216 = i_215
i_216 = &NONLOCAL
i_215 = &NULL
i_215 = i_216
_567 = &locx
accum_568 = locx
_569 = accum_568 + UNKNOWN
accum_570 = accum_568
accum_570 = &NONLOCAL
locx = accum_570
_580 = &locx
accum_581 = locx
_582 = accum_581 + UNKNOWN
accum_583 = accum_581
accum_583 = &NONLOCAL
accum_584 = accum_583
accum_584 = &NONLOCAL
accum_585 = accum_583
accum_585 = accum_584
locx = accum_585
_593 = &locx
accum_594 = locx
_595 = accum_594 + UNKNOWN
accum_596 = accum_594
accum_596 = &NONLOCAL
accum_597 = accum_596
accum_597 = &NONLOCAL
accum_598 = accum_596
accum_598 = accum_597
locx = accum_598
_606 = &locx
accum_607 = locx
_608 = accum_607 + UNKNOWN
accum_609 = accum_607
accum_609 = &NONLOCAL
accum_610 = accum_609
accum_610 = &NONLOCAL
accum_611 = accum_609
accum_611 = accum_610
locx = accum_611
_22 = locy
*z = _22
_23 = locy
_24 = _23
_24 = operation
*z + 8 = _24
_25 = locy
*z + 16 = _25
_26 = locx
_27 = locy
_28 = _26
_28 = _27
_29 = locy
_30 = locx
accum_95 = _30
_96 = _29
accum_97 = accum_95
accum_97 = _96
_98 = borrow_165
accum_99 = accum_97
accum_99 = _98
_100 = accum_99
_100 = &NONLOCAL
_101 = _100
_102 = _101 + UNKNOWN
_103 = accum_99
*z + UNKNOWN = _103
i_87 = i_47
i_87 = &NONLOCAL
i_47 = &NONLOCAL
i_47 = i_87
borrow_165 = &NULL
borrow_165 = _102
borrow_155 = borrow_165
_31 = _27
_31 = operation
*z + 8 = _31
_32 = *z + UNKNOWN
_104 = _32
accum_105 = _104
_106 = borrow_166
accum_107 = accum_105
accum_107 = _106
_108 = accum_107
_108 = &NONLOCAL
_109 = _108
_110 = _109 + UNKNOWN
_111 = accum_107
*z + UNKNOWN = _111
i_82 = i_48
i_82 = &NONLOCAL
i_48 = &NONLOCAL
i_48 = i_82
borrow_166 = &NULL
borrow_166 = _110
_33 = z + UNKNOWN
_113 = i_112
_114 = _113
_114 = &NONLOCAL
_115 = _33 + UNKNOWN
_116 = *_115
_117 = _116
n_119 = _117
n_119 = n_118
i_120 = i_112
i_120 = &NONLOCAL
i_112 = &NULL
i_112 = i_120
n_118 = &NULL
n_118 = n_119
n_153 = n_118
derefaddrtmp(187) = &NULL
*z = derefaddrtmp(187)
derefaddrtmp(188) = &NULL
*z + 8 = derefaddrtmp(188)
_34 = locx
_35 = locy
_217 = z + UNKNOWN
_421 = z + 80
accum_422 = *z + 80
_423 = accum_422 + UNKNOWN
accum_424 = accum_422
accum_424 = &NONLOCAL
*z + 80 = accum_424
_434 = z + 64
accum_435 = *z + 64
_436 = accum_435 + UNKNOWN
accum_437 = accum_435
accum_437 = &NONLOCAL
_212 = accum_422
accum_438 = accum_437
accum_438 = &NONLOCAL
accum_439 = accum_437
accum_439 = accum_438
*z + 64 = accum_439
_447 = z + 48
accum_448 = *z + 48
_449 = accum_448 + UNKNOWN
accum_450 = accum_448
accum_450 = &NONLOCAL
_577 = accum_435
accum_451 = accum_450
accum_451 = &NONLOCAL
accum_452 = accum_450
accum_452 = accum_451
*z + 48 = accum_452
_460 = _217
accum_461 = *z + 32
_462 = accum_461 + UNKNOWN
accum_463 = accum_461
accum_463 = &NONLOCAL
_576 = accum_448
accum_464 = accum_463
accum_464 = &NONLOCAL
accum_465 = accum_463
accum_465 = accum_464
*z + 32 = accum_465
_229 = *z + 16
_230 = _229
_231 = _230
_231 = &NONLOCAL
_232 = _231
*z + 16 = _232
_233 = *z + 32
_234 = _233
_36 = locy
_37 = locx
accum_121 = _37
_122 = _36
accum_123 = accum_121
accum_123 = _122
_124 = carry_167
accum_125 = accum_123
accum_125 = _124
_126 = accum_125
_126 = &NONLOCAL
_127 = _126
_128 = _127 + UNKNOWN
_129 = accum_125
*z + UNKNOWN = _129
i_80 = i_49
i_80 = &NONLOCAL
i_49 = &NONLOCAL
i_49 = i_80
carry_167 = &NULL
carry_167 = _128
carry_16 = carry_167
_38 = *z + 16
_39 = _38
_40 = _39
_40 = &NONLOCAL
_41 = _40
*z + 16 = _41
_42 = z + UNKNOWN
_131 = i_130
_132 = _131
_132 = &NONLOCAL
_133 = _42 + UNKNOWN
accum_134 = *_133
_135 = accum_134 + UNKNOWN
accum_136 = accum_134
accum_136 = &NONLOCAL
accum_137 = accum_136
accum_137 = &NONLOCAL
accum_138 = accum_136
accum_138 = accum_137
*_133 = accum_138
i_139 = i_130
i_139 = &NONLOCAL
i_130 = &NULL
i_130 = i_139
carry_168 = &NULL
carry_168 = _135
_43 = *z + 32
_44 = _43
_44 = &NONLOCAL
*z + 32 = _44
derefaddrtmp(256) = &NONLOCAL
*z = derefaddrtmp(256)
_45 = *z + 32
_46 = _45
derefaddrtmp(259) = &NONLOCAL
*z = derefaddrtmp(259)
derefaddrtmp(260) = &NONLOCAL
*z = derefaddrtmp(260)
derefaddrtmp(261) = &NONLOCAL
*z + 16 = derefaddrtmp(261)
derefaddrtmp(262) = &NONLOCAL
*z + 8 = derefaddrtmp(262)
derefaddrtmp(263) = &NONLOCAL
*z + 32 = derefaddrtmp(263)
derefaddrtmp(264) = &NULL
*z + 48 = derefaddrtmp(264)
i_617 = &NONLOCAL
derefaddrtmp(266) = &NULL
*z + UNKNOWN = derefaddrtmp(266)
i_621 = &NONLOCAL
derefaddrtmp(268) = &NULL
*z + UNKNOWN = derefaddrtmp(268)
i_625 = &NONLOCAL
_236 = *x + UNKNOWN
_237 = *y + UNKNOWN
CALLUSED(272) = CALLUSED(272) + UNKNOWN
CALLUSED(272) = *CALLUSED(272) + UNKNOWN
CALLUSED(272) = x
CALLUSED(272) = &NULL
_238 = CALLUSED(272)
_238 = NONLOCAL
doubledereftmp(275) = *z + UNKNOWN
*x + UNKNOWN = doubledereftmp(275)
CALLUSED(276) = CALLUSED(276) + UNKNOWN
CALLUSED(276) = *CALLUSED(276) + UNKNOWN
CALLUSED(276) = y
CALLUSED(276) = &NULL
_243 = CALLUSED(276)
_243 = NONLOCAL
doubledereftmp(279) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(279)
i_239 = i_235
i_239 = &NONLOCAL
i_235 = &NULL
i_235 = i_239
CALLUSED(282) = CALLUSED(282) + UNKNOWN
CALLUSED(282) = *CALLUSED(282) + UNKNOWN
CALLUSED(282) = y
CALLUSED(282) = &NULL
_241 = CALLUSED(282)
_241 = NONLOCAL
doubledereftmp(285) = *z + UNKNOWN
*y + UNKNOWN = doubledereftmp(285)
_142 = *z
_143 = _142
_143 = &NONLOCAL
_247 = z + UNKNOWN
_249 = i_248
_250 = _249
_250 = &NONLOCAL
_251 = _247 + UNKNOWN
_252 = *_251
_253 = _252
n_255 = _253
n_255 = n_254
i_256 = i_248
i_256 = &NONLOCAL
i_248 = &NULL
i_248 = i_256
n_254 = &NULL
n_254 = n_255
n_257 = n_254
ESCAPED = &STRING
_258 = *z + 16
_259 = _258
_260 = _259
_260 = &NONLOCAL
exponent_difference_261 = _260
exponent_difference_262 = exponent_difference_261
derefaddrtmp(305) = &NULL
*z = derefaddrtmp(305)
derefaddrtmp(306) = &NONLOCAL
*z + 16 = derefaddrtmp(306)
derefaddrtmp(307) = &NULL
*z + 32 = derefaddrtmp(307)
i_164 = &NONLOCAL
derefaddrtmp(309) = &NULL
*z + UNKNOWN = derefaddrtmp(309)
i_68 = &NONLOCAL
derefaddrtmp(311) = &NULL
*z + UNKNOWN = derefaddrtmp(311)
i_338 = &NONLOCAL
derefaddrtmp(313) = &NULL
*z + UNKNOWN = derefaddrtmp(313)
i_342 = &NONLOCAL
_265 = _258
_266 = exponent_difference_262
_267 = _265
_267 = _266
_268 = _267
*z + 16 = _268
_269 = exponent_difference_262
mantissa_270 = z + UNKNOWN
_271 = *z
i_343 = &NULL
_345 = &NULL
_346 = &NULL
_347 = mantissa_270
derefaddrtmp(326) = &NULL
*_347 = derefaddrtmp(326)
i_349 = &NONLOCAL
_352 = &NONLOCAL
_353 = &NONLOCAL
_354 = mantissa_270 + 16
derefaddrtmp(331) = &NULL
*_354 = derefaddrtmp(331)
i_356 = &NONLOCAL
_359 = &NONLOCAL
_360 = &NONLOCAL
_361 = mantissa_270 + 32
derefaddrtmp(336) = &NULL
*_361 = derefaddrtmp(336)
i_363 = &NONLOCAL
derefaddrtmp(338) = &NONLOCAL
*z + 80 = derefaddrtmp(338)
_289 = *z + 80
_290 = _289
_290 = &NONLOCAL
*z + 80 = _290
i_292 = i_291
i_292 = &NONLOCAL
i_291 = &NULL
i_291 = i_292
_369 = mantissa_270
accum_370 = *z + 32
_371 = accum_370 + UNKNOWN
accum_372 = accum_370
accum_372 = &NONLOCAL
*z + 32 = accum_372
_382 = z + 48
accum_383 = *z + 48
_384 = accum_383 + UNKNOWN
accum_385 = accum_383
accum_385 = &NONLOCAL
accum_386 = accum_385
accum_386 = &NONLOCAL
accum_387 = accum_385
accum_387 = accum_386
*z + 48 = accum_387
_395 = z + 64
accum_396 = *z + 64
_397 = accum_396 + UNKNOWN
accum_398 = accum_396
accum_398 = &NONLOCAL
accum_399 = accum_398
accum_399 = &NONLOCAL
accum_400 = accum_398
accum_400 = accum_399
*z + 64 = accum_400
_408 = z + 80
accum_409 = *z + 80
_410 = accum_409 + UNKNOWN
accum_411 = accum_409
accum_411 = &NONLOCAL
accum_412 = accum_411
accum_412 = &NONLOCAL
accum_413 = accum_411
accum_413 = accum_412
*z + 80 = accum_413
_244 = *z
_245 = *z + 80
_246 = _245 + UNKNOWN
*z + 80 = _246

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"operation"[label="operation = { 5 }"];
"x"[label="x = { 5 }"];
"y"[label="y = { 5 }"];
"z"[label="z = { 5 }"];
"_1";
"_2";
"_3"[label="_3 = { 5 }"];
"_4";
"_5";
"_6";
"__builtin_object_size";
"CALLUSED(19)"[label="CALLUSED(19) = { 1 }"];
"CALLCLOBBERED(20)";
"_83";
"doubledereftmp(22)";
"_7";
"_8";
"_9";
"derefaddrtmp(26)"[label="derefaddrtmp(26) = { 1 }"];
"CALLUSED(27)"[label="CALLUSED(27) = { 1 }"];
"CALLCLOBBERED(28)";
"_92";
"doubledereftmp(30)";
"CALLUSED(31)"[label="CALLUSED(31) = { 1 }"];
"CALLCLOBBERED(32)";
"_93";
"doubledereftmp(34)";
"CALLUSED(35)"[label="CALLUSED(35) = { 1 }"];
"CALLCLOBBERED(36)";
"_94";
"doubledereftmp(38)";
"_10";
"_11";
"locx"[label="locx = { 5 }"];
"locy"[label="locy = { 5 }"];
"_12";
"_13";
"_14";
"_15";
"exponent_difference_62";
"derefaddrtmp(48)"[label="derefaddrtmp(48) = { 5 }"];
"derefaddrtmp(49)"[label="derefaddrtmp(49) = { 5 }"];
"_17";
"_172";
"i_468"[label="i_468 = { 1 }"];
"_470"[label="_470 = { 1 }"];
"_471"[label="_471 = { 1 }"];
"_472"[label="_472 = { 42 }"];
"derefaddrtmp(56)"[label="derefaddrtmp(56) = { 1 }"];
"i_474"[label="i_474 = { 5 }"];
"_477"[label="_477 = { 5 }"];
"_478"[label="_478 = { 5 }"];
"_479"[label="_479 = { 42 }"];
"derefaddrtmp(61)"[label="derefaddrtmp(61) = { 1 }"];
"i_481"[label="i_481 = { 5 }"];
"_484"[label="_484 = { 5 }"];
"_485"[label="_485 = { 5 }"];
"_486"[label="_486 = { 42 }"];
"derefaddrtmp(66)"[label="derefaddrtmp(66) = { 1 }"];
"i_488"[label="i_488 = { 5 }"];
"i_193"[label="i_193 = { 1 5 }"];
"_494"[label="_494 = { 42 }"];
"_496";
"_507"[label="_507 = { 42 }"];
"_509";
"_520"[label="_520 = { 42 }"];
"_522";
"_533"[label="_533 = { 42 }"];
"_535";
"_18";
"_19";
"_20";
"_21";
"_195";
"i_541"[label="i_541 = { 1 }"];
"_543"[label="_543 = { 1 }"];
"_544"[label="_544 = { 1 }"];
"_545"[label="_545 = { 41 }"];
"derefaddrtmp(103)"[label="derefaddrtmp(103) = { 1 }"];
"i_547"[label="i_547 = { 5 }"];
"_550"[label="_550 = { 5 }"];
"_551"[label="_551 = { 5 }"];
"_552"[label="_552 = { 41 }"];
"derefaddrtmp(108)"[label="derefaddrtmp(108) = { 1 }"];
"i_554"[label="i_554 = { 5 }"];
"_557"[label="_557 = { 5 }"];
"_558"[label="_558 = { 5 }"];
"_559"[label="_559 = { 41 }"];
"derefaddrtmp(113)"[label="derefaddrtmp(113) = { 1 }"];
"i_561"[label="i_561 = { 5 }"];
"i_216"[label="i_216 = { 1 5 }"];
"_567"[label="_567 = { 41 }"];
"_569";
"_580"[label="_580 = { 41 }"];
"_582";
"_593"[label="_593 = { 41 }"];
"_595";
"_606"[label="_606 = { 41 }"];
"_608";
"_22";
"_23";
"_24";
"_25";
"_26";
"_27";
"_28";
"_29";
"_30";
"accum_95";
"_96";
"accum_97";
"_98";
"borrow_165"[label="borrow_165 = { 1 }"];
"accum_99";
"_100"[label="_100 = { 5 }"];
"_101";
"_102";
"_103";
"i_87"[label="i_87 = { 5 }"];
"borrow_155";
"_31";
"_32";
"_104";
"accum_105";
"_106";
"borrow_166"[label="borrow_166 = { 1 }"];
"accum_107";
"_108"[label="_108 = { 5 }"];
"_109";
"_110";
"_111";
"i_82"[label="i_82 = { 5 }"];
"_33";
"_113";
"i_112"[label="i_112 = { 1 5 }"];
"_114"[label="_114 = { 5 }"];
"_115";
"_116";
"_117";
"n_119"[label="n_119 = { 1 }"];
"n_153";
"derefaddrtmp(187)"[label="derefaddrtmp(187) = { 1 }"];
"derefaddrtmp(188)"[label="derefaddrtmp(188) = { 1 }"];
"_34";
"_35";
"_217";
"_421";
"accum_422";
"_423";
"accum_424"[label="accum_424 = { 5 }"];
"_434";
"accum_435";
"_436";
"accum_437"[label="accum_437 = { 5 }"];
"_212";
"accum_438"[label="accum_438 = { 5 }"];
"accum_439";
"_447";
"accum_448";
"_449";
"accum_450"[label="accum_450 = { 5 }"];
"_577";
"accum_451"[label="accum_451 = { 5 }"];
"accum_452";
"_460";
"accum_461";
"_462";
"accum_463"[label="accum_463 = { 5 }"];
"_576";
"accum_464"[label="accum_464 = { 5 }"];
"accum_465";
"_229";
"_230";
"_231"[label="_231 = { 5 }"];
"_232";
"_233";
"_234";
"_36";
"_37";
"accum_121";
"_122";
"accum_123";
"_124";
"carry_167"[label="carry_167 = { 1 }"];
"accum_125";
"_126"[label="_126 = { 5 }"];
"_127";
"_128";
"_129";
"i_80"[label="i_80 = { 5 }"];
"carry_16";
"_38";
"_39";
"_40"[label="_40 = { 5 }"];
"_41";
"_42";
"_131";
"i_130"[label="i_130 = { 1 5 }"];
"_132"[label="_132 = { 5 }"];
"_133";
"accum_134"[label="accum_134 = { 5 }"];
"_135";
"carry_168"[label="carry_168 = { 1 }"];
"_43";
"_44"[label="_44 = { 5 }"];
"derefaddrtmp(256)"[label="derefaddrtmp(256) = { 5 }"];
"_45";
"_46";
"derefaddrtmp(259)"[label="derefaddrtmp(259) = { 5 }"];
"derefaddrtmp(260)"[label="derefaddrtmp(260) = { 5 }"];
"derefaddrtmp(261)"[label="derefaddrtmp(261) = { 5 }"];
"derefaddrtmp(262)"[label="derefaddrtmp(262) = { 5 }"];
"derefaddrtmp(263)"[label="derefaddrtmp(263) = { 5 }"];
"derefaddrtmp(264)"[label="derefaddrtmp(264) = { 1 }"];
"i_617"[label="i_617 = { 5 }"];
"derefaddrtmp(266)"[label="derefaddrtmp(266) = { 1 }"];
"i_621"[label="i_621 = { 5 }"];
"derefaddrtmp(268)"[label="derefaddrtmp(268) = { 1 }"];
"i_625"[label="i_625 = { 5 }"];
"_236";
"_237";
"CALLUSED(272)"[label="CALLUSED(272) = { 1 }"];
"CALLCLOBBERED(273)";
"_238";
"doubledereftmp(275)";
"CALLUSED(276)"[label="CALLUSED(276) = { 1 }"];
"CALLCLOBBERED(277)";
"_243";
"doubledereftmp(279)";
"i_239"[label="i_239 = { 1 5 }"];
"CALLUSED(282)"[label="CALLUSED(282) = { 1 }"];
"CALLCLOBBERED(283)";
"_241";
"doubledereftmp(285)";
"_142";
"_143"[label="_143 = { 5 }"];
"_247";
"_249";
"i_248"[label="i_248 = { 1 5 }"];
"_250"[label="_250 = { 5 }"];
"_251";
"_252";
"_253";
"n_255"[label="n_255 = { 1 }"];
"n_257";
"puts";
"_258";
"_259";
"_260"[label="_260 = { 5 }"];
"exponent_difference_261";
"exponent_difference_262";
"derefaddrtmp(305)"[label="derefaddrtmp(305) = { 1 }"];
"derefaddrtmp(306)"[label="derefaddrtmp(306) = { 5 }"];
"derefaddrtmp(307)"[label="derefaddrtmp(307) = { 1 }"];
"i_164"[label="i_164 = { 5 }"];
"derefaddrtmp(309)"[label="derefaddrtmp(309) = { 1 }"];
"i_68"[label="i_68 = { 5 }"];
"derefaddrtmp(311)"[label="derefaddrtmp(311) = { 1 }"];
"i_338"[label="i_338 = { 5 }"];
"derefaddrtmp(313)"[label="derefaddrtmp(313) = { 1 }"];
"i_342"[label="i_342 = { 5 }"];
"_265";
"_266";
"_267";
"_268";
"_269";
"mantissa_270";
"_271";
"i_343"[label="i_343 = { 1 }"];
"_345"[label="_345 = { 1 }"];
"_346"[label="_346 = { 1 }"];
"_347";
"derefaddrtmp(326)"[label="derefaddrtmp(326) = { 1 }"];
"i_349"[label="i_349 = { 5 }"];
"_352"[label="_352 = { 5 }"];
"_353"[label="_353 = { 5 }"];
"_354";
"derefaddrtmp(331)"[label="derefaddrtmp(331) = { 1 }"];
"i_356"[label="i_356 = { 5 }"];
"_359"[label="_359 = { 5 }"];
"_360"[label="_360 = { 5 }"];
"_361";
"derefaddrtmp(336)"[label="derefaddrtmp(336) = { 1 }"];
"i_363"[label="i_363 = { 5 }"];
"derefaddrtmp(338)"[label="derefaddrtmp(338) = { 5 }"];
"_289";
"_290"[label="_290 = { 5 }"];
"i_292"[label="i_292 = { 1 5 }"];
"_369";
"accum_370";
"_371";
"accum_372"[label="accum_372 = { 5 }"];
"_382";
"accum_383";
"_384";
"accum_385"[label="accum_385 = { 5 }"];
"accum_386"[label="accum_386 = { 5 }"];
"accum_387";
"_395";
"accum_396";
"_397";
"accum_398"[label="accum_398 = { 5 }"];
"accum_399"[label="accum_399 = { 5 }"];
"accum_400";
"_408";
"accum_409";
"_410";
"accum_411"[label="accum_411 = { 5 }"];
"accum_412"[label="accum_412 = { 5 }"];
"accum_413";
"_244";
"_245";
"_246";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*operation";
"*x";
"*y";
"*z";
"*_1";
"*_2";
"*_3";
"*_4";
"*_5";
"*_6";
"*__builtin_object_size";
"*CALLUSED(19)";
"*CALLCLOBBERED(20)";
"*_83";
"*doubledereftmp(22)";
"*_7";
"*_8";
"*_9";
"*derefaddrtmp(26)";
"*CALLUSED(27)";
"*CALLCLOBBERED(28)";
"*_92";
"*doubledereftmp(30)";
"*CALLUSED(31)";
"*CALLCLOBBERED(32)";
"*_93";
"*doubledereftmp(34)";
"*CALLUSED(35)";
"*CALLCLOBBERED(36)";
"*_94";
"*doubledereftmp(38)";
"*_10";
"*_11";
"*locx";
"*locy";
"*_12";
"*_13";
"*_14";
"*_15";
"*exponent_difference_62";
"*derefaddrtmp(48)";
"*derefaddrtmp(49)";
"*_17";
"*_172";
"*i_468";
"*_470";
"*_471";
"*_472";
"*derefaddrtmp(56)";
"*i_474";
"*_477";
"*_478";
"*_479";
"*derefaddrtmp(61)";
"*i_481";
"*_484";
"*_485";
"*_486";
"*derefaddrtmp(66)";
"*i_488";
"*_190";
"*_191";
"*i_193";
"*i_192";
"*_494";
"*accum_495";
"*_496";
"*accum_497";
"*_507";
"*accum_508";
"*_509";
"*accum_510";
"*accum_511";
"*accum_512";
"*_520";
"*accum_521";
"*_522";
"*accum_523";
"*accum_524";
"*accum_525";
"*_533";
"*accum_534";
"*_535";
"*accum_536";
"*accum_537";
"*accum_538";
"*_18";
"*_19";
"*_20";
"*_21";
"*_195";
"*i_541";
"*_543";
"*_544";
"*_545";
"*derefaddrtmp(103)";
"*i_547";
"*_550";
"*_551";
"*_552";
"*derefaddrtmp(108)";
"*i_554";
"*_557";
"*_558";
"*_559";
"*derefaddrtmp(113)";
"*i_561";
"*_213";
"*_214";
"*i_216";
"*i_215";
"*_567";
"*accum_568";
"*_569";
"*accum_570";
"*_580";
"*accum_581";
"*_582";
"*accum_583";
"*accum_584";
"*accum_585";
"*_593";
"*accum_594";
"*_595";
"*accum_596";
"*accum_597";
"*accum_598";
"*_606";
"*accum_607";
"*_608";
"*accum_609";
"*accum_610";
"*accum_611";
"*_22";
"*_23";
"*_24";
"*_25";
"*_26";
"*_27";
"*_28";
"*_29";
"*_30";
"*accum_95";
"*_96";
"*accum_97";
"*_98";
"*borrow_165";
"*accum_99";
"*_100";
"*_101";
"*_102";
"*_103";
"*i_87";
"*i_47";
"*borrow_155";
"*_31";
"*_32";
"*_104";
"*accum_105";
"*_106";
"*borrow_166";
"*accum_107";
"*_108";
"*_109";
"*_110";
"*_111";
"*i_82";
"*i_48";
"*_33";
"*_113";
"*i_112";
"*_114";
"*_115";
"*_116";
"*_117";
"*n_119";
"*n_118";
"*i_120";
"*n_153";
"*derefaddrtmp(187)";
"*derefaddrtmp(188)";
"*_34";
"*_35";
"*_217";
"*_421";
"*accum_422";
"*_423";
"*accum_424";
"*_434";
"*accum_435";
"*_436";
"*accum_437";
"*_212";
"*accum_438";
"*accum_439";
"*_447";
"*accum_448";
"*_449";
"*accum_450";
"*_577";
"*accum_451";
"*accum_452";
"*_460";
"*accum_461";
"*_462";
"*accum_463";
"*_576";
"*accum_464";
"*accum_465";
"*_229";
"*_230";
"*_231";
"*_232";
"*_233";
"*_234";
"*_36";
"*_37";
"*accum_121";
"*_122";
"*accum_123";
"*_124";
"*carry_167";
"*accum_125";
"*_126";
"*_127";
"*_128";
"*_129";
"*i_80";
"*i_49";
"*carry_16";
"*_38";
"*_39";
"*_40";
"*_41";
"*_42";
"*_131";
"*i_130";
"*_132";
"*accum_134";
"*_135";
"*accum_136";
"*accum_137";
"*accum_138";
"*i_139";
"*carry_168";
"*_43";
"*_44";
"*derefaddrtmp(256)";
"*_45";
"*_46";
"*derefaddrtmp(259)";
"*derefaddrtmp(260)";
"*derefaddrtmp(261)";
"*derefaddrtmp(262)";
"*derefaddrtmp(263)";
"*derefaddrtmp(264)";
"*i_617";
"*derefaddrtmp(266)";
"*i_621";
"*derefaddrtmp(268)";
"*i_625";
"*_236";
"*_237";
"*CALLUSED(272)";
"*CALLCLOBBERED(273)";
"*_238";
"*doubledereftmp(275)";
"*CALLUSED(276)";
"*CALLCLOBBERED(277)";
"*_243";
"*doubledereftmp(279)";
"*i_239";
"*i_235";
"*CALLUSED(282)";
"*CALLCLOBBERED(283)";
"*_241";
"*doubledereftmp(285)";
"*_142";
"*_143";
"*_247";
"*_249";
"*i_248";
"*_250";
"*_251";
"*_252";
"*_253";
"*n_255";
"*n_254";
"*i_256";
"*n_257";
"*puts";
"*_258";
"*_259";
"*_260";
"*exponent_difference_261";
"*exponent_difference_262";
"*derefaddrtmp(305)";
"*derefaddrtmp(306)";
"*derefaddrtmp(307)";
"*i_164";
"*derefaddrtmp(309)";
"*i_68";
"*derefaddrtmp(311)";
"*i_338";
"*derefaddrtmp(313)";
"*i_342";
"*_265";
"*_266";
"*_267";
"*_268";
"*_269";
"*mantissa_270";
"*_271";
"*i_343";
"*_345";
"*_346";
"*_347";
"*derefaddrtmp(326)";
"*i_349";
"*_352";
"*_353";
"*_354";
"*derefaddrtmp(331)";
"*i_356";
"*_359";
"*_360";
"*_361";
"*derefaddrtmp(336)";
"*i_363";
"*derefaddrtmp(338)";
"*_289";
"*_290";
"*i_292";
"*i_291";
"*_369";
"*accum_370";
"*_371";
"*accum_372";
"*_382";
"*accum_383";
"*_384";
"*accum_385";
"*accum_386";
"*accum_387";
"*_395";
"*accum_396";
"*_397";
"*accum_398";
"*accum_399";
"*accum_400";
"*_408";
"*accum_409";
"*_410";
"*accum_411";
"*accum_412";
"*accum_413";
"*_244";
"*_245";
"*_246";

  // Edges in the constraint graph:
"*ESCAPED" -> "ESCAPED";
"*x" -> "_1";
"_1" -> "_2";
"_2" -> "_3";
"*y" -> "_4";
"_4" -> "_5";
"_3" -> "_6";
"_5" -> "_6";
"x" -> "CALLUSED(19)";
"NONLOCAL" -> "_83";
"CALLUSED(19)" -> "_83";
"_7" -> "_9";
"_8" -> "_9";
"x" -> "CALLUSED(27)";
"NONLOCAL" -> "_92";
"CALLUSED(27)" -> "_92";
"y" -> "CALLUSED(31)";
"NONLOCAL" -> "_93";
"CALLUSED(31)" -> "_93";
"y" -> "CALLUSED(35)";
"NONLOCAL" -> "_94";
"CALLUSED(35)" -> "_94";
"operation" -> "_11";
"_10" -> "_11";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locx" -> "locx";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locx" -> "_12";
"_12" -> "_13";
"locy" -> "_14";
"_14" -> "_15";
"_13" -> "exponent_difference_62";
"_15" -> "exponent_difference_62";
"locx" -> "_17";
"locy" -> "_172";
"i_193" -> "i_193";
"i_193" -> "i_193";
"locx" -> "_18";
"locx" -> "_19";
"locx" -> "_20";
"exponent_difference_62" -> "_21";
"locx" -> "_195";
"i_216" -> "i_216";
"i_216" -> "i_216";
"locy" -> "_22";
"locy" -> "_23";
"operation" -> "_24";
"_23" -> "_24";
"locy" -> "_25";
"locx" -> "_26";
"locy" -> "_27";
"_26" -> "_28";
"_27" -> "_28";
"locy" -> "_29";
"locx" -> "_30";
"_30" -> "accum_95";
"_29" -> "_96";
"accum_95" -> "accum_97";
"_96" -> "accum_97";
"borrow_165" -> "_98";
"_102" -> "borrow_165";
"accum_97" -> "accum_99";
"_98" -> "accum_99";
"accum_99" -> "_100";
"_100" -> "_101";
"accum_99" -> "_103";
"i_87" -> "i_87";
"i_87" -> "i_87";
"borrow_165" -> "borrow_155";
"operation" -> "_31";
"_27" -> "_31";
"_32" -> "_104";
"_104" -> "accum_105";
"borrow_166" -> "_106";
"_110" -> "borrow_166";
"accum_105" -> "accum_107";
"_106" -> "accum_107";
"accum_107" -> "_108";
"_108" -> "_109";
"accum_107" -> "_111";
"i_82" -> "i_82";
"i_82" -> "i_82";
"i_112" -> "_113";
"i_112" -> "i_112";
"i_112" -> "i_112";
"_113" -> "_114";
"*_115" -> "_116";
"_116" -> "_117";
"_117" -> "n_119";
"n_119" -> "n_119";
"n_119" -> "n_119";
"n_119" -> "n_153";
"locx" -> "_34";
"locy" -> "_35";
"accum_422" -> "accum_424";
"accum_435" -> "accum_437";
"accum_422" -> "_212";
"accum_437" -> "accum_438";
"accum_437" -> "accum_439";
"accum_438" -> "accum_439";
"accum_448" -> "accum_450";
"accum_435" -> "_577";
"accum_450" -> "accum_451";
"accum_450" -> "accum_452";
"accum_451" -> "accum_452";
"_217" -> "_460";
"accum_461" -> "accum_463";
"accum_448" -> "_576";
"accum_463" -> "accum_464";
"accum_463" -> "accum_465";
"accum_464" -> "accum_465";
"_229" -> "_230";
"_230" -> "_231";
"_231" -> "_232";
"_233" -> "_234";
"locy" -> "_36";
"locx" -> "_37";
"_37" -> "accum_121";
"_36" -> "_122";
"accum_121" -> "accum_123";
"_122" -> "accum_123";
"carry_167" -> "_124";
"_128" -> "carry_167";
"accum_123" -> "accum_125";
"_124" -> "accum_125";
"accum_125" -> "_126";
"_126" -> "_127";
"accum_125" -> "_129";
"i_80" -> "i_80";
"i_80" -> "i_80";
"carry_167" -> "carry_16";
"_38" -> "_39";
"_39" -> "_40";
"_40" -> "_41";
"i_130" -> "_131";
"i_130" -> "i_130";
"i_130" -> "i_130";
"_131" -> "_132";
"accum_134" -> "accum_134";
"accum_134" -> "accum_134";
"accum_134" -> "accum_134";
"accum_134" -> "accum_134";
"accum_134" -> "accum_134";
"_135" -> "carry_168";
"_43" -> "_44";
"_45" -> "_46";
"x" -> "CALLUSED(272)";
"NONLOCAL" -> "_238";
"CALLUSED(272)" -> "_238";
"y" -> "CALLUSED(276)";
"NONLOCAL" -> "_243";
"CALLUSED(276)" -> "_243";
"i_239" -> "i_239";
"i_239" -> "i_239";
"y" -> "CALLUSED(282)";
"NONLOCAL" -> "_241";
"CALLUSED(282)" -> "_241";
"*z" -> "_142";
"_142" -> "_143";
"i_248" -> "_249";
"i_248" -> "i_248";
"i_248" -> "i_248";
"_249" -> "_250";
"*_251" -> "_252";
"_252" -> "_253";
"_253" -> "n_255";
"n_255" -> "n_255";
"n_255" -> "n_255";
"n_255" -> "n_257";
"_258" -> "_259";
"_259" -> "_260";
"_260" -> "exponent_difference_261";
"exponent_difference_261" -> "exponent_difference_262";
"_258" -> "_265";
"exponent_difference_262" -> "_266";
"_265" -> "_267";
"_266" -> "_267";
"_267" -> "_268";
"exponent_difference_262" -> "_269";
"*z" -> "_271";
"mantissa_270" -> "_347";
"_289" -> "_290";
"i_292" -> "i_292";
"i_292" -> "i_292";
"mantissa_270" -> "_369";
"accum_370" -> "accum_372";
"accum_383" -> "accum_385";
"accum_385" -> "accum_386";
"accum_385" -> "accum_387";
"accum_386" -> "accum_387";
"accum_396" -> "accum_398";
"accum_398" -> "accum_399";
"accum_398" -> "accum_400";
"accum_399" -> "accum_400";
"accum_409" -> "accum_411";
"accum_411" -> "accum_412";
"accum_411" -> "accum_413";
"accum_412" -> "accum_413";
"*z" -> "_244";
"NONLOCAL" -> "*ESCAPED";
"derefaddrtmp(48)" -> "*z";
"derefaddrtmp(49)" -> "*z";
"_18" -> "*z";
"_22" -> "*z";
"derefaddrtmp(187)" -> "*z";
"derefaddrtmp(256)" -> "*z";
"derefaddrtmp(259)" -> "*z";
"derefaddrtmp(260)" -> "*z";
"derefaddrtmp(305)" -> "*z";
"derefaddrtmp(56)" -> "*_472";
"derefaddrtmp(61)" -> "*_479";
"derefaddrtmp(66)" -> "*_486";
"derefaddrtmp(103)" -> "*_545";
"derefaddrtmp(108)" -> "*_552";
"derefaddrtmp(113)" -> "*_559";
"derefaddrtmp(326)" -> "*_347";
"derefaddrtmp(331)" -> "*_354";
"derefaddrtmp(336)" -> "*_361";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"operation" [label="\N\n_1 = *operation\l_4 = *operation\ldoubledereftmp(22) = *operation + UNKNOWN\l_7 = *operation + 8\l_8 = *operation + 8\ldoubledereftmp(30) = *operation + UNKNOWN\ldoubledereftmp(34) = *operation + UNKNOWN\ldoubledereftmp(38) = *operation + UNKNOWN\l_10 = *operation + 8\llocx = *operation + UNKNOWN\llocy = *operation + UNKNOWN\l_32 = *operation + UNKNOWN\l_33 = operation + UNKNOWN\l_217 = operation + UNKNOWN\l_421 = operation + 80\laccum_422 = *operation + 80\l_434 = operation + 64\laccum_435 = *operation + 64\l_447 = operation + 48\laccum_448 = *operation + 48\laccum_461 = *operation + 32\l_229 = *operation + 16\l_233 = *operation + 32\l_38 = *operation + 16\l_42 = operation + UNKNOWN\l_43 = *operation + 32\l_45 = *operation + 32\l_236 = *operation + UNKNOWN\l_237 = *operation + UNKNOWN\ldoubledereftmp(275) = *operation + UNKNOWN\ldoubledereftmp(279) = *operation + UNKNOWN\ldoubledereftmp(285) = *operation + UNKNOWN\l_142 = *operation\l_247 = operation + UNKNOWN\l_258 = *operation + 16\lmantissa_270 = operation + UNKNOWN\l_289 = *operation + 80\laccum_370 = *operation + 32\l_382 = operation + 48\laccum_383 = *operation + 48\l_395 = operation + 64\laccum_396 = *operation + 64\l_408 = operation + 80\laccum_409 = *operation + 80\l_245 = *operation + 80\l*operation + UNKNOWN = doubledereftmp(22)\l*operation + UNKNOWN = derefaddrtmp(26)\l*operation + UNKNOWN = doubledereftmp(30)\l*operation + UNKNOWN = doubledereftmp(34)\l*operation + UNKNOWN = doubledereftmp(38)\l*operation + UNKNOWN = accum_99\l*operation + UNKNOWN = accum_107\l*operation + UNKNOWN = accum_125\l*operation + UNKNOWN = doubledereftmp(275)\l*operation + UNKNOWN = doubledereftmp(279)\l*operation + UNKNOWN = doubledereftmp(285)\l*operation = operation\l*operation = derefaddrtmp(26)\l*operation = _12\l*operation = _14\l*operation + 8 = operation\l*operation + 8 = derefaddrtmp(26)\l*operation + 8 = _11\l*operation + 8 = _12\l*operation + 8 = _14\l*operation + 16 = operation\l*operation + 16 = _12\l*operation + 16 = _14\l*operation + 16 = _231\l*operation + 16 = _40\l*operation + 16 = _260\l*operation + 32 = operation\l*operation + 32 = derefaddrtmp(26)\l*operation + 32 = accum_463\l*operation + 32 = _44\l*operation + 32 = accum_372\l*operation + 48 = derefaddrtmp(26)\l*operation + 48 = accum_450\l*operation + 48 = accum_385\l*operation + 64 = accum_437\l*operation + 64 = accum_398\l*operation + 80 = operation\l*operation + 80 = accum_424\l*operation + 80 = _290\l*operation + 80 = accum_411\l*operation + 80 = _246\l"];
"_1";
"_3";
"_4";
"_6";
"__builtin_object_size";
"CALLUSED(19)" [label="\N\nCALLUSED(19) = CALLUSED(19) + UNKNOWN\lCALLUSED(19) = *CALLUSED(19) + UNKNOWN\l"];
"CALLCLOBBERED(20)";
"_83";
"doubledereftmp(22)";
"_7";
"_8";
"_9";
"derefaddrtmp(26)";
"CALLUSED(27)" [label="\N\nCALLUSED(27) = CALLUSED(27) + UNKNOWN\lCALLUSED(27) = *CALLUSED(27) + UNKNOWN\l"];
"CALLCLOBBERED(28)";
"_92";
"doubledereftmp(30)";
"CALLUSED(31)" [label="\N\nCALLUSED(31) = CALLUSED(31) + UNKNOWN\lCALLUSED(31) = *CALLUSED(31) + UNKNOWN\l"];
"CALLCLOBBERED(32)";
"_93";
"doubledereftmp(34)";
"CALLUSED(35)" [label="\N\nCALLUSED(35) = CALLUSED(35) + UNKNOWN\lCALLUSED(35) = *CALLUSED(35) + UNKNOWN\l"];
"CALLCLOBBERED(36)";
"_94";
"doubledereftmp(38)";
"_10";
"_11";
"_12" [label="\N\n_569 = _12 + UNKNOWN\l_582 = _12 + UNKNOWN\l_595 = _12 + UNKNOWN\l_608 = _12 + UNKNOWN\l"];
"_14" [label="\N\n_496 = _14 + UNKNOWN\l_509 = _14 + UNKNOWN\l_522 = _14 + UNKNOWN\l_535 = _14 + UNKNOWN\l"];
"exponent_difference_62";
"_472" [label="\N\n*_472 = derefaddrtmp(26)\l"];
"i_193";
"_496";
"_509";
"_522";
"_535";
"_545" [label="\N\n*_545 = derefaddrtmp(26)\l"];
"_569";
"_582";
"_595";
"_608";
"_98";
"accum_99" [label="\N\n_102 = accum_99 + UNKNOWN\l"];
"_102";
"_32";
"_106";
"accum_107";
"_108" [label="\N\n_110 = _108 + UNKNOWN\l"];
"_110";
"_33" [label="\N\n_115 = _33 + UNKNOWN\l"];
"_115" [label="\N\n_116 = *_115\l"];
"_116";
"n_119";
"_217";
"_421";
"accum_422" [label="\N\n_423 = accum_422 + UNKNOWN\l"];
"_423";
"accum_424";
"_434";
"accum_435" [label="\N\n_436 = accum_435 + UNKNOWN\l"];
"_436";
"accum_437";
"_447";
"accum_448" [label="\N\n_449 = accum_448 + UNKNOWN\l"];
"_449";
"accum_450";
"accum_461" [label="\N\n_462 = accum_461 + UNKNOWN\l"];
"_462";
"accum_463";
"_229";
"_231";
"_233";
"_124";
"accum_125" [label="\N\n_128 = accum_125 + UNKNOWN\l"];
"_128";
"_38";
"_40";
"_42" [label="\N\n_133 = _42 + UNKNOWN\l"];
"_133" [label="\N\naccum_134 = *_133\l*_133 = accum_134\l"];
"accum_134" [label="\N\n_135 = accum_134 + UNKNOWN\l"];
"_135";
"carry_168";
"_43";
"_44";
"_45";
"_236";
"_237";
"CALLUSED(272)" [label="\N\nCALLUSED(272) = CALLUSED(272) + UNKNOWN\lCALLUSED(272) = *CALLUSED(272) + UNKNOWN\l"];
"CALLCLOBBERED(273)";
"_238";
"doubledereftmp(275)";
"CALLUSED(276)" [label="\N\nCALLUSED(276) = CALLUSED(276) + UNKNOWN\lCALLUSED(276) = *CALLUSED(276) + UNKNOWN\l"];
"CALLCLOBBERED(277)";
"_243";
"doubledereftmp(279)";
"CALLUSED(282)" [label="\N\nCALLUSED(282) = CALLUSED(282) + UNKNOWN\lCALLUSED(282) = *CALLUSED(282) + UNKNOWN\l"];
"CALLCLOBBERED(283)";
"_241";
"doubledereftmp(285)";
"_142";
"_247" [label="\N\n_251 = _247 + UNKNOWN\l"];
"_251" [label="\N\n_252 = *_251\l"];
"_252";
"n_255";
"puts";
"_258";
"_260";
"mantissa_270" [label="\N\n_354 = mantissa_270 + 16\l_361 = mantissa_270 + 32\l*mantissa_270 = derefaddrtmp(26)\l"];
"_354" [label="\N\n*_354 = derefaddrtmp(26)\l"];
"_361" [label="\N\n*_361 = derefaddrtmp(26)\l"];
"_289";
"_290";
"accum_370" [label="\N\n_371 = accum_370 + UNKNOWN\l"];
"_371";
"accum_372";
"_382";
"accum_383" [label="\N\n_384 = accum_383 + UNKNOWN\l"];
"_384";
"accum_385";
"_395";
"accum_396" [label="\N\n_397 = accum_396 + UNKNOWN\l"];
"_397";
"accum_398";
"_408";
"accum_409" [label="\N\n_410 = accum_409 + UNKNOWN\l"];
"_410";
"accum_411";
"_245" [label="\N\n_246 = _245 + UNKNOWN\l"];
"_246";

  // Edges in the constraint graph:
"NONLOCAL" -> "_83";
"NONLOCAL" -> "_92";
"NONLOCAL" -> "_93";
"NONLOCAL" -> "_94";
"NONLOCAL" -> "_238";
"NONLOCAL" -> "_243";
"NONLOCAL" -> "_241";
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "CALLUSED(19)";
"STOREDANYTHING" -> "doubledereftmp(22)";
"STOREDANYTHING" -> "_7";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "CALLUSED(27)";
"STOREDANYTHING" -> "doubledereftmp(30)";
"STOREDANYTHING" -> "CALLUSED(31)";
"STOREDANYTHING" -> "doubledereftmp(34)";
"STOREDANYTHING" -> "CALLUSED(35)";
"STOREDANYTHING" -> "doubledereftmp(38)";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_496";
"STOREDANYTHING" -> "_509";
"STOREDANYTHING" -> "_522";
"STOREDANYTHING" -> "_535";
"STOREDANYTHING" -> "_569";
"STOREDANYTHING" -> "_582";
"STOREDANYTHING" -> "_595";
"STOREDANYTHING" -> "_608";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_32";
"STOREDANYTHING" -> "_110";
"STOREDANYTHING" -> "_33";
"STOREDANYTHING" -> "_115";
"STOREDANYTHING" -> "_217";
"STOREDANYTHING" -> "_421";
"STOREDANYTHING" -> "accum_422";
"STOREDANYTHING" -> "_423";
"STOREDANYTHING" -> "_434";
"STOREDANYTHING" -> "accum_435";
"STOREDANYTHING" -> "_436";
"STOREDANYTHING" -> "_447";
"STOREDANYTHING" -> "accum_448";
"STOREDANYTHING" -> "_449";
"STOREDANYTHING" -> "accum_461";
"STOREDANYTHING" -> "_462";
"STOREDANYTHING" -> "_229";
"STOREDANYTHING" -> "_233";
"STOREDANYTHING" -> "_128";
"STOREDANYTHING" -> "_38";
"STOREDANYTHING" -> "_42";
"STOREDANYTHING" -> "_133";
"STOREDANYTHING" -> "accum_134";
"STOREDANYTHING" -> "_135";
"STOREDANYTHING" -> "_43";
"STOREDANYTHING" -> "_45";
"STOREDANYTHING" -> "_236";
"STOREDANYTHING" -> "_237";
"STOREDANYTHING" -> "CALLUSED(272)";
"STOREDANYTHING" -> "doubledereftmp(275)";
"STOREDANYTHING" -> "CALLUSED(276)";
"STOREDANYTHING" -> "doubledereftmp(279)";
"STOREDANYTHING" -> "CALLUSED(282)";
"STOREDANYTHING" -> "doubledereftmp(285)";
"STOREDANYTHING" -> "_247";
"STOREDANYTHING" -> "_251";
"STOREDANYTHING" -> "_258";
"STOREDANYTHING" -> "mantissa_270";
"STOREDANYTHING" -> "_354";
"STOREDANYTHING" -> "_361";
"STOREDANYTHING" -> "_289";
"STOREDANYTHING" -> "accum_370";
"STOREDANYTHING" -> "_371";
"STOREDANYTHING" -> "_382";
"STOREDANYTHING" -> "accum_383";
"STOREDANYTHING" -> "_384";
"STOREDANYTHING" -> "_395";
"STOREDANYTHING" -> "accum_396";
"STOREDANYTHING" -> "_397";
"STOREDANYTHING" -> "_408";
"STOREDANYTHING" -> "accum_409";
"STOREDANYTHING" -> "_410";
"STOREDANYTHING" -> "_245";
"STOREDANYTHING" -> "_246";
"operation" -> "CALLUSED(19)";
"operation" -> "CALLUSED(27)";
"operation" -> "CALLUSED(31)";
"operation" -> "CALLUSED(35)";
"operation" -> "_11";
"operation" -> "_14";
"operation" -> "CALLUSED(272)";
"operation" -> "CALLUSED(276)";
"operation" -> "CALLUSED(282)";
"_1" -> "_3";
"_3" -> "_6";
"_4" -> "_6";
"CALLUSED(19)" -> "_83";
"_7" -> "_9";
"_8" -> "_9";
"CALLUSED(27)" -> "_92";
"CALLUSED(31)" -> "_93";
"CALLUSED(35)" -> "_94";
"_10" -> "_11";
"_12" -> "exponent_difference_62";
"_14" -> "exponent_difference_62";
"exponent_difference_62" -> "accum_99";
"exponent_difference_62" -> "accum_125";
"_98" -> "accum_99";
"_102" -> "_98";
"_32" -> "accum_107";
"_106" -> "accum_107";
"accum_107" -> "_108";
"_110" -> "_106";
"_116" -> "n_119";
"accum_422" -> "accum_424";
"accum_435" -> "accum_437";
"accum_448" -> "accum_450";
"accum_461" -> "accum_463";
"_229" -> "_231";
"_124" -> "accum_125";
"_128" -> "_124";
"_38" -> "_40";
"_135" -> "carry_168";
"_43" -> "_44";
"CALLUSED(272)" -> "_238";
"CALLUSED(276)" -> "_243";
"CALLUSED(282)" -> "_241";
"_252" -> "n_255";
"_258" -> "_260";
"_289" -> "_290";
"accum_370" -> "accum_372";
"accum_383" -> "accum_385";
"accum_396" -> "accum_398";
"accum_409" -> "accum_411";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"operation" [label="\N\n_1 = *operation\l_4 = *operation\ldoubledereftmp(22) = *operation + UNKNOWN\l_7 = *operation + 8\l_8 = *operation + 8\ldoubledereftmp(30) = *operation + UNKNOWN\ldoubledereftmp(34) = *operation + UNKNOWN\ldoubledereftmp(38) = *operation + UNKNOWN\l_10 = *operation + 8\l_12 = *operation + UNKNOWN\l_14 = *operation + UNKNOWN\l_32 = *operation + UNKNOWN\l_33 = operation + UNKNOWN\l_217 = operation + UNKNOWN\l_421 = operation + 80\laccum_422 = *operation + 80\l_434 = operation + 64\laccum_435 = *operation + 64\l_447 = operation + 48\laccum_448 = *operation + 48\laccum_461 = *operation + 32\l_229 = *operation + 16\l_233 = *operation + 32\l_38 = *operation + 16\l_42 = operation + UNKNOWN\l_43 = *operation + 32\l_45 = *operation + 32\l_236 = *operation + UNKNOWN\l_237 = *operation + UNKNOWN\ldoubledereftmp(275) = *operation + UNKNOWN\ldoubledereftmp(279) = *operation + UNKNOWN\ldoubledereftmp(285) = *operation + UNKNOWN\l_142 = *operation\l_247 = operation + UNKNOWN\l_258 = *operation + 16\lmantissa_270 = operation + UNKNOWN\l_289 = *operation + 80\laccum_370 = *operation + 32\l_382 = operation + 48\laccum_383 = *operation + 48\l_395 = operation + 64\laccum_396 = *operation + 64\l_408 = operation + 80\laccum_409 = *operation + 80\l_245 = *operation + 80\l*operation + UNKNOWN = doubledereftmp(22)\l*operation + UNKNOWN = derefaddrtmp(26)\l*operation + UNKNOWN = doubledereftmp(30)\l*operation + UNKNOWN = doubledereftmp(34)\l*operation + UNKNOWN = doubledereftmp(38)\l*operation + UNKNOWN = accum_99\l*operation + UNKNOWN = accum_107\l*operation + UNKNOWN = accum_125\l*operation + UNKNOWN = doubledereftmp(275)\l*operation + UNKNOWN = doubledereftmp(279)\l*operation + UNKNOWN = doubledereftmp(285)\l*operation = operation\l*operation = derefaddrtmp(26)\l*operation = _12\l*operation = _14\l*operation + 8 = operation\l*operation + 8 = derefaddrtmp(26)\l*operation + 8 = _11\l*operation + 8 = _12\l*operation + 8 = _14\l*operation + 16 = operation\l*operation + 16 = _12\l*operation + 16 = _14\l*operation + 16 = _231\l*operation + 16 = _40\l*operation + 16 = _260\l*operation + 32 = operation\l*operation + 32 = derefaddrtmp(26)\l*operation + 32 = accum_463\l*operation + 32 = _44\l*operation + 32 = accum_372\l*operation + 48 = derefaddrtmp(26)\l*operation + 48 = accum_450\l*operation + 48 = accum_385\l*operation + 64 = accum_437\l*operation + 64 = accum_398\l*operation + 80 = operation\l*operation + 80 = accum_424\l*operation + 80 = _290\l*operation + 80 = accum_411\l*operation + 80 = _246\l"];
"_1";
"_3";
"_4";
"_6";
"__builtin_object_size";
"CALLUSED(19)" [label="\N\nCALLUSED(19) = CALLUSED(19) + UNKNOWN\lCALLUSED(19) = *CALLUSED(19) + UNKNOWN\l"];
"CALLCLOBBERED(20)";
"_83";
"doubledereftmp(22)";
"_7";
"_8";
"_9";
"derefaddrtmp(26)";
"CALLUSED(27)" [label="\N\nCALLUSED(27) = CALLUSED(27) + UNKNOWN\lCALLUSED(27) = *CALLUSED(27) + UNKNOWN\l"];
"CALLCLOBBERED(28)";
"_92";
"doubledereftmp(30)";
"CALLUSED(31)" [label="\N\nCALLUSED(31) = CALLUSED(31) + UNKNOWN\lCALLUSED(31) = *CALLUSED(31) + UNKNOWN\l"];
"CALLCLOBBERED(32)";
"_93";
"doubledereftmp(34)";
"CALLUSED(35)" [label="\N\nCALLUSED(35) = CALLUSED(35) + UNKNOWN\lCALLUSED(35) = *CALLUSED(35) + UNKNOWN\l"];
"CALLCLOBBERED(36)";
"_94";
"doubledereftmp(38)";
"_10";
"_11";
"_12" [label="\N\n_569 = _12 + UNKNOWN\l_582 = _12 + UNKNOWN\l_595 = _12 + UNKNOWN\l_608 = _12 + UNKNOWN\l"];
"_14" [label="\N\n_496 = _14 + UNKNOWN\l_509 = _14 + UNKNOWN\l_522 = _14 + UNKNOWN\l_535 = _14 + UNKNOWN\l"];
"exponent_difference_62";
"_472" [label="\N\n*_472 = derefaddrtmp(26)\l"];
"i_193";
"_496";
"_509";
"_522";
"_535";
"_545" [label="\N\n*_545 = derefaddrtmp(26)\l"];
"_569";
"_582";
"_595";
"_608";
"_98";
"accum_99" [label="\N\n_102 = accum_99 + UNKNOWN\l"];
"_102";
"_32";
"_106";
"accum_107";
"_108" [label="\N\n_110 = _108 + UNKNOWN\l"];
"_110";
"_33" [label="\N\n_115 = _33 + UNKNOWN\l"];
"_115" [label="\N\n_116 = *_115\l"];
"_116";
"n_119";
"_217";
"_421";
"accum_422" [label="\N\n_423 = accum_422 + UNKNOWN\l"];
"_423";
"accum_424";
"_434";
"accum_435" [label="\N\n_436 = accum_435 + UNKNOWN\l"];
"_436";
"accum_437";
"_447";
"accum_448" [label="\N\n_449 = accum_448 + UNKNOWN\l"];
"_449";
"accum_450";
"accum_461" [label="\N\n_462 = accum_461 + UNKNOWN\l"];
"_462";
"accum_463";
"_229";
"_231";
"_233";
"_124";
"accum_125" [label="\N\n_128 = accum_125 + UNKNOWN\l"];
"_128";
"_38";
"_40";
"_42" [label="\N\n_133 = _42 + UNKNOWN\l"];
"_133" [label="\N\naccum_134 = *_133\l*_133 = accum_134\l"];
"accum_134" [label="\N\n_135 = accum_134 + UNKNOWN\l"];
"_135";
"carry_168";
"_43";
"_44";
"_45";
"_236";
"_237";
"CALLUSED(272)" [label="\N\nCALLUSED(272) = CALLUSED(272) + UNKNOWN\lCALLUSED(272) = *CALLUSED(272) + UNKNOWN\l"];
"CALLCLOBBERED(273)";
"_238";
"doubledereftmp(275)";
"CALLUSED(276)" [label="\N\nCALLUSED(276) = CALLUSED(276) + UNKNOWN\lCALLUSED(276) = *CALLUSED(276) + UNKNOWN\l"];
"CALLCLOBBERED(277)";
"_243";
"doubledereftmp(279)";
"CALLUSED(282)" [label="\N\nCALLUSED(282) = CALLUSED(282) + UNKNOWN\lCALLUSED(282) = *CALLUSED(282) + UNKNOWN\l"];
"CALLCLOBBERED(283)";
"_241";
"doubledereftmp(285)";
"_142";
"_247" [label="\N\n_251 = _247 + UNKNOWN\l"];
"_251" [label="\N\n_252 = *_251\l"];
"_252";
"n_255";
"puts";
"_258";
"_260";
"mantissa_270" [label="\N\n_354 = mantissa_270 + 16\l_361 = mantissa_270 + 32\l*mantissa_270 = derefaddrtmp(26)\l"];
"_354" [label="\N\n*_354 = derefaddrtmp(26)\l"];
"_361" [label="\N\n*_361 = derefaddrtmp(26)\l"];
"_289";
"_290";
"accum_370" [label="\N\n_371 = accum_370 + UNKNOWN\l"];
"_371";
"accum_372";
"_382";
"accum_383" [label="\N\n_384 = accum_383 + UNKNOWN\l"];
"_384";
"accum_385";
"_395";
"accum_396" [label="\N\n_397 = accum_396 + UNKNOWN\l"];
"_397";
"accum_398";
"_408";
"accum_409" [label="\N\n_410 = accum_409 + UNKNOWN\l"];
"_410";
"accum_411";
"_245" [label="\N\n_246 = _245 + UNKNOWN\l"];
"_246";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "CALLUSED(19)";
"STOREDANYTHING" -> "doubledereftmp(22)";
"STOREDANYTHING" -> "_7";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "CALLUSED(27)";
"STOREDANYTHING" -> "doubledereftmp(30)";
"STOREDANYTHING" -> "CALLUSED(31)";
"STOREDANYTHING" -> "doubledereftmp(34)";
"STOREDANYTHING" -> "CALLUSED(35)";
"STOREDANYTHING" -> "doubledereftmp(38)";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_496";
"STOREDANYTHING" -> "_509";
"STOREDANYTHING" -> "_522";
"STOREDANYTHING" -> "_535";
"STOREDANYTHING" -> "_569";
"STOREDANYTHING" -> "_582";
"STOREDANYTHING" -> "_595";
"STOREDANYTHING" -> "_608";
"STOREDANYTHING" -> "_102";
"STOREDANYTHING" -> "_32";
"STOREDANYTHING" -> "_110";
"STOREDANYTHING" -> "_33";
"STOREDANYTHING" -> "_115";
"STOREDANYTHING" -> "_217";
"STOREDANYTHING" -> "_421";
"STOREDANYTHING" -> "accum_422";
"STOREDANYTHING" -> "_423";
"STOREDANYTHING" -> "_434";
"STOREDANYTHING" -> "accum_435";
"STOREDANYTHING" -> "_436";
"STOREDANYTHING" -> "_447";
"STOREDANYTHING" -> "accum_448";
"STOREDANYTHING" -> "_449";
"STOREDANYTHING" -> "accum_461";
"STOREDANYTHING" -> "_462";
"STOREDANYTHING" -> "_229";
"STOREDANYTHING" -> "_233";
"STOREDANYTHING" -> "_128";
"STOREDANYTHING" -> "_38";
"STOREDANYTHING" -> "_42";
"STOREDANYTHING" -> "_133";
"STOREDANYTHING" -> "accum_134";
"STOREDANYTHING" -> "_135";
"STOREDANYTHING" -> "_43";
"STOREDANYTHING" -> "_45";
"STOREDANYTHING" -> "_236";
"STOREDANYTHING" -> "_237";
"STOREDANYTHING" -> "CALLUSED(272)";
"STOREDANYTHING" -> "doubledereftmp(275)";
"STOREDANYTHING" -> "CALLUSED(276)";
"STOREDANYTHING" -> "doubledereftmp(279)";
"STOREDANYTHING" -> "CALLUSED(282)";
"STOREDANYTHING" -> "doubledereftmp(285)";
"STOREDANYTHING" -> "_247";
"STOREDANYTHING" -> "_251";
"STOREDANYTHING" -> "_258";
"STOREDANYTHING" -> "mantissa_270";
"STOREDANYTHING" -> "_354";
"STOREDANYTHING" -> "_361";
"STOREDANYTHING" -> "_289";
"STOREDANYTHING" -> "accum_370";
"STOREDANYTHING" -> "_371";
"STOREDANYTHING" -> "_382";
"STOREDANYTHING" -> "accum_383";
"STOREDANYTHING" -> "_384";
"STOREDANYTHING" -> "_395";
"STOREDANYTHING" -> "accum_396";
"STOREDANYTHING" -> "_397";
"STOREDANYTHING" -> "_408";
"STOREDANYTHING" -> "accum_409";
"STOREDANYTHING" -> "_410";
"STOREDANYTHING" -> "_245";
"STOREDANYTHING" -> "_246";
"operation" -> "ESCAPED";
"operation" -> "CALLUSED(19)";
"operation" -> "CALLUSED(27)";
"operation" -> "CALLUSED(31)";
"operation" -> "CALLUSED(35)";
"operation" -> "_11";
"operation" -> "_14";
"operation" -> "CALLUSED(272)";
"operation" -> "CALLUSED(276)";
"operation" -> "CALLUSED(282)";
"_1" -> "_3";
"_3" -> "_6";
"_4" -> "_6";
"CALLUSED(19)" -> "_83";
"doubledereftmp(22)" -> "ESCAPED";
"_7" -> "_9";
"_8" -> "_9";
"derefaddrtmp(26)" -> "ESCAPED";
"derefaddrtmp(26)" -> "_12";
"derefaddrtmp(26)" -> "_14";
"CALLUSED(27)" -> "_92";
"doubledereftmp(30)" -> "ESCAPED";
"CALLUSED(31)" -> "_93";
"doubledereftmp(34)" -> "ESCAPED";
"CALLUSED(35)" -> "_94";
"doubledereftmp(38)" -> "ESCAPED";
"_10" -> "_11";
"_11" -> "ESCAPED";
"_12" -> "ESCAPED";
"_12" -> "exponent_difference_62";
"_14" -> "ESCAPED";
"_14" -> "exponent_difference_62";
"exponent_difference_62" -> "accum_99";
"exponent_difference_62" -> "accum_125";
"_98" -> "accum_99";
"accum_99" -> "ESCAPED";
"_102" -> "_98";
"_32" -> "accum_107";
"_106" -> "accum_107";
"accum_107" -> "ESCAPED";
"accum_107" -> "_108";
"_110" -> "_106";
"_116" -> "n_119";
"accum_422" -> "accum_424";
"accum_424" -> "ESCAPED";
"accum_435" -> "accum_437";
"accum_437" -> "ESCAPED";
"accum_448" -> "accum_450";
"accum_450" -> "ESCAPED";
"accum_461" -> "accum_463";
"accum_463" -> "ESCAPED";
"_229" -> "_231";
"_231" -> "ESCAPED";
"_124" -> "accum_125";
"accum_125" -> "ESCAPED";
"_128" -> "_124";
"_38" -> "_40";
"_40" -> "ESCAPED";
"accum_134" -> "ESCAPED";
"accum_134" -> "_83";
"accum_134" -> "_92";
"accum_134" -> "_93";
"accum_134" -> "_94";
"accum_134" -> "_116";
"accum_134" -> "_238";
"accum_134" -> "_243";
"accum_134" -> "_241";
"_135" -> "carry_168";
"_43" -> "_44";
"_44" -> "ESCAPED";
"CALLUSED(272)" -> "_238";
"doubledereftmp(275)" -> "ESCAPED";
"CALLUSED(276)" -> "_243";
"doubledereftmp(279)" -> "ESCAPED";
"CALLUSED(282)" -> "_241";
"doubledereftmp(285)" -> "ESCAPED";
"_252" -> "n_255";
"_258" -> "_260";
"_260" -> "ESCAPED";
"_289" -> "_290";
"_290" -> "ESCAPED";
"accum_370" -> "accum_372";
"accum_372" -> "ESCAPED";
"accum_383" -> "accum_385";
"accum_385" -> "ESCAPED";
"accum_396" -> "accum_398";
"accum_398" -> "ESCAPED";
"accum_409" -> "accum_411";
"accum_411" -> "ESCAPED";
"_246" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as accum_134
STOREDANYTHING = { }
INTEGER = { ANYTHING }
operation = { NONLOCAL }
x = { NONLOCAL } same as operation
y = { NONLOCAL } same as operation
z = { NONLOCAL } same as operation
_1 = { ESCAPED NONLOCAL }
_2 = { ESCAPED NONLOCAL } same as _1
_3 = { ESCAPED NONLOCAL }
_4 = { ESCAPED NONLOCAL }
_5 = { ESCAPED NONLOCAL } same as _4
_6 = { ESCAPED NONLOCAL }
__builtin_object_size = { }
CALLUSED(19) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(20) = { }
_83 = { NULL ESCAPED NONLOCAL }
doubledereftmp(22) = { ESCAPED NONLOCAL }
_7 = { ESCAPED NONLOCAL }
_8 = { ESCAPED NONLOCAL }
_9 = { ESCAPED NONLOCAL }
derefaddrtmp(26) = { NULL }
CALLUSED(27) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(28) = { }
_92 = { NULL ESCAPED NONLOCAL }
doubledereftmp(30) = { ESCAPED NONLOCAL }
CALLUSED(31) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(32) = { }
_93 = { NULL ESCAPED NONLOCAL }
doubledereftmp(34) = { ESCAPED NONLOCAL }
CALLUSED(35) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(36) = { }
_94 = { NULL ESCAPED NONLOCAL }
doubledereftmp(38) = { ESCAPED NONLOCAL }
_10 = { ESCAPED NONLOCAL }
_11 = { ESCAPED NONLOCAL }
locx = { NULL ESCAPED NONLOCAL } same as _12
locy = { NULL ESCAPED NONLOCAL } same as _14
_12 = { NULL ESCAPED NONLOCAL }
_13 = { NULL ESCAPED NONLOCAL } same as _12
_14 = { NULL ESCAPED NONLOCAL }
_15 = { NULL ESCAPED NONLOCAL } same as _14
exponent_difference_62 = { NULL ESCAPED NONLOCAL }
derefaddrtmp(48) = { NONLOCAL } same as operation
derefaddrtmp(49) = { NONLOCAL } same as operation
_17 = { NULL ESCAPED NONLOCAL } same as _12
_172 = { NULL ESCAPED NONLOCAL } same as _14
i_468 = { NULL } same as derefaddrtmp(26)
_470 = { NULL } same as derefaddrtmp(26)
_471 = { NULL } same as derefaddrtmp(26)
_472 = { locy }
derefaddrtmp(56) = { NULL } same as derefaddrtmp(26)
i_474 = { NONLOCAL } same as operation
_477 = { NONLOCAL } same as operation
_478 = { NONLOCAL } same as operation
_479 = { locy } same as _472
derefaddrtmp(61) = { NULL } same as derefaddrtmp(26)
i_481 = { NONLOCAL } same as operation
_484 = { NONLOCAL } same as operation
_485 = { NONLOCAL } same as operation
_486 = { locy } same as _472
derefaddrtmp(66) = { NULL } same as derefaddrtmp(26)
i_488 = { NONLOCAL } same as operation
_190 = { NULL ESCAPED NONLOCAL } same as _14
_191 = { NULL ESCAPED NONLOCAL } same as _14
i_193 = { NULL NONLOCAL }
i_192 = { NULL NONLOCAL } same as i_193
_494 = { locy } same as _472
accum_495 = { NULL ESCAPED NONLOCAL } same as _14
_496 = { NULL ESCAPED NONLOCAL }
accum_497 = { NULL ESCAPED NONLOCAL } same as _14
_507 = { locy } same as _472
accum_508 = { NULL ESCAPED NONLOCAL } same as _14
_509 = { NULL ESCAPED NONLOCAL }
accum_510 = { NULL ESCAPED NONLOCAL } same as _14
accum_511 = { NULL ESCAPED NONLOCAL } same as _14
accum_512 = { NULL ESCAPED NONLOCAL } same as _14
_520 = { locy } same as _472
accum_521 = { NULL ESCAPED NONLOCAL } same as _14
_522 = { NULL ESCAPED NONLOCAL }
accum_523 = { NULL ESCAPED NONLOCAL } same as _14
accum_524 = { NULL ESCAPED NONLOCAL } same as _14
accum_525 = { NULL ESCAPED NONLOCAL } same as _14
_533 = { locy } same as _472
accum_534 = { NULL ESCAPED NONLOCAL } same as _14
_535 = { NULL ESCAPED NONLOCAL }
accum_536 = { NULL ESCAPED NONLOCAL } same as _14
accum_537 = { NULL ESCAPED NONLOCAL } same as _14
accum_538 = { NULL ESCAPED NONLOCAL } same as _14
_18 = { NULL ESCAPED NONLOCAL } same as _12
_19 = { NULL ESCAPED NONLOCAL } same as _12
_20 = { NULL ESCAPED NONLOCAL } same as _12
_21 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_195 = { NULL ESCAPED NONLOCAL } same as _12
i_541 = { NULL } same as derefaddrtmp(26)
_543 = { NULL } same as derefaddrtmp(26)
_544 = { NULL } same as derefaddrtmp(26)
_545 = { locx }
derefaddrtmp(103) = { NULL } same as derefaddrtmp(26)
i_547 = { NONLOCAL } same as operation
_550 = { NONLOCAL } same as operation
_551 = { NONLOCAL } same as operation
_552 = { locx } same as _545
derefaddrtmp(108) = { NULL } same as derefaddrtmp(26)
i_554 = { NONLOCAL } same as operation
_557 = { NONLOCAL } same as operation
_558 = { NONLOCAL } same as operation
_559 = { locx } same as _545
derefaddrtmp(113) = { NULL } same as derefaddrtmp(26)
i_561 = { NONLOCAL } same as operation
_213 = { NULL ESCAPED NONLOCAL } same as _12
_214 = { NULL ESCAPED NONLOCAL } same as _12
i_216 = { NULL NONLOCAL } same as i_193
i_215 = { NULL NONLOCAL } same as i_193
_567 = { locx } same as _545
accum_568 = { NULL ESCAPED NONLOCAL } same as _12
_569 = { NULL ESCAPED NONLOCAL }
accum_570 = { NULL ESCAPED NONLOCAL } same as _12
_580 = { locx } same as _545
accum_581 = { NULL ESCAPED NONLOCAL } same as _12
_582 = { NULL ESCAPED NONLOCAL }
accum_583 = { NULL ESCAPED NONLOCAL } same as _12
accum_584 = { NULL ESCAPED NONLOCAL } same as _12
accum_585 = { NULL ESCAPED NONLOCAL } same as _12
_593 = { locx } same as _545
accum_594 = { NULL ESCAPED NONLOCAL } same as _12
_595 = { NULL ESCAPED NONLOCAL }
accum_596 = { NULL ESCAPED NONLOCAL } same as _12
accum_597 = { NULL ESCAPED NONLOCAL } same as _12
accum_598 = { NULL ESCAPED NONLOCAL } same as _12
_606 = { locx } same as _545
accum_607 = { NULL ESCAPED NONLOCAL } same as _12
_608 = { NULL ESCAPED NONLOCAL }
accum_609 = { NULL ESCAPED NONLOCAL } same as _12
accum_610 = { NULL ESCAPED NONLOCAL } same as _12
accum_611 = { NULL ESCAPED NONLOCAL } same as _12
_22 = { NULL ESCAPED NONLOCAL } same as _14
_23 = { NULL ESCAPED NONLOCAL } same as _14
_24 = { NULL ESCAPED NONLOCAL } same as _14
_25 = { NULL ESCAPED NONLOCAL } same as _14
_26 = { NULL ESCAPED NONLOCAL } same as _12
_27 = { NULL ESCAPED NONLOCAL } same as _14
_28 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_29 = { NULL ESCAPED NONLOCAL } same as _14
_30 = { NULL ESCAPED NONLOCAL } same as _12
accum_95 = { NULL ESCAPED NONLOCAL } same as _12
_96 = { NULL ESCAPED NONLOCAL } same as _14
accum_97 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_98 = { NULL ESCAPED NONLOCAL }
borrow_165 = { NULL ESCAPED NONLOCAL } same as _98
accum_99 = { NULL ESCAPED NONLOCAL }
_100 = { NULL ESCAPED NONLOCAL } same as accum_99
_101 = { NULL ESCAPED NONLOCAL } same as accum_99
_102 = { NULL ESCAPED NONLOCAL }
_103 = { NULL ESCAPED NONLOCAL } same as accum_99
i_87 = { NONLOCAL } same as operation
i_47 = { NONLOCAL } same as operation
borrow_155 = { NULL ESCAPED NONLOCAL } same as _98
_31 = { NULL ESCAPED NONLOCAL } same as _14
_32 = { ESCAPED NONLOCAL }
_104 = { ESCAPED NONLOCAL } same as _32
accum_105 = { ESCAPED NONLOCAL } same as _32
_106 = { NULL ESCAPED NONLOCAL }
borrow_166 = { NULL ESCAPED NONLOCAL } same as _106
accum_107 = { NULL ESCAPED NONLOCAL }
_108 = { NULL ESCAPED NONLOCAL }
_109 = { NULL ESCAPED NONLOCAL } same as _108
_110 = { NULL ESCAPED NONLOCAL }
_111 = { NULL ESCAPED NONLOCAL } same as accum_107
i_82 = { NONLOCAL } same as operation
i_48 = { NONLOCAL } same as operation
_33 = { NONLOCAL }
_113 = { NULL NONLOCAL } same as i_193
i_112 = { NULL NONLOCAL } same as i_193
_114 = { NULL NONLOCAL } same as i_193
_115 = { NONLOCAL }
_116 = { ESCAPED NONLOCAL }
_117 = { ESCAPED NONLOCAL } same as _116
n_119 = { NULL ESCAPED NONLOCAL }
n_118 = { NULL ESCAPED NONLOCAL } same as n_119
i_120 = { NULL NONLOCAL } same as i_193
n_153 = { NULL ESCAPED NONLOCAL } same as n_119
derefaddrtmp(187) = { NULL } same as derefaddrtmp(26)
derefaddrtmp(188) = { NULL } same as derefaddrtmp(26)
_34 = { NULL ESCAPED NONLOCAL } same as _12
_35 = { NULL ESCAPED NONLOCAL } same as _14
_217 = { NONLOCAL }
_421 = { NONLOCAL }
accum_422 = { ESCAPED NONLOCAL }
_423 = { ESCAPED NONLOCAL }
accum_424 = { ESCAPED NONLOCAL }
_434 = { NONLOCAL }
accum_435 = { ESCAPED NONLOCAL }
_436 = { ESCAPED NONLOCAL }
accum_437 = { ESCAPED NONLOCAL }
_212 = { ESCAPED NONLOCAL } same as accum_422
accum_438 = { ESCAPED NONLOCAL } same as accum_437
accum_439 = { ESCAPED NONLOCAL } same as accum_437
_447 = { NONLOCAL }
accum_448 = { ESCAPED NONLOCAL }
_449 = { ESCAPED NONLOCAL }
accum_450 = { ESCAPED NONLOCAL }
_577 = { ESCAPED NONLOCAL } same as accum_435
accum_451 = { ESCAPED NONLOCAL } same as accum_450
accum_452 = { ESCAPED NONLOCAL } same as accum_450
_460 = { NONLOCAL } same as _217
accum_461 = { ESCAPED NONLOCAL }
_462 = { ESCAPED NONLOCAL }
accum_463 = { ESCAPED NONLOCAL }
_576 = { ESCAPED NONLOCAL } same as accum_448
accum_464 = { ESCAPED NONLOCAL } same as accum_463
accum_465 = { ESCAPED NONLOCAL } same as accum_463
_229 = { ESCAPED NONLOCAL }
_230 = { ESCAPED NONLOCAL } same as _229
_231 = { ESCAPED NONLOCAL }
_232 = { ESCAPED NONLOCAL } same as _231
_233 = { ESCAPED NONLOCAL }
_234 = { ESCAPED NONLOCAL } same as _233
_36 = { NULL ESCAPED NONLOCAL } same as _14
_37 = { NULL ESCAPED NONLOCAL } same as _12
accum_121 = { NULL ESCAPED NONLOCAL } same as _12
_122 = { NULL ESCAPED NONLOCAL } same as _14
accum_123 = { NULL ESCAPED NONLOCAL } same as exponent_difference_62
_124 = { NULL ESCAPED NONLOCAL }
carry_167 = { NULL ESCAPED NONLOCAL } same as _124
accum_125 = { NULL ESCAPED NONLOCAL }
_126 = { NULL ESCAPED NONLOCAL } same as accum_125
_127 = { NULL ESCAPED NONLOCAL } same as accum_125
_128 = { NULL ESCAPED NONLOCAL }
_129 = { NULL ESCAPED NONLOCAL } same as accum_125
i_80 = { NONLOCAL } same as operation
i_49 = { NONLOCAL } same as operation
carry_16 = { NULL ESCAPED NONLOCAL } same as _124
_38 = { ESCAPED NONLOCAL }
_39 = { ESCAPED NONLOCAL } same as _38
_40 = { ESCAPED NONLOCAL }
_41 = { ESCAPED NONLOCAL } same as _40
_42 = { NONLOCAL }
_131 = { NULL NONLOCAL } same as i_193
i_130 = { NULL NONLOCAL } same as i_193
_132 = { NULL NONLOCAL } same as i_193
_133 = { NONLOCAL }
accum_134 = { ESCAPED NONLOCAL }
_135 = { ESCAPED NONLOCAL }
accum_136 = { ESCAPED NONLOCAL } same as accum_134
accum_137 = { ESCAPED NONLOCAL } same as accum_134
accum_138 = { ESCAPED NONLOCAL } same as accum_134
i_139 = { NULL NONLOCAL } same as i_193
carry_168 = { NULL ESCAPED NONLOCAL }
_43 = { ESCAPED NONLOCAL }
_44 = { ESCAPED NONLOCAL }
derefaddrtmp(256) = { NONLOCAL } same as operation
_45 = { ESCAPED NONLOCAL }
_46 = { ESCAPED NONLOCAL } same as _45
derefaddrtmp(259) = { NONLOCAL } same as operation
derefaddrtmp(260) = { NONLOCAL } same as operation
derefaddrtmp(261) = { NONLOCAL } same as operation
derefaddrtmp(262) = { NONLOCAL } same as operation
derefaddrtmp(263) = { NONLOCAL } same as operation
derefaddrtmp(264) = { NULL } same as derefaddrtmp(26)
i_617 = { NONLOCAL } same as operation
derefaddrtmp(266) = { NULL } same as derefaddrtmp(26)
i_621 = { NONLOCAL } same as operation
derefaddrtmp(268) = { NULL } same as derefaddrtmp(26)
i_625 = { NONLOCAL } same as operation
_236 = { ESCAPED NONLOCAL }
_237 = { ESCAPED NONLOCAL }
CALLUSED(272) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(273) = { }
_238 = { NULL ESCAPED NONLOCAL }
doubledereftmp(275) = { ESCAPED NONLOCAL }
CALLUSED(276) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(277) = { }
_243 = { NULL ESCAPED NONLOCAL }
doubledereftmp(279) = { ESCAPED NONLOCAL }
i_239 = { NULL NONLOCAL } same as i_193
i_235 = { NULL NONLOCAL } same as i_193
CALLUSED(282) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(283) = { }
_241 = { NULL ESCAPED NONLOCAL }
doubledereftmp(285) = { ESCAPED NONLOCAL }
_142 = { ESCAPED NONLOCAL }
_143 = { ESCAPED NONLOCAL } same as _142
_247 = { NONLOCAL }
_249 = { NULL NONLOCAL } same as i_193
i_248 = { NULL NONLOCAL } same as i_193
_250 = { NULL NONLOCAL } same as i_193
_251 = { NONLOCAL }
_252 = { ESCAPED NONLOCAL }
_253 = { ESCAPED NONLOCAL } same as _252
n_255 = { NULL ESCAPED NONLOCAL }
n_254 = { NULL ESCAPED NONLOCAL } same as n_255
i_256 = { NULL NONLOCAL } same as i_193
n_257 = { NULL ESCAPED NONLOCAL } same as n_255
puts = { }
_258 = { ESCAPED NONLOCAL }
_259 = { ESCAPED NONLOCAL } same as _258
_260 = { ESCAPED NONLOCAL }
exponent_difference_261 = { ESCAPED NONLOCAL } same as _260
exponent_difference_262 = { ESCAPED NONLOCAL } same as _260
derefaddrtmp(305) = { NULL } same as derefaddrtmp(26)
derefaddrtmp(306) = { NONLOCAL } same as operation
derefaddrtmp(307) = { NULL } same as derefaddrtmp(26)
i_164 = { NONLOCAL } same as operation
derefaddrtmp(309) = { NULL } same as derefaddrtmp(26)
i_68 = { NONLOCAL } same as operation
derefaddrtmp(311) = { NULL } same as derefaddrtmp(26)
i_338 = { NONLOCAL } same as operation
derefaddrtmp(313) = { NULL } same as derefaddrtmp(26)
i_342 = { NONLOCAL } same as operation
_265 = { ESCAPED NONLOCAL } same as _258
_266 = { ESCAPED NONLOCAL } same as _260
_267 = { ESCAPED NONLOCAL } same as _260
_268 = { ESCAPED NONLOCAL } same as _260
_269 = { ESCAPED NONLOCAL } same as _260
mantissa_270 = { NONLOCAL }
_271 = { ESCAPED NONLOCAL } same as _142
i_343 = { NULL } same as derefaddrtmp(26)
_345 = { NULL } same as derefaddrtmp(26)
_346 = { NULL } same as derefaddrtmp(26)
_347 = { NONLOCAL } same as mantissa_270
derefaddrtmp(326) = { NULL } same as derefaddrtmp(26)
i_349 = { NONLOCAL } same as operation
_352 = { NONLOCAL } same as operation
_353 = { NONLOCAL } same as operation
_354 = { NONLOCAL }
derefaddrtmp(331) = { NULL } same as derefaddrtmp(26)
i_356 = { NONLOCAL } same as operation
_359 = { NONLOCAL } same as operation
_360 = { NONLOCAL } same as operation
_361 = { NONLOCAL }
derefaddrtmp(336) = { NULL } same as derefaddrtmp(26)
i_363 = { NONLOCAL } same as operation
derefaddrtmp(338) = { NONLOCAL } same as operation
_289 = { ESCAPED NONLOCAL }
_290 = { ESCAPED NONLOCAL }
i_292 = { NULL NONLOCAL } same as i_193
i_291 = { NULL NONLOCAL } same as i_193
_369 = { NONLOCAL } same as mantissa_270
accum_370 = { ESCAPED NONLOCAL }
_371 = { ESCAPED NONLOCAL }
accum_372 = { ESCAPED NONLOCAL }
_382 = { NONLOCAL }
accum_383 = { ESCAPED NONLOCAL }
_384 = { ESCAPED NONLOCAL }
accum_385 = { ESCAPED NONLOCAL }
accum_386 = { ESCAPED NONLOCAL } same as accum_385
accum_387 = { ESCAPED NONLOCAL } same as accum_385
_395 = { NONLOCAL }
accum_396 = { ESCAPED NONLOCAL }
_397 = { ESCAPED NONLOCAL }
accum_398 = { ESCAPED NONLOCAL }
accum_399 = { ESCAPED NONLOCAL } same as accum_398
accum_400 = { ESCAPED NONLOCAL } same as accum_398
_408 = { NONLOCAL }
accum_409 = { ESCAPED NONLOCAL }
_410 = { ESCAPED NONLOCAL }
accum_411 = { ESCAPED NONLOCAL }
accum_412 = { ESCAPED NONLOCAL } same as accum_411
accum_413 = { ESCAPED NONLOCAL } same as accum_411
_244 = { ESCAPED NONLOCAL } same as _142
_245 = { ESCAPED NONLOCAL }
_246 = { ESCAPED NONLOCAL }


Alias information for AddSubInternalFPF

Aliased symbols

locy, UID D.2986, struct InternalFPF, is addressable
locx, UID D.2985, struct InternalFPF, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_33, points-to non-local, points-to NULL, points-to vars: { }
_42, points-to non-local, points-to vars: { }
x_58(D), points-to non-local, points-to NULL, points-to vars: { }
y_59(D), points-to non-local, points-to NULL, points-to vars: { }
z_60(D), points-to non-local, points-to NULL, points-to vars: { }
_115, points-to non-local, points-to NULL, points-to vars: { }
_133, points-to non-local, points-to NULL, points-to vars: { }
_217, points-to non-local, points-to NULL, points-to vars: { }
_247, points-to non-local, points-to NULL, points-to vars: { }
_251, points-to non-local, points-to NULL, points-to vars: { }
mantissa_270, points-to non-local, points-to NULL, points-to vars: { }
_347, points-to non-local, points-to NULL, points-to vars: { }
_354, points-to non-local, points-to NULL, points-to vars: { }
_361, points-to non-local, points-to NULL, points-to vars: { }
_369, points-to non-local, points-to NULL, points-to vars: { }
_382, points-to non-local, points-to NULL, points-to vars: { }
_395, points-to non-local, points-to NULL, points-to vars: { }
_408, points-to non-local, points-to NULL, points-to vars: { }
_421, points-to non-local, points-to NULL, points-to vars: { }
_434, points-to non-local, points-to NULL, points-to vars: { }
_447, points-to non-local, points-to NULL, points-to vars: { }
_460, points-to non-local, points-to NULL, points-to vars: { }
_472, points-to NULL, points-to vars: { D.2986 }
_479, points-to NULL, points-to vars: { D.2986 }
_486, points-to NULL, points-to vars: { D.2986 }
_494, points-to NULL, points-to vars: { D.2986 }
_507, points-to NULL, points-to vars: { D.2986 }
_520, points-to NULL, points-to vars: { D.2986 }
_533, points-to NULL, points-to vars: { D.2986 }
_545, points-to NULL, points-to vars: { D.2985 }
_552, points-to NULL, points-to vars: { D.2985 }
_559, points-to NULL, points-to vars: { D.2985 }
_567, points-to NULL, points-to vars: { D.2985 }
_580, points-to NULL, points-to vars: { D.2985 }
_593, points-to NULL, points-to vars: { D.2985 }
_606, points-to NULL, points-to vars: { D.2985 }

AddSubInternalFPF (unsigned char operation, struct InternalFPF * x, struct InternalFPF * y, struct InternalFPF * z)
{
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  int n;
  long int exponent_difference;
  int i;
  short unsigned int carry;
  short unsigned int accum;
  int i;
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  short unsigned int accum;
  unsigned int accum;
  int i;
  int n;
  unsigned int accum;
  unsigned int accum;
  struct InternalFPF locy;
  struct InternalFPF locx;
  int i;
  short unsigned int carry;
  short unsigned int borrow;
  int exponent_difference;
  unsigned char _1;
  int _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  unsigned char _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _10;
  unsigned char _11;
  short int _12;
  int _13;
  short int _14;
  int _15;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  short int _20;
  int _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  short int _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  short unsigned int _29;
  short unsigned int _30;
  unsigned char _31;
  short unsigned int _32;
  short unsigned int[4] * _33;
  unsigned char _34;
  unsigned char _35;
  short unsigned int _36;
  short unsigned int _37;
  short int _38;
  unsigned short _39;
  unsigned short _40;
  short int _41;
  short unsigned int[4] * _42;
  short unsigned int _43;
  short unsigned int _44;
  short unsigned int _45;
  signed short _46;
  long unsigned int _83;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  unsigned int _96;
  unsigned int _98;
  unsigned int _100;
  short unsigned int _101;
  short unsigned int _102;
  short unsigned int _103;
  unsigned int _104;
  unsigned int _106;
  unsigned int _108;
  short unsigned int _109;
  short unsigned int _110;
  short unsigned int _111;
  long unsigned int _113;
  long unsigned int _114;
  short unsigned int * _115;
  short unsigned int _116;
  int _117;
  unsigned int _122;
  unsigned int _124;
  unsigned int _126;
  short unsigned int _127;
  short unsigned int _128;
  short unsigned int _129;
  long unsigned int _131;
  long unsigned int _132;
  short unsigned int * _133;
  short unsigned int _135;
  unsigned char _142;
  unsigned char _143;
  unsigned char _172;
  short unsigned int _190;
  short unsigned int _191;
  unsigned char _195;
  signed short _212;
  short unsigned int _213;
  short unsigned int _214;
  short unsigned int[4] * _217;
  short int _229;
  unsigned short _230;
  unsigned short _231;
  short int _232;
  short unsigned int _233;
  signed short _234;
  short unsigned int _236;
  short unsigned int _237;
  long unsigned int _238;
  long unsigned int _241;
  long unsigned int _243;
  unsigned char _244;
  short unsigned int _245;
  short unsigned int _246;
  short unsigned int[4] * _247;
  long unsigned int _249;
  long unsigned int _250;
  short unsigned int * _251;
  short unsigned int _252;
  int _253;
  short int _258;
  int _259;
  int _260;
  unsigned short _265;
  unsigned short _266;
  unsigned short _267;
  short int _268;
  int _269;
  unsigned char _271;
  short unsigned int _289;
  short unsigned int _290;
  long unsigned int _345;
  long unsigned int _346;
  short unsigned int * _347;
  long unsigned int _352;
  long unsigned int _353;
  short unsigned int * _354;
  long unsigned int _359;
  long unsigned int _360;
  short unsigned int * _361;
  short unsigned int * _369;
  short unsigned int _371;
  short unsigned int * _382;
  short unsigned int _384;
  short unsigned int * _395;
  short unsigned int _397;
  short unsigned int * _408;
  short unsigned int _410;
  short unsigned int * _421;
  short unsigned int _423;
  short unsigned int * _434;
  short unsigned int _436;
  short unsigned int * _447;
  short unsigned int _449;
  short unsigned int * _460;
  short unsigned int _462;
  long unsigned int _470;
  long unsigned int _471;
  short unsigned int * _472;
  long unsigned int _477;
  long unsigned int _478;
  short unsigned int * _479;
  long unsigned int _484;
  long unsigned int _485;
  short unsigned int * _486;
  short unsigned int * _494;
  short unsigned int _496;
  short unsigned int * _507;
  short unsigned int _509;
  short unsigned int * _520;
  short unsigned int _522;
  short unsigned int * _533;
  short unsigned int _535;
  long unsigned int _543;
  long unsigned int _544;
  short unsigned int * _545;
  long unsigned int _550;
  long unsigned int _551;
  short unsigned int * _552;
  long unsigned int _557;
  long unsigned int _558;
  short unsigned int * _559;
  short unsigned int * _567;
  short unsigned int _569;
  signed short _576;
  signed short _577;
  short unsigned int * _580;
  short unsigned int _582;
  short unsigned int * _593;
  short unsigned int _595;
  short unsigned int * _606;
  short unsigned int _608;

  <bb 2> [81.50%]:
  _1 = x_58(D)->type;
  _2 = (int) _1;
  _3 = _2 * 5;
  _4 = y_59(D)->type;
  _5 = (int) _4;
  _6 = _3 + _5;
  switch (_6) <default: <L63> [12.50%], case 0: <L67> [12.50%], case 1 ... 3: <L70> [12.50%], case 4: <L69> [12.50%], case 5: <L68> [12.50%], case 6 ... 7: <L71> [12.50%], case 8: <L70> [12.50%], case 9: <L69> [12.50%], case 10: <L68> [12.50%], case 11 ... 12: <L71> [12.50%], case 13: <L70> [12.50%], case 14: <L69> [12.50%], case 15 ... 17: <L68> [12.50%], case 18: <L72> [12.50%], case 19: <L69> [12.50%], case 20 ... 23: <L68> [12.50%], case 24: <L75> [12.50%]>

<L75> [10.19%]:
  goto <bb 88> (<L74>); [100.00%]

<L67> [10.19%]:
  _83 = __builtin_object_size (x_58(D), 0);
  __builtin_memmove (x_58(D), z_60(D), 12);
  _7 = x_58(D)->sign;
  _8 = y_59(D)->sign;
  _9 = _7 ^ _8;
  if (_9 != operation_65(D))
    goto <bb 5>; [66.00%]
  else
    goto <bb 90> (<L63>); [34.00%]

  <bb 5> [6.72%]:
  z_60(D)->sign = 0;
  goto <bb 90> (<L63>); [100.00%]

<L68> [10.19%]:
  _92 = __builtin_object_size (x_58(D), 0);
  __builtin_memmove (x_58(D), z_60(D), 12);
  goto <bb 90> (<L63>); [100.00%]

<L69> [10.19%]:
  _93 = __builtin_object_size (y_59(D), 0);
  __builtin_memmove (y_59(D), z_60(D), 12);
  goto <bb 90> (<L63>); [100.00%]

<L70> [10.19%]:
  _94 = __builtin_object_size (y_59(D), 0);
  __builtin_memmove (y_59(D), z_60(D), 12);
  _10 = z_60(D)->sign;
  _11 = _10 ^ operation_65(D);
  z_60(D)->sign = _11;
  goto <bb 90> (<L63>); [100.00%]

<L71> [10.19%]:
  __builtin_memcpy (&locx, x_58(D), 12);
  __builtin_memcpy (&locy, y_59(D), 12);
  _12 = locx.exp;
  _13 = (int) _12;
  _14 = locy.exp;
  _15 = (int) _14;
  exponent_difference_62 = _13 - _15;
  if (exponent_difference_62 == 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 10> [5.09%]:
  if (_1 == 1)
    goto <bb 12>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 11> [3.36%]:
  if (_4 == 1)
    goto <bb 12>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 12> [2.87%]:
  z_60(D)->type = 1;
  goto <bb 14>; [100.00%]

  <bb 13> [2.22%]:
  z_60(D)->type = 2;

  <bb 14> [5.09%]:
  _17 = locx.sign;
  z_60(D)->sign = _17;
  z_60(D)->exp = _12;
  goto <bb 46>; [100.00%]

  <bb 15> [5.09%]:
  if (exponent_difference_62 > 0)
    goto <bb 16>; [64.00%]
  else
    goto <bb 31>; [36.00%]

  <bb 16> [3.26%]:
  _172 = locy.type;
  if (_172 != 0)
    goto <bb 17>; [54.00%]
  else
    goto <bb 30>; [46.00%]

  <bb 17> [1.76%]:
  if (exponent_difference_62 > 63)
    goto <bb 19>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 18> [0.88%]:
  goto <bb 22>; [100.00%]

  <bb 19> [0.88%]:
  # i_468 = PHI <0(17)>
  _470 = 0;
  _471 = 0;
  _472 = &locy.mantissa;
  *_472 = 0;
  i_474 = 1;
  _477 = 1;
  _478 = 2;
  _479 = &locy.mantissa + 2;
  *_479 = 0;
  i_481 = 2;
  _484 = 2;
  _485 = 4;
  _486 = &locy.mantissa + 4;
  *_486 = 0;
  i_488 = 3;
  MEM[(short unsigned int *)&locy + 10B] = 1;
  goto <bb 30>; [100.00%]

  <bb 20> [2.49%]:
  _190 = MEM[(short unsigned int *)&locy + 10B];
  _191 = _190 | 1;
  MEM[(short unsigned int *)&locy + 10B] = _191;

  <bb 21> [4.99%]:
  i_193 = i_192 + 1;

  <bb 22> [5.87%]:
  # i_192 = PHI <0(18), i_193(21)>
  if (exponent_difference_62 > i_192)
    goto <bb 23>; [85.00%]
  else
    goto <bb 30>; [15.00%]

  <bb 23> [4.99%]:
  _494 = &locy.mantissa;
  accum_495 = MEM[(short unsigned int *)&locy + 4B];
  _496 = accum_495 & 1;
  accum_497 = accum_495 >> 1;
  MEM[(short unsigned int *)&locy + 4B] = accum_497;
  _507 = &locy.mantissa + 2;
  accum_508 = MEM[(short unsigned int *)&locy + 6B];
  _509 = accum_508 & 1;
  accum_510 = accum_508 >> 1;
  if (_496 != 0)
    goto <bb 24>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 24> [2.50%]:
  accum_511 = accum_510 | 32768;

  <bb 25> [4.99%]:
  # accum_512 = PHI <accum_510(23), accum_511(24)>
  MEM[(short unsigned int *)&locy + 6B] = accum_512;
  _520 = &locy.mantissa + 4;
  accum_521 = MEM[(short unsigned int *)&locy + 8B];
  _522 = accum_521 & 1;
  accum_523 = accum_521 >> 1;
  if (_509 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 26> [2.50%]:
  accum_524 = accum_523 | 32768;

  <bb 27> [4.99%]:
  # accum_525 = PHI <accum_523(25), accum_524(26)>
  MEM[(short unsigned int *)&locy + 8B] = accum_525;
  _533 = &locy.mantissa + 6;
  accum_534 = MEM[(short unsigned int *)&locy + 10B];
  _535 = accum_534 & 1;
  accum_536 = accum_534 >> 1;
  if (_522 != 0)
    goto <bb 28>; [50.00%]
  else
    goto <bb 29>; [50.00%]

  <bb 28> [2.50%]:
  accum_537 = accum_536 | 32768;

  <bb 29> [4.99%]:
  # accum_538 = PHI <accum_536(27), accum_537(28)>
  MEM[(short unsigned int *)&locy + 10B] = accum_538;
  if (_535 != 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 30> [3.26%]:
  _18 = locx.type;
  z_60(D)->type = _18;
  _19 = locx.sign;
  z_60(D)->sign = _19;
  _20 = locx.exp;
  z_60(D)->exp = _20;
  goto <bb 46>; [100.00%]

  <bb 31> [1.83%]:
  _21 = -exponent_difference_62;
  _195 = locx.type;
  if (_195 != 0)
    goto <bb 32>; [54.00%]
  else
    goto <bb 45>; [46.00%]

  <bb 32> [0.99%]:
  if (exponent_difference_62 < -63)
    goto <bb 34>; [50.00%]
  else
    goto <bb 33>; [50.00%]

  <bb 33> [0.50%]:
  goto <bb 37>; [100.00%]

  <bb 34> [0.50%]:
  # i_541 = PHI <0(32)>
  _543 = 0;
  _544 = 0;
  _545 = &locx.mantissa;
  *_545 = 0;
  i_547 = 1;
  _550 = 1;
  _551 = 2;
  _552 = &locx.mantissa + 2;
  *_552 = 0;
  i_554 = 2;
  _557 = 2;
  _558 = 4;
  _559 = &locx.mantissa + 4;
  *_559 = 0;
  i_561 = 3;
  MEM[(short unsigned int *)&locx + 10B] = 1;
  goto <bb 45>; [100.00%]

  <bb 35> [1.40%]:
  _213 = MEM[(short unsigned int *)&locx + 10B];
  _214 = _213 | 1;
  MEM[(short unsigned int *)&locx + 10B] = _214;

  <bb 36> [2.81%]:
  i_216 = i_215 + 1;

  <bb 37> [3.30%]:
  # i_215 = PHI <0(33), i_216(36)>
  if (_21 > i_215)
    goto <bb 38>; [85.00%]
  else
    goto <bb 45>; [15.00%]

  <bb 38> [2.81%]:
  _567 = &locx.mantissa;
  accum_568 = MEM[(short unsigned int *)&locx + 4B];
  _569 = accum_568 & 1;
  accum_570 = accum_568 >> 1;
  MEM[(short unsigned int *)&locx + 4B] = accum_570;
  _580 = &locx.mantissa + 2;
  accum_581 = MEM[(short unsigned int *)&locx + 6B];
  _582 = accum_581 & 1;
  accum_583 = accum_581 >> 1;
  if (_569 != 0)
    goto <bb 39>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 39> [1.40%]:
  accum_584 = accum_583 | 32768;

  <bb 40> [2.81%]:
  # accum_585 = PHI <accum_583(38), accum_584(39)>
  MEM[(short unsigned int *)&locx + 6B] = accum_585;
  _593 = &locx.mantissa + 4;
  accum_594 = MEM[(short unsigned int *)&locx + 8B];
  _595 = accum_594 & 1;
  accum_596 = accum_594 >> 1;
  if (_582 != 0)
    goto <bb 41>; [50.00%]
  else
    goto <bb 42>; [50.00%]

  <bb 41> [1.40%]:
  accum_597 = accum_596 | 32768;

  <bb 42> [2.81%]:
  # accum_598 = PHI <accum_596(40), accum_597(41)>
  MEM[(short unsigned int *)&locx + 8B] = accum_598;
  _606 = &locx.mantissa + 6;
  accum_607 = MEM[(short unsigned int *)&locx + 10B];
  _608 = accum_607 & 1;
  accum_609 = accum_607 >> 1;
  if (_595 != 0)
    goto <bb 43>; [50.00%]
  else
    goto <bb 44>; [50.00%]

  <bb 43> [1.40%]:
  accum_610 = accum_609 | 32768;

  <bb 44> [2.81%]:
  # accum_611 = PHI <accum_609(42), accum_610(43)>
  MEM[(short unsigned int *)&locx + 10B] = accum_611;
  if (_608 != 0)
    goto <bb 35>; [50.00%]
  else
    goto <bb 36>; [50.00%]

  <bb 45> [1.83%]:
  _22 = locy.type;
  z_60(D)->type = _22;
  _23 = locy.sign;
  _24 = _23 ^ operation_65(D);
  z_60(D)->sign = _24;
  _25 = locy.exp;
  z_60(D)->exp = _25;

  <bb 46> [10.19%]:
  _26 = locx.sign;
  _27 = locy.sign;
  _28 = _26 ^ _27;
  if (_28 != operation_65(D))
    goto <bb 48>; [66.00%]
  else
    goto <bb 47>; [34.00%]

  <bb 47> [3.46%]:
  goto <bb 72>; [100.00%]

  <bb 48> [6.73%]:
  goto <bb 50>; [100.00%]

  <bb 49> [26.89%]:
  _29 = locy.mantissa[i_47];
  _30 = locx.mantissa[i_47];
  accum_95 = (unsigned int) _30;
  _96 = (unsigned int) _29;
  accum_97 = accum_95 - _96;
  _98 = (unsigned int) borrow_165;
  accum_99 = accum_97 - _98;
  _100 = accum_99 >> 16;
  _101 = (short unsigned int) _100;
  _102 = _101 & 1;
  _103 = (short unsigned int) accum_99;
  MEM[(short unsigned int *)z_60(D)].mantissa[i_47] = _103;
  i_87 = i_47 + -1;

  <bb 50> [33.62%]:
  # i_47 = PHI <3(48), i_87(49)>
  # borrow_165 = PHI <0(48), _102(49)>
  if (i_47 >= 0)
    goto <bb 49>; [80.00%]
  else
    goto <bb 51>; [20.00%]

  <bb 51> [6.72%]:
  # borrow_155 = PHI <borrow_165(50)>
  if (borrow_165 != 0)
    goto <bb 52>; [50.00%]
  else
    goto <bb 55>; [50.00%]

  <bb 52> [3.36%]:
  _31 = _27 ^ operation_65(D);
  z_60(D)->sign = _31;
  goto <bb 54>; [100.00%]

  <bb 53> [13.45%]:
  _32 = z_60(D)->mantissa[i_48];
  _104 = (unsigned int) _32;
  accum_105 = -_104;
  _106 = (unsigned int) borrow_166;
  accum_107 = accum_105 - _106;
  _108 = accum_107 >> 16;
  _109 = (short unsigned int) _108;
  _110 = _109 & 1;
  _111 = (short unsigned int) accum_107;
  MEM[(short unsigned int *)z_60(D)].mantissa[i_48] = _111;
  i_82 = i_48 + -1;

  <bb 54> [16.81%]:
  # i_48 = PHI <3(52), i_82(53)>
  # borrow_166 = PHI <0(52), _110(53)>
  if (i_48 >= 0)
    goto <bb 53>; [80.00%]
  else
    goto <bb 55>; [20.00%]

  <bb 55> [6.72%]:
  _33 = &z_60(D)->mantissa;
  goto <bb 57>; [100.00%]

  <bb 56> [26.89%]:
  _113 = (long unsigned int) i_112;
  _114 = _113 * 2;
  _115 = _33 + _114;
  _116 = *_115;
  _117 = (int) _116;
  n_119 = _117 | n_118;
  i_120 = i_112 + 1;

  <bb 57> [33.62%]:
  # i_112 = PHI <0(55), i_120(56)>
  # n_118 = PHI <0(55), n_119(56)>
  if (i_112 <= 3)
    goto <bb 56>; [80.00%]
  else
    goto <bb 58>; [20.00%]

  <bb 58> [6.72%]:
  # n_153 = PHI <n_118(57)>
  if (n_118 == 0)
    goto <bb 59>; [50.00%]
  else
    goto <bb 60>; [50.00%]

  <bb 59> [3.36%]:
  z_60(D)->type = 0;
  z_60(D)->sign = 0;
  goto <bb 90> (<L63>); [100.00%]

  <bb 60> [3.36%]:
  _34 = locx.type;
  if (_34 == 2)
    goto <bb 69>; [20.24%]
  else
    goto <bb 61>; [79.76%]

  <bb 61> [2.68%]:
  _35 = locy.type;
  if (_35 == 2)
    goto <bb 69>; [34.00%]
  else
    goto <bb 90> (<L63>); [66.00%]

  <bb 62> [9.02%]:
  _217 = &z_60(D)->mantissa;
  _421 = &MEM[(void *)z_60(D) + 10B];
  accum_422 = MEM[(short unsigned int *)z_60(D) + 10B];
  _423 = accum_422 & 32768;
  accum_424 = accum_422 << 1;
  MEM[(short unsigned int *)z_60(D) + 10B] = accum_424;
  _434 = &MEM[(void *)z_60(D) + 8B];
  accum_435 = MEM[(short unsigned int *)z_60(D) + 8B];
  _436 = accum_435 & 32768;
  accum_437 = accum_435 << 1;
  _212 = (signed short) accum_422;
  if (_212 < 0)
    goto <bb 63>; [50.00%]
  else
    goto <bb 64>; [50.00%]

  <bb 63> [4.51%]:
  accum_438 = accum_437 | 1;

  <bb 64> [9.02%]:
  # accum_439 = PHI <accum_437(62), accum_438(63)>
  MEM[(short unsigned int *)z_60(D) + 8B] = accum_439;
  _447 = &MEM[(void *)z_60(D) + 6B];
  accum_448 = MEM[(short unsigned int *)z_60(D) + 6B];
  _449 = accum_448 & 32768;
  accum_450 = accum_448 << 1;
  _577 = (signed short) accum_435;
  if (_577 < 0)
    goto <bb 65>; [50.00%]
  else
    goto <bb 66>; [50.00%]

  <bb 65> [4.51%]:
  accum_451 = accum_450 | 1;

  <bb 66> [9.02%]:
  # accum_452 = PHI <accum_450(64), accum_451(65)>
  MEM[(short unsigned int *)z_60(D) + 6B] = accum_452;
  _460 = _217;
  accum_461 = MEM[(short unsigned int *)z_60(D) + 4B];
  _462 = accum_461 & 32768;
  accum_463 = accum_461 << 1;
  _576 = (signed short) accum_448;
  if (_576 < 0)
    goto <bb 67>; [50.00%]
  else
    goto <bb 68>; [50.00%]

  <bb 67> [4.51%]:
  accum_464 = accum_463 | 1;

  <bb 68> [9.02%]:
  # accum_465 = PHI <accum_463(66), accum_464(67)>
  MEM[(short unsigned int *)z_60(D) + 4B] = accum_465;
  _229 = z_60(D)->exp;
  _230 = (unsigned short) _229;
  _231 = _230 + 65535;
  _232 = (short int) _231;
  z_60(D)->exp = _232;
  goto <bb 70>; [100.00%]

  <bb 69> [1.59%]:

  <bb 70> [10.61%]:
  _233 = z_60(D)->mantissa[0];
  _234 = (signed short) _233;
  if (_234 >= 0)
    goto <bb 62>; [85.00%]
  else
    goto <bb 90> (<L63>); [15.00%]

  <bb 71> [13.85%]:
  _36 = locy.mantissa[i_49];
  _37 = locx.mantissa[i_49];
  accum_121 = (unsigned int) _37;
  _122 = (unsigned int) _36;
  accum_123 = accum_121 + _122;
  _124 = (unsigned int) carry_167;
  accum_125 = accum_123 + _124;
  _126 = accum_125 >> 16;
  _127 = (short unsigned int) _126;
  _128 = _127 & 1;
  _129 = (short unsigned int) accum_125;
  MEM[(short unsigned int *)z_60(D)].mantissa[i_49] = _129;
  i_80 = i_49 + -1;

  <bb 72> [17.32%]:
  # i_49 = PHI <3(47), i_80(71)>
  # carry_167 = PHI <0(47), _128(71)>
  if (i_49 >= 0)
    goto <bb 71>; [80.00%]
  else
    goto <bb 73>; [20.00%]

  <bb 73> [3.46%]:
  # carry_16 = PHI <carry_167(72)>
  if (carry_167 != 0)
    goto <bb 74>; [50.00%]
  else
    goto <bb 80>; [50.00%]

  <bb 74> [1.73%]:
  _38 = z_60(D)->exp;
  _39 = (unsigned short) _38;
  _40 = _39 + 1;
  _41 = (short int) _40;
  z_60(D)->exp = _41;
  _42 = &z_60(D)->mantissa;
  goto <bb 78>; [100.00%]

  <bb 75> [6.93%]:
  _131 = (long unsigned int) i_130;
  _132 = _131 * 2;
  _133 = _42 + _132;
  accum_134 = *_133;
  _135 = accum_134 & 1;
  accum_136 = accum_134 >> 1;
  if (carry_168 != 0)
    goto <bb 76>; [50.00%]
  else
    goto <bb 77>; [50.00%]

  <bb 76> [3.46%]:
  accum_137 = accum_136 | 32768;

  <bb 77> [6.93%]:
  # accum_138 = PHI <accum_136(75), accum_137(76)>
  *_133 = accum_138;
  i_139 = i_130 + 1;

  <bb 78> [8.66%]:
  # i_130 = PHI <0(74), i_139(77)>
  # carry_168 = PHI <0(74), _135(77)>
  if (i_130 <= 3)
    goto <bb 75>; [80.00%]
  else
    goto <bb 79>; [20.00%]

  <bb 79> [1.73%]:
  _43 = z_60(D)->mantissa[0];
  _44 = _43 | 32768;
  z_60(D)->mantissa[0] = _44;
  z_60(D)->type = 2;
  goto <bb 90> (<L63>); [100.00%]

  <bb 80> [1.73%]:
  _45 = z_60(D)->mantissa[0];
  _46 = (signed short) _45;
  if (_46 < 0)
    goto <bb 81>; [36.00%]
  else
    goto <bb 90> (<L63>); [64.00%]

  <bb 81> [0.62%]:
  z_60(D)->type = 2;
  goto <bb 90> (<L63>); [100.00%]

<L72> [10.19%]:
  z_60(D)->type = 4;
  z_60(D)->exp = 32767;
  z_60(D)->sign = 1;
  z_60(D)->mantissa[0] = 16384;
  z_60(D)->mantissa[1] = 0;
  i_617 = 2;
  z_60(D)->mantissa[i_617] = 0;
  i_621 = 3;
  z_60(D)->mantissa[i_621] = 0;
  i_625 = 4;
  goto <bb 90> (<L63>); [100.00%]

  <bb 83> [29.32%]:
  _236 = x_58(D)->mantissa[i_235];
  _237 = y_59(D)->mantissa[i_235];
  if (_236 > _237)
    goto <bb 84>; [5.00%]
  else
    goto <bb 85>; [95.00%]

  <bb 84> [1.47%]:
  _238 = __builtin_object_size (x_58(D), 0);
  __builtin_memmove (x_58(D), z_60(D), 12);
  goto <bb 90> (<L63>); [100.00%]

  <bb 85> [27.85%]:
  if (_236 < _237)
    goto <bb 86>; [5.00%]
  else
    goto <bb 87>; [95.00%]

  <bb 86> [1.39%]:
  _243 = __builtin_object_size (y_59(D), 0);
  __builtin_memmove (y_59(D), z_60(D), 12);
  goto <bb 90> (<L63>); [100.00%]

  <bb 87> [26.46%]:
  i_239 = i_235 + 1;

  # i_235 = PHI <0(3), i_239(87)>
<L74> [36.65%]:
  if (i_235 <= 3)
    goto <bb 83>; [80.00%]
  else
    goto <bb 89>; [20.00%]

  <bb 89> [7.33%]:
  _241 = __builtin_object_size (y_59(D), 0);
  __builtin_memmove (y_59(D), z_60(D), 12);

<L63> [81.50%]:
  _142 = z_60(D)->type;
  _143 = _142 + 255;
  if (_143 <= 1)
    goto <bb 91>; [24.54%]
  else
    goto <bb 115>; [75.46%]

  <bb 91> [20.00%]:
  _247 = &z_60(D)->mantissa;
  goto <bb 93>; [100.00%]

  <bb 92> [80.00%]:
  _249 = (long unsigned int) i_248;
  _250 = _249 * 2;
  _251 = _247 + _250;
  _252 = *_251;
  _253 = (int) _252;
  n_255 = _253 | n_254;
  i_256 = i_248 + 1;

  <bb 93> [100.00%]:
  # i_248 = PHI <0(91), i_256(92)>
  # n_254 = PHI <0(91), n_255(92)>
  if (i_248 <= 3)
    goto <bb 92>; [80.00%]
  else
    goto <bb 94>; [20.00%]

  <bb 94> [20.00%]:
  # n_257 = PHI <n_254(93)>
  if (n_254 == 0)
    goto <bb 95>; [33.00%]
  else
    goto <bb 96>; [67.00%]

  <bb 95> [6.60%]:
  __builtin_puts (&"Error:  zero significand in denormalize"[0]);

  <bb 96> [20.00%]:
  _258 = z_60(D)->exp;
  _259 = (int) _258;
  _260 = _259 + 32767;
  exponent_difference_261 = (long int) _260;
  if (exponent_difference_261 < 0)
    goto <bb 97>; [39.77%]
  else
    goto <bb 113>; [60.23%]

  <bb 97> [7.95%]:
  exponent_difference_262 = -exponent_difference_261;
  if (exponent_difference_261 < -63)
    goto <bb 98>; [67.00%]
  else
    goto <bb 99>; [33.00%]

  <bb 98> [5.33%]:
  z_60(D)->type = 0;
  z_60(D)->exp = -32767;
  z_60(D)->mantissa[0] = 0;
  i_164 = 1;
  z_60(D)->mantissa[i_164] = 0;
  i_68 = 2;
  z_60(D)->mantissa[i_68] = 0;
  i_338 = 3;
  z_60(D)->mantissa[i_338] = 0;
  i_342 = 4;
  goto <bb 113>; [100.00%]

  <bb 99> [2.62%]:
  _265 = (unsigned short) _258;
  _266 = (unsigned short) exponent_difference_262;
  _267 = _265 + _266;
  _268 = (short int) _267;
  z_60(D)->exp = _268;
  _269 = (int) exponent_difference_262;
  mantissa_270 = &z_60(D)->mantissa;
  _271 = z_60(D)->type;
  if (_271 != 0)
    goto <bb 100>; [54.00%]
  else
    goto <bb 113>; [46.00%]

  <bb 100> [1.42%]:
  if (_269 > 63)
    goto <bb 102>; [50.00%]
  else
    goto <bb 101>; [50.00%]

  <bb 101> [0.71%]:
  goto <bb 105>; [100.00%]

  <bb 102> [0.71%]:
  # i_343 = PHI <0(100)>
  _345 = 0;
  _346 = 0;
  _347 = mantissa_270;
  *_347 = 0;
  i_349 = 1;
  _352 = 1;
  _353 = 2;
  _354 = mantissa_270 + 2;
  *_354 = 0;
  i_356 = 2;
  _359 = 2;
  _360 = 4;
  _361 = mantissa_270 + 4;
  *_361 = 0;
  i_363 = 3;
  MEM[(short unsigned int *)z_60(D) + 10B] = 1;
  goto <bb 113>; [100.00%]

  <bb 103> [2.01%]:
  _289 = MEM[(short unsigned int *)z_60(D) + 10B];
  _290 = _289 | 1;
  MEM[(short unsigned int *)z_60(D) + 10B] = _290;

  <bb 104> [4.02%]:
  i_292 = i_291 + 1;

  <bb 105> [4.72%]:
  # i_291 = PHI <0(101), i_292(104)>
  if (_269 > i_291)
    goto <bb 106>; [85.00%]
  else
    goto <bb 113>; [15.00%]

  <bb 106> [4.02%]:
  _369 = mantissa_270;
  accum_370 = MEM[(short unsigned int *)z_60(D) + 4B];
  _371 = accum_370 & 1;
  accum_372 = accum_370 >> 1;
  MEM[(short unsigned int *)z_60(D) + 4B] = accum_372;
  _382 = &MEM[(void *)z_60(D) + 6B];
  accum_383 = MEM[(short unsigned int *)z_60(D) + 6B];
  _384 = accum_383 & 1;
  accum_385 = accum_383 >> 1;
  if (_371 != 0)
    goto <bb 107>; [50.00%]
  else
    goto <bb 108>; [50.00%]

  <bb 107> [2.01%]:
  accum_386 = accum_385 | 32768;

  <bb 108> [4.02%]:
  # accum_387 = PHI <accum_385(106), accum_386(107)>
  MEM[(short unsigned int *)z_60(D) + 6B] = accum_387;
  _395 = &MEM[(void *)z_60(D) + 8B];
  accum_396 = MEM[(short unsigned int *)z_60(D) + 8B];
  _397 = accum_396 & 1;
  accum_398 = accum_396 >> 1;
  if (_384 != 0)
    goto <bb 109>; [50.00%]
  else
    goto <bb 110>; [50.00%]

  <bb 109> [2.01%]:
  accum_399 = accum_398 | 32768;

  <bb 110> [4.02%]:
  # accum_400 = PHI <accum_398(108), accum_399(109)>
  MEM[(short unsigned int *)z_60(D) + 8B] = accum_400;
  _408 = &MEM[(void *)z_60(D) + 10B];
  accum_409 = MEM[(short unsigned int *)z_60(D) + 10B];
  _410 = accum_409 & 1;
  accum_411 = accum_409 >> 1;
  if (_397 != 0)
    goto <bb 111>; [50.00%]
  else
    goto <bb 112>; [50.00%]

  <bb 111> [2.01%]:
  accum_412 = accum_411 | 32768;

  <bb 112> [4.02%]:
  # accum_413 = PHI <accum_411(110), accum_412(111)>
  MEM[(short unsigned int *)z_60(D) + 10B] = accum_413;
  if (_410 != 0)
    goto <bb 103>; [50.00%]
  else
    goto <bb 104>; [50.00%]

  <bb 113> [20.00%]:
  _244 = z_60(D)->type;
  if (_244 != 0)
    goto <bb 114>; [54.00%]
  else
    goto <bb 115>; [46.00%]

  <bb 114> [10.80%]:
  _245 = z_60(D)->mantissa[3];
  _246 = _245 & 65528;
  z_60(D)->mantissa[3] = _246;

  <bb 115> [81.50%]:
  locx ={v} {CLOBBER};
  locy ={v} {CLOBBER};
  return;

}



;; Function SetupCPUEmFloatArrays (SetupCPUEmFloatArrays, funcdef_no=34, decl_uid=2767, cgraph_uid=34, symbol_order=34)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
abase = &NONLOCAL
bbase = &NONLOCAL
cbase = &NONLOCAL
arraysize = &NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = &NONLOCAL
_1 = NONLOCAL
locFPF1 = &NONLOCAL
mylong_41 = _1
locFPF1 = &NULL
mylong_44 = mylong_41
mylong_44 = _1
locFPF1 = &NONLOCAL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NULL
locFPF1 = &NONLOCAL
_45 = mylong_44
_45 = &NONLOCAL
myword_46 = _45
locFPF1 = myword_46
myword_47 = mylong_44
locFPF1 = myword_47
_64 = locFPF1
_65 = _64
_285 = &locFPF1
accum_286 = locFPF1
_287 = accum_286 + UNKNOWN
accum_288 = accum_286
accum_288 = &NONLOCAL
locFPF1 = accum_288
_298 = &locFPF1
accum_299 = locFPF1
_300 = accum_299 + UNKNOWN
accum_301 = accum_299
accum_301 = &NONLOCAL
_295 = accum_286
accum_302 = accum_301
accum_302 = &NONLOCAL
accum_303 = accum_301
accum_303 = accum_302
locFPF1 = accum_303
_311 = &locFPF1
accum_312 = locFPF1
_313 = accum_312 + UNKNOWN
accum_314 = accum_312
accum_314 = &NONLOCAL
_294 = accum_299
accum_315 = accum_314
accum_315 = &NONLOCAL
accum_316 = accum_314
accum_316 = accum_315
locFPF1 = accum_316
_324 = &locFPF1
accum_325 = locFPF1
_326 = accum_325 + UNKNOWN
accum_327 = accum_325
accum_327 = &NONLOCAL
_290 = accum_312
accum_328 = accum_327
accum_328 = &NONLOCAL
accum_329 = accum_327
accum_329 = accum_328
locFPF1 = accum_329
_60 = locFPF1
_61 = _60
_62 = _61
_62 = &NONLOCAL
_63 = _62
locFPF1 = _63
ESCAPED = &NONLOCAL
_2 = NONLOCAL
_3 = _2
_3 = &NONLOCAL
locFPF2 = &NONLOCAL
mylong_34 = _2
locFPF2 = &NULL
mylong_37 = mylong_34
mylong_37 = _3
locFPF2 = &NONLOCAL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NONLOCAL
_38 = mylong_37
_38 = &NONLOCAL
myword_39 = _38
locFPF2 = myword_39
myword_40 = mylong_37
locFPF2 = myword_40
_82 = locFPF2
_83 = _82
_217 = &locFPF2
accum_218 = locFPF2
_219 = accum_218 + UNKNOWN
accum_220 = accum_218
accum_220 = &NONLOCAL
locFPF2 = accum_220
_230 = &locFPF2
accum_231 = locFPF2
_232 = accum_231 + UNKNOWN
accum_233 = accum_231
accum_233 = &NONLOCAL
_227 = accum_218
accum_234 = accum_233
accum_234 = &NONLOCAL
accum_235 = accum_233
accum_235 = accum_234
locFPF2 = accum_235
_243 = &locFPF2
accum_244 = locFPF2
_245 = accum_244 + UNKNOWN
accum_246 = accum_244
accum_246 = &NONLOCAL
_226 = accum_231
accum_247 = accum_246
accum_247 = &NONLOCAL
accum_248 = accum_246
accum_248 = accum_247
locFPF2 = accum_248
_256 = &locFPF2
accum_257 = locFPF2
_258 = accum_257 + UNKNOWN
accum_259 = accum_257
accum_259 = &NONLOCAL
_222 = accum_244
accum_260 = accum_259
accum_260 = &NONLOCAL
accum_261 = accum_259
accum_261 = accum_260
locFPF2 = accum_261
_78 = locFPF2
_79 = _78
_80 = _79
_80 = &NONLOCAL
_81 = _80
locFPF2 = _81
_4 = i_9
_4 = &NONLOCAL
_5 = abase + UNKNOWN
ESCAPED = &locFPF1
ESCAPED = &locFPF2
ESCAPED = _5
ESCAPED = &NONLOCAL
_6 = NONLOCAL
_7 = _6
_7 = &NONLOCAL
locFPF2 = &NONLOCAL
mylong_27 = _6
locFPF2 = &NULL
mylong_30 = mylong_27
mylong_30 = _7
locFPF2 = &NONLOCAL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NULL
locFPF2 = &NONLOCAL
_31 = mylong_30
_31 = &NONLOCAL
myword_32 = _31
locFPF2 = myword_32
myword_33 = mylong_30
locFPF2 = myword_33
_100 = locFPF2
_101 = _100
_23 = &locFPF2
accum_150 = locFPF2
_151 = accum_150 + UNKNOWN
accum_152 = accum_150
accum_152 = &NONLOCAL
locFPF2 = accum_152
_162 = &locFPF2
accum_163 = locFPF2
_164 = accum_163 + UNKNOWN
accum_165 = accum_163
accum_165 = &NONLOCAL
_159 = accum_150
accum_166 = accum_165
accum_166 = &NONLOCAL
accum_167 = accum_165
accum_167 = accum_166
locFPF2 = accum_167
_175 = &locFPF2
accum_176 = locFPF2
_177 = accum_176 + UNKNOWN
accum_178 = accum_176
accum_178 = &NONLOCAL
_158 = accum_163
accum_179 = accum_178
accum_179 = &NONLOCAL
accum_180 = accum_178
accum_180 = accum_179
locFPF2 = accum_180
_188 = &locFPF2
accum_189 = locFPF2
_190 = accum_189 + UNKNOWN
accum_191 = accum_189
accum_191 = &NONLOCAL
_154 = accum_176
accum_192 = accum_191
accum_192 = &NONLOCAL
accum_193 = accum_191
accum_193 = accum_192
locFPF2 = accum_193
_96 = locFPF2
_97 = _96
_98 = _97
_98 = &NONLOCAL
_99 = _98
locFPF2 = _99
_8 = bbase + UNKNOWN
ESCAPED = &locFPF1
ESCAPED = &locFPF2
ESCAPED = _8
i_26 = i_9
i_26 = &NONLOCAL
i_9 = &NULL
i_9 = i_26

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 5 15 54 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"abase"[label="abase = { 5 }"];
"bbase"[label="bbase = { 5 }"];
"cbase"[label="cbase = { 5 }"];
"arraysize"[label="arraysize = { 5 }"];
"randnum";
"randwc";
"_1";
"locFPF1"[label="locFPF1 = { 1 5 }"];
"mylong_41";
"mylong_44";
"_45"[label="_45 = { 5 }"];
"myword_46";
"myword_47";
"_64";
"_65";
"_285"[label="_285 = { 15 }"];
"_287";
"_298"[label="_298 = { 15 }"];
"_300";
"_295";
"_311"[label="_311 = { 15 }"];
"_313";
"_294";
"_324"[label="_324 = { 15 }"];
"_326";
"_290";
"_2";
"_3"[label="_3 = { 5 }"];
"locFPF2"[label="locFPF2 = { 1 5 }"];
"mylong_34";
"mylong_37";
"_38"[label="_38 = { 5 }"];
"myword_39";
"myword_40";
"_82";
"_83";
"_217"[label="_217 = { 54 }"];
"_219";
"_230"[label="_230 = { 54 }"];
"_232";
"_227";
"_243"[label="_243 = { 54 }"];
"_245";
"_226";
"_256"[label="_256 = { 54 }"];
"_258";
"_222";
"_4"[label="_4 = { 5 }"];
"i_9"[label="i_9 = { 1 5 }"];
"_5";
"DivideInternalFPF";
"_6";
"_7"[label="_7 = { 5 }"];
"mylong_27";
"mylong_30";
"_31"[label="_31 = { 5 }"];
"myword_32";
"myword_33";
"_100";
"_101";
"_23"[label="_23 = { 54 }"];
"_151";
"_162"[label="_162 = { 54 }"];
"_164";
"_159";
"_175"[label="_175 = { 54 }"];
"_177";
"_158";
"_188"[label="_188 = { 54 }"];
"_190";
"_154";
"_8";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*abase";
"*bbase";
"*cbase";
"*arraysize";
"*randnum";
"*randwc";
"*_1";
"*locFPF1";
"*mylong_41";
"*mylong_44";
"*_45";
"*myword_46";
"*myword_47";
"*_64";
"*_65";
"*_285";
"*accum_286";
"*_287";
"*accum_288";
"*_298";
"*accum_299";
"*_300";
"*accum_301";
"*_295";
"*accum_302";
"*accum_303";
"*_311";
"*accum_312";
"*_313";
"*accum_314";
"*_294";
"*accum_315";
"*accum_316";
"*_324";
"*accum_325";
"*_326";
"*accum_327";
"*_290";
"*accum_328";
"*accum_329";
"*_60";
"*_61";
"*_62";
"*_63";
"*_2";
"*_3";
"*locFPF2";
"*mylong_34";
"*mylong_37";
"*_38";
"*myword_39";
"*myword_40";
"*_82";
"*_83";
"*_217";
"*accum_218";
"*_219";
"*accum_220";
"*_230";
"*accum_231";
"*_232";
"*accum_233";
"*_227";
"*accum_234";
"*accum_235";
"*_243";
"*accum_244";
"*_245";
"*accum_246";
"*_226";
"*accum_247";
"*accum_248";
"*_256";
"*accum_257";
"*_258";
"*accum_259";
"*_222";
"*accum_260";
"*accum_261";
"*_78";
"*_79";
"*_80";
"*_81";
"*_4";
"*i_9";
"*_5";
"*DivideInternalFPF";
"*_6";
"*_7";
"*mylong_27";
"*mylong_30";
"*_31";
"*myword_32";
"*myword_33";
"*_100";
"*_101";
"*_23";
"*accum_150";
"*_151";
"*accum_152";
"*_162";
"*accum_163";
"*_164";
"*accum_165";
"*_159";
"*accum_166";
"*accum_167";
"*_175";
"*accum_176";
"*_177";
"*accum_178";
"*_158";
"*accum_179";
"*accum_180";
"*_188";
"*accum_189";
"*_190";
"*accum_191";
"*_154";
"*accum_192";
"*accum_193";
"*_96";
"*_97";
"*_98";
"*_99";
"*_8";
"*i_26";

  // Edges in the constraint graph:
"_5" -> "ESCAPED";
"_8" -> "ESCAPED";
"*ESCAPED" -> "ESCAPED";
"NONLOCAL" -> "_1";
"locFPF1" -> "locFPF1";
"myword_46" -> "locFPF1";
"myword_47" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"locFPF1" -> "locFPF1";
"_1" -> "mylong_41";
"_1" -> "mylong_44";
"mylong_41" -> "mylong_44";
"mylong_44" -> "_45";
"_45" -> "myword_46";
"mylong_44" -> "myword_47";
"locFPF1" -> "_64";
"_64" -> "_65";
"locFPF1" -> "_295";
"locFPF1" -> "_294";
"locFPF1" -> "_290";
"NONLOCAL" -> "_2";
"_2" -> "_3";
"locFPF2" -> "locFPF2";
"myword_39" -> "locFPF2";
"myword_40" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"myword_32" -> "locFPF2";
"myword_33" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"locFPF2" -> "locFPF2";
"_2" -> "mylong_34";
"_3" -> "mylong_37";
"mylong_34" -> "mylong_37";
"mylong_37" -> "_38";
"_38" -> "myword_39";
"mylong_37" -> "myword_40";
"locFPF2" -> "_82";
"_82" -> "_83";
"locFPF2" -> "_227";
"locFPF2" -> "_226";
"locFPF2" -> "_222";
"i_9" -> "_4";
"i_9" -> "i_9";
"i_9" -> "i_9";
"NONLOCAL" -> "_6";
"_6" -> "_7";
"_6" -> "mylong_27";
"_7" -> "mylong_30";
"mylong_27" -> "mylong_30";
"mylong_30" -> "_31";
"_31" -> "myword_32";
"mylong_30" -> "myword_33";
"locFPF2" -> "_100";
"_100" -> "_101";
"locFPF2" -> "_159";
"locFPF2" -> "_158";
"locFPF2" -> "_154";
"NONLOCAL" -> "*ESCAPED";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_5 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l"];
"randnum";
"randwc";
"_1";
"_64" [label="\N\n_287 = _64 + UNKNOWN\l_300 = _64 + UNKNOWN\l_313 = _64 + UNKNOWN\l_326 = _64 + UNKNOWN\l"];
"_285";
"_287";
"_300";
"_313";
"_326";
"_82" [label="\N\n_219 = _82 + UNKNOWN\l_232 = _82 + UNKNOWN\l_245 = _82 + UNKNOWN\l_258 = _82 + UNKNOWN\l_151 = _82 + UNKNOWN\l_164 = _82 + UNKNOWN\l_177 = _82 + UNKNOWN\l_190 = _82 + UNKNOWN\l"];
"_217";
"_219";
"_232";
"_245";
"_258";
"_4";
"_5";
"DivideInternalFPF";
"_151";
"_164";
"_177";
"_190";
"_8";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_64";
"STOREDANYTHING" -> "_287";
"STOREDANYTHING" -> "_300";
"STOREDANYTHING" -> "_313";
"STOREDANYTHING" -> "_326";
"STOREDANYTHING" -> "_82";
"STOREDANYTHING" -> "_219";
"STOREDANYTHING" -> "_232";
"STOREDANYTHING" -> "_245";
"STOREDANYTHING" -> "_258";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_151";
"STOREDANYTHING" -> "_164";
"STOREDANYTHING" -> "_177";
"STOREDANYTHING" -> "_190";
"STOREDANYTHING" -> "_8";
"_1" -> "_64";
"_1" -> "_82";
"_5" -> "ESCAPED";
"_8" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _1\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_5 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l"];
"randnum";
"randwc";
"_1";
"_64" [label="\N\n_287 = _64 + UNKNOWN\l_300 = _64 + UNKNOWN\l_313 = _64 + UNKNOWN\l_326 = _64 + UNKNOWN\l"];
"_285";
"_287";
"_300";
"_313";
"_326";
"_82" [label="\N\n_219 = _82 + UNKNOWN\l_232 = _82 + UNKNOWN\l_245 = _82 + UNKNOWN\l_258 = _82 + UNKNOWN\l_151 = _82 + UNKNOWN\l_164 = _82 + UNKNOWN\l_177 = _82 + UNKNOWN\l_190 = _82 + UNKNOWN\l"];
"_217";
"_219";
"_232";
"_245";
"_258";
"_4";
"_5";
"DivideInternalFPF";
"_151";
"_164";
"_177";
"_190";
"_8";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_64";
"STOREDANYTHING" -> "_287";
"STOREDANYTHING" -> "_300";
"STOREDANYTHING" -> "_313";
"STOREDANYTHING" -> "_326";
"STOREDANYTHING" -> "_82";
"STOREDANYTHING" -> "_219";
"STOREDANYTHING" -> "_232";
"STOREDANYTHING" -> "_245";
"STOREDANYTHING" -> "_258";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_151";
"STOREDANYTHING" -> "_164";
"STOREDANYTHING" -> "_177";
"STOREDANYTHING" -> "_190";
"STOREDANYTHING" -> "_8";
"_1" -> "ESCAPED";
"_1" -> "_64";
"_1" -> "_64";
"_1" -> "_82";
"_1" -> "_82";
"_64" -> "ESCAPED";
"_82" -> "ESCAPED";
"_5" -> "ESCAPED";
"_8" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL locFPF1 locFPF2 }
NONLOCAL = { ESCAPED NONLOCAL } same as _1
STOREDANYTHING = { }
INTEGER = { ANYTHING }
abase = { NONLOCAL }
bbase = { NONLOCAL } same as abase
cbase = { NONLOCAL } same as abase
arraysize = { NONLOCAL } same as abase
randnum = { }
randwc = { }
_1 = { ESCAPED NONLOCAL }
locFPF1 = { NULL ESCAPED NONLOCAL } same as _64
mylong_41 = { ESCAPED NONLOCAL } same as _1
mylong_44 = { ESCAPED NONLOCAL } same as _1
_45 = { ESCAPED NONLOCAL } same as _1
myword_46 = { ESCAPED NONLOCAL } same as _1
myword_47 = { ESCAPED NONLOCAL } same as _1
_64 = { NULL ESCAPED NONLOCAL }
_65 = { NULL ESCAPED NONLOCAL } same as _64
_285 = { locFPF1 }
accum_286 = { NULL ESCAPED NONLOCAL } same as _64
_287 = { NULL ESCAPED NONLOCAL }
accum_288 = { NULL ESCAPED NONLOCAL } same as _64
_298 = { locFPF1 } same as _285
accum_299 = { NULL ESCAPED NONLOCAL } same as _64
_300 = { NULL ESCAPED NONLOCAL }
accum_301 = { NULL ESCAPED NONLOCAL } same as _64
_295 = { NULL ESCAPED NONLOCAL } same as _64
accum_302 = { NULL ESCAPED NONLOCAL } same as _64
accum_303 = { NULL ESCAPED NONLOCAL } same as _64
_311 = { locFPF1 } same as _285
accum_312 = { NULL ESCAPED NONLOCAL } same as _64
_313 = { NULL ESCAPED NONLOCAL }
accum_314 = { NULL ESCAPED NONLOCAL } same as _64
_294 = { NULL ESCAPED NONLOCAL } same as _64
accum_315 = { NULL ESCAPED NONLOCAL } same as _64
accum_316 = { NULL ESCAPED NONLOCAL } same as _64
_324 = { locFPF1 } same as _285
accum_325 = { NULL ESCAPED NONLOCAL } same as _64
_326 = { NULL ESCAPED NONLOCAL }
accum_327 = { NULL ESCAPED NONLOCAL } same as _64
_290 = { NULL ESCAPED NONLOCAL } same as _64
accum_328 = { NULL ESCAPED NONLOCAL } same as _64
accum_329 = { NULL ESCAPED NONLOCAL } same as _64
_60 = { NULL ESCAPED NONLOCAL } same as _64
_61 = { NULL ESCAPED NONLOCAL } same as _64
_62 = { NULL ESCAPED NONLOCAL } same as _64
_63 = { NULL ESCAPED NONLOCAL } same as _64
_2 = { ESCAPED NONLOCAL } same as _1
_3 = { ESCAPED NONLOCAL } same as _1
locFPF2 = { NULL ESCAPED NONLOCAL } same as _82
mylong_34 = { ESCAPED NONLOCAL } same as _1
mylong_37 = { ESCAPED NONLOCAL } same as _1
_38 = { ESCAPED NONLOCAL } same as _1
myword_39 = { ESCAPED NONLOCAL } same as _1
myword_40 = { ESCAPED NONLOCAL } same as _1
_82 = { NULL ESCAPED NONLOCAL }
_83 = { NULL ESCAPED NONLOCAL } same as _82
_217 = { locFPF2 }
accum_218 = { NULL ESCAPED NONLOCAL } same as _82
_219 = { NULL ESCAPED NONLOCAL }
accum_220 = { NULL ESCAPED NONLOCAL } same as _82
_230 = { locFPF2 } same as _217
accum_231 = { NULL ESCAPED NONLOCAL } same as _82
_232 = { NULL ESCAPED NONLOCAL }
accum_233 = { NULL ESCAPED NONLOCAL } same as _82
_227 = { NULL ESCAPED NONLOCAL } same as _82
accum_234 = { NULL ESCAPED NONLOCAL } same as _82
accum_235 = { NULL ESCAPED NONLOCAL } same as _82
_243 = { locFPF2 } same as _217
accum_244 = { NULL ESCAPED NONLOCAL } same as _82
_245 = { NULL ESCAPED NONLOCAL }
accum_246 = { NULL ESCAPED NONLOCAL } same as _82
_226 = { NULL ESCAPED NONLOCAL } same as _82
accum_247 = { NULL ESCAPED NONLOCAL } same as _82
accum_248 = { NULL ESCAPED NONLOCAL } same as _82
_256 = { locFPF2 } same as _217
accum_257 = { NULL ESCAPED NONLOCAL } same as _82
_258 = { NULL ESCAPED NONLOCAL }
accum_259 = { NULL ESCAPED NONLOCAL } same as _82
_222 = { NULL ESCAPED NONLOCAL } same as _82
accum_260 = { NULL ESCAPED NONLOCAL } same as _82
accum_261 = { NULL ESCAPED NONLOCAL } same as _82
_78 = { NULL ESCAPED NONLOCAL } same as _82
_79 = { NULL ESCAPED NONLOCAL } same as _82
_80 = { NULL ESCAPED NONLOCAL } same as _82
_81 = { NULL ESCAPED NONLOCAL } same as _82
_4 = { NULL NONLOCAL }
i_9 = { NULL NONLOCAL } same as _4
_5 = { NONLOCAL }
DivideInternalFPF = { }
_6 = { ESCAPED NONLOCAL } same as _1
_7 = { ESCAPED NONLOCAL } same as _1
mylong_27 = { ESCAPED NONLOCAL } same as _1
mylong_30 = { ESCAPED NONLOCAL } same as _1
_31 = { ESCAPED NONLOCAL } same as _1
myword_32 = { ESCAPED NONLOCAL } same as _1
myword_33 = { ESCAPED NONLOCAL } same as _1
_100 = { NULL ESCAPED NONLOCAL } same as _82
_101 = { NULL ESCAPED NONLOCAL } same as _82
_23 = { locFPF2 } same as _217
accum_150 = { NULL ESCAPED NONLOCAL } same as _82
_151 = { NULL ESCAPED NONLOCAL }
accum_152 = { NULL ESCAPED NONLOCAL } same as _82
_162 = { locFPF2 } same as _217
accum_163 = { NULL ESCAPED NONLOCAL } same as _82
_164 = { NULL ESCAPED NONLOCAL }
accum_165 = { NULL ESCAPED NONLOCAL } same as _82
_159 = { NULL ESCAPED NONLOCAL } same as _82
accum_166 = { NULL ESCAPED NONLOCAL } same as _82
accum_167 = { NULL ESCAPED NONLOCAL } same as _82
_175 = { locFPF2 } same as _217
accum_176 = { NULL ESCAPED NONLOCAL } same as _82
_177 = { NULL ESCAPED NONLOCAL }
accum_178 = { NULL ESCAPED NONLOCAL } same as _82
_158 = { NULL ESCAPED NONLOCAL } same as _82
accum_179 = { NULL ESCAPED NONLOCAL } same as _82
accum_180 = { NULL ESCAPED NONLOCAL } same as _82
_188 = { locFPF2 } same as _217
accum_189 = { NULL ESCAPED NONLOCAL } same as _82
_190 = { NULL ESCAPED NONLOCAL }
accum_191 = { NULL ESCAPED NONLOCAL } same as _82
_154 = { NULL ESCAPED NONLOCAL } same as _82
accum_192 = { NULL ESCAPED NONLOCAL } same as _82
accum_193 = { NULL ESCAPED NONLOCAL } same as _82
_96 = { NULL ESCAPED NONLOCAL } same as _82
_97 = { NULL ESCAPED NONLOCAL } same as _82
_98 = { NULL ESCAPED NONLOCAL } same as _82
_99 = { NULL ESCAPED NONLOCAL } same as _82
_8 = { NONLOCAL }
i_26 = { NULL NONLOCAL } same as _4


Alias information for SetupCPUEmFloatArrays

Aliased symbols

locFPF2, UID D.2844, struct InternalFPF, is addressable
locFPF1, UID D.2843, struct InternalFPF, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.2843 D.2844 } (escaped)

Flow-insensitive points-to information

_5, points-to non-local, points-to NULL, points-to vars: { }
_8, points-to non-local, points-to NULL, points-to vars: { }
abase_20(D), points-to non-local, points-to NULL, points-to vars: { }
_23, points-to NULL, points-to vars: { D.2844 } (escaped)
bbase_24(D), points-to non-local, points-to NULL, points-to vars: { }
_162, points-to NULL, points-to vars: { D.2844 } (escaped)
_175, points-to NULL, points-to vars: { D.2844 } (escaped)
_188, points-to NULL, points-to vars: { D.2844 } (escaped)
_217, points-to NULL, points-to vars: { D.2844 } (escaped)
_230, points-to NULL, points-to vars: { D.2844 } (escaped)
_243, points-to NULL, points-to vars: { D.2844 } (escaped)
_256, points-to NULL, points-to vars: { D.2844 } (escaped)
_285, points-to NULL, points-to vars: { D.2843 } (escaped)
_298, points-to NULL, points-to vars: { D.2843 } (escaped)
_311, points-to NULL, points-to vars: { D.2843 } (escaped)
_324, points-to NULL, points-to vars: { D.2843 } (escaped)

SetupCPUEmFloatArrays (struct InternalFPF * abase, struct InternalFPF * bbase, struct InternalFPF * cbase, long unsigned int arraysize)
{
  short unsigned int carry;
  short unsigned int accum;
  int i;
  short unsigned int carry;
  short unsigned int accum;
  int i;
  short unsigned int carry;
  short unsigned int accum;
  int i;
  int i;
  short unsigned int myword;
  int32 mylong;
  int i;
  short unsigned int myword;
  int32 mylong;
  int i;
  short unsigned int myword;
  int32 mylong;
  struct InternalFPF locFPF2;
  struct InternalFPF locFPF1;
  long unsigned int i;
  int _1;
  int _2;
  int _3;
  long unsigned int _4;
  struct InternalFPF * _5;
  int _6;
  int _7;
  struct InternalFPF * _8;
  short unsigned int * _23;
  int _31;
  int _38;
  int _45;
  short int _60;
  unsigned short _61;
  unsigned short _62;
  short int _63;
  short unsigned int _64;
  signed short _65;
  short int _78;
  unsigned short _79;
  unsigned short _80;
  short int _81;
  short unsigned int _82;
  signed short _83;
  short int _96;
  unsigned short _97;
  unsigned short _98;
  short int _99;
  short unsigned int _100;
  signed short _101;
  short unsigned int _151;
  signed short _154;
  signed short _158;
  signed short _159;
  short unsigned int * _162;
  short unsigned int _164;
  short unsigned int * _175;
  short unsigned int _177;
  short unsigned int * _188;
  short unsigned int _190;
  short unsigned int * _217;
  short unsigned int _219;
  signed short _222;
  signed short _226;
  signed short _227;
  short unsigned int * _230;
  short unsigned int _232;
  short unsigned int * _243;
  short unsigned int _245;
  short unsigned int * _256;
  short unsigned int _258;
  short unsigned int * _285;
  short unsigned int _287;
  signed short _290;
  signed short _294;
  signed short _295;
  short unsigned int * _298;
  short unsigned int _300;
  short unsigned int * _311;
  short unsigned int _313;
  short unsigned int * _324;
  short unsigned int _326;

  <bb 2> [1.70%]:
  randnum (13);
  goto <bb 46>; [100.00%]

  <bb 3> [9.63%]:
  _1 = randwc (50000);
  if (_1 < 0)
    goto <bb 4>; [36.00%]
  else
    goto <bb 5>; [64.00%]

  <bb 4> [3.47%]:
  locFPF1.sign = 1;
  mylong_41 = -_1;
  goto <bb 6>; [100.00%]

  <bb 5> [6.16%]:
  locFPF1.sign = 0;

  <bb 6> [9.63%]:
  # mylong_44 = PHI <mylong_41(4), _1(5)>
  locFPF1.type = 2;
  locFPF1.mantissa[0] = 0;
  locFPF1.mantissa[1] = 0;
  locFPF1.mantissa[2] = 0;
  locFPF1.mantissa[3] = 0;
  if (mylong_44 == 0)
    goto <bb 7>; [63.36%]
  else
    goto <bb 8>; [36.64%]

  <bb 7> [6.10%]:
  locFPF1.type = 0;
  locFPF1.exp = 0;
  goto <bb 17>; [100.00%]

  <bb 8> [3.53%]:
  locFPF1.exp = 32;
  _45 = mylong_44 >> 16;
  myword_46 = (short unsigned int) _45;
  locFPF1.mantissa[0] = myword_46;
  myword_47 = (short unsigned int) mylong_44;
  locFPF1.mantissa[1] = myword_47;

  <bb 9> [23.53%]:
  _64 = locFPF1.mantissa[0];
  _65 = (signed short) _64;
  if (_65 >= 0)
    goto <bb 10>; [85.00%]
  else
    goto <bb 17>; [15.00%]

  <bb 10> [20.00%]:
  _285 = &locFPF1.mantissa + 6;
  accum_286 = MEM[(short unsigned int *)&locFPF1 + 10B];
  _287 = accum_286 & 32768;
  accum_288 = accum_286 << 1;
  MEM[(short unsigned int *)&locFPF1 + 10B] = accum_288;
  _298 = &locFPF1.mantissa + 4;
  accum_299 = MEM[(short unsigned int *)&locFPF1 + 8B];
  _300 = accum_299 & 32768;
  accum_301 = accum_299 << 1;
  _295 = (signed short) accum_286;
  if (_295 < 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [10.00%]:
  accum_302 = accum_301 | 1;

  <bb 12> [20.00%]:
  # accum_303 = PHI <accum_301(10), accum_302(11)>
  MEM[(short unsigned int *)&locFPF1 + 8B] = accum_303;
  _311 = &locFPF1.mantissa + 2;
  accum_312 = MEM[(short unsigned int *)&locFPF1 + 6B];
  _313 = accum_312 & 32768;
  accum_314 = accum_312 << 1;
  _294 = (signed short) accum_299;
  if (_294 < 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [10.00%]:
  accum_315 = accum_314 | 1;

  <bb 14> [20.00%]:
  # accum_316 = PHI <accum_314(12), accum_315(13)>
  MEM[(short unsigned int *)&locFPF1 + 6B] = accum_316;
  _324 = &locFPF1.mantissa;
  accum_325 = MEM[(short unsigned int *)&locFPF1 + 4B];
  _326 = accum_325 & 32768;
  accum_327 = accum_325 << 1;
  _290 = (signed short) accum_312;
  if (_290 < 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [10.00%]:
  accum_328 = accum_327 | 1;

  <bb 16> [20.00%]:
  # accum_329 = PHI <accum_327(14), accum_328(15)>
  MEM[(short unsigned int *)&locFPF1 + 4B] = accum_329;
  _60 = locFPF1.exp;
  _61 = (unsigned short) _60;
  _62 = _61 + 65535;
  _63 = (short int) _62;
  locFPF1.exp = _63;
  goto <bb 9>; [100.00%]

  <bb 17> [9.63%]:
  _2 = randwc (50000);
  _3 = _2 + 1;
  if (_3 < 0)
    goto <bb 18>; [36.00%]
  else
    goto <bb 19>; [64.00%]

  <bb 18> [3.47%]:
  locFPF2.sign = 1;
  mylong_34 = ~_2;
  goto <bb 20>; [100.00%]

  <bb 19> [6.16%]:
  locFPF2.sign = 0;

  <bb 20> [9.63%]:
  # mylong_37 = PHI <mylong_34(18), _3(19)>
  locFPF2.type = 2;
  locFPF2.mantissa[0] = 0;
  locFPF2.mantissa[1] = 0;
  locFPF2.mantissa[2] = 0;
  locFPF2.mantissa[3] = 0;
  if (mylong_37 == 0)
    goto <bb 21>; [63.36%]
  else
    goto <bb 22>; [36.64%]

  <bb 21> [6.10%]:
  locFPF2.type = 0;
  locFPF2.exp = 0;
  goto <bb 31>; [100.00%]

  <bb 22> [3.53%]:
  locFPF2.exp = 32;
  _38 = mylong_37 >> 16;
  myword_39 = (short unsigned int) _38;
  locFPF2.mantissa[0] = myword_39;
  myword_40 = (short unsigned int) mylong_37;
  locFPF2.mantissa[1] = myword_40;

  <bb 23> [23.53%]:
  _82 = locFPF2.mantissa[0];
  _83 = (signed short) _82;
  if (_83 >= 0)
    goto <bb 24>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 24> [20.00%]:
  _217 = &locFPF2.mantissa + 6;
  accum_218 = MEM[(short unsigned int *)&locFPF2 + 10B];
  _219 = accum_218 & 32768;
  accum_220 = accum_218 << 1;
  MEM[(short unsigned int *)&locFPF2 + 10B] = accum_220;
  _230 = &locFPF2.mantissa + 4;
  accum_231 = MEM[(short unsigned int *)&locFPF2 + 8B];
  _232 = accum_231 & 32768;
  accum_233 = accum_231 << 1;
  _227 = (signed short) accum_218;
  if (_227 < 0)
    goto <bb 25>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 25> [10.00%]:
  accum_234 = accum_233 | 1;

  <bb 26> [20.00%]:
  # accum_235 = PHI <accum_233(24), accum_234(25)>
  MEM[(short unsigned int *)&locFPF2 + 8B] = accum_235;
  _243 = &locFPF2.mantissa + 2;
  accum_244 = MEM[(short unsigned int *)&locFPF2 + 6B];
  _245 = accum_244 & 32768;
  accum_246 = accum_244 << 1;
  _226 = (signed short) accum_231;
  if (_226 < 0)
    goto <bb 27>; [50.00%]
  else
    goto <bb 28>; [50.00%]

  <bb 27> [10.00%]:
  accum_247 = accum_246 | 1;

  <bb 28> [20.00%]:
  # accum_248 = PHI <accum_246(26), accum_247(27)>
  MEM[(short unsigned int *)&locFPF2 + 6B] = accum_248;
  _256 = &locFPF2.mantissa;
  accum_257 = MEM[(short unsigned int *)&locFPF2 + 4B];
  _258 = accum_257 & 32768;
  accum_259 = accum_257 << 1;
  _222 = (signed short) accum_244;
  if (_222 < 0)
    goto <bb 29>; [50.00%]
  else
    goto <bb 30>; [50.00%]

  <bb 29> [10.00%]:
  accum_260 = accum_259 | 1;

  <bb 30> [20.00%]:
  # accum_261 = PHI <accum_259(28), accum_260(29)>
  MEM[(short unsigned int *)&locFPF2 + 4B] = accum_261;
  _78 = locFPF2.exp;
  _79 = (unsigned short) _78;
  _80 = _79 + 65535;
  _81 = (short int) _80;
  locFPF2.exp = _81;
  goto <bb 23>; [100.00%]

  <bb 31> [9.63%]:
  _4 = i_9 * 12;
  _5 = abase_20(D) + _4;
  DivideInternalFPF (&locFPF1, &locFPF2, _5);
  _6 = randwc (50000);
  _7 = _6 + 1;
  if (_7 < 0)
    goto <bb 32>; [36.00%]
  else
    goto <bb 33>; [64.00%]

  <bb 32> [3.47%]:
  locFPF2.sign = 1;
  mylong_27 = ~_6;
  goto <bb 34>; [100.00%]

  <bb 33> [6.16%]:
  locFPF2.sign = 0;

  <bb 34> [9.63%]:
  # mylong_30 = PHI <mylong_27(32), _7(33)>
  locFPF2.type = 2;
  locFPF2.mantissa[0] = 0;
  locFPF2.mantissa[1] = 0;
  locFPF2.mantissa[2] = 0;
  locFPF2.mantissa[3] = 0;
  if (mylong_30 == 0)
    goto <bb 35>; [63.36%]
  else
    goto <bb 36>; [36.64%]

  <bb 35> [6.10%]:
  locFPF2.type = 0;
  locFPF2.exp = 0;
  goto <bb 45>; [100.00%]

  <bb 36> [3.53%]:
  locFPF2.exp = 32;
  _31 = mylong_30 >> 16;
  myword_32 = (short unsigned int) _31;
  locFPF2.mantissa[0] = myword_32;
  myword_33 = (short unsigned int) mylong_30;
  locFPF2.mantissa[1] = myword_33;

  <bb 37> [23.53%]:
  _100 = locFPF2.mantissa[0];
  _101 = (signed short) _100;
  if (_101 >= 0)
    goto <bb 38>; [85.00%]
  else
    goto <bb 45>; [15.00%]

  <bb 38> [20.00%]:
  _23 = &locFPF2.mantissa + 6;
  accum_150 = MEM[(short unsigned int *)&locFPF2 + 10B];
  _151 = accum_150 & 32768;
  accum_152 = accum_150 << 1;
  MEM[(short unsigned int *)&locFPF2 + 10B] = accum_152;
  _162 = &locFPF2.mantissa + 4;
  accum_163 = MEM[(short unsigned int *)&locFPF2 + 8B];
  _164 = accum_163 & 32768;
  accum_165 = accum_163 << 1;
  _159 = (signed short) accum_150;
  if (_159 < 0)
    goto <bb 39>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 39> [10.00%]:
  accum_166 = accum_165 | 1;

  <bb 40> [20.00%]:
  # accum_167 = PHI <accum_165(38), accum_166(39)>
  MEM[(short unsigned int *)&locFPF2 + 8B] = accum_167;
  _175 = &locFPF2.mantissa + 2;
  accum_176 = MEM[(short unsigned int *)&locFPF2 + 6B];
  _177 = accum_176 & 32768;
  accum_178 = accum_176 << 1;
  _158 = (signed short) accum_163;
  if (_158 < 0)
    goto <bb 41>; [50.00%]
  else
    goto <bb 42>; [50.00%]

  <bb 41> [10.00%]:
  accum_179 = accum_178 | 1;

  <bb 42> [20.00%]:
  # accum_180 = PHI <accum_178(40), accum_179(41)>
  MEM[(short unsigned int *)&locFPF2 + 6B] = accum_180;
  _188 = &locFPF2.mantissa;
  accum_189 = MEM[(short unsigned int *)&locFPF2 + 4B];
  _190 = accum_189 & 32768;
  accum_191 = accum_189 << 1;
  _154 = (signed short) accum_176;
  if (_154 < 0)
    goto <bb 43>; [50.00%]
  else
    goto <bb 44>; [50.00%]

  <bb 43> [10.00%]:
  accum_192 = accum_191 | 1;

  <bb 44> [20.00%]:
  # accum_193 = PHI <accum_191(42), accum_192(43)>
  MEM[(short unsigned int *)&locFPF2 + 4B] = accum_193;
  _96 = locFPF2.exp;
  _97 = (unsigned short) _96;
  _98 = _97 + 65535;
  _99 = (short int) _98;
  locFPF2.exp = _99;
  goto <bb 37>; [100.00%]

  <bb 45> [9.63%]:
  _8 = bbase_24(D) + _4;
  DivideInternalFPF (&locFPF1, &locFPF2, _8);
  i_26 = i_9 + 1;

  <bb 46> [11.33%]:
  # i_9 = PHI <0(2), i_26(45)>
  if (i_9 < arraysize_13(D))
    goto <bb 3>; [85.00%]
  else
    goto <bb 47>; [15.00%]

  <bb 47> [1.70%]:
  locFPF1 ={v} {CLOBBER};
  locFPF2 ={v} {CLOBBER};
  return;

}



;; Function DoEmFloatIteration (DoEmFloatIteration, funcdef_no=35, decl_uid=2773, cgraph_uid=35, symbol_order=35)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
abase = &NONLOCAL
bbase = &NONLOCAL
cbase = &NONLOCAL
arraysize = &NONLOCAL
loops = &NONLOCAL
elapsed_26 = NONLOCAL
_1 = i_20 + UNKNOWN
jtable.2859 = NONLOCAL
_2 = jtable.2859
_3 = i_20
_3 = &NONLOCAL
_4 = cbase + UNKNOWN
_5 = bbase + UNKNOWN
_6 = abase + UNKNOWN
ESCAPED = &NULL
ESCAPED = _6
ESCAPED = _5
ESCAPED = _4
_7 = i_20
_7 = &NONLOCAL
_8 = cbase + UNKNOWN
_9 = bbase + UNKNOWN
_10 = abase + UNKNOWN
ESCAPED = &NONLOCAL
ESCAPED = _10
ESCAPED = _9
ESCAPED = _8
_11 = i_20
_11 = &NONLOCAL
_12 = cbase + UNKNOWN
_13 = bbase + UNKNOWN
_14 = abase + UNKNOWN
_40 = *_14
_41 = _40
_42 = _41
_42 = &NONLOCAL
_43 = *_13
_44 = _43
_45 = _42
_45 = _44
_920 = *_14 + 32
_921 = *_13 + 32
_924 = *_14 + 48
_925 = *_13 + 48
_928 = *_14 + 64
_929 = *_13 + 64
_932 = *_14 + 80
_933 = *_13 + 80
CALLUSED(47) = CALLUSED(47) + UNKNOWN
CALLUSED(47) = *CALLUSED(47) + UNKNOWN
CALLUSED(47) = _14
CALLUSED(47) = &NULL
_46 = CALLUSED(47)
_46 = NONLOCAL
doubledereftmp(50) = *_12 + UNKNOWN
*_14 + UNKNOWN = doubledereftmp(50)
_47 = *_12 + 8
_48 = *_13 + 8
_49 = _47
_49 = _48
*_12 + 8 = _49
CALLUSED(54) = CALLUSED(54) + UNKNOWN
CALLUSED(54) = *CALLUSED(54) + UNKNOWN
CALLUSED(54) = _13
CALLUSED(54) = &NULL
_50 = CALLUSED(54)
_50 = NONLOCAL
doubledereftmp(57) = *_12 + UNKNOWN
*_13 + UNKNOWN = doubledereftmp(57)
_51 = *_12 + 8
_52 = *_14 + 8
_53 = _51
_53 = _52
*_12 + 8 = _53
derefaddrtmp(61) = &NONLOCAL
*_12 = derefaddrtmp(61)
derefaddrtmp(62) = &NONLOCAL
*_12 + 16 = derefaddrtmp(62)
derefaddrtmp(63) = &NONLOCAL
*_12 + 8 = derefaddrtmp(63)
derefaddrtmp(64) = &NONLOCAL
*_12 + 32 = derefaddrtmp(64)
derefaddrtmp(65) = &NULL
*_12 + 48 = derefaddrtmp(65)
derefaddrtmp(66) = &NULL
*_12 + 64 = derefaddrtmp(66)
derefaddrtmp(67) = &NULL
*_12 + 80 = derefaddrtmp(67)
CALLUSED(68) = CALLUSED(68) + UNKNOWN
CALLUSED(68) = *CALLUSED(68) + UNKNOWN
CALLUSED(68) = _14
CALLUSED(68) = &NULL
_56 = CALLUSED(68)
_56 = NONLOCAL
doubledereftmp(71) = *_12 + UNKNOWN
*_14 + UNKNOWN = doubledereftmp(71)
CALLUSED(72) = CALLUSED(72) + UNKNOWN
CALLUSED(72) = *CALLUSED(72) + UNKNOWN
CALLUSED(72) = _13
CALLUSED(72) = &NULL
_57 = CALLUSED(72)
_57 = NONLOCAL
doubledereftmp(75) = *_12 + UNKNOWN
*_13 + UNKNOWN = doubledereftmp(75)
locy = *_13 + UNKNOWN
_888 = *_14 + 32
_889 = _888
n_890 = _889
_897 = *_14 + 48
_898 = _897
_106 = _888
_106 = _897
n_899 = _106
_906 = *_14 + 64
_907 = _906
_774 = _106
_774 = _906
n_908 = _774
_915 = *_14 + 80
_916 = _915
_773 = _774
_773 = _915
n_917 = _773
_852 = *_13 + 32
_853 = _852
n_854 = _853
_861 = *_13 + 48
_862 = _861
_769 = _852
_769 = _861
n_863 = _769
_870 = *_13 + 64
_871 = _870
_255 = _769
_255 = _870
n_872 = _255
_879 = *_13 + 80
_880 = _879
_113 = _255
_113 = _879
n_881 = _113
derefaddrtmp(107) = &NONLOCAL
*_12 = derefaddrtmp(107)
derefaddrtmp(108) = &NULL
*_12 + 8 = derefaddrtmp(108)
derefaddrtmp(109) = &NONLOCAL
*_12 + 16 = derefaddrtmp(109)
derefaddrtmp(110) = &NULL
*_12 + 32 = derefaddrtmp(110)
derefaddrtmp(111) = &NULL
*_12 + 48 = derefaddrtmp(111)
derefaddrtmp(112) = &NULL
*_12 + 64 = derefaddrtmp(112)
derefaddrtmp(113) = &NULL
*_12 + 80 = derefaddrtmp(113)
_82 = *_14
_83 = *_13
derefaddrtmp(116) = &NONLOCAL
*_12 = derefaddrtmp(116)
derefaddrtmp(117) = &NONLOCAL
*_12 = derefaddrtmp(117)
_84 = *_14 + 8
_85 = *_13 + 8
_86 = _84
_86 = _85
*_12 + 8 = _86
_87 = *_14 + 16
_88 = _87
_89 = *_13 + 16
_90 = _89
_91 = _88
_91 = _90
_92 = _91
*_12 + 16 = _92
derefaddrtmp(127) = &NULL
*_12 + 32 = derefaddrtmp(127)
extra_bits = &NULL
derefaddrtmp(129) = &NULL
*_12 + 48 = derefaddrtmp(129)
extra_bits = &NULL
derefaddrtmp(130) = &NULL
*_12 + 64 = derefaddrtmp(130)
extra_bits = &NULL
derefaddrtmp(131) = &NULL
*_12 + 80 = derefaddrtmp(131)
extra_bits = &NULL
_698 = *_14 + 80
_699 = *_12 + 80
accum_700 = _699
_701 = _698
accum_702 = accum_700
accum_702 = _701
accum_704 = accum_702
_705 = accum_702
_705 = &NONLOCAL
_706 = _705
_707 = _706 + UNKNOWN
_708 = _698
_708 = _699
*_12 + 80 = _708
_714 = *_14 + 64
_715 = *_12 + 64
accum_716 = _715
_717 = _714
accum_718 = accum_716
accum_718 = _717
_719 = _707
accum_720 = accum_718
accum_720 = _719
_721 = accum_720
_721 = &NONLOCAL
_722 = _721
_723 = _722 + UNKNOWN
_724 = accum_720
*_12 + 64 = _724
_730 = *_14 + 48
_731 = *_12 + 48
accum_732 = _731
_733 = _730
accum_734 = accum_732
accum_734 = _733
_735 = _723
accum_736 = accum_734
accum_736 = _735
_737 = accum_736
_737 = &NONLOCAL
_738 = _737
_739 = _738 + UNKNOWN
_740 = accum_736
*_12 + 48 = _740
_746 = *_14 + 32
_747 = *_12 + 32
accum_748 = _747
_749 = _746
accum_750 = accum_748
accum_750 = _749
_751 = _739
accum_752 = accum_750
accum_752 = _751
_753 = accum_752
_753 = &NONLOCAL
_754 = _753
_755 = _754 + UNKNOWN
_756 = accum_752
*_12 + 32 = _756
carry_189 = &NULL
carry_189 = _755
_121 = _12 + UNKNOWN
_648 = _121
accum_649 = *_12 + 32
_650 = accum_649 + UNKNOWN
accum_651 = accum_649
accum_651 = &NONLOCAL
accum_652 = accum_651
accum_652 = &NONLOCAL
accum_653 = accum_651
accum_653 = accum_652
*_12 + 32 = accum_653
_661 = _12 + 48
accum_662 = *_12 + 48
_663 = accum_662 + UNKNOWN
accum_664 = accum_662
accum_664 = &NONLOCAL
accum_665 = accum_664
accum_665 = &NONLOCAL
accum_666 = accum_664
accum_666 = accum_665
*_12 + 48 = accum_666
_674 = _12 + 64
accum_675 = *_12 + 64
_676 = accum_675 + UNKNOWN
accum_677 = accum_675
accum_677 = &NONLOCAL
accum_678 = accum_677
accum_678 = &NONLOCAL
accum_679 = accum_677
accum_679 = accum_678
*_12 + 64 = accum_679
_687 = _12 + 80
accum_688 = *_12 + 80
_689 = accum_688 + UNKNOWN
accum_690 = accum_688
accum_690 = &NONLOCAL
accum_691 = accum_690
accum_691 = &NONLOCAL
accum_692 = accum_690
accum_692 = accum_691
*_12 + 80 = accum_692
_596 = &extra_bits
accum_597 = extra_bits
_598 = accum_597 + UNKNOWN
accum_599 = accum_597
accum_599 = &NONLOCAL
accum_600 = accum_599
accum_600 = &NONLOCAL
accum_601 = accum_599
accum_601 = accum_600
extra_bits = accum_601
_609 = &extra_bits
accum_610 = extra_bits
_611 = accum_610 + UNKNOWN
accum_612 = accum_610
accum_612 = &NONLOCAL
accum_613 = accum_612
accum_613 = &NONLOCAL
accum_614 = accum_612
accum_614 = accum_613
extra_bits = accum_614
_622 = &extra_bits
accum_623 = extra_bits
_624 = accum_623 + UNKNOWN
accum_625 = accum_623
accum_625 = &NONLOCAL
accum_626 = accum_625
accum_626 = &NONLOCAL
accum_627 = accum_625
accum_627 = accum_626
extra_bits = accum_627
_635 = &extra_bits
accum_636 = extra_bits
_637 = accum_636 + UNKNOWN
accum_638 = accum_636
accum_638 = &NONLOCAL
accum_639 = accum_638
accum_639 = &NONLOCAL
accum_640 = accum_638
accum_640 = accum_639
extra_bits = accum_640
i_145 = i_144
i_145 = &NONLOCAL
i_144 = &NULL
i_144 = i_145
_764 = &locy
accum_765 = locy
_766 = accum_765 + UNKNOWN
accum_767 = accum_765
accum_767 = &NONLOCAL
locy = accum_767
_777 = &locy
accum_778 = locy
_779 = accum_778 + UNKNOWN
accum_780 = accum_778
accum_780 = &NONLOCAL
accum_781 = accum_780
accum_781 = &NONLOCAL
accum_782 = accum_780
accum_782 = accum_781
locy = accum_782
_790 = &locy
accum_791 = locy
_792 = accum_791 + UNKNOWN
accum_793 = accum_791
accum_793 = &NONLOCAL
accum_794 = accum_793
accum_794 = &NONLOCAL
accum_795 = accum_793
accum_795 = accum_794
locy = accum_795
_803 = &locy
accum_804 = locy
_805 = accum_804 + UNKNOWN
accum_806 = accum_804
accum_806 = &NONLOCAL
accum_807 = accum_806
accum_807 = &NONLOCAL
accum_808 = accum_806
accum_808 = accum_807
locy = accum_808
accum_496 = accum_495
accum_496 = &NONLOCAL
accum_497 = accum_495
accum_497 = accum_496
*_12 + 80 = accum_497
_505 = _12 + 64
accum_506 = *_12 + 64
_507 = accum_506 + UNKNOWN
accum_508 = accum_506
accum_508 = &NONLOCAL
_592 = accum_493
accum_509 = accum_508
accum_509 = &NONLOCAL
accum_510 = accum_508
accum_510 = accum_509
*_12 + 64 = accum_510
_518 = _12 + 48
accum_519 = *_12 + 48
_520 = accum_519 + UNKNOWN
accum_521 = accum_519
accum_521 = &NONLOCAL
_489 = accum_506
accum_522 = accum_521
accum_522 = &NONLOCAL
accum_523 = accum_521
accum_523 = accum_522
*_12 + 48 = accum_523
_531 = _157
accum_532 = *_12 + 32
_533 = accum_532 + UNKNOWN
accum_534 = accum_532
accum_534 = &NONLOCAL
_488 = accum_519
accum_535 = accum_534
accum_535 = &NONLOCAL
accum_536 = accum_534
accum_536 = accum_535
*_12 + 32 = accum_536
_169 = *_12 + 16
_170 = _169
_171 = _170
_171 = &NONLOCAL
_172 = _171
*_12 + 16 = _172
_173 = *_12 + 32
_174 = _173
_544 = &extra_bits
accum_545 = extra_bits
_546 = accum_545 + UNKNOWN
accum_547 = accum_545
accum_547 = &NONLOCAL
extra_bits = accum_547
_557 = &extra_bits
accum_558 = extra_bits
_559 = accum_558 + UNKNOWN
accum_560 = accum_558
accum_560 = &NONLOCAL
_728 = accum_545
accum_561 = accum_560
accum_561 = &NONLOCAL
accum_562 = accum_560
accum_562 = accum_561
extra_bits = accum_562
_570 = &extra_bits
accum_571 = extra_bits
_572 = accum_571 + UNKNOWN
accum_573 = accum_571
accum_573 = &NONLOCAL
_713 = accum_558
accum_574 = accum_573
accum_574 = &NONLOCAL
accum_575 = accum_573
accum_575 = accum_574
extra_bits = accum_575
_583 = &extra_bits
accum_584 = extra_bits
_585 = accum_584 + UNKNOWN
accum_586 = accum_584
accum_586 = &NONLOCAL
_712 = accum_571
accum_587 = accum_586
accum_587 = &NONLOCAL
accum_588 = accum_586
accum_588 = accum_587
extra_bits = accum_588
_157 = _12 + UNKNOWN
_492 = _12 + 80
accum_493 = *_12 + 80
_494 = accum_493 + UNKNOWN
accum_495 = accum_493
accum_495 = &NONLOCAL
_593 = accum_584
_456 = extra_bits
_457 = _456
n_458 = _457
_465 = extra_bits
_466 = _465
_745 = _456
_745 = _465
n_467 = _745
_474 = extra_bits
_475 = _474
_744 = _474
_744 = _745
n_476 = _744
_483 = extra_bits
_484 = _483
_729 = _483
_729 = _744
n_485 = _729
_185 = *_12 + 80
_186 = _185
_186 = &NONLOCAL
*_12 + 80 = _186
CALLUSED(326) = CALLUSED(326) + UNKNOWN
CALLUSED(326) = *CALLUSED(326) + UNKNOWN
CALLUSED(326) = _14
CALLUSED(326) = &NULL
_194 = CALLUSED(326)
_194 = NONLOCAL
doubledereftmp(329) = *_12 + UNKNOWN
*_14 + UNKNOWN = doubledereftmp(329)
CALLUSED(330) = CALLUSED(330) + UNKNOWN
CALLUSED(330) = *CALLUSED(330) + UNKNOWN
CALLUSED(330) = _13
CALLUSED(330) = &NULL
_199 = CALLUSED(330)
_199 = NONLOCAL
doubledereftmp(333) = *_12 + UNKNOWN
*_13 + UNKNOWN = doubledereftmp(333)
CALLUSED(334) = CALLUSED(334) + UNKNOWN
CALLUSED(334) = *CALLUSED(334) + UNKNOWN
CALLUSED(334) = _14
CALLUSED(334) = &NULL
_196 = CALLUSED(334)
_196 = NONLOCAL
doubledereftmp(337) = *_12 + UNKNOWN
*_14 + UNKNOWN = doubledereftmp(337)
_187 = *_12
_188 = _187
_188 = &NONLOCAL
_408 = *_12 + 32
_409 = _408
n_410 = _409
_417 = *_12 + 48
_418 = _417
_190 = _408
_190 = _417
n_419 = _190
_426 = *_12 + 64
_427 = _426
_554 = _190
_554 = _426
n_428 = _554
_435 = *_12 + 80
_436 = _435
_553 = _435
_553 = _554
n_437 = _553
ESCAPED = &STRING
_214 = *_12 + 16
_215 = _214
_216 = _215
_216 = &NONLOCAL
exponent_difference_217 = _216
exponent_difference_218 = exponent_difference_217
derefaddrtmp(361) = &NULL
*_12 = derefaddrtmp(361)
derefaddrtmp(362) = &NONLOCAL
*_12 + 16 = derefaddrtmp(362)
derefaddrtmp(363) = &NULL
*_12 + 32 = derefaddrtmp(363)
derefaddrtmp(364) = &NULL
*_12 + 48 = derefaddrtmp(364)
derefaddrtmp(365) = &NULL
*_12 + 64 = derefaddrtmp(365)
derefaddrtmp(366) = &NULL
*_12 + 80 = derefaddrtmp(366)
_221 = _214
_222 = exponent_difference_218
_223 = _221
_223 = _222
_224 = _223
*_12 + 16 = _224
_225 = exponent_difference_218
mantissa_226 = _12 + UNKNOWN
_227 = *_12
_334 = mantissa_226
derefaddrtmp(375) = &NULL
*_12 + 32 = derefaddrtmp(375)
_341 = _12 + 48
derefaddrtmp(377) = &NULL
*_12 + 48 = derefaddrtmp(377)
_348 = _12 + 64
derefaddrtmp(379) = &NULL
*_12 + 64 = derefaddrtmp(379)
derefaddrtmp(380) = &NONLOCAL
*_12 + 80 = derefaddrtmp(380)
_245 = *_12 + 80
_246 = _245
_246 = &NONLOCAL
*_12 + 80 = _246
i_248 = i_247
i_248 = &NONLOCAL
i_247 = &NULL
i_247 = i_248
_356 = mantissa_226
accum_357 = *_12 + 32
_358 = accum_357 + UNKNOWN
accum_359 = accum_357
accum_359 = &NONLOCAL
*_12 + 32 = accum_359
_369 = _12 + 48
accum_370 = *_12 + 48
_371 = accum_370 + UNKNOWN
accum_372 = accum_370
accum_372 = &NONLOCAL
accum_373 = accum_372
accum_373 = &NONLOCAL
accum_374 = accum_372
accum_374 = accum_373
*_12 + 48 = accum_374
_382 = _12 + 64
accum_383 = *_12 + 64
_384 = accum_383 + UNKNOWN
accum_385 = accum_383
accum_385 = &NONLOCAL
accum_386 = accum_385
accum_386 = &NONLOCAL
accum_387 = accum_385
accum_387 = accum_386
*_12 + 64 = accum_387
_395 = _12 + 80
accum_396 = *_12 + 80
_397 = accum_396 + UNKNOWN
accum_398 = accum_396
accum_398 = &NONLOCAL
accum_399 = accum_398
accum_399 = &NONLOCAL
accum_400 = accum_398
accum_400 = accum_399
*_12 + 80 = accum_400
_200 = *_12
_201 = *_12 + 80
_202 = _201 + UNKNOWN
*_12 + 80 = _202
_15 = i_20
_15 = &NONLOCAL
_16 = cbase + UNKNOWN
_17 = bbase + UNKNOWN
_18 = abase + UNKNOWN
ESCAPED = _18
ESCAPED = _17
ESCAPED = _16
i_39 = i_20
i_39 = &NONLOCAL
i_20 = &NULL
i_20 = i_39
loops_19 = loops
loops_19 = loops_28
loops_28 = loops_19
loops_28 = &NONLOCAL
ESCAPED = elapsed_26
_30 = NONLOCAL
ESCAPED = _30

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 1 3 5 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"abase"[label="abase = { 5 }"];
"bbase"[label="bbase = { 5 }"];
"cbase"[label="cbase = { 5 }"];
"arraysize"[label="arraysize = { 5 }"];
"loops"[label="loops = { 5 }"];
"StartStopwatch";
"elapsed_26";
"_1";
"i_20"[label="i_20 = { 1 5 }"];
"_2";
"jtable.2859";
"_3"[label="_3 = { 5 }"];
"_4";
"_5";
"_6";
"AddSubInternalFPF";
"_7"[label="_7 = { 5 }"];
"_8";
"_9";
"_10";
"_11"[label="_11 = { 5 }"];
"_12";
"_13";
"_14";
"_40";
"_41";
"_42"[label="_42 = { 5 }"];
"_43";
"_44";
"_45";
"_920";
"_921";
"_924";
"_925";
"_928";
"_929";
"_932";
"_933";
"__builtin_object_size";
"CALLUSED(47)"[label="CALLUSED(47) = { 1 }"];
"CALLCLOBBERED(48)";
"_46";
"doubledereftmp(50)";
"_47";
"_48";
"_49";
"CALLUSED(54)"[label="CALLUSED(54) = { 1 }"];
"CALLCLOBBERED(55)";
"_50";
"doubledereftmp(57)";
"_51";
"_52";
"_53";
"derefaddrtmp(61)"[label="derefaddrtmp(61) = { 5 }"];
"derefaddrtmp(62)"[label="derefaddrtmp(62) = { 5 }"];
"derefaddrtmp(63)"[label="derefaddrtmp(63) = { 5 }"];
"derefaddrtmp(64)"[label="derefaddrtmp(64) = { 5 }"];
"derefaddrtmp(65)"[label="derefaddrtmp(65) = { 1 }"];
"derefaddrtmp(66)"[label="derefaddrtmp(66) = { 1 }"];
"derefaddrtmp(67)"[label="derefaddrtmp(67) = { 1 }"];
"CALLUSED(68)"[label="CALLUSED(68) = { 1 }"];
"CALLCLOBBERED(69)";
"_56";
"doubledereftmp(71)";
"CALLUSED(72)"[label="CALLUSED(72) = { 1 }"];
"CALLCLOBBERED(73)";
"_57";
"doubledereftmp(75)";
"locy"[label="locy = { 5 }"];
"_888";
"_889";
"n_890";
"_897";
"_898";
"_106";
"n_899";
"_906";
"_907";
"_774";
"n_908";
"_915";
"_916";
"_773";
"n_917";
"_852";
"_853";
"n_854";
"_861";
"_862";
"_769";
"n_863";
"_870";
"_871";
"_255";
"n_872";
"_879";
"_880";
"_113";
"n_881";
"derefaddrtmp(107)"[label="derefaddrtmp(107) = { 5 }"];
"derefaddrtmp(108)"[label="derefaddrtmp(108) = { 1 }"];
"derefaddrtmp(109)"[label="derefaddrtmp(109) = { 5 }"];
"derefaddrtmp(110)"[label="derefaddrtmp(110) = { 1 }"];
"derefaddrtmp(111)"[label="derefaddrtmp(111) = { 1 }"];
"derefaddrtmp(112)"[label="derefaddrtmp(112) = { 1 }"];
"derefaddrtmp(113)"[label="derefaddrtmp(113) = { 1 }"];
"_82";
"_83";
"derefaddrtmp(116)"[label="derefaddrtmp(116) = { 5 }"];
"derefaddrtmp(117)"[label="derefaddrtmp(117) = { 5 }"];
"_84";
"_85";
"_86";
"_87";
"_88";
"_89";
"_90";
"_91";
"_92";
"derefaddrtmp(127)"[label="derefaddrtmp(127) = { 1 }"];
"extra_bits"[label="extra_bits = { 1 5 }"];
"derefaddrtmp(129)"[label="derefaddrtmp(129) = { 1 }"];
"derefaddrtmp(130)"[label="derefaddrtmp(130) = { 1 }"];
"derefaddrtmp(131)"[label="derefaddrtmp(131) = { 1 }"];
"_698";
"_699";
"accum_700";
"_701";
"accum_702";
"accum_704";
"_705"[label="_705 = { 5 }"];
"_706";
"_707";
"_708";
"_714";
"_715";
"accum_716";
"_717";
"accum_718";
"_719";
"accum_720";
"_721"[label="_721 = { 5 }"];
"_722";
"_723";
"_724";
"_730";
"_731";
"accum_732";
"_733";
"accum_734";
"_735";
"accum_736";
"_737"[label="_737 = { 5 }"];
"_738";
"_739";
"_740";
"_746";
"_747";
"accum_748";
"_749";
"accum_750";
"_751";
"accum_752";
"_753"[label="_753 = { 5 }"];
"_754";
"_755";
"_756";
"carry_189"[label="carry_189 = { 1 }"];
"_121";
"_648";
"accum_649";
"_650";
"accum_651"[label="accum_651 = { 5 }"];
"accum_652"[label="accum_652 = { 5 }"];
"accum_653";
"_661";
"accum_662";
"_663";
"accum_664"[label="accum_664 = { 5 }"];
"accum_665"[label="accum_665 = { 5 }"];
"accum_666";
"_674";
"accum_675";
"_676";
"accum_677"[label="accum_677 = { 5 }"];
"accum_678"[label="accum_678 = { 5 }"];
"accum_679";
"_687";
"accum_688";
"_689";
"accum_690"[label="accum_690 = { 5 }"];
"accum_691"[label="accum_691 = { 5 }"];
"accum_692";
"_596"[label="_596 = { 128 }"];
"_598";
"_609"[label="_609 = { 128 }"];
"_611";
"_622"[label="_622 = { 128 }"];
"_624";
"_635"[label="_635 = { 128 }"];
"_637";
"i_145"[label="i_145 = { 1 5 }"];
"_764"[label="_764 = { 76 }"];
"_766";
"_777"[label="_777 = { 76 }"];
"_779";
"_790"[label="_790 = { 76 }"];
"_792";
"_803"[label="_803 = { 76 }"];
"_805";
"accum_496"[label="accum_496 = { 5 }"];
"accum_495"[label="accum_495 = { 5 }"];
"accum_497";
"_505";
"accum_506";
"_507";
"accum_508"[label="accum_508 = { 5 }"];
"_592";
"accum_493";
"accum_509"[label="accum_509 = { 5 }"];
"accum_510";
"_518";
"accum_519";
"_520";
"accum_521"[label="accum_521 = { 5 }"];
"_489";
"accum_522"[label="accum_522 = { 5 }"];
"accum_523";
"_531";
"_157";
"accum_532";
"_533";
"accum_534"[label="accum_534 = { 5 }"];
"_488";
"accum_535"[label="accum_535 = { 5 }"];
"accum_536";
"_169";
"_170";
"_171"[label="_171 = { 5 }"];
"_172";
"_173";
"_174";
"_544"[label="_544 = { 128 }"];
"_546";
"_557"[label="_557 = { 128 }"];
"_559";
"_728";
"_570"[label="_570 = { 128 }"];
"_572";
"_713";
"_583"[label="_583 = { 128 }"];
"_585";
"_712";
"_492";
"_494";
"_593";
"_456";
"_457";
"n_458";
"_465";
"_466";
"_745";
"n_467";
"_474";
"_475";
"_744";
"n_476";
"_483";
"_484";
"_729";
"n_485";
"_185";
"_186"[label="_186 = { 5 }"];
"CALLUSED(326)"[label="CALLUSED(326) = { 1 }"];
"CALLCLOBBERED(327)";
"_194";
"doubledereftmp(329)";
"CALLUSED(330)"[label="CALLUSED(330) = { 1 }"];
"CALLCLOBBERED(331)";
"_199";
"doubledereftmp(333)";
"CALLUSED(334)"[label="CALLUSED(334) = { 1 }"];
"CALLCLOBBERED(335)";
"_196";
"doubledereftmp(337)";
"_187";
"_188"[label="_188 = { 5 }"];
"_408";
"_409";
"n_410";
"_417";
"_418";
"_190";
"n_419";
"_426";
"_427";
"_554";
"n_428";
"_435";
"_436";
"_553";
"n_437";
"puts";
"_214";
"_215";
"_216"[label="_216 = { 5 }"];
"exponent_difference_217";
"exponent_difference_218";
"derefaddrtmp(361)"[label="derefaddrtmp(361) = { 1 }"];
"derefaddrtmp(362)"[label="derefaddrtmp(362) = { 5 }"];
"derefaddrtmp(363)"[label="derefaddrtmp(363) = { 1 }"];
"derefaddrtmp(364)"[label="derefaddrtmp(364) = { 1 }"];
"derefaddrtmp(365)"[label="derefaddrtmp(365) = { 1 }"];
"derefaddrtmp(366)"[label="derefaddrtmp(366) = { 1 }"];
"_221";
"_222";
"_223";
"_224";
"_225";
"mantissa_226";
"_227";
"_334";
"derefaddrtmp(375)"[label="derefaddrtmp(375) = { 1 }"];
"_341";
"derefaddrtmp(377)"[label="derefaddrtmp(377) = { 1 }"];
"_348";
"derefaddrtmp(379)"[label="derefaddrtmp(379) = { 1 }"];
"derefaddrtmp(380)"[label="derefaddrtmp(380) = { 5 }"];
"_245";
"_246"[label="_246 = { 5 }"];
"i_248"[label="i_248 = { 1 5 }"];
"_356";
"accum_357";
"_358";
"accum_359"[label="accum_359 = { 5 }"];
"_369";
"accum_370";
"_371";
"accum_372"[label="accum_372 = { 5 }"];
"accum_373"[label="accum_373 = { 5 }"];
"accum_374";
"_382";
"accum_383";
"_384";
"accum_385"[label="accum_385 = { 5 }"];
"accum_386"[label="accum_386 = { 5 }"];
"accum_387";
"_395";
"accum_396";
"_397";
"accum_398"[label="accum_398 = { 5 }"];
"accum_399"[label="accum_399 = { 5 }"];
"accum_400";
"_200";
"_201";
"_202";
"_15"[label="_15 = { 5 }"];
"_16";
"_17";
"_18";
"DivideInternalFPF";
"loops_19"[label="loops_19 = { 5 }"];
"StopStopwatch";
"_30";
"*NULL";
"*ANYTHING";
"*STRING";
"*STOREDANYTHING";
"*INTEGER";
"*abase";
"*bbase";
"*cbase";
"*arraysize";
"*loops";
"*StartStopwatch";
"*_1";
"*i_20";
"*_2";
"*jtable.2859";
"*_3";
"*_4";
"*_5";
"*_6";
"*AddSubInternalFPF";
"*_7";
"*_8";
"*_9";
"*_10";
"*_11";
"*_12";
"*_13";
"*_14";
"*_40";
"*_41";
"*_42";
"*_43";
"*_44";
"*_45";
"*_920";
"*_921";
"*_924";
"*_925";
"*_928";
"*_929";
"*_932";
"*_933";
"*__builtin_object_size";
"*CALLUSED(47)";
"*CALLCLOBBERED(48)";
"*_46";
"*doubledereftmp(50)";
"*_47";
"*_48";
"*_49";
"*CALLUSED(54)";
"*CALLCLOBBERED(55)";
"*_50";
"*doubledereftmp(57)";
"*_51";
"*_52";
"*_53";
"*derefaddrtmp(61)";
"*derefaddrtmp(62)";
"*derefaddrtmp(63)";
"*derefaddrtmp(64)";
"*derefaddrtmp(65)";
"*derefaddrtmp(66)";
"*derefaddrtmp(67)";
"*CALLUSED(68)";
"*CALLCLOBBERED(69)";
"*_56";
"*doubledereftmp(71)";
"*CALLUSED(72)";
"*CALLCLOBBERED(73)";
"*_57";
"*doubledereftmp(75)";
"*locy";
"*_888";
"*_889";
"*n_890";
"*_897";
"*_898";
"*_106";
"*n_899";
"*_906";
"*_907";
"*_774";
"*n_908";
"*_915";
"*_916";
"*_773";
"*n_917";
"*_852";
"*_853";
"*n_854";
"*_861";
"*_862";
"*_769";
"*n_863";
"*_870";
"*_871";
"*_255";
"*n_872";
"*_879";
"*_880";
"*_113";
"*n_881";
"*derefaddrtmp(107)";
"*derefaddrtmp(108)";
"*derefaddrtmp(109)";
"*derefaddrtmp(110)";
"*derefaddrtmp(111)";
"*derefaddrtmp(112)";
"*derefaddrtmp(113)";
"*_82";
"*_83";
"*derefaddrtmp(116)";
"*derefaddrtmp(117)";
"*_84";
"*_85";
"*_86";
"*_87";
"*_88";
"*_89";
"*_90";
"*_91";
"*_92";
"*derefaddrtmp(127)";
"*extra_bits";
"*derefaddrtmp(129)";
"*derefaddrtmp(130)";
"*derefaddrtmp(131)";
"*_698";
"*_699";
"*accum_700";
"*_701";
"*accum_702";
"*accum_704";
"*_705";
"*_706";
"*_707";
"*_708";
"*_714";
"*_715";
"*accum_716";
"*_717";
"*accum_718";
"*_719";
"*accum_720";
"*_721";
"*_722";
"*_723";
"*_724";
"*_730";
"*_731";
"*accum_732";
"*_733";
"*accum_734";
"*_735";
"*accum_736";
"*_737";
"*_738";
"*_739";
"*_740";
"*_746";
"*_747";
"*accum_748";
"*_749";
"*accum_750";
"*_751";
"*accum_752";
"*_753";
"*_754";
"*_755";
"*_756";
"*carry_189";
"*_121";
"*_648";
"*accum_649";
"*_650";
"*accum_651";
"*accum_652";
"*accum_653";
"*_661";
"*accum_662";
"*_663";
"*accum_664";
"*accum_665";
"*accum_666";
"*_674";
"*accum_675";
"*_676";
"*accum_677";
"*accum_678";
"*accum_679";
"*_687";
"*accum_688";
"*_689";
"*accum_690";
"*accum_691";
"*accum_692";
"*_596";
"*accum_597";
"*_598";
"*accum_599";
"*accum_600";
"*accum_601";
"*_609";
"*accum_610";
"*_611";
"*accum_612";
"*accum_613";
"*accum_614";
"*_622";
"*accum_623";
"*_624";
"*accum_625";
"*accum_626";
"*accum_627";
"*_635";
"*accum_636";
"*_637";
"*accum_638";
"*accum_639";
"*accum_640";
"*i_145";
"*i_144";
"*_764";
"*accum_765";
"*_766";
"*accum_767";
"*_777";
"*accum_778";
"*_779";
"*accum_780";
"*accum_781";
"*accum_782";
"*_790";
"*accum_791";
"*_792";
"*accum_793";
"*accum_794";
"*accum_795";
"*_803";
"*accum_804";
"*_805";
"*accum_806";
"*accum_807";
"*accum_808";
"*accum_496";
"*accum_495";
"*accum_497";
"*_505";
"*accum_506";
"*_507";
"*accum_508";
"*_592";
"*accum_493";
"*accum_509";
"*accum_510";
"*_518";
"*accum_519";
"*_520";
"*accum_521";
"*_489";
"*accum_522";
"*accum_523";
"*_531";
"*_157";
"*accum_532";
"*_533";
"*accum_534";
"*_488";
"*accum_535";
"*accum_536";
"*_169";
"*_170";
"*_171";
"*_172";
"*_173";
"*_174";
"*_544";
"*accum_545";
"*_546";
"*accum_547";
"*_557";
"*accum_558";
"*_559";
"*accum_560";
"*_728";
"*accum_561";
"*accum_562";
"*_570";
"*accum_571";
"*_572";
"*accum_573";
"*_713";
"*accum_574";
"*accum_575";
"*_583";
"*accum_584";
"*_585";
"*accum_586";
"*_712";
"*accum_587";
"*accum_588";
"*_492";
"*_494";
"*_593";
"*_456";
"*_457";
"*n_458";
"*_465";
"*_466";
"*_745";
"*n_467";
"*_474";
"*_475";
"*_744";
"*n_476";
"*_483";
"*_484";
"*_729";
"*n_485";
"*_185";
"*_186";
"*CALLUSED(326)";
"*CALLCLOBBERED(327)";
"*_194";
"*doubledereftmp(329)";
"*CALLUSED(330)";
"*CALLCLOBBERED(331)";
"*_199";
"*doubledereftmp(333)";
"*CALLUSED(334)";
"*CALLCLOBBERED(335)";
"*_196";
"*doubledereftmp(337)";
"*_187";
"*_188";
"*_408";
"*_409";
"*n_410";
"*_417";
"*_418";
"*_190";
"*n_419";
"*_426";
"*_427";
"*_554";
"*n_428";
"*_435";
"*_436";
"*_553";
"*n_437";
"*puts";
"*_214";
"*_215";
"*_216";
"*exponent_difference_217";
"*exponent_difference_218";
"*derefaddrtmp(361)";
"*derefaddrtmp(362)";
"*derefaddrtmp(363)";
"*derefaddrtmp(364)";
"*derefaddrtmp(365)";
"*derefaddrtmp(366)";
"*_221";
"*_222";
"*_223";
"*_224";
"*_225";
"*mantissa_226";
"*_227";
"*_334";
"*derefaddrtmp(375)";
"*_341";
"*derefaddrtmp(377)";
"*_348";
"*derefaddrtmp(379)";
"*derefaddrtmp(380)";
"*_245";
"*_246";
"*i_248";
"*i_247";
"*_356";
"*accum_357";
"*_358";
"*accum_359";
"*_369";
"*accum_370";
"*_371";
"*accum_372";
"*accum_373";
"*accum_374";
"*_382";
"*accum_383";
"*_384";
"*accum_385";
"*accum_386";
"*accum_387";
"*_395";
"*accum_396";
"*_397";
"*accum_398";
"*accum_399";
"*accum_400";
"*_200";
"*_201";
"*_202";
"*_15";
"*_16";
"*_17";
"*_18";
"*DivideInternalFPF";
"*i_39";
"*loops_19";
"*loops_28";
"*StopStopwatch";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"elapsed_26" -> "ESCAPED";
"_4" -> "ESCAPED";
"_5" -> "ESCAPED";
"_6" -> "ESCAPED";
"_8" -> "ESCAPED";
"_9" -> "ESCAPED";
"_10" -> "ESCAPED";
"_16" -> "ESCAPED";
"_17" -> "ESCAPED";
"_18" -> "ESCAPED";
"_30" -> "ESCAPED";
"ESCAPED" -> "ESCAPED";
"NONLOCAL" -> "elapsed_26";
"i_20" -> "i_20";
"i_20" -> "i_20";
"jtable.2859" -> "_2";
"NONLOCAL" -> "jtable.2859";
"i_20" -> "_3";
"i_20" -> "_7";
"i_20" -> "_11";
"*_14" -> "_40";
"_40" -> "_41";
"_41" -> "_42";
"*_13" -> "_43";
"_43" -> "_44";
"_42" -> "_45";
"_44" -> "_45";
"_14" -> "CALLUSED(47)";
"NONLOCAL" -> "_46";
"CALLUSED(47)" -> "_46";
"_47" -> "_49";
"_48" -> "_49";
"_13" -> "CALLUSED(54)";
"NONLOCAL" -> "_50";
"CALLUSED(54)" -> "_50";
"_51" -> "_53";
"_52" -> "_53";
"_14" -> "CALLUSED(68)";
"NONLOCAL" -> "_56";
"CALLUSED(68)" -> "_56";
"_13" -> "CALLUSED(72)";
"NONLOCAL" -> "_57";
"CALLUSED(72)" -> "_57";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"locy" -> "locy";
"_888" -> "_889";
"_889" -> "n_890";
"_897" -> "_898";
"_888" -> "_106";
"_897" -> "_106";
"_106" -> "n_899";
"_906" -> "_907";
"_106" -> "_774";
"_906" -> "_774";
"_774" -> "n_908";
"_915" -> "_916";
"_774" -> "_773";
"_915" -> "_773";
"_773" -> "n_917";
"_852" -> "_853";
"_853" -> "n_854";
"_861" -> "_862";
"_852" -> "_769";
"_861" -> "_769";
"_769" -> "n_863";
"_870" -> "_871";
"_769" -> "_255";
"_870" -> "_255";
"_255" -> "n_872";
"_879" -> "_880";
"_255" -> "_113";
"_879" -> "_113";
"_113" -> "n_881";
"*_14" -> "_82";
"*_13" -> "_83";
"_84" -> "_86";
"_85" -> "_86";
"_87" -> "_88";
"_89" -> "_90";
"_88" -> "_91";
"_90" -> "_91";
"_91" -> "_92";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"extra_bits" -> "extra_bits";
"_699" -> "accum_700";
"_698" -> "_701";
"accum_700" -> "accum_702";
"_701" -> "accum_702";
"accum_702" -> "accum_704";
"accum_702" -> "_705";
"_705" -> "_706";
"_698" -> "_708";
"_699" -> "_708";
"_715" -> "accum_716";
"_714" -> "_717";
"accum_716" -> "accum_718";
"_717" -> "accum_718";
"_707" -> "_719";
"accum_718" -> "accum_720";
"_719" -> "accum_720";
"accum_720" -> "_721";
"_721" -> "_722";
"accum_720" -> "_724";
"_731" -> "accum_732";
"_730" -> "_733";
"accum_732" -> "accum_734";
"_733" -> "accum_734";
"_723" -> "_735";
"accum_734" -> "accum_736";
"_735" -> "accum_736";
"accum_736" -> "_737";
"_737" -> "_738";
"accum_736" -> "_740";
"_747" -> "accum_748";
"_746" -> "_749";
"accum_748" -> "accum_750";
"_749" -> "accum_750";
"_739" -> "_751";
"accum_750" -> "accum_752";
"_751" -> "accum_752";
"accum_752" -> "_753";
"_753" -> "_754";
"accum_752" -> "_756";
"_755" -> "carry_189";
"_121" -> "_648";
"accum_649" -> "accum_651";
"accum_651" -> "accum_652";
"accum_651" -> "accum_653";
"accum_652" -> "accum_653";
"accum_662" -> "accum_664";
"accum_664" -> "accum_665";
"accum_664" -> "accum_666";
"accum_665" -> "accum_666";
"accum_675" -> "accum_677";
"accum_677" -> "accum_678";
"accum_677" -> "accum_679";
"accum_678" -> "accum_679";
"accum_688" -> "accum_690";
"accum_690" -> "accum_691";
"accum_690" -> "accum_692";
"accum_691" -> "accum_692";
"i_145" -> "i_145";
"i_145" -> "i_145";
"accum_495" -> "accum_496";
"accum_493" -> "accum_495";
"accum_496" -> "accum_497";
"accum_495" -> "accum_497";
"accum_506" -> "accum_508";
"accum_493" -> "_592";
"accum_508" -> "accum_509";
"accum_508" -> "accum_510";
"accum_509" -> "accum_510";
"accum_519" -> "accum_521";
"accum_506" -> "_489";
"accum_521" -> "accum_522";
"accum_521" -> "accum_523";
"accum_522" -> "accum_523";
"_157" -> "_531";
"accum_532" -> "accum_534";
"accum_519" -> "_488";
"accum_534" -> "accum_535";
"accum_534" -> "accum_536";
"accum_535" -> "accum_536";
"_169" -> "_170";
"_170" -> "_171";
"_171" -> "_172";
"_173" -> "_174";
"extra_bits" -> "_728";
"extra_bits" -> "_713";
"extra_bits" -> "_712";
"extra_bits" -> "_593";
"extra_bits" -> "_456";
"_456" -> "_457";
"_457" -> "n_458";
"extra_bits" -> "_465";
"_465" -> "_466";
"_456" -> "_745";
"_465" -> "_745";
"_745" -> "n_467";
"extra_bits" -> "_474";
"_474" -> "_475";
"_745" -> "_744";
"_474" -> "_744";
"_744" -> "n_476";
"extra_bits" -> "_483";
"_483" -> "_484";
"_744" -> "_729";
"_483" -> "_729";
"_729" -> "n_485";
"_185" -> "_186";
"_14" -> "CALLUSED(326)";
"NONLOCAL" -> "_194";
"CALLUSED(326)" -> "_194";
"_13" -> "CALLUSED(330)";
"NONLOCAL" -> "_199";
"CALLUSED(330)" -> "_199";
"_14" -> "CALLUSED(334)";
"NONLOCAL" -> "_196";
"CALLUSED(334)" -> "_196";
"*_12" -> "_187";
"_187" -> "_188";
"_408" -> "_409";
"_409" -> "n_410";
"_417" -> "_418";
"_408" -> "_190";
"_417" -> "_190";
"_190" -> "n_419";
"_426" -> "_427";
"_190" -> "_554";
"_426" -> "_554";
"_554" -> "n_428";
"_435" -> "_436";
"_554" -> "_553";
"_435" -> "_553";
"_553" -> "n_437";
"_214" -> "_215";
"_215" -> "_216";
"_216" -> "exponent_difference_217";
"exponent_difference_217" -> "exponent_difference_218";
"_214" -> "_221";
"exponent_difference_218" -> "_222";
"_221" -> "_223";
"_222" -> "_223";
"_223" -> "_224";
"exponent_difference_218" -> "_225";
"*_12" -> "_227";
"mantissa_226" -> "_334";
"_245" -> "_246";
"i_248" -> "i_248";
"i_248" -> "i_248";
"mantissa_226" -> "_356";
"accum_357" -> "accum_359";
"accum_370" -> "accum_372";
"accum_372" -> "accum_373";
"accum_372" -> "accum_374";
"accum_373" -> "accum_374";
"accum_383" -> "accum_385";
"accum_385" -> "accum_386";
"accum_385" -> "accum_387";
"accum_386" -> "accum_387";
"accum_396" -> "accum_398";
"accum_398" -> "accum_399";
"accum_398" -> "accum_400";
"accum_399" -> "accum_400";
"*_12" -> "_200";
"i_20" -> "_15";
"loops" -> "loops_19";
"loops_19" -> "loops_19";
"loops_19" -> "loops_19";
"NONLOCAL" -> "_30";
"derefaddrtmp(61)" -> "*_12";
"derefaddrtmp(107)" -> "*_12";
"derefaddrtmp(116)" -> "*_12";
"derefaddrtmp(117)" -> "*_12";
"derefaddrtmp(361)" -> "*_12";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_4 = abase + UNKNOWN\l_5 = abase + UNKNOWN\l_6 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l_9 = abase + UNKNOWN\l_10 = abase + UNKNOWN\l_12 = abase + UNKNOWN\l_13 = abase + UNKNOWN\l_14 = abase + UNKNOWN\l_16 = abase + UNKNOWN\l_17 = abase + UNKNOWN\l_18 = abase + UNKNOWN\l"];
"StartStopwatch";
"elapsed_26";
"_1";
"i_20" [label="\N\n_1 = i_20 + UNKNOWN\l"];
"_4";
"_5";
"_6";
"AddSubInternalFPF";
"_8";
"_9";
"_10";
"_12" [label="\N\ndoubledereftmp(50) = *_12 + UNKNOWN\l_47 = *_12 + 8\ldoubledereftmp(57) = *_12 + UNKNOWN\l_51 = *_12 + 8\ldoubledereftmp(71) = *_12 + UNKNOWN\ldoubledereftmp(75) = *_12 + UNKNOWN\l_699 = *_12 + 80\l_715 = *_12 + 64\l_731 = *_12 + 48\l_747 = *_12 + 32\l_121 = _12 + UNKNOWN\laccum_649 = *_12 + 32\l_661 = _12 + 48\laccum_662 = *_12 + 48\l_674 = _12 + 64\laccum_675 = *_12 + 64\l_687 = _12 + 80\laccum_688 = *_12 + 80\l_505 = _12 + 64\laccum_506 = *_12 + 64\l_592 = *_12 + 80\l_518 = _12 + 48\laccum_519 = *_12 + 48\l_531 = _12 + UNKNOWN\laccum_532 = *_12 + 32\l_169 = *_12 + 16\l_173 = *_12 + 32\l_492 = _12 + 80\l_185 = *_12 + 80\ldoubledereftmp(329) = *_12 + UNKNOWN\ldoubledereftmp(333) = *_12 + UNKNOWN\ldoubledereftmp(337) = *_12 + UNKNOWN\l_187 = *_12\l_408 = *_12 + 32\l_417 = *_12 + 48\l_426 = *_12 + 64\l_435 = *_12 + 80\l_214 = *_12 + 16\lmantissa_226 = _12 + UNKNOWN\l_341 = _12 + 48\l_348 = _12 + 64\l_245 = *_12 + 80\laccum_357 = *_12 + 32\l_369 = _12 + 48\laccum_370 = *_12 + 48\l_382 = _12 + 64\laccum_383 = *_12 + 64\l_395 = _12 + 80\laccum_396 = *_12 + 80\l_201 = *_12 + 80\l*_12 = abase\l*_12 = derefaddrtmp(65)\l*_12 + 8 = abase\l*_12 + 8 = _49\l*_12 + 8 = _53\l*_12 + 8 = derefaddrtmp(65)\l*_12 + 8 = _86\l*_12 + 16 = abase\l*_12 + 16 = _91\l*_12 + 16 = _171\l*_12 + 16 = _216\l*_12 + 32 = abase\l*_12 + 32 = derefaddrtmp(65)\l*_12 + 32 = accum_752\l*_12 + 32 = accum_651\l*_12 + 32 = accum_534\l*_12 + 32 = accum_359\l*_12 + 48 = derefaddrtmp(65)\l*_12 + 48 = accum_736\l*_12 + 48 = accum_664\l*_12 + 48 = accum_521\l*_12 + 48 = accum_372\l*_12 + 64 = derefaddrtmp(65)\l*_12 + 64 = accum_720\l*_12 + 64 = accum_677\l*_12 + 64 = accum_508\l*_12 + 64 = accum_385\l*_12 + 80 = abase\l*_12 + 80 = derefaddrtmp(65)\l*_12 + 80 = accum_702\l*_12 + 80 = accum_690\l*_12 + 80 = accum_496\l*_12 + 80 = _186\l*_12 + 80 = _246\l*_12 + 80 = accum_398\l*_12 + 80 = _202\l"];
"_13" [label="\N\n_43 = *_13\l_921 = *_13 + 32\l_925 = *_13 + 48\l_929 = *_13 + 64\l_933 = *_13 + 80\l_48 = *_13 + 8\llocy = *_13 + UNKNOWN\l_852 = *_13 + 32\l_861 = *_13 + 48\l_870 = *_13 + 64\l_879 = *_13 + 80\l_85 = *_13 + 8\l_89 = *_13 + 16\l*_13 + UNKNOWN = doubledereftmp(57)\l*_13 + UNKNOWN = doubledereftmp(75)\l*_13 + UNKNOWN = doubledereftmp(333)\l"];
"_14" [label="\N\n_40 = *_14\l_920 = *_14 + 32\l_924 = *_14 + 48\l_928 = *_14 + 64\l_932 = *_14 + 80\l_52 = *_14 + 8\l_888 = *_14 + 32\l_897 = *_14 + 48\l_906 = *_14 + 64\l_915 = *_14 + 80\l_84 = *_14 + 8\l_87 = *_14 + 16\l_698 = *_14 + 80\l_714 = *_14 + 64\l_730 = *_14 + 48\l_746 = *_14 + 32\l*_14 + UNKNOWN = doubledereftmp(50)\l*_14 + UNKNOWN = doubledereftmp(71)\l*_14 + UNKNOWN = doubledereftmp(329)\l*_14 + UNKNOWN = doubledereftmp(337)\l"];
"_40";
"_42";
"_43";
"_45";
"_920";
"_921";
"_924";
"_925";
"_928";
"_929";
"_932";
"_933";
"__builtin_object_size";
"CALLUSED(47)" [label="\N\nCALLUSED(47) = CALLUSED(47) + UNKNOWN\lCALLUSED(47) = *CALLUSED(47) + UNKNOWN\l"];
"CALLCLOBBERED(48)";
"_46";
"doubledereftmp(50)";
"_47";
"_48";
"_49";
"CALLUSED(54)" [label="\N\nCALLUSED(54) = CALLUSED(54) + UNKNOWN\lCALLUSED(54) = *CALLUSED(54) + UNKNOWN\l"];
"CALLCLOBBERED(55)";
"_50";
"doubledereftmp(57)";
"_51";
"_52";
"_53";
"derefaddrtmp(65)";
"CALLUSED(68)" [label="\N\nCALLUSED(68) = CALLUSED(68) + UNKNOWN\lCALLUSED(68) = *CALLUSED(68) + UNKNOWN\l"];
"CALLCLOBBERED(69)";
"_56";
"doubledereftmp(71)";
"CALLUSED(72)" [label="\N\nCALLUSED(72) = CALLUSED(72) + UNKNOWN\lCALLUSED(72) = *CALLUSED(72) + UNKNOWN\l"];
"CALLCLOBBERED(73)";
"_57";
"doubledereftmp(75)";
"_888";
"_897";
"_106";
"_906";
"_774";
"_915";
"_773";
"_852";
"_861";
"_769";
"_870";
"_255";
"_879";
"_113";
"_84";
"_85";
"_86";
"_87";
"_89";
"_91";
"_698";
"_699";
"accum_702";
"_705" [label="\N\n_707 = _705 + UNKNOWN\l"];
"_707";
"_714";
"_715";
"accum_718";
"accum_720";
"_721" [label="\N\n_723 = _721 + UNKNOWN\l"];
"_723";
"_730";
"_731";
"accum_734";
"accum_736";
"_737" [label="\N\n_739 = _737 + UNKNOWN\l"];
"_739";
"_746";
"_747";
"accum_750";
"accum_752";
"_753" [label="\N\n_755 = _753 + UNKNOWN\l"];
"_755";
"carry_189";
"_121";
"accum_649" [label="\N\n_650 = accum_649 + UNKNOWN\l"];
"_650";
"accum_651";
"_661";
"accum_662" [label="\N\n_663 = accum_662 + UNKNOWN\l"];
"_663";
"accum_664";
"_674";
"accum_675" [label="\N\n_676 = accum_675 + UNKNOWN\l"];
"_676";
"accum_677";
"_687";
"accum_688" [label="\N\n_689 = accum_688 + UNKNOWN\l"];
"_689";
"accum_690";
"_596";
"accum_597" [label="\N\n_598 = accum_597 + UNKNOWN\l_611 = accum_597 + UNKNOWN\l_624 = accum_597 + UNKNOWN\l_637 = accum_597 + UNKNOWN\l_546 = accum_597 + UNKNOWN\l_559 = accum_597 + UNKNOWN\l_572 = accum_597 + UNKNOWN\l_585 = accum_597 + UNKNOWN\l"];
"_598";
"_611";
"_624";
"_637";
"_764";
"accum_765" [label="\N\n_766 = accum_765 + UNKNOWN\l_779 = accum_765 + UNKNOWN\l_792 = accum_765 + UNKNOWN\l_805 = accum_765 + UNKNOWN\l"];
"_766";
"_779";
"_792";
"_805";
"accum_496";
"_505";
"accum_506" [label="\N\n_507 = accum_506 + UNKNOWN\l"];
"_507";
"accum_508";
"_592" [label="\N\n_494 = _592 + UNKNOWN\l"];
"_518";
"accum_519" [label="\N\n_520 = accum_519 + UNKNOWN\l"];
"_520";
"accum_521";
"_531";
"accum_532" [label="\N\n_533 = accum_532 + UNKNOWN\l"];
"_533";
"accum_534";
"_169";
"_171";
"_173";
"_546";
"_559";
"_572";
"_585";
"_492";
"_494";
"_185";
"_186";
"CALLUSED(326)" [label="\N\nCALLUSED(326) = CALLUSED(326) + UNKNOWN\lCALLUSED(326) = *CALLUSED(326) + UNKNOWN\l"];
"CALLCLOBBERED(327)";
"_194";
"doubledereftmp(329)";
"CALLUSED(330)" [label="\N\nCALLUSED(330) = CALLUSED(330) + UNKNOWN\lCALLUSED(330) = *CALLUSED(330) + UNKNOWN\l"];
"CALLCLOBBERED(331)";
"_199";
"doubledereftmp(333)";
"CALLUSED(334)" [label="\N\nCALLUSED(334) = CALLUSED(334) + UNKNOWN\lCALLUSED(334) = *CALLUSED(334) + UNKNOWN\l"];
"CALLCLOBBERED(335)";
"_196";
"doubledereftmp(337)";
"_187";
"_408";
"_417";
"_190";
"_426";
"_554";
"_435";
"_553";
"puts";
"_214";
"_216";
"mantissa_226";
"_341";
"_348";
"_245";
"_246";
"accum_357" [label="\N\n_358 = accum_357 + UNKNOWN\l"];
"_358";
"accum_359";
"_369";
"accum_370" [label="\N\n_371 = accum_370 + UNKNOWN\l"];
"_371";
"accum_372";
"_382";
"accum_383" [label="\N\n_384 = accum_383 + UNKNOWN\l"];
"_384";
"accum_385";
"_395";
"accum_396" [label="\N\n_397 = accum_396 + UNKNOWN\l"];
"_397";
"accum_398";
"_201" [label="\N\n_202 = _201 + UNKNOWN\l"];
"_202";
"_16";
"_17";
"_18";
"DivideInternalFPF";
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_1";
"STOREDANYTHING" -> "_4";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_6";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_13";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_920";
"STOREDANYTHING" -> "_921";
"STOREDANYTHING" -> "_924";
"STOREDANYTHING" -> "_925";
"STOREDANYTHING" -> "_928";
"STOREDANYTHING" -> "_929";
"STOREDANYTHING" -> "_932";
"STOREDANYTHING" -> "_933";
"STOREDANYTHING" -> "CALLUSED(47)";
"STOREDANYTHING" -> "doubledereftmp(50)";
"STOREDANYTHING" -> "_47";
"STOREDANYTHING" -> "_48";
"STOREDANYTHING" -> "CALLUSED(54)";
"STOREDANYTHING" -> "doubledereftmp(57)";
"STOREDANYTHING" -> "_51";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "CALLUSED(68)";
"STOREDANYTHING" -> "doubledereftmp(71)";
"STOREDANYTHING" -> "CALLUSED(72)";
"STOREDANYTHING" -> "doubledereftmp(75)";
"STOREDANYTHING" -> "accum_765";
"STOREDANYTHING" -> "_888";
"STOREDANYTHING" -> "_897";
"STOREDANYTHING" -> "_906";
"STOREDANYTHING" -> "_915";
"STOREDANYTHING" -> "_852";
"STOREDANYTHING" -> "_861";
"STOREDANYTHING" -> "_870";
"STOREDANYTHING" -> "_879";
"STOREDANYTHING" -> "_84";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "_87";
"STOREDANYTHING" -> "_89";
"STOREDANYTHING" -> "accum_597";
"STOREDANYTHING" -> "_698";
"STOREDANYTHING" -> "_699";
"STOREDANYTHING" -> "_707";
"STOREDANYTHING" -> "_714";
"STOREDANYTHING" -> "_715";
"STOREDANYTHING" -> "_723";
"STOREDANYTHING" -> "_730";
"STOREDANYTHING" -> "_731";
"STOREDANYTHING" -> "_739";
"STOREDANYTHING" -> "_746";
"STOREDANYTHING" -> "_747";
"STOREDANYTHING" -> "_755";
"STOREDANYTHING" -> "_121";
"STOREDANYTHING" -> "accum_649";
"STOREDANYTHING" -> "_650";
"STOREDANYTHING" -> "_661";
"STOREDANYTHING" -> "accum_662";
"STOREDANYTHING" -> "_663";
"STOREDANYTHING" -> "_674";
"STOREDANYTHING" -> "accum_675";
"STOREDANYTHING" -> "_676";
"STOREDANYTHING" -> "_687";
"STOREDANYTHING" -> "accum_688";
"STOREDANYTHING" -> "_689";
"STOREDANYTHING" -> "_598";
"STOREDANYTHING" -> "_611";
"STOREDANYTHING" -> "_624";
"STOREDANYTHING" -> "_637";
"STOREDANYTHING" -> "_766";
"STOREDANYTHING" -> "_779";
"STOREDANYTHING" -> "_792";
"STOREDANYTHING" -> "_805";
"STOREDANYTHING" -> "_505";
"STOREDANYTHING" -> "accum_506";
"STOREDANYTHING" -> "_507";
"STOREDANYTHING" -> "_592";
"STOREDANYTHING" -> "_518";
"STOREDANYTHING" -> "accum_519";
"STOREDANYTHING" -> "_520";
"STOREDANYTHING" -> "_531";
"STOREDANYTHING" -> "accum_532";
"STOREDANYTHING" -> "_533";
"STOREDANYTHING" -> "_169";
"STOREDANYTHING" -> "_173";
"STOREDANYTHING" -> "_546";
"STOREDANYTHING" -> "_559";
"STOREDANYTHING" -> "_572";
"STOREDANYTHING" -> "_585";
"STOREDANYTHING" -> "_492";
"STOREDANYTHING" -> "_494";
"STOREDANYTHING" -> "_185";
"STOREDANYTHING" -> "CALLUSED(326)";
"STOREDANYTHING" -> "doubledereftmp(329)";
"STOREDANYTHING" -> "CALLUSED(330)";
"STOREDANYTHING" -> "doubledereftmp(333)";
"STOREDANYTHING" -> "CALLUSED(334)";
"STOREDANYTHING" -> "doubledereftmp(337)";
"STOREDANYTHING" -> "_408";
"STOREDANYTHING" -> "_417";
"STOREDANYTHING" -> "_426";
"STOREDANYTHING" -> "_435";
"STOREDANYTHING" -> "_214";
"STOREDANYTHING" -> "mantissa_226";
"STOREDANYTHING" -> "_341";
"STOREDANYTHING" -> "_348";
"STOREDANYTHING" -> "_245";
"STOREDANYTHING" -> "accum_357";
"STOREDANYTHING" -> "_358";
"STOREDANYTHING" -> "_369";
"STOREDANYTHING" -> "accum_370";
"STOREDANYTHING" -> "_371";
"STOREDANYTHING" -> "_382";
"STOREDANYTHING" -> "accum_383";
"STOREDANYTHING" -> "_384";
"STOREDANYTHING" -> "_395";
"STOREDANYTHING" -> "accum_396";
"STOREDANYTHING" -> "_397";
"STOREDANYTHING" -> "_201";
"STOREDANYTHING" -> "_202";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_17";
"STOREDANYTHING" -> "_18";
"elapsed_26" -> "ESCAPED";
"elapsed_26" -> "_46";
"elapsed_26" -> "_50";
"elapsed_26" -> "_56";
"elapsed_26" -> "_57";
"elapsed_26" -> "_194";
"elapsed_26" -> "_199";
"elapsed_26" -> "_196";
"_4" -> "ESCAPED";
"_5" -> "ESCAPED";
"_6" -> "ESCAPED";
"_8" -> "ESCAPED";
"_9" -> "ESCAPED";
"_10" -> "ESCAPED";
"_13" -> "CALLUSED(54)";
"_13" -> "CALLUSED(72)";
"_13" -> "CALLUSED(330)";
"_14" -> "CALLUSED(47)";
"_14" -> "CALLUSED(68)";
"_14" -> "CALLUSED(326)";
"_14" -> "CALLUSED(334)";
"_40" -> "_42";
"_42" -> "_45";
"_43" -> "_45";
"CALLUSED(47)" -> "_46";
"_47" -> "_49";
"_48" -> "_49";
"CALLUSED(54)" -> "_50";
"_51" -> "_53";
"_52" -> "_53";
"CALLUSED(68)" -> "_56";
"CALLUSED(72)" -> "_57";
"_888" -> "_106";
"_897" -> "_106";
"_106" -> "_774";
"_906" -> "_774";
"_774" -> "_773";
"_915" -> "_773";
"_852" -> "_769";
"_861" -> "_769";
"_769" -> "_255";
"_870" -> "_255";
"_255" -> "_113";
"_879" -> "_113";
"_84" -> "_86";
"_85" -> "_86";
"_87" -> "_91";
"_89" -> "_91";
"_698" -> "accum_702";
"_699" -> "accum_702";
"accum_702" -> "_705";
"_707" -> "accum_720";
"_714" -> "accum_718";
"_715" -> "accum_718";
"accum_718" -> "accum_720";
"accum_720" -> "_721";
"_723" -> "accum_736";
"_730" -> "accum_734";
"_731" -> "accum_734";
"accum_734" -> "accum_736";
"accum_736" -> "_737";
"_739" -> "accum_752";
"_746" -> "accum_750";
"_747" -> "accum_750";
"accum_750" -> "accum_752";
"accum_752" -> "_753";
"_755" -> "carry_189";
"accum_649" -> "accum_651";
"accum_662" -> "accum_664";
"accum_675" -> "accum_677";
"accum_688" -> "accum_690";
"accum_506" -> "accum_508";
"_592" -> "accum_496";
"accum_519" -> "accum_521";
"accum_532" -> "accum_534";
"_169" -> "_171";
"_185" -> "_186";
"CALLUSED(326)" -> "_194";
"CALLUSED(330)" -> "_199";
"CALLUSED(334)" -> "_196";
"_408" -> "_190";
"_417" -> "_190";
"_190" -> "_554";
"_426" -> "_554";
"_554" -> "_553";
"_435" -> "_553";
"_214" -> "_216";
"_245" -> "_246";
"accum_357" -> "accum_359";
"accum_370" -> "accum_372";
"accum_383" -> "accum_385";
"accum_396" -> "accum_398";
"_16" -> "ESCAPED";
"_17" -> "ESCAPED";
"_18" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = elapsed_26\l"];
"STOREDANYTHING";
"INTEGER";
"abase" [label="\N\n_4 = abase + UNKNOWN\l_5 = abase + UNKNOWN\l_6 = abase + UNKNOWN\l_8 = abase + UNKNOWN\l_9 = abase + UNKNOWN\l_10 = abase + UNKNOWN\l_12 = abase + UNKNOWN\l_13 = abase + UNKNOWN\l_14 = abase + UNKNOWN\l_16 = abase + UNKNOWN\l_17 = abase + UNKNOWN\l_18 = abase + UNKNOWN\l"];
"StartStopwatch";
"elapsed_26";
"_1";
"i_20" [label="\N\n_1 = i_20 + UNKNOWN\l"];
"_4";
"_5";
"_6";
"AddSubInternalFPF";
"_8";
"_9";
"_10";
"_12" [label="\N\ndoubledereftmp(50) = *_12 + UNKNOWN\l_47 = *_12 + 8\ldoubledereftmp(57) = *_12 + UNKNOWN\l_51 = *_12 + 8\ldoubledereftmp(71) = *_12 + UNKNOWN\ldoubledereftmp(75) = *_12 + UNKNOWN\l_699 = *_12 + 80\l_715 = *_12 + 64\l_731 = *_12 + 48\l_747 = *_12 + 32\l_121 = _12 + UNKNOWN\laccum_649 = *_12 + 32\l_661 = _12 + 48\laccum_662 = *_12 + 48\l_674 = _12 + 64\laccum_675 = *_12 + 64\l_687 = _12 + 80\laccum_688 = *_12 + 80\l_505 = _12 + 64\laccum_506 = *_12 + 64\l_592 = *_12 + 80\l_518 = _12 + 48\laccum_519 = *_12 + 48\l_531 = _12 + UNKNOWN\laccum_532 = *_12 + 32\l_169 = *_12 + 16\l_173 = *_12 + 32\l_492 = _12 + 80\l_185 = *_12 + 80\ldoubledereftmp(329) = *_12 + UNKNOWN\ldoubledereftmp(333) = *_12 + UNKNOWN\ldoubledereftmp(337) = *_12 + UNKNOWN\l_187 = *_12\l_408 = *_12 + 32\l_417 = *_12 + 48\l_426 = *_12 + 64\l_435 = *_12 + 80\l_214 = *_12 + 16\lmantissa_226 = _12 + UNKNOWN\l_341 = _12 + 48\l_348 = _12 + 64\l_245 = *_12 + 80\laccum_357 = *_12 + 32\l_369 = _12 + 48\laccum_370 = *_12 + 48\l_382 = _12 + 64\laccum_383 = *_12 + 64\l_395 = _12 + 80\laccum_396 = *_12 + 80\l_201 = *_12 + 80\l*_12 = abase\l*_12 = derefaddrtmp(65)\l*_12 + 8 = abase\l*_12 + 8 = _49\l*_12 + 8 = _53\l*_12 + 8 = derefaddrtmp(65)\l*_12 + 8 = _86\l*_12 + 16 = abase\l*_12 + 16 = _91\l*_12 + 16 = _171\l*_12 + 16 = _216\l*_12 + 32 = abase\l*_12 + 32 = derefaddrtmp(65)\l*_12 + 32 = accum_752\l*_12 + 32 = accum_651\l*_12 + 32 = accum_534\l*_12 + 32 = accum_359\l*_12 + 48 = derefaddrtmp(65)\l*_12 + 48 = accum_736\l*_12 + 48 = accum_664\l*_12 + 48 = accum_521\l*_12 + 48 = accum_372\l*_12 + 64 = derefaddrtmp(65)\l*_12 + 64 = accum_720\l*_12 + 64 = accum_677\l*_12 + 64 = accum_508\l*_12 + 64 = accum_385\l*_12 + 80 = abase\l*_12 + 80 = derefaddrtmp(65)\l*_12 + 80 = accum_702\l*_12 + 80 = accum_690\l*_12 + 80 = accum_496\l*_12 + 80 = _186\l*_12 + 80 = _246\l*_12 + 80 = accum_398\l*_12 + 80 = _202\l"];
"_13" [label="\N\n_43 = *_13\l_921 = *_13 + 32\l_925 = *_13 + 48\l_929 = *_13 + 64\l_933 = *_13 + 80\l_48 = *_13 + 8\laccum_765 = *_13 + UNKNOWN\l_852 = *_13 + 32\l_861 = *_13 + 48\l_870 = *_13 + 64\l_879 = *_13 + 80\l_85 = *_13 + 8\l_89 = *_13 + 16\l*_13 + UNKNOWN = doubledereftmp(57)\l*_13 + UNKNOWN = doubledereftmp(75)\l*_13 + UNKNOWN = doubledereftmp(333)\l"];
"_14" [label="\N\n_40 = *_14\l_920 = *_14 + 32\l_924 = *_14 + 48\l_928 = *_14 + 64\l_932 = *_14 + 80\l_52 = *_14 + 8\l_888 = *_14 + 32\l_897 = *_14 + 48\l_906 = *_14 + 64\l_915 = *_14 + 80\l_84 = *_14 + 8\l_87 = *_14 + 16\l_698 = *_14 + 80\l_714 = *_14 + 64\l_730 = *_14 + 48\l_746 = *_14 + 32\l*_14 + UNKNOWN = doubledereftmp(50)\l*_14 + UNKNOWN = doubledereftmp(71)\l*_14 + UNKNOWN = doubledereftmp(329)\l*_14 + UNKNOWN = doubledereftmp(337)\l"];
"_40";
"_42";
"_43";
"_45";
"_920";
"_921";
"_924";
"_925";
"_928";
"_929";
"_932";
"_933";
"__builtin_object_size";
"CALLUSED(47)" [label="\N\nCALLUSED(47) = CALLUSED(47) + UNKNOWN\lCALLUSED(47) = *CALLUSED(47) + UNKNOWN\l"];
"CALLCLOBBERED(48)";
"_46";
"doubledereftmp(50)";
"_47";
"_48";
"_49";
"CALLUSED(54)" [label="\N\nCALLUSED(54) = CALLUSED(54) + UNKNOWN\lCALLUSED(54) = *CALLUSED(54) + UNKNOWN\l"];
"CALLCLOBBERED(55)";
"_50";
"doubledereftmp(57)";
"_51";
"_52";
"_53";
"derefaddrtmp(65)";
"CALLUSED(68)" [label="\N\nCALLUSED(68) = CALLUSED(68) + UNKNOWN\lCALLUSED(68) = *CALLUSED(68) + UNKNOWN\l"];
"CALLCLOBBERED(69)";
"_56";
"doubledereftmp(71)";
"CALLUSED(72)" [label="\N\nCALLUSED(72) = CALLUSED(72) + UNKNOWN\lCALLUSED(72) = *CALLUSED(72) + UNKNOWN\l"];
"CALLCLOBBERED(73)";
"_57";
"doubledereftmp(75)";
"_888";
"_897";
"_106";
"_906";
"_774";
"_915";
"_773";
"_852";
"_861";
"_769";
"_870";
"_255";
"_879";
"_113";
"_84";
"_85";
"_86";
"_87";
"_89";
"_91";
"_698";
"_699";
"accum_702";
"_705" [label="\N\n_707 = _705 + UNKNOWN\l"];
"_707";
"_714";
"_715";
"accum_718";
"accum_720";
"_721" [label="\N\n_723 = _721 + UNKNOWN\l"];
"_723";
"_730";
"_731";
"accum_734";
"accum_736";
"_737" [label="\N\n_739 = _737 + UNKNOWN\l"];
"_739";
"_746";
"_747";
"accum_750";
"accum_752";
"_753" [label="\N\n_755 = _753 + UNKNOWN\l"];
"_755";
"carry_189";
"_121";
"accum_649" [label="\N\n_650 = accum_649 + UNKNOWN\l"];
"_650";
"accum_651";
"_661";
"accum_662" [label="\N\n_663 = accum_662 + UNKNOWN\l"];
"_663";
"accum_664";
"_674";
"accum_675" [label="\N\n_676 = accum_675 + UNKNOWN\l"];
"_676";
"accum_677";
"_687";
"accum_688" [label="\N\n_689 = accum_688 + UNKNOWN\l"];
"_689";
"accum_690";
"_596";
"accum_597" [label="\N\n_598 = accum_597 + UNKNOWN\l_611 = accum_597 + UNKNOWN\l_624 = accum_597 + UNKNOWN\l_637 = accum_597 + UNKNOWN\l_546 = accum_597 + UNKNOWN\l_559 = accum_597 + UNKNOWN\l_572 = accum_597 + UNKNOWN\l_585 = accum_597 + UNKNOWN\l"];
"_598";
"_611";
"_624";
"_637";
"_764";
"accum_765" [label="\N\n_766 = accum_765 + UNKNOWN\l_779 = accum_765 + UNKNOWN\l_792 = accum_765 + UNKNOWN\l_805 = accum_765 + UNKNOWN\l"];
"_766";
"_779";
"_792";
"_805";
"accum_496";
"_505";
"accum_506" [label="\N\n_507 = accum_506 + UNKNOWN\l"];
"_507";
"accum_508";
"_592" [label="\N\n_494 = _592 + UNKNOWN\l"];
"_518";
"accum_519" [label="\N\n_520 = accum_519 + UNKNOWN\l"];
"_520";
"accum_521";
"_531";
"accum_532" [label="\N\n_533 = accum_532 + UNKNOWN\l"];
"_533";
"accum_534";
"_169";
"_171";
"_173";
"_546";
"_559";
"_572";
"_585";
"_492";
"_494";
"_185";
"_186";
"CALLUSED(326)" [label="\N\nCALLUSED(326) = CALLUSED(326) + UNKNOWN\lCALLUSED(326) = *CALLUSED(326) + UNKNOWN\l"];
"CALLCLOBBERED(327)";
"_194";
"doubledereftmp(329)";
"CALLUSED(330)" [label="\N\nCALLUSED(330) = CALLUSED(330) + UNKNOWN\lCALLUSED(330) = *CALLUSED(330) + UNKNOWN\l"];
"CALLCLOBBERED(331)";
"_199";
"doubledereftmp(333)";
"CALLUSED(334)" [label="\N\nCALLUSED(334) = CALLUSED(334) + UNKNOWN\lCALLUSED(334) = *CALLUSED(334) + UNKNOWN\l"];
"CALLCLOBBERED(335)";
"_196";
"doubledereftmp(337)";
"_187";
"_408";
"_417";
"_190";
"_426";
"_554";
"_435";
"_553";
"puts";
"_214";
"_216";
"mantissa_226";
"_341";
"_348";
"_245";
"_246";
"accum_357" [label="\N\n_358 = accum_357 + UNKNOWN\l"];
"_358";
"accum_359";
"_369";
"accum_370" [label="\N\n_371 = accum_370 + UNKNOWN\l"];
"_371";
"accum_372";
"_382";
"accum_383" [label="\N\n_384 = accum_383 + UNKNOWN\l"];
"_384";
"accum_385";
"_395";
"accum_396" [label="\N\n_397 = accum_396 + UNKNOWN\l"];
"_397";
"accum_398";
"_201" [label="\N\n_202 = _201 + UNKNOWN\l"];
"_202";
"_16";
"_17";
"_18";
"DivideInternalFPF";
"StopStopwatch";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_1";
"STOREDANYTHING" -> "_4";
"STOREDANYTHING" -> "_5";
"STOREDANYTHING" -> "_6";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_12";
"STOREDANYTHING" -> "_13";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_920";
"STOREDANYTHING" -> "_921";
"STOREDANYTHING" -> "_924";
"STOREDANYTHING" -> "_925";
"STOREDANYTHING" -> "_928";
"STOREDANYTHING" -> "_929";
"STOREDANYTHING" -> "_932";
"STOREDANYTHING" -> "_933";
"STOREDANYTHING" -> "CALLUSED(47)";
"STOREDANYTHING" -> "doubledereftmp(50)";
"STOREDANYTHING" -> "_47";
"STOREDANYTHING" -> "_48";
"STOREDANYTHING" -> "CALLUSED(54)";
"STOREDANYTHING" -> "doubledereftmp(57)";
"STOREDANYTHING" -> "_51";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "CALLUSED(68)";
"STOREDANYTHING" -> "doubledereftmp(71)";
"STOREDANYTHING" -> "CALLUSED(72)";
"STOREDANYTHING" -> "doubledereftmp(75)";
"STOREDANYTHING" -> "accum_765";
"STOREDANYTHING" -> "_888";
"STOREDANYTHING" -> "_897";
"STOREDANYTHING" -> "_906";
"STOREDANYTHING" -> "_915";
"STOREDANYTHING" -> "_852";
"STOREDANYTHING" -> "_861";
"STOREDANYTHING" -> "_870";
"STOREDANYTHING" -> "_879";
"STOREDANYTHING" -> "_84";
"STOREDANYTHING" -> "_85";
"STOREDANYTHING" -> "_87";
"STOREDANYTHING" -> "_89";
"STOREDANYTHING" -> "accum_597";
"STOREDANYTHING" -> "_698";
"STOREDANYTHING" -> "_699";
"STOREDANYTHING" -> "_707";
"STOREDANYTHING" -> "_714";
"STOREDANYTHING" -> "_715";
"STOREDANYTHING" -> "_723";
"STOREDANYTHING" -> "_730";
"STOREDANYTHING" -> "_731";
"STOREDANYTHING" -> "_739";
"STOREDANYTHING" -> "_746";
"STOREDANYTHING" -> "_747";
"STOREDANYTHING" -> "_755";
"STOREDANYTHING" -> "_121";
"STOREDANYTHING" -> "accum_649";
"STOREDANYTHING" -> "_650";
"STOREDANYTHING" -> "_661";
"STOREDANYTHING" -> "accum_662";
"STOREDANYTHING" -> "_663";
"STOREDANYTHING" -> "_674";
"STOREDANYTHING" -> "accum_675";
"STOREDANYTHING" -> "_676";
"STOREDANYTHING" -> "_687";
"STOREDANYTHING" -> "accum_688";
"STOREDANYTHING" -> "_689";
"STOREDANYTHING" -> "_598";
"STOREDANYTHING" -> "_611";
"STOREDANYTHING" -> "_624";
"STOREDANYTHING" -> "_637";
"STOREDANYTHING" -> "_766";
"STOREDANYTHING" -> "_779";
"STOREDANYTHING" -> "_792";
"STOREDANYTHING" -> "_805";
"STOREDANYTHING" -> "_505";
"STOREDANYTHING" -> "accum_506";
"STOREDANYTHING" -> "_507";
"STOREDANYTHING" -> "_592";
"STOREDANYTHING" -> "_518";
"STOREDANYTHING" -> "accum_519";
"STOREDANYTHING" -> "_520";
"STOREDANYTHING" -> "_531";
"STOREDANYTHING" -> "accum_532";
"STOREDANYTHING" -> "_533";
"STOREDANYTHING" -> "_169";
"STOREDANYTHING" -> "_173";
"STOREDANYTHING" -> "_546";
"STOREDANYTHING" -> "_559";
"STOREDANYTHING" -> "_572";
"STOREDANYTHING" -> "_585";
"STOREDANYTHING" -> "_492";
"STOREDANYTHING" -> "_494";
"STOREDANYTHING" -> "_185";
"STOREDANYTHING" -> "CALLUSED(326)";
"STOREDANYTHING" -> "doubledereftmp(329)";
"STOREDANYTHING" -> "CALLUSED(330)";
"STOREDANYTHING" -> "doubledereftmp(333)";
"STOREDANYTHING" -> "CALLUSED(334)";
"STOREDANYTHING" -> "doubledereftmp(337)";
"STOREDANYTHING" -> "_408";
"STOREDANYTHING" -> "_417";
"STOREDANYTHING" -> "_426";
"STOREDANYTHING" -> "_435";
"STOREDANYTHING" -> "_214";
"STOREDANYTHING" -> "mantissa_226";
"STOREDANYTHING" -> "_341";
"STOREDANYTHING" -> "_348";
"STOREDANYTHING" -> "_245";
"STOREDANYTHING" -> "accum_357";
"STOREDANYTHING" -> "_358";
"STOREDANYTHING" -> "_369";
"STOREDANYTHING" -> "accum_370";
"STOREDANYTHING" -> "_371";
"STOREDANYTHING" -> "_382";
"STOREDANYTHING" -> "accum_383";
"STOREDANYTHING" -> "_384";
"STOREDANYTHING" -> "_395";
"STOREDANYTHING" -> "accum_396";
"STOREDANYTHING" -> "_397";
"STOREDANYTHING" -> "_201";
"STOREDANYTHING" -> "_202";
"STOREDANYTHING" -> "_16";
"STOREDANYTHING" -> "_17";
"STOREDANYTHING" -> "_18";
"abase" -> "ESCAPED";
"elapsed_26" -> "ESCAPED";
"elapsed_26" -> "_40";
"elapsed_26" -> "_43";
"elapsed_26" -> "_920";
"elapsed_26" -> "_921";
"elapsed_26" -> "_924";
"elapsed_26" -> "_925";
"elapsed_26" -> "_928";
"elapsed_26" -> "_929";
"elapsed_26" -> "_932";
"elapsed_26" -> "_933";
"elapsed_26" -> "CALLUSED(47)";
"elapsed_26" -> "_46";
"elapsed_26" -> "doubledereftmp(50)";
"elapsed_26" -> "_47";
"elapsed_26" -> "_48";
"elapsed_26" -> "CALLUSED(54)";
"elapsed_26" -> "_50";
"elapsed_26" -> "doubledereftmp(57)";
"elapsed_26" -> "_51";
"elapsed_26" -> "_52";
"elapsed_26" -> "CALLUSED(68)";
"elapsed_26" -> "_56";
"elapsed_26" -> "doubledereftmp(71)";
"elapsed_26" -> "CALLUSED(72)";
"elapsed_26" -> "_57";
"elapsed_26" -> "doubledereftmp(75)";
"elapsed_26" -> "_888";
"elapsed_26" -> "_897";
"elapsed_26" -> "_906";
"elapsed_26" -> "_915";
"elapsed_26" -> "_852";
"elapsed_26" -> "_861";
"elapsed_26" -> "_870";
"elapsed_26" -> "_879";
"elapsed_26" -> "_84";
"elapsed_26" -> "_85";
"elapsed_26" -> "_87";
"elapsed_26" -> "_89";
"elapsed_26" -> "_698";
"elapsed_26" -> "_699";
"elapsed_26" -> "_714";
"elapsed_26" -> "_715";
"elapsed_26" -> "_730";
"elapsed_26" -> "_731";
"elapsed_26" -> "_746";
"elapsed_26" -> "_747";
"elapsed_26" -> "accum_649";
"elapsed_26" -> "accum_662";
"elapsed_26" -> "accum_675";
"elapsed_26" -> "accum_688";
"elapsed_26" -> "accum_765";
"elapsed_26" -> "accum_506";
"elapsed_26" -> "_592";
"elapsed_26" -> "accum_519";
"elapsed_26" -> "accum_532";
"elapsed_26" -> "_169";
"elapsed_26" -> "_173";
"elapsed_26" -> "_185";
"elapsed_26" -> "CALLUSED(326)";
"elapsed_26" -> "_194";
"elapsed_26" -> "doubledereftmp(329)";
"elapsed_26" -> "CALLUSED(330)";
"elapsed_26" -> "_199";
"elapsed_26" -> "doubledereftmp(333)";
"elapsed_26" -> "CALLUSED(334)";
"elapsed_26" -> "_196";
"elapsed_26" -> "doubledereftmp(337)";
"elapsed_26" -> "_187";
"elapsed_26" -> "_408";
"elapsed_26" -> "_417";
"elapsed_26" -> "_426";
"elapsed_26" -> "_435";
"elapsed_26" -> "_214";
"elapsed_26" -> "_245";
"elapsed_26" -> "accum_357";
"elapsed_26" -> "accum_370";
"elapsed_26" -> "accum_383";
"elapsed_26" -> "accum_396";
"elapsed_26" -> "_201";
"_4" -> "ESCAPED";
"_5" -> "ESCAPED";
"_6" -> "ESCAPED";
"_8" -> "ESCAPED";
"_9" -> "ESCAPED";
"_10" -> "ESCAPED";
"_13" -> "CALLUSED(54)";
"_13" -> "CALLUSED(72)";
"_13" -> "CALLUSED(330)";
"_14" -> "CALLUSED(47)";
"_14" -> "CALLUSED(68)";
"_14" -> "CALLUSED(326)";
"_14" -> "CALLUSED(334)";
"_40" -> "_42";
"_42" -> "_45";
"_43" -> "_45";
"CALLUSED(47)" -> "_46";
"doubledereftmp(50)" -> "ESCAPED";
"_47" -> "_49";
"_48" -> "_49";
"_49" -> "ESCAPED";
"CALLUSED(54)" -> "_50";
"doubledereftmp(57)" -> "ESCAPED";
"_51" -> "_53";
"_52" -> "_53";
"_53" -> "ESCAPED";
"derefaddrtmp(65)" -> "ESCAPED";
"CALLUSED(68)" -> "_56";
"doubledereftmp(71)" -> "ESCAPED";
"CALLUSED(72)" -> "_57";
"doubledereftmp(75)" -> "ESCAPED";
"_888" -> "_106";
"_897" -> "_106";
"_106" -> "_774";
"_906" -> "_774";
"_774" -> "_773";
"_915" -> "_773";
"_852" -> "_769";
"_861" -> "_769";
"_769" -> "_255";
"_870" -> "_255";
"_255" -> "_113";
"_879" -> "_113";
"_84" -> "_86";
"_85" -> "_86";
"_86" -> "ESCAPED";
"_87" -> "_91";
"_89" -> "_91";
"_91" -> "ESCAPED";
"_698" -> "accum_702";
"_699" -> "accum_702";
"accum_702" -> "ESCAPED";
"accum_702" -> "_705";
"_707" -> "accum_720";
"_714" -> "accum_718";
"_715" -> "accum_718";
"accum_718" -> "accum_720";
"accum_720" -> "ESCAPED";
"accum_720" -> "_721";
"_723" -> "accum_736";
"_730" -> "accum_734";
"_731" -> "accum_734";
"accum_734" -> "accum_736";
"accum_736" -> "ESCAPED";
"accum_736" -> "_737";
"_739" -> "accum_752";
"_746" -> "accum_750";
"_747" -> "accum_750";
"accum_750" -> "accum_752";
"accum_752" -> "ESCAPED";
"accum_752" -> "_753";
"_755" -> "carry_189";
"accum_649" -> "accum_651";
"accum_651" -> "ESCAPED";
"accum_662" -> "accum_664";
"accum_664" -> "ESCAPED";
"accum_675" -> "accum_677";
"accum_677" -> "ESCAPED";
"accum_688" -> "accum_690";
"accum_690" -> "ESCAPED";
"accum_496" -> "ESCAPED";
"accum_506" -> "accum_508";
"accum_508" -> "ESCAPED";
"_592" -> "accum_496";
"accum_519" -> "accum_521";
"accum_521" -> "ESCAPED";
"accum_532" -> "accum_534";
"accum_534" -> "ESCAPED";
"_169" -> "_171";
"_171" -> "ESCAPED";
"_185" -> "_186";
"_186" -> "ESCAPED";
"CALLUSED(326)" -> "_194";
"doubledereftmp(329)" -> "ESCAPED";
"CALLUSED(330)" -> "_199";
"doubledereftmp(333)" -> "ESCAPED";
"CALLUSED(334)" -> "_196";
"doubledereftmp(337)" -> "ESCAPED";
"_408" -> "_190";
"_417" -> "_190";
"_190" -> "_554";
"_426" -> "_554";
"_554" -> "_553";
"_435" -> "_553";
"_214" -> "_216";
"_216" -> "ESCAPED";
"_245" -> "_246";
"_246" -> "ESCAPED";
"accum_357" -> "accum_359";
"accum_359" -> "ESCAPED";
"accum_370" -> "accum_372";
"accum_372" -> "ESCAPED";
"accum_383" -> "accum_385";
"accum_385" -> "ESCAPED";
"accum_396" -> "accum_398";
"accum_398" -> "ESCAPED";
"_202" -> "ESCAPED";
"_16" -> "ESCAPED";
"_17" -> "ESCAPED";
"_18" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as elapsed_26
STOREDANYTHING = { }
INTEGER = { ANYTHING }
abase = { NONLOCAL }
bbase = { NONLOCAL } same as abase
cbase = { NONLOCAL } same as abase
arraysize = { NONLOCAL } same as abase
loops = { NONLOCAL } same as abase
StartStopwatch = { }
elapsed_26 = { ESCAPED NONLOCAL }
_1 = { NULL NONLOCAL }
i_20 = { NULL NONLOCAL }
_2 = { ESCAPED NONLOCAL } same as elapsed_26
jtable.2859 = { ESCAPED NONLOCAL } same as elapsed_26
_3 = { NULL NONLOCAL } same as i_20
_4 = { NONLOCAL }
_5 = { NONLOCAL }
_6 = { NONLOCAL }
AddSubInternalFPF = { }
_7 = { NULL NONLOCAL } same as i_20
_8 = { NONLOCAL }
_9 = { NONLOCAL }
_10 = { NONLOCAL }
_11 = { NULL NONLOCAL } same as i_20
_12 = { NONLOCAL }
_13 = { NONLOCAL }
_14 = { NONLOCAL }
_40 = { ESCAPED NONLOCAL }
_41 = { ESCAPED NONLOCAL } same as _40
_42 = { ESCAPED NONLOCAL }
_43 = { ESCAPED NONLOCAL }
_44 = { ESCAPED NONLOCAL } same as _43
_45 = { ESCAPED NONLOCAL }
_920 = { ESCAPED NONLOCAL }
_921 = { ESCAPED NONLOCAL }
_924 = { ESCAPED NONLOCAL }
_925 = { ESCAPED NONLOCAL }
_928 = { ESCAPED NONLOCAL }
_929 = { ESCAPED NONLOCAL }
_932 = { ESCAPED NONLOCAL }
_933 = { ESCAPED NONLOCAL }
__builtin_object_size = { }
CALLUSED(47) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(48) = { }
_46 = { NULL ESCAPED NONLOCAL }
doubledereftmp(50) = { ESCAPED NONLOCAL }
_47 = { ESCAPED NONLOCAL }
_48 = { ESCAPED NONLOCAL }
_49 = { ESCAPED NONLOCAL }
CALLUSED(54) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(55) = { }
_50 = { NULL ESCAPED NONLOCAL }
doubledereftmp(57) = { ESCAPED NONLOCAL }
_51 = { ESCAPED NONLOCAL }
_52 = { ESCAPED NONLOCAL }
_53 = { ESCAPED NONLOCAL }
derefaddrtmp(61) = { NONLOCAL } same as abase
derefaddrtmp(62) = { NONLOCAL } same as abase
derefaddrtmp(63) = { NONLOCAL } same as abase
derefaddrtmp(64) = { NONLOCAL } same as abase
derefaddrtmp(65) = { NULL }
derefaddrtmp(66) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(67) = { NULL } same as derefaddrtmp(65)
CALLUSED(68) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(69) = { }
_56 = { NULL ESCAPED NONLOCAL }
doubledereftmp(71) = { ESCAPED NONLOCAL }
CALLUSED(72) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(73) = { }
_57 = { NULL ESCAPED NONLOCAL }
doubledereftmp(75) = { ESCAPED NONLOCAL }
locy = { ESCAPED NONLOCAL } same as accum_765
_888 = { ESCAPED NONLOCAL }
_889 = { ESCAPED NONLOCAL } same as _888
n_890 = { ESCAPED NONLOCAL } same as _888
_897 = { ESCAPED NONLOCAL }
_898 = { ESCAPED NONLOCAL } same as _897
_106 = { ESCAPED NONLOCAL }
n_899 = { ESCAPED NONLOCAL } same as _106
_906 = { ESCAPED NONLOCAL }
_907 = { ESCAPED NONLOCAL } same as _906
_774 = { ESCAPED NONLOCAL }
n_908 = { ESCAPED NONLOCAL } same as _774
_915 = { ESCAPED NONLOCAL }
_916 = { ESCAPED NONLOCAL } same as _915
_773 = { ESCAPED NONLOCAL }
n_917 = { ESCAPED NONLOCAL } same as _773
_852 = { ESCAPED NONLOCAL }
_853 = { ESCAPED NONLOCAL } same as _852
n_854 = { ESCAPED NONLOCAL } same as _852
_861 = { ESCAPED NONLOCAL }
_862 = { ESCAPED NONLOCAL } same as _861
_769 = { ESCAPED NONLOCAL }
n_863 = { ESCAPED NONLOCAL } same as _769
_870 = { ESCAPED NONLOCAL }
_871 = { ESCAPED NONLOCAL } same as _870
_255 = { ESCAPED NONLOCAL }
n_872 = { ESCAPED NONLOCAL } same as _255
_879 = { ESCAPED NONLOCAL }
_880 = { ESCAPED NONLOCAL } same as _879
_113 = { ESCAPED NONLOCAL }
n_881 = { ESCAPED NONLOCAL } same as _113
derefaddrtmp(107) = { NONLOCAL } same as abase
derefaddrtmp(108) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(109) = { NONLOCAL } same as abase
derefaddrtmp(110) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(111) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(112) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(113) = { NULL } same as derefaddrtmp(65)
_82 = { ESCAPED NONLOCAL } same as _40
_83 = { ESCAPED NONLOCAL } same as _43
derefaddrtmp(116) = { NONLOCAL } same as abase
derefaddrtmp(117) = { NONLOCAL } same as abase
_84 = { ESCAPED NONLOCAL }
_85 = { ESCAPED NONLOCAL }
_86 = { ESCAPED NONLOCAL }
_87 = { ESCAPED NONLOCAL }
_88 = { ESCAPED NONLOCAL } same as _87
_89 = { ESCAPED NONLOCAL }
_90 = { ESCAPED NONLOCAL } same as _89
_91 = { ESCAPED NONLOCAL }
_92 = { ESCAPED NONLOCAL } same as _91
derefaddrtmp(127) = { NULL } same as derefaddrtmp(65)
extra_bits = { NULL NONLOCAL } same as accum_597
derefaddrtmp(129) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(130) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(131) = { NULL } same as derefaddrtmp(65)
_698 = { ESCAPED NONLOCAL }
_699 = { ESCAPED NONLOCAL }
accum_700 = { ESCAPED NONLOCAL } same as _699
_701 = { ESCAPED NONLOCAL } same as _698
accum_702 = { ESCAPED NONLOCAL }
accum_704 = { ESCAPED NONLOCAL } same as accum_702
_705 = { ESCAPED NONLOCAL }
_706 = { ESCAPED NONLOCAL } same as _705
_707 = { ESCAPED NONLOCAL }
_708 = { ESCAPED NONLOCAL } same as accum_702
_714 = { ESCAPED NONLOCAL }
_715 = { ESCAPED NONLOCAL }
accum_716 = { ESCAPED NONLOCAL } same as _715
_717 = { ESCAPED NONLOCAL } same as _714
accum_718 = { ESCAPED NONLOCAL }
_719 = { ESCAPED NONLOCAL } same as _707
accum_720 = { ESCAPED NONLOCAL }
_721 = { ESCAPED NONLOCAL }
_722 = { ESCAPED NONLOCAL } same as _721
_723 = { ESCAPED NONLOCAL }
_724 = { ESCAPED NONLOCAL } same as accum_720
_730 = { ESCAPED NONLOCAL }
_731 = { ESCAPED NONLOCAL }
accum_732 = { ESCAPED NONLOCAL } same as _731
_733 = { ESCAPED NONLOCAL } same as _730
accum_734 = { ESCAPED NONLOCAL }
_735 = { ESCAPED NONLOCAL } same as _723
accum_736 = { ESCAPED NONLOCAL }
_737 = { ESCAPED NONLOCAL }
_738 = { ESCAPED NONLOCAL } same as _737
_739 = { ESCAPED NONLOCAL }
_740 = { ESCAPED NONLOCAL } same as accum_736
_746 = { ESCAPED NONLOCAL }
_747 = { ESCAPED NONLOCAL }
accum_748 = { ESCAPED NONLOCAL } same as _747
_749 = { ESCAPED NONLOCAL } same as _746
accum_750 = { ESCAPED NONLOCAL }
_751 = { ESCAPED NONLOCAL } same as _739
accum_752 = { ESCAPED NONLOCAL }
_753 = { ESCAPED NONLOCAL }
_754 = { ESCAPED NONLOCAL } same as _753
_755 = { ESCAPED NONLOCAL }
_756 = { ESCAPED NONLOCAL } same as accum_752
carry_189 = { NULL ESCAPED NONLOCAL }
_121 = { NONLOCAL }
_648 = { NONLOCAL } same as _121
accum_649 = { ESCAPED NONLOCAL }
_650 = { ESCAPED NONLOCAL }
accum_651 = { ESCAPED NONLOCAL }
accum_652 = { ESCAPED NONLOCAL } same as accum_651
accum_653 = { ESCAPED NONLOCAL } same as accum_651
_661 = { NONLOCAL }
accum_662 = { ESCAPED NONLOCAL }
_663 = { ESCAPED NONLOCAL }
accum_664 = { ESCAPED NONLOCAL }
accum_665 = { ESCAPED NONLOCAL } same as accum_664
accum_666 = { ESCAPED NONLOCAL } same as accum_664
_674 = { NONLOCAL }
accum_675 = { ESCAPED NONLOCAL }
_676 = { ESCAPED NONLOCAL }
accum_677 = { ESCAPED NONLOCAL }
accum_678 = { ESCAPED NONLOCAL } same as accum_677
accum_679 = { ESCAPED NONLOCAL } same as accum_677
_687 = { NONLOCAL }
accum_688 = { ESCAPED NONLOCAL }
_689 = { ESCAPED NONLOCAL }
accum_690 = { ESCAPED NONLOCAL }
accum_691 = { ESCAPED NONLOCAL } same as accum_690
accum_692 = { ESCAPED NONLOCAL } same as accum_690
_596 = { extra_bits }
accum_597 = { NULL NONLOCAL }
_598 = { NULL NONLOCAL }
accum_599 = { NULL NONLOCAL } same as accum_597
accum_600 = { NULL NONLOCAL } same as accum_597
accum_601 = { NULL NONLOCAL } same as accum_597
_609 = { extra_bits } same as _596
accum_610 = { NULL NONLOCAL } same as accum_597
_611 = { NULL NONLOCAL }
accum_612 = { NULL NONLOCAL } same as accum_597
accum_613 = { NULL NONLOCAL } same as accum_597
accum_614 = { NULL NONLOCAL } same as accum_597
_622 = { extra_bits } same as _596
accum_623 = { NULL NONLOCAL } same as accum_597
_624 = { NULL NONLOCAL }
accum_625 = { NULL NONLOCAL } same as accum_597
accum_626 = { NULL NONLOCAL } same as accum_597
accum_627 = { NULL NONLOCAL } same as accum_597
_635 = { extra_bits } same as _596
accum_636 = { NULL NONLOCAL } same as accum_597
_637 = { NULL NONLOCAL }
accum_638 = { NULL NONLOCAL } same as accum_597
accum_639 = { NULL NONLOCAL } same as accum_597
accum_640 = { NULL NONLOCAL } same as accum_597
i_145 = { NULL NONLOCAL } same as i_20
i_144 = { NULL NONLOCAL } same as i_20
_764 = { locy }
accum_765 = { ESCAPED NONLOCAL }
_766 = { ESCAPED NONLOCAL }
accum_767 = { ESCAPED NONLOCAL } same as accum_765
_777 = { locy } same as _764
accum_778 = { ESCAPED NONLOCAL } same as accum_765
_779 = { ESCAPED NONLOCAL }
accum_780 = { ESCAPED NONLOCAL } same as accum_765
accum_781 = { ESCAPED NONLOCAL } same as accum_765
accum_782 = { ESCAPED NONLOCAL } same as accum_765
_790 = { locy } same as _764
accum_791 = { ESCAPED NONLOCAL } same as accum_765
_792 = { ESCAPED NONLOCAL }
accum_793 = { ESCAPED NONLOCAL } same as accum_765
accum_794 = { ESCAPED NONLOCAL } same as accum_765
accum_795 = { ESCAPED NONLOCAL } same as accum_765
_803 = { locy } same as _764
accum_804 = { ESCAPED NONLOCAL } same as accum_765
_805 = { ESCAPED NONLOCAL }
accum_806 = { ESCAPED NONLOCAL } same as accum_765
accum_807 = { ESCAPED NONLOCAL } same as accum_765
accum_808 = { ESCAPED NONLOCAL } same as accum_765
accum_496 = { ESCAPED NONLOCAL }
accum_495 = { ESCAPED NONLOCAL } same as accum_496
accum_497 = { ESCAPED NONLOCAL } same as accum_496
_505 = { NONLOCAL }
accum_506 = { ESCAPED NONLOCAL }
_507 = { ESCAPED NONLOCAL }
accum_508 = { ESCAPED NONLOCAL }
_592 = { ESCAPED NONLOCAL }
accum_493 = { ESCAPED NONLOCAL } same as _592
accum_509 = { ESCAPED NONLOCAL } same as accum_508
accum_510 = { ESCAPED NONLOCAL } same as accum_508
_518 = { NONLOCAL }
accum_519 = { ESCAPED NONLOCAL }
_520 = { ESCAPED NONLOCAL }
accum_521 = { ESCAPED NONLOCAL }
_489 = { ESCAPED NONLOCAL } same as accum_506
accum_522 = { ESCAPED NONLOCAL } same as accum_521
accum_523 = { ESCAPED NONLOCAL } same as accum_521
_531 = { NONLOCAL }
_157 = { NONLOCAL } same as _531
accum_532 = { ESCAPED NONLOCAL }
_533 = { ESCAPED NONLOCAL }
accum_534 = { ESCAPED NONLOCAL }
_488 = { ESCAPED NONLOCAL } same as accum_519
accum_535 = { ESCAPED NONLOCAL } same as accum_534
accum_536 = { ESCAPED NONLOCAL } same as accum_534
_169 = { ESCAPED NONLOCAL }
_170 = { ESCAPED NONLOCAL } same as _169
_171 = { ESCAPED NONLOCAL }
_172 = { ESCAPED NONLOCAL } same as _171
_173 = { ESCAPED NONLOCAL }
_174 = { ESCAPED NONLOCAL } same as _173
_544 = { extra_bits } same as _596
accum_545 = { NULL NONLOCAL } same as accum_597
_546 = { NULL NONLOCAL }
accum_547 = { NULL NONLOCAL } same as accum_597
_557 = { extra_bits } same as _596
accum_558 = { NULL NONLOCAL } same as accum_597
_559 = { NULL NONLOCAL }
accum_560 = { NULL NONLOCAL } same as accum_597
_728 = { NULL NONLOCAL } same as accum_597
accum_561 = { NULL NONLOCAL } same as accum_597
accum_562 = { NULL NONLOCAL } same as accum_597
_570 = { extra_bits } same as _596
accum_571 = { NULL NONLOCAL } same as accum_597
_572 = { NULL NONLOCAL }
accum_573 = { NULL NONLOCAL } same as accum_597
_713 = { NULL NONLOCAL } same as accum_597
accum_574 = { NULL NONLOCAL } same as accum_597
accum_575 = { NULL NONLOCAL } same as accum_597
_583 = { extra_bits } same as _596
accum_584 = { NULL NONLOCAL } same as accum_597
_585 = { NULL NONLOCAL }
accum_586 = { NULL NONLOCAL } same as accum_597
_712 = { NULL NONLOCAL } same as accum_597
accum_587 = { NULL NONLOCAL } same as accum_597
accum_588 = { NULL NONLOCAL } same as accum_597
_492 = { NONLOCAL }
_494 = { ESCAPED NONLOCAL }
_593 = { NULL NONLOCAL } same as accum_597
_456 = { NULL NONLOCAL } same as accum_597
_457 = { NULL NONLOCAL } same as accum_597
n_458 = { NULL NONLOCAL } same as accum_597
_465 = { NULL NONLOCAL } same as accum_597
_466 = { NULL NONLOCAL } same as accum_597
_745 = { NULL NONLOCAL } same as accum_597
n_467 = { NULL NONLOCAL } same as accum_597
_474 = { NULL NONLOCAL } same as accum_597
_475 = { NULL NONLOCAL } same as accum_597
_744 = { NULL NONLOCAL } same as accum_597
n_476 = { NULL NONLOCAL } same as accum_597
_483 = { NULL NONLOCAL } same as accum_597
_484 = { NULL NONLOCAL } same as accum_597
_729 = { NULL NONLOCAL } same as accum_597
n_485 = { NULL NONLOCAL } same as accum_597
_185 = { ESCAPED NONLOCAL }
_186 = { ESCAPED NONLOCAL }
CALLUSED(326) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(327) = { }
_194 = { NULL ESCAPED NONLOCAL }
doubledereftmp(329) = { ESCAPED NONLOCAL }
CALLUSED(330) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(331) = { }
_199 = { NULL ESCAPED NONLOCAL }
doubledereftmp(333) = { ESCAPED NONLOCAL }
CALLUSED(334) = { NULL ESCAPED NONLOCAL }
CALLCLOBBERED(335) = { }
_196 = { NULL ESCAPED NONLOCAL }
doubledereftmp(337) = { ESCAPED NONLOCAL }
_187 = { ESCAPED NONLOCAL }
_188 = { ESCAPED NONLOCAL } same as _187
_408 = { ESCAPED NONLOCAL }
_409 = { ESCAPED NONLOCAL } same as _408
n_410 = { ESCAPED NONLOCAL } same as _408
_417 = { ESCAPED NONLOCAL }
_418 = { ESCAPED NONLOCAL } same as _417
_190 = { ESCAPED NONLOCAL }
n_419 = { ESCAPED NONLOCAL } same as _190
_426 = { ESCAPED NONLOCAL }
_427 = { ESCAPED NONLOCAL } same as _426
_554 = { ESCAPED NONLOCAL }
n_428 = { ESCAPED NONLOCAL } same as _554
_435 = { ESCAPED NONLOCAL }
_436 = { ESCAPED NONLOCAL } same as _435
_553 = { ESCAPED NONLOCAL }
n_437 = { ESCAPED NONLOCAL } same as _553
puts = { }
_214 = { ESCAPED NONLOCAL }
_215 = { ESCAPED NONLOCAL } same as _214
_216 = { ESCAPED NONLOCAL }
exponent_difference_217 = { ESCAPED NONLOCAL } same as _216
exponent_difference_218 = { ESCAPED NONLOCAL } same as _216
derefaddrtmp(361) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(362) = { NONLOCAL } same as abase
derefaddrtmp(363) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(364) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(365) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(366) = { NULL } same as derefaddrtmp(65)
_221 = { ESCAPED NONLOCAL } same as _214
_222 = { ESCAPED NONLOCAL } same as _216
_223 = { ESCAPED NONLOCAL } same as _216
_224 = { ESCAPED NONLOCAL } same as _216
_225 = { ESCAPED NONLOCAL } same as _216
mantissa_226 = { NONLOCAL }
_227 = { ESCAPED NONLOCAL } same as _187
_334 = { NONLOCAL } same as mantissa_226
derefaddrtmp(375) = { NULL } same as derefaddrtmp(65)
_341 = { NONLOCAL }
derefaddrtmp(377) = { NULL } same as derefaddrtmp(65)
_348 = { NONLOCAL }
derefaddrtmp(379) = { NULL } same as derefaddrtmp(65)
derefaddrtmp(380) = { NONLOCAL } same as abase
_245 = { ESCAPED NONLOCAL }
_246 = { ESCAPED NONLOCAL }
i_248 = { NULL NONLOCAL } same as i_20
i_247 = { NULL NONLOCAL } same as i_20
_356 = { NONLOCAL } same as mantissa_226
accum_357 = { ESCAPED NONLOCAL }
_358 = { ESCAPED NONLOCAL }
accum_359 = { ESCAPED NONLOCAL }
_369 = { NONLOCAL }
accum_370 = { ESCAPED NONLOCAL }
_371 = { ESCAPED NONLOCAL }
accum_372 = { ESCAPED NONLOCAL }
accum_373 = { ESCAPED NONLOCAL } same as accum_372
accum_374 = { ESCAPED NONLOCAL } same as accum_372
_382 = { NONLOCAL }
accum_383 = { ESCAPED NONLOCAL }
_384 = { ESCAPED NONLOCAL }
accum_385 = { ESCAPED NONLOCAL }
accum_386 = { ESCAPED NONLOCAL } same as accum_385
accum_387 = { ESCAPED NONLOCAL } same as accum_385
_395 = { NONLOCAL }
accum_396 = { ESCAPED NONLOCAL }
_397 = { ESCAPED NONLOCAL }
accum_398 = { ESCAPED NONLOCAL }
accum_399 = { ESCAPED NONLOCAL } same as accum_398
accum_400 = { ESCAPED NONLOCAL } same as accum_398
_200 = { ESCAPED NONLOCAL } same as _187
_201 = { ESCAPED NONLOCAL }
_202 = { ESCAPED NONLOCAL }
_15 = { NULL NONLOCAL } same as i_20
_16 = { NONLOCAL }
_17 = { NONLOCAL }
_18 = { NONLOCAL }
DivideInternalFPF = { }
i_39 = { NULL NONLOCAL } same as i_20
loops_19 = { NONLOCAL } same as abase
loops_28 = { NONLOCAL } same as abase
StopStopwatch = { }
_30 = { ESCAPED NONLOCAL } same as elapsed_26


Alias information for DoEmFloatIteration

Aliased symbols

extra_bits, UID D.3828, short unsigned int[4], is addressable
locy, UID D.3829, struct InternalFPF, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_4, points-to non-local, points-to NULL, points-to vars: { }
_5, points-to non-local, points-to NULL, points-to vars: { }
_6, points-to non-local, points-to NULL, points-to vars: { }
_8, points-to non-local, points-to NULL, points-to vars: { }
_9, points-to non-local, points-to NULL, points-to vars: { }
_10, points-to non-local, points-to NULL, points-to vars: { }
_12, points-to non-local, points-to NULL, points-to vars: { }
_13, points-to non-local, points-to NULL, points-to vars: { }
_14, points-to non-local, points-to NULL, points-to vars: { }
_16, points-to non-local, points-to NULL, points-to vars: { }
_17, points-to non-local, points-to NULL, points-to vars: { }
_18, points-to non-local, points-to NULL, points-to vars: { }
cbase_32(D), points-to non-local, points-to NULL, points-to vars: { }
bbase_33(D), points-to non-local, points-to NULL, points-to vars: { }
abase_34(D), points-to non-local, points-to NULL, points-to vars: { }
_121, points-to non-local, points-to NULL, points-to vars: { }
_157, points-to non-local, points-to NULL, points-to vars: { }
mantissa_226, points-to non-local, points-to NULL, points-to vars: { }
_334, points-to non-local, points-to NULL, points-to vars: { }
_341, points-to non-local, points-to NULL, points-to vars: { }
_348, points-to non-local, points-to NULL, points-to vars: { }
_356, points-to non-local, points-to NULL, points-to vars: { }
_369, points-to non-local, points-to NULL, points-to vars: { }
_382, points-to non-local, points-to NULL, points-to vars: { }
_395, points-to non-local, points-to NULL, points-to vars: { }
_492, points-to non-local, points-to NULL, points-to vars: { }
_505, points-to non-local, points-to NULL, points-to vars: { }
_518, points-to non-local, points-to NULL, points-to vars: { }
_531, points-to non-local, points-to NULL, points-to vars: { }
_544, points-to NULL, points-to vars: { D.3828 }
_557, points-to NULL, points-to vars: { D.3828 }
_570, points-to NULL, points-to vars: { D.3828 }
_583, points-to NULL, points-to vars: { D.3828 }
_596, points-to NULL, points-to vars: { D.3828 }
_609, points-to NULL, points-to vars: { D.3828 }
_622, points-to NULL, points-to vars: { D.3828 }
_635, points-to NULL, points-to vars: { D.3828 }
_648, points-to non-local, points-to NULL, points-to vars: { }
_661, points-to non-local, points-to NULL, points-to vars: { }
_674, points-to non-local, points-to NULL, points-to vars: { }
_687, points-to non-local, points-to NULL, points-to vars: { }
_764, points-to NULL, points-to vars: { D.3829 }
_777, points-to NULL, points-to vars: { D.3829 }
_790, points-to NULL, points-to vars: { D.3829 }
_803, points-to NULL, points-to vars: { D.3829 }

DoEmFloatIteration (struct InternalFPF * abase, struct InternalFPF * bbase, struct InternalFPF * cbase, long unsigned int arraysize, long unsigned int loops)
{
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  int n;
  long int exponent_difference;
  int i;
  int i;
  int j;
  short unsigned int carry;
  short unsigned int extra_bits[4];
  struct InternalFPF locy;
  int i;
  int n;
  int i;
  int n;
  int i;
  int i;
  short unsigned int accum;
  int i;
  unsigned int accum;
  short unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  short unsigned int accum;
  int i;
  int n;
  int i;
  long unsigned int i;
  static unsigned char jtable[16] = {0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
  long unsigned int elapsed;
  long unsigned int _1;
  unsigned char _2;
  long unsigned int _3;
  struct InternalFPF * _4;
  struct InternalFPF * _5;
  struct InternalFPF * _6;
  long unsigned int _7;
  struct InternalFPF * _8;
  struct InternalFPF * _9;
  struct InternalFPF * _10;
  long unsigned int _11;
  struct InternalFPF * _12;
  struct InternalFPF * _13;
  struct InternalFPF * _14;
  long unsigned int _15;
  struct InternalFPF * _16;
  struct InternalFPF * _17;
  struct InternalFPF * _18;
  long unsigned int _30;
  unsigned char _40;
  int _41;
  int _42;
  unsigned char _43;
  int _44;
  int _45;
  long unsigned int _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  long unsigned int _50;
  unsigned char _51;
  unsigned char _52;
  unsigned char _53;
  long unsigned int _56;
  long unsigned int _57;
  unsigned char _82;
  unsigned char _83;
  unsigned char _84;
  unsigned char _85;
  unsigned char _86;
  short int _87;
  unsigned short _88;
  short int _89;
  unsigned short _90;
  unsigned short _91;
  short int _92;
  short unsigned int _106;
  short unsigned int _113;
  short unsigned int[4] * _121;
  short unsigned int[4] * _157;
  short int _169;
  unsigned short _170;
  unsigned short _171;
  short int _172;
  short unsigned int _173;
  signed short _174;
  short unsigned int _185;
  short unsigned int _186;
  unsigned char _187;
  unsigned char _188;
  short unsigned int _190;
  long unsigned int _194;
  long unsigned int _196;
  long unsigned int _199;
  unsigned char _200;
  short unsigned int _201;
  short unsigned int _202;
  short int _214;
  int _215;
  int _216;
  unsigned short _221;
  unsigned short _222;
  unsigned short _223;
  short int _224;
  int _225;
  unsigned char _227;
  short unsigned int _245;
  short unsigned int _246;
  short unsigned int _255;
  short unsigned int * _334;
  short unsigned int * _341;
  short unsigned int * _348;
  short unsigned int * _356;
  short unsigned int _358;
  short unsigned int * _369;
  short unsigned int _371;
  short unsigned int * _382;
  short unsigned int _384;
  short unsigned int * _395;
  short unsigned int _397;
  short unsigned int _408;
  int _409;
  short unsigned int _417;
  int _418;
  short unsigned int _426;
  int _427;
  short unsigned int _435;
  int _436;
  short unsigned int _456;
  int _457;
  short unsigned int _465;
  int _466;
  short unsigned int _474;
  int _475;
  short unsigned int _483;
  int _484;
  signed short _488;
  signed short _489;
  short unsigned int * _492;
  short unsigned int _494;
  short unsigned int * _505;
  short unsigned int _507;
  short unsigned int * _518;
  short unsigned int _520;
  short unsigned int * _531;
  short unsigned int _533;
  short unsigned int * _544;
  short unsigned int _546;
  short unsigned int _553;
  short unsigned int _554;
  short unsigned int * _557;
  short unsigned int _559;
  short unsigned int * _570;
  short unsigned int _572;
  short unsigned int * _583;
  short unsigned int _585;
  signed short _592;
  signed short _593;
  short unsigned int * _596;
  short unsigned int _598;
  short unsigned int * _609;
  short unsigned int _611;
  short unsigned int * _622;
  short unsigned int _624;
  short unsigned int * _635;
  short unsigned int _637;
  short unsigned int * _648;
  short unsigned int _650;
  short unsigned int * _661;
  short unsigned int _663;
  short unsigned int * _674;
  short unsigned int _676;
  short unsigned int * _687;
  short unsigned int _689;
  short unsigned int _698;
  short unsigned int _699;
  unsigned int _701;
  unsigned int _705;
  short unsigned int _706;
  short unsigned int _707;
  short unsigned int _708;
  signed short _712;
  signed short _713;
  short unsigned int _714;
  short unsigned int _715;
  unsigned int _717;
  unsigned int _719;
  unsigned int _721;
  short unsigned int _722;
  short unsigned int _723;
  short unsigned int _724;
  signed short _728;
  short unsigned int _729;
  short unsigned int _730;
  short unsigned int _731;
  unsigned int _733;
  unsigned int _735;
  unsigned int _737;
  short unsigned int _738;
  short unsigned int _739;
  short unsigned int _740;
  short unsigned int _744;
  short unsigned int _745;
  short unsigned int _746;
  short unsigned int _747;
  unsigned int _749;
  unsigned int _751;
  unsigned int _753;
  short unsigned int _754;
  short unsigned int _755;
  short unsigned int _756;
  short unsigned int * _764;
  short unsigned int _766;
  short unsigned int _769;
  short unsigned int _773;
  short unsigned int _774;
  short unsigned int * _777;
  short unsigned int _779;
  short unsigned int * _790;
  short unsigned int _792;
  short unsigned int * _803;
  short unsigned int _805;
  short unsigned int _852;
  int _853;
  short unsigned int _861;
  int _862;
  short unsigned int _870;
  int _871;
  short unsigned int _879;
  int _880;
  short unsigned int _888;
  int _889;
  short unsigned int _897;
  int _898;
  short unsigned int _906;
  int _907;
  short unsigned int _915;
  int _916;
  short unsigned int _920;
  short unsigned int _921;
  short unsigned int _924;
  short unsigned int _925;
  short unsigned int _928;
  short unsigned int _929;
  short unsigned int _932;
  short unsigned int _933;

  <bb 2> [0.39%]:
  elapsed_26 = StartStopwatch ();
  goto <bb 103>; [100.00%]

  <bb 3> [12.51%]:
  _1 = i_20 & 15;
  _2 = jtable[_1];
  switch (_2) <default: <L6> [20.00%], case 0: <L2> [20.00%], case 1: <L3> [20.00%], case 2: <L4> [20.00%], case 3: <L5> [20.00%]>

<L2> [2.50%]:
  _3 = i_20 * 12;
  _4 = cbase_32(D) + _3;
  _5 = bbase_33(D) + _3;
  _6 = abase_34(D) + _3;
  AddSubInternalFPF (0, _6, _5, _4);
  goto <bb 100> (<L6>); [100.00%]

<L3> [2.50%]:
  _7 = i_20 * 12;
  _8 = cbase_32(D) + _7;
  _9 = bbase_33(D) + _7;
  _10 = abase_34(D) + _7;
  AddSubInternalFPF (1, _10, _9, _8);
  goto <bb 100> (<L6>); [100.00%]

<L4> [2.50%]:
  _11 = i_20 * 12;
  _12 = cbase_32(D) + _11;
  _13 = bbase_33(D) + _11;
  _14 = abase_34(D) + _11;
  _40 = _14->type;
  _41 = (int) _40;
  _42 = _41 * 5;
  _43 = _13->type;
  _44 = (int) _43;
  _45 = _42 + _44;
  switch (_45) <default: <L20> [12.50%], case 0 ... 2: <L13> [12.50%], case 3: <L15> [12.50%], case 4: <L17> [12.50%], case 5: <L14> [12.50%], case 6 ... 7: <L18> [12.50%], case 8: <L14> [12.50%], case 9: <L17> [12.50%], case 10: <L14> [12.50%], case 11 ... 12: <L18> [12.50%], case 13: <L14> [12.50%], case 14: <L17> [12.50%], case 15: <L15> [12.50%], case 16 ... 18: <L13> [12.50%], case 19: <L17> [12.50%], case 20 ... 23: <L16> [12.50%], case 24: <L25> [12.50%]>

<L25> [0.31%]:
  _920 = _14->mantissa[0];
  _921 = _13->mantissa[0];
  if (_920 > _921)
    goto <bb 73>; [5.00%]
  else
    goto <bb 8>; [95.00%]

  <bb 8> [0.30%]:
  if (_920 < _921)
    goto <bb 74>; [5.00%]
  else
    goto <bb 9>; [95.00%]

  <bb 9> [0.29%]:
  _924 = _14->mantissa[1];
  _925 = _13->mantissa[1];
  if (_924 > _925)
    goto <bb 73>; [5.00%]
  else
    goto <bb 10>; [95.00%]

  <bb 10> [0.27%]:
  if (_924 < _925)
    goto <bb 74>; [5.00%]
  else
    goto <bb 11>; [95.00%]

  <bb 11> [0.26%]:
  _928 = _14->mantissa[2];
  _929 = _13->mantissa[2];
  if (_928 > _929)
    goto <bb 73>; [5.00%]
  else
    goto <bb 12>; [95.00%]

  <bb 12> [0.25%]:
  if (_928 < _929)
    goto <bb 74>; [5.00%]
  else
    goto <bb 13>; [95.00%]

  <bb 13> [0.24%]:
  _932 = _14->mantissa[3];
  _933 = _13->mantissa[3];
  if (_932 > _933)
    goto <bb 73>; [5.00%]
  else
    goto <bb 14>; [95.00%]

  <bb 14> [0.23%]:
  if (_932 < _933)
    goto <bb 74>; [5.00%]
  else
    goto <bb 75>; [95.00%]

<L13> [0.31%]:
  _46 = __builtin_object_size (_14, 0);
  __builtin_memmove (_14, _12, 12);
  _47 = _12->sign;
  _48 = _13->sign;
  _49 = _47 ^ _48;
  _12->sign = _49;
  goto <bb 76> (<L20>); [100.00%]

<L14> [0.31%]:
  _50 = __builtin_object_size (_13, 0);
  __builtin_memmove (_13, _12, 12);
  _51 = _12->sign;
  _52 = _14->sign;
  _53 = _51 ^ _52;
  _12->sign = _53;
  goto <bb 76> (<L20>); [100.00%]

<L15> [0.31%]:
  _12->type = 4;
  _12->exp = 32767;
  _12->sign = 1;
  _12->mantissa[0] = 16384;
  _12->mantissa[1] = 0;
  _12->mantissa[2] = 0;
  _12->mantissa[3] = 0;
  goto <bb 76> (<L20>); [100.00%]

<L16> [0.31%]:
  _56 = __builtin_object_size (_14, 0);
  __builtin_memmove (_14, _12, 12);
  goto <bb 76> (<L20>); [100.00%]

<L17> [0.31%]:
  _57 = __builtin_object_size (_13, 0);
  __builtin_memmove (_13, _12, 12);
  goto <bb 76> (<L20>); [100.00%]

<L18> [0.31%]:
  __builtin_memcpy (&locy, _13, 12);
  _888 = MEM[(short unsigned int *)_14 + 4B];
  _889 = (int) _888;
  n_890 = _889;
  _897 = MEM[(short unsigned int *)_14 + 6B];
  _898 = (int) _897;
  _106 = _888 | _897;
  n_899 = (int) _106;
  _906 = MEM[(short unsigned int *)_14 + 8B];
  _907 = (int) _906;
  _774 = _106 | _906;
  n_908 = (int) _774;
  _915 = MEM[(short unsigned int *)_14 + 10B];
  _916 = (int) _915;
  _773 = _774 | _915;
  n_917 = (int) _773;
  if (_773 == 0)
    goto <bb 22>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 21> [0.16%]:
  _852 = MEM[(short unsigned int *)_13 + 4B];
  _853 = (int) _852;
  n_854 = _853;
  _861 = MEM[(short unsigned int *)_13 + 6B];
  _862 = (int) _861;
  _769 = _852 | _861;
  n_863 = (int) _769;
  _870 = MEM[(short unsigned int *)_13 + 8B];
  _871 = (int) _870;
  _255 = _769 | _870;
  n_872 = (int) _255;
  _879 = MEM[(short unsigned int *)_13 + 10B];
  _880 = (int) _879;
  _113 = _255 | _879;
  n_881 = (int) _113;
  if (_113 == 0)
    goto <bb 22>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 22> [0.23%]:
  _12->type = 3;
  _12->sign = 0;
  _12->exp = -32767;
  _12->mantissa[0] = 0;
  _12->mantissa[1] = 0;
  _12->mantissa[2] = 0;
  _12->mantissa[3] = 0;

  <bb 23> [0.31%]:
  _82 = _14->type;
  if (_82 == 1)
    goto <bb 25>; [34.00%]
  else
    goto <bb 24>; [66.00%]

  <bb 24> [0.21%]:
  _83 = _13->type;
  if (_83 == 1)
    goto <bb 25>; [34.00%]
  else
    goto <bb 26>; [66.00%]

  <bb 25> [0.18%]:
  _12->type = 1;
  goto <bb 27>; [100.00%]

  <bb 26> [0.14%]:
  _12->type = 2;

  <bb 27> [0.31%]:
  _84 = _14->sign;
  _85 = _13->sign;
  _86 = _84 ^ _85;
  _12->sign = _86;
  _87 = _14->exp;
  _88 = (unsigned short) _87;
  _89 = _13->exp;
  _90 = (unsigned short) _89;
  _91 = _88 + _90;
  _92 = (short int) _91;
  _12->exp = _92;
  _12->mantissa[0] = 0;
  extra_bits[0] = 0;
  _12->mantissa[1] = 0;
  extra_bits[1] = 0;
  _12->mantissa[2] = 0;
  extra_bits[2] = 0;
  _12->mantissa[3] = 0;
  extra_bits[3] = 0;
  goto <bb 46>; [100.00%]

  <bb 28> [6.80%]:
  _698 = _14->mantissa[3];
  _699 = _12->mantissa[3];
  accum_700 = (unsigned int) _699;
  _701 = (unsigned int) _698;
  accum_702 = accum_700 + _701;
  accum_704 = accum_702;
  _705 = accum_702 >> 16;
  _706 = (short unsigned int) _705;
  _707 = _706 & 1;
  _708 = _698 + _699;
  MEM[(short unsigned int *)_12].mantissa[3] = _708;
  _714 = _14->mantissa[2];
  _715 = _12->mantissa[2];
  accum_716 = (unsigned int) _715;
  _717 = (unsigned int) _714;
  accum_718 = accum_716 + _717;
  _719 = (unsigned int) _707;
  accum_720 = accum_718 + _719;
  _721 = accum_720 >> 16;
  _722 = (short unsigned int) _721;
  _723 = _722 & 1;
  _724 = (short unsigned int) accum_720;
  MEM[(short unsigned int *)_12].mantissa[2] = _724;
  _730 = _14->mantissa[1];
  _731 = _12->mantissa[1];
  accum_732 = (unsigned int) _731;
  _733 = (unsigned int) _730;
  accum_734 = accum_732 + _733;
  _735 = (unsigned int) _723;
  accum_736 = accum_734 + _735;
  _737 = accum_736 >> 16;
  _738 = (short unsigned int) _737;
  _739 = _738 & 1;
  _740 = (short unsigned int) accum_736;
  MEM[(short unsigned int *)_12].mantissa[1] = _740;
  _746 = _14->mantissa[0];
  _747 = _12->mantissa[0];
  accum_748 = (unsigned int) _747;
  _749 = (unsigned int) _746;
  accum_750 = accum_748 + _749;
  _751 = (unsigned int) _739;
  accum_752 = accum_750 + _751;
  _753 = accum_752 >> 16;
  _754 = (short unsigned int) _753;
  _755 = _754 & 1;
  _756 = (short unsigned int) accum_752;
  MEM[(short unsigned int *)_12].mantissa[0] = _756;

  <bb 29> [20.00%]:
  # carry_189 = PHI <0(53), _755(28)>
  _121 = &_12->mantissa;
  _648 = _121;
  accum_649 = MEM[(short unsigned int *)_12 + 4B];
  _650 = accum_649 & 1;
  accum_651 = accum_649 >> 1;
  if (carry_189 != 0)
    goto <bb 30>; [50.00%]
  else
    goto <bb 31>; [50.00%]

  <bb 30> [10.00%]:
  accum_652 = accum_651 | 32768;

  <bb 31> [20.00%]:
  # accum_653 = PHI <accum_651(29), accum_652(30)>
  MEM[(short unsigned int *)_12 + 4B] = accum_653;
  _661 = &MEM[(void *)_12 + 6B];
  accum_662 = MEM[(short unsigned int *)_12 + 6B];
  _663 = accum_662 & 1;
  accum_664 = accum_662 >> 1;
  if (_650 != 0)
    goto <bb 32>; [50.00%]
  else
    goto <bb 33>; [50.00%]

  <bb 32> [10.00%]:
  accum_665 = accum_664 | 32768;

  <bb 33> [20.00%]:
  # accum_666 = PHI <accum_664(31), accum_665(32)>
  MEM[(short unsigned int *)_12 + 6B] = accum_666;
  _674 = &MEM[(void *)_12 + 8B];
  accum_675 = MEM[(short unsigned int *)_12 + 8B];
  _676 = accum_675 & 1;
  accum_677 = accum_675 >> 1;
  if (_663 != 0)
    goto <bb 34>; [50.00%]
  else
    goto <bb 35>; [50.00%]

  <bb 34> [10.00%]:
  accum_678 = accum_677 | 32768;

  <bb 35> [20.00%]:
  # accum_679 = PHI <accum_677(33), accum_678(34)>
  MEM[(short unsigned int *)_12 + 8B] = accum_679;
  _687 = &MEM[(void *)_12 + 10B];
  accum_688 = MEM[(short unsigned int *)_12 + 10B];
  _689 = accum_688 & 1;
  accum_690 = accum_688 >> 1;
  if (_676 != 0)
    goto <bb 36>; [50.00%]
  else
    goto <bb 37>; [50.00%]

  <bb 36> [10.00%]:
  accum_691 = accum_690 | 32768;

  <bb 37> [20.00%]:
  # accum_692 = PHI <accum_690(35), accum_691(36)>
  MEM[(short unsigned int *)_12 + 10B] = accum_692;
  _596 = &extra_bits;
  accum_597 = MEM[(short unsigned int *)&extra_bits];
  _598 = accum_597 & 1;
  accum_599 = accum_597 >> 1;
  if (_689 != 0)
    goto <bb 38>; [50.00%]
  else
    goto <bb 39>; [50.00%]

  <bb 38> [10.00%]:
  accum_600 = accum_599 | 32768;

  <bb 39> [20.00%]:
  # accum_601 = PHI <accum_599(37), accum_600(38)>
  MEM[(short unsigned int *)&extra_bits] = accum_601;
  _609 = &extra_bits + 2;
  accum_610 = MEM[(short unsigned int *)&extra_bits + 2B];
  _611 = accum_610 & 1;
  accum_612 = accum_610 >> 1;
  if (_598 != 0)
    goto <bb 40>; [50.00%]
  else
    goto <bb 41>; [50.00%]

  <bb 40> [10.00%]:
  accum_613 = accum_612 | 32768;

  <bb 41> [20.00%]:
  # accum_614 = PHI <accum_612(39), accum_613(40)>
  MEM[(short unsigned int *)&extra_bits + 2B] = accum_614;
  _622 = &extra_bits + 4;
  accum_623 = MEM[(short unsigned int *)&extra_bits + 4B];
  _624 = accum_623 & 1;
  accum_625 = accum_623 >> 1;
  if (_611 != 0)
    goto <bb 42>; [50.00%]
  else
    goto <bb 43>; [50.00%]

  <bb 42> [10.00%]:
  accum_626 = accum_625 | 32768;

  <bb 43> [20.00%]:
  # accum_627 = PHI <accum_625(41), accum_626(42)>
  MEM[(short unsigned int *)&extra_bits + 4B] = accum_627;
  _635 = &extra_bits + 6;
  accum_636 = MEM[(short unsigned int *)&extra_bits + 6B];
  _637 = accum_636 & 1;
  accum_638 = accum_636 >> 1;
  if (_624 != 0)
    goto <bb 44>; [50.00%]
  else
    goto <bb 45>; [50.00%]

  <bb 44> [10.00%]:
  accum_639 = accum_638 | 32768;

  <bb 45> [20.00%]:
  # accum_640 = PHI <accum_638(43), accum_639(44)>
  MEM[(short unsigned int *)&extra_bits + 6B] = accum_640;
  i_145 = i_144 + 1;

  <bb 46> [20.31%]:
  # i_144 = PHI <0(27), i_145(45)>
  if (i_144 <= 63)
    goto <bb 47>; [98.46%]
  else
    goto <bb 54>; [1.54%]

  <bb 47> [20.00%]:
  _764 = &locy.mantissa;
  accum_765 = MEM[(short unsigned int *)&locy + 4B];
  _766 = accum_765 & 1;
  accum_767 = accum_765 >> 1;
  MEM[(short unsigned int *)&locy + 4B] = accum_767;
  _777 = &locy.mantissa + 2;
  accum_778 = MEM[(short unsigned int *)&locy + 6B];
  _779 = accum_778 & 1;
  accum_780 = accum_778 >> 1;
  if (_766 != 0)
    goto <bb 48>; [50.00%]
  else
    goto <bb 49>; [50.00%]

  <bb 48> [10.00%]:
  accum_781 = accum_780 | 32768;

  <bb 49> [20.00%]:
  # accum_782 = PHI <accum_780(47), accum_781(48)>
  MEM[(short unsigned int *)&locy + 6B] = accum_782;
  _790 = &locy.mantissa + 4;
  accum_791 = MEM[(short unsigned int *)&locy + 8B];
  _792 = accum_791 & 1;
  accum_793 = accum_791 >> 1;
  if (_779 != 0)
    goto <bb 50>; [50.00%]
  else
    goto <bb 51>; [50.00%]

  <bb 50> [10.00%]:
  accum_794 = accum_793 | 32768;

  <bb 51> [20.00%]:
  # accum_795 = PHI <accum_793(49), accum_794(50)>
  MEM[(short unsigned int *)&locy + 8B] = accum_795;
  _803 = &locy.mantissa + 6;
  accum_804 = MEM[(short unsigned int *)&locy + 10B];
  _805 = accum_804 & 1;
  accum_806 = accum_804 >> 1;
  if (_792 != 0)
    goto <bb 52>; [50.00%]
  else
    goto <bb 53>; [50.00%]

  <bb 52> [10.00%]:
  accum_807 = accum_806 | 32768;

  <bb 53> [20.00%]:
  # accum_808 = PHI <accum_806(51), accum_807(52)>
  MEM[(short unsigned int *)&locy + 10B] = accum_808;
  if (_805 != 0)
    goto <bb 28>; [34.00%]
  else
    goto <bb 29>; [66.00%]

  <bb 54> [0.31%]:
  goto <bb 63>; [100.00%]

  <bb 55> [0.89%]:
  accum_496 = accum_495 | 1;

  <bb 56> [1.77%]:
  # accum_497 = PHI <accum_495(70), accum_496(55)>
  MEM[(short unsigned int *)_12 + 10B] = accum_497;
  _505 = &MEM[(void *)_12 + 8B];
  accum_506 = MEM[(short unsigned int *)_12 + 8B];
  _507 = accum_506 & 32768;
  accum_508 = accum_506 << 1;
  _592 = (signed short) accum_493;
  if (_592 < 0)
    goto <bb 57>; [50.00%]
  else
    goto <bb 58>; [50.00%]

  <bb 57> [0.89%]:
  accum_509 = accum_508 | 1;

  <bb 58> [1.77%]:
  # accum_510 = PHI <accum_508(56), accum_509(57)>
  MEM[(short unsigned int *)_12 + 8B] = accum_510;
  _518 = &MEM[(void *)_12 + 6B];
  accum_519 = MEM[(short unsigned int *)_12 + 6B];
  _520 = accum_519 & 32768;
  accum_521 = accum_519 << 1;
  _489 = (signed short) accum_506;
  if (_489 < 0)
    goto <bb 59>; [50.00%]
  else
    goto <bb 60>; [50.00%]

  <bb 59> [0.89%]:
  accum_522 = accum_521 | 1;

  <bb 60> [1.77%]:
  # accum_523 = PHI <accum_521(58), accum_522(59)>
  MEM[(short unsigned int *)_12 + 6B] = accum_523;
  _531 = _157;
  accum_532 = MEM[(short unsigned int *)_12 + 4B];
  _533 = accum_532 & 32768;
  accum_534 = accum_532 << 1;
  _488 = (signed short) accum_519;
  if (_488 < 0)
    goto <bb 61>; [50.00%]
  else
    goto <bb 62>; [50.00%]

  <bb 61> [0.89%]:
  accum_535 = accum_534 | 1;

  <bb 62> [1.77%]:
  # accum_536 = PHI <accum_534(60), accum_535(61)>
  MEM[(short unsigned int *)_12 + 4B] = accum_536;
  _169 = _12->exp;
  _170 = (unsigned short) _169;
  _171 = _170 + 65535;
  _172 = (short int) _171;
  _12->exp = _172;

  <bb 63> [2.09%]:
  _173 = _12->mantissa[0];
  _174 = (signed short) _173;
  if (_174 >= 0)
    goto <bb 64>; [85.00%]
  else
    goto <bb 71>; [15.00%]

  <bb 64> [1.78%]:
  _544 = &extra_bits + 6;
  accum_545 = MEM[(short unsigned int *)&extra_bits + 6B];
  _546 = accum_545 & 32768;
  accum_547 = accum_545 << 1;
  MEM[(short unsigned int *)&extra_bits + 6B] = accum_547;
  _557 = &extra_bits + 4;
  accum_558 = MEM[(short unsigned int *)&extra_bits + 4B];
  _559 = accum_558 & 32768;
  accum_560 = accum_558 << 1;
  _728 = (signed short) accum_545;
  if (_728 < 0)
    goto <bb 65>; [50.00%]
  else
    goto <bb 66>; [50.00%]

  <bb 65> [0.89%]:
  accum_561 = accum_560 | 1;

  <bb 66> [1.78%]:
  # accum_562 = PHI <accum_560(64), accum_561(65)>
  MEM[(short unsigned int *)&extra_bits + 4B] = accum_562;
  _570 = &extra_bits + 2;
  accum_571 = MEM[(short unsigned int *)&extra_bits + 2B];
  _572 = accum_571 & 32768;
  accum_573 = accum_571 << 1;
  _713 = (signed short) accum_558;
  if (_713 < 0)
    goto <bb 67>; [50.00%]
  else
    goto <bb 68>; [50.00%]

  <bb 67> [0.89%]:
  accum_574 = accum_573 | 1;

  <bb 68> [1.78%]:
  # accum_575 = PHI <accum_573(66), accum_574(67)>
  MEM[(short unsigned int *)&extra_bits + 2B] = accum_575;
  _583 = &extra_bits;
  accum_584 = MEM[(short unsigned int *)&extra_bits];
  _585 = accum_584 & 32768;
  accum_586 = accum_584 << 1;
  _712 = (signed short) accum_571;
  if (_712 < 0)
    goto <bb 69>; [50.00%]
  else
    goto <bb 70>; [50.00%]

  <bb 69> [0.89%]:
  accum_587 = accum_586 | 1;

  <bb 70> [1.78%]:
  # accum_588 = PHI <accum_586(68), accum_587(69)>
  MEM[(short unsigned int *)&extra_bits] = accum_588;
  _157 = &_12->mantissa;
  _492 = &MEM[(void *)_12 + 10B];
  accum_493 = MEM[(short unsigned int *)_12 + 10B];
  _494 = accum_493 & 32768;
  accum_495 = accum_493 << 1;
  _593 = (signed short) accum_584;
  if (_593 < 0)
    goto <bb 55>; [50.00%]
  else
    goto <bb 56>; [50.00%]

  <bb 71> [0.31%]:
  _456 = MEM[(short unsigned int *)&extra_bits];
  _457 = (int) _456;
  n_458 = _457;
  _465 = MEM[(short unsigned int *)&extra_bits + 2B];
  _466 = (int) _465;
  _745 = _456 | _465;
  n_467 = (int) _745;
  _474 = MEM[(short unsigned int *)&extra_bits + 4B];
  _475 = (int) _474;
  _744 = _474 | _745;
  n_476 = (int) _744;
  _483 = MEM[(short unsigned int *)&extra_bits + 6B];
  _484 = (int) _483;
  _729 = _483 | _744;
  n_485 = (int) _729;
  if (_729 == 0)
    goto <bb 72>; [50.00%]
  else
    goto <bb 76> (<L20>); [50.00%]

  <bb 72> [0.16%]:
  _185 = _12->mantissa[3];
  _186 = _185 | 1;
  _12->mantissa[3] = _186;
  goto <bb 76> (<L20>); [100.00%]

  <bb 73> [0.05%]:
  _194 = __builtin_object_size (_14, 0);
  __builtin_memmove (_14, _12, 12);
  goto <bb 76> (<L20>); [100.00%]

  <bb 74> [0.04%]:
  _199 = __builtin_object_size (_13, 0);
  __builtin_memmove (_13, _12, 12);
  goto <bb 76> (<L20>); [100.00%]

  <bb 75> [0.23%]:
  _196 = __builtin_object_size (_14, 0);
  __builtin_memmove (_14, _12, 12);

<L20> [2.50%]:
  _187 = _12->type;
  _188 = _187 + 255;
  if (_188 <= 1)
    goto <bb 77>; [24.54%]
  else
    goto <bb 98>; [75.46%]

  <bb 77> [0.61%]:
  _408 = MEM[(short unsigned int *)_12 + 4B];
  _409 = (int) _408;
  n_410 = _409;
  _417 = MEM[(short unsigned int *)_12 + 6B];
  _418 = (int) _417;
  _190 = _408 | _417;
  n_419 = (int) _190;
  _426 = MEM[(short unsigned int *)_12 + 8B];
  _427 = (int) _426;
  _554 = _190 | _426;
  n_428 = (int) _554;
  _435 = MEM[(short unsigned int *)_12 + 10B];
  _436 = (int) _435;
  _553 = _435 | _554;
  n_437 = (int) _553;
  if (_553 == 0)
    goto <bb 78>; [33.00%]
  else
    goto <bb 79>; [67.00%]

  <bb 78> [0.20%]:
  __builtin_puts (&"Error:  zero significand in denormalize"[0]);

  <bb 79> [0.61%]:
  _214 = _12->exp;
  _215 = (int) _214;
  _216 = _215 + 32767;
  exponent_difference_217 = (long int) _216;
  if (exponent_difference_217 < 0)
    goto <bb 80>; [39.77%]
  else
    goto <bb 96>; [60.23%]

  <bb 80> [0.24%]:
  exponent_difference_218 = -exponent_difference_217;
  if (exponent_difference_217 < -63)
    goto <bb 81>; [67.00%]
  else
    goto <bb 82>; [33.00%]

  <bb 81> [0.16%]:
  _12->type = 0;
  _12->exp = -32767;
  _12->mantissa[0] = 0;
  _12->mantissa[1] = 0;
  _12->mantissa[2] = 0;
  _12->mantissa[3] = 0;
  goto <bb 96>; [100.00%]

  <bb 82> [0.08%]:
  _221 = (unsigned short) _214;
  _222 = (unsigned short) exponent_difference_218;
  _223 = _221 + _222;
  _224 = (short int) _223;
  _12->exp = _224;
  _225 = (int) exponent_difference_218;
  mantissa_226 = &_12->mantissa;
  _227 = _12->type;
  if (_227 != 0)
    goto <bb 83>; [54.00%]
  else
    goto <bb 96>; [46.00%]

  <bb 83> [0.04%]:
  if (_225 > 63)
    goto <bb 85>; [50.00%]
  else
    goto <bb 84>; [50.00%]

  <bb 84> [0.02%]:
  goto <bb 88>; [100.00%]

  <bb 85> [0.02%]:
  _334 = mantissa_226;
  MEM[(short unsigned int *)_12 + 4B] = 0;
  _341 = &MEM[(void *)_12 + 6B];
  MEM[(short unsigned int *)_12 + 6B] = 0;
  _348 = &MEM[(void *)_12 + 8B];
  MEM[(short unsigned int *)_12 + 8B] = 0;
  MEM[(short unsigned int *)_12 + 10B] = 1;
  goto <bb 96>; [100.00%]

  <bb 86> [0.06%]:
  _245 = MEM[(short unsigned int *)_12 + 10B];
  _246 = _245 | 1;
  MEM[(short unsigned int *)_12 + 10B] = _246;

  <bb 87> [0.12%]:
  i_248 = i_247 + 1;

  <bb 88> [0.15%]:
  # i_247 = PHI <0(84), i_248(87)>
  if (_225 > i_247)
    goto <bb 89>; [85.00%]
  else
    goto <bb 96>; [15.00%]

  <bb 89> [0.13%]:
  _356 = mantissa_226;
  accum_357 = MEM[(short unsigned int *)_12 + 4B];
  _358 = accum_357 & 1;
  accum_359 = accum_357 >> 1;
  MEM[(short unsigned int *)_12 + 4B] = accum_359;
  _369 = &MEM[(void *)_12 + 6B];
  accum_370 = MEM[(short unsigned int *)_12 + 6B];
  _371 = accum_370 & 1;
  accum_372 = accum_370 >> 1;
  if (_358 != 0)
    goto <bb 90>; [50.00%]
  else
    goto <bb 91>; [50.00%]

  <bb 90> [0.06%]:
  accum_373 = accum_372 | 32768;

  <bb 91> [0.13%]:
  # accum_374 = PHI <accum_372(89), accum_373(90)>
  MEM[(short unsigned int *)_12 + 6B] = accum_374;
  _382 = &MEM[(void *)_12 + 8B];
  accum_383 = MEM[(short unsigned int *)_12 + 8B];
  _384 = accum_383 & 1;
  accum_385 = accum_383 >> 1;
  if (_371 != 0)
    goto <bb 92>; [50.00%]
  else
    goto <bb 93>; [50.00%]

  <bb 92> [0.06%]:
  accum_386 = accum_385 | 32768;

  <bb 93> [0.12%]:
  # accum_387 = PHI <accum_385(91), accum_386(92)>
  MEM[(short unsigned int *)_12 + 8B] = accum_387;
  _395 = &MEM[(void *)_12 + 10B];
  accum_396 = MEM[(short unsigned int *)_12 + 10B];
  _397 = accum_396 & 1;
  accum_398 = accum_396 >> 1;
  if (_384 != 0)
    goto <bb 94>; [50.00%]
  else
    goto <bb 95>; [50.00%]

  <bb 94> [0.06%]:
  accum_399 = accum_398 | 32768;

  <bb 95> [0.13%]:
  # accum_400 = PHI <accum_398(93), accum_399(94)>
  MEM[(short unsigned int *)_12 + 10B] = accum_400;
  if (_397 != 0)
    goto <bb 86>; [50.00%]
  else
    goto <bb 87>; [50.00%]

  <bb 96> [0.61%]:
  _200 = _12->type;
  if (_200 != 0)
    goto <bb 97>; [54.00%]
  else
    goto <bb 98>; [46.00%]

  <bb 97> [0.33%]:
  _201 = _12->mantissa[3];
  _202 = _201 & 65528;
  _12->mantissa[3] = _202;

  <bb 98> [2.50%]:
  extra_bits ={v} {CLOBBER};
  locy ={v} {CLOBBER};
  goto <bb 100> (<L6>); [100.00%]

<L5> [2.50%]:
  _15 = i_20 * 12;
  _16 = cbase_32(D) + _15;
  _17 = bbase_33(D) + _15;
  _18 = abase_34(D) + _15;
  DivideInternalFPF (_18, _17, _16);

<L6> [12.51%]:
  i_39 = i_20 + 1;

  <bb 101> [14.72%]:
  # i_20 = PHI <0(104), i_39(100)>
  if (i_20 < arraysize_31(D))
    goto <bb 3>; [85.00%]
  else
    goto <bb 102>; [15.00%]

  <bb 102> [2.21%]:

  <bb 103> [2.60%]:
  # loops_19 = PHI <loops_27(D)(2), loops_28(102)>
  loops_28 = loops_19 + 18446744073709551615;
  if (loops_19 != 0)
    goto <bb 104>; [85.00%]
  else
    goto <bb 105>; [15.00%]

  <bb 104> [2.21%]:
  goto <bb 101>; [100.00%]

  <bb 105> [0.39%]:
  _30 = StopStopwatch (elapsed_26);
  return _30;

}



;; Function RoundInternalFPF (RoundInternalFPF, funcdef_no=47, decl_uid=2809, cgraph_uid=47, symbol_order=47)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ptr = &NONLOCAL
_1 = *ptr
_2 = _1
_2 = &NONLOCAL
_10 = ptr + UNKNOWN
_12 = i_11
_13 = _12
_13 = &NONLOCAL
_14 = _10 + UNKNOWN
_15 = *_14
_16 = _15
n_18 = _16
n_18 = n_17
i_19 = i_11
i_19 = &NONLOCAL
i_11 = &NULL
i_11 = i_19
n_17 = &NULL
n_17 = n_18
n_20 = n_17
ESCAPED = &STRING
_21 = *ptr + 16
_22 = _21
_23 = _22
_23 = &NONLOCAL
exponent_difference_24 = _23
exponent_difference_25 = exponent_difference_24
derefaddrtmp(28) = &NULL
*ptr = derefaddrtmp(28)
derefaddrtmp(29) = &NONLOCAL
*ptr + 16 = derefaddrtmp(29)
derefaddrtmp(30) = &NULL
*ptr + 32 = derefaddrtmp(30)
i_75 = &NONLOCAL
derefaddrtmp(32) = &NULL
*ptr + UNKNOWN = derefaddrtmp(32)
i_79 = &NONLOCAL
derefaddrtmp(34) = &NULL
*ptr + UNKNOWN = derefaddrtmp(34)
i_83 = &NONLOCAL
derefaddrtmp(36) = &NULL
*ptr + UNKNOWN = derefaddrtmp(36)
i_87 = &NONLOCAL
_28 = _21
_29 = exponent_difference_25
_30 = _28
_30 = _29
_31 = _30
*ptr + 16 = _31
_32 = exponent_difference_25
mantissa_33 = ptr + UNKNOWN
_34 = *ptr
i_88 = &NULL
_90 = &NULL
_91 = &NULL
_92 = mantissa_33
derefaddrtmp(49) = &NULL
*_92 = derefaddrtmp(49)
i_94 = &NONLOCAL
_97 = &NONLOCAL
_98 = &NONLOCAL
_99 = mantissa_33 + 16
derefaddrtmp(54) = &NULL
*_99 = derefaddrtmp(54)
i_101 = &NONLOCAL
_104 = &NONLOCAL
_105 = &NONLOCAL
_106 = mantissa_33 + 32
derefaddrtmp(59) = &NULL
*_106 = derefaddrtmp(59)
i_108 = &NONLOCAL
derefaddrtmp(61) = &NONLOCAL
*ptr + 80 = derefaddrtmp(61)
_52 = *ptr + 80
_53 = _52
_53 = &NONLOCAL
*ptr + 80 = _53
i_55 = i_54
i_55 = &NONLOCAL
i_54 = &NULL
i_54 = i_55
_114 = mantissa_33
accum_115 = *ptr + 32
_116 = accum_115 + UNKNOWN
accum_117 = accum_115
accum_117 = &NONLOCAL
*ptr + 32 = accum_117
_127 = ptr + 48
accum_128 = *ptr + 48
_129 = accum_128 + UNKNOWN
accum_130 = accum_128
accum_130 = &NONLOCAL
accum_131 = accum_130
accum_131 = &NONLOCAL
accum_132 = accum_130
accum_132 = accum_131
*ptr + 48 = accum_132
_140 = ptr + 64
accum_141 = *ptr + 64
_142 = accum_141 + UNKNOWN
accum_143 = accum_141
accum_143 = &NONLOCAL
accum_144 = accum_143
accum_144 = &NONLOCAL
accum_145 = accum_143
accum_145 = accum_144
*ptr + 64 = accum_145
_153 = ptr + 80
accum_154 = *ptr + 80
_155 = accum_154 + UNKNOWN
accum_156 = accum_154
accum_156 = &NONLOCAL
accum_157 = accum_156
accum_157 = &NONLOCAL
accum_158 = accum_156
accum_158 = accum_157
*ptr + 80 = accum_158
_7 = *ptr
_8 = *ptr + 80
_9 = _8 + UNKNOWN
*ptr + 80 = _9

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 3 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"ptr"[label="ptr = { 5 }"];
"_1";
"_2"[label="_2 = { 5 }"];
"_10";
"_12";
"i_11"[label="i_11 = { 1 5 }"];
"_13"[label="_13 = { 5 }"];
"_14";
"_15";
"_16";
"n_18"[label="n_18 = { 1 }"];
"n_20";
"puts";
"_21";
"_22";
"_23"[label="_23 = { 5 }"];
"exponent_difference_24";
"exponent_difference_25";
"derefaddrtmp(28)"[label="derefaddrtmp(28) = { 1 }"];
"derefaddrtmp(29)"[label="derefaddrtmp(29) = { 5 }"];
"derefaddrtmp(30)"[label="derefaddrtmp(30) = { 1 }"];
"i_75"[label="i_75 = { 5 }"];
"derefaddrtmp(32)"[label="derefaddrtmp(32) = { 1 }"];
"i_79"[label="i_79 = { 5 }"];
"derefaddrtmp(34)"[label="derefaddrtmp(34) = { 1 }"];
"i_83"[label="i_83 = { 5 }"];
"derefaddrtmp(36)"[label="derefaddrtmp(36) = { 1 }"];
"i_87"[label="i_87 = { 5 }"];
"_28";
"_29";
"_30";
"_31";
"_32";
"mantissa_33";
"_34";
"i_88"[label="i_88 = { 1 }"];
"_90"[label="_90 = { 1 }"];
"_91"[label="_91 = { 1 }"];
"_92";
"derefaddrtmp(49)"[label="derefaddrtmp(49) = { 1 }"];
"i_94"[label="i_94 = { 5 }"];
"_97"[label="_97 = { 5 }"];
"_98"[label="_98 = { 5 }"];
"_99";
"derefaddrtmp(54)"[label="derefaddrtmp(54) = { 1 }"];
"i_101"[label="i_101 = { 5 }"];
"_104"[label="_104 = { 5 }"];
"_105"[label="_105 = { 5 }"];
"_106";
"derefaddrtmp(59)"[label="derefaddrtmp(59) = { 1 }"];
"i_108"[label="i_108 = { 5 }"];
"derefaddrtmp(61)"[label="derefaddrtmp(61) = { 5 }"];
"_52";
"_53"[label="_53 = { 5 }"];
"i_55"[label="i_55 = { 1 5 }"];
"_114";
"accum_115";
"_116";
"accum_117"[label="accum_117 = { 5 }"];
"_127";
"accum_128";
"_129";
"accum_130"[label="accum_130 = { 5 }"];
"accum_131"[label="accum_131 = { 5 }"];
"accum_132";
"_140";
"accum_141";
"_142";
"accum_143"[label="accum_143 = { 5 }"];
"accum_144"[label="accum_144 = { 5 }"];
"accum_145";
"_153";
"accum_154";
"_155";
"accum_156"[label="accum_156 = { 5 }"];
"accum_157"[label="accum_157 = { 5 }"];
"accum_158";
"_7";
"_8";
"_9";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*ptr";
"*_1";
"*_2";
"*_10";
"*_12";
"*i_11";
"*_13";
"*_14";
"*_15";
"*_16";
"*n_18";
"*n_17";
"*i_19";
"*n_20";
"*puts";
"*_21";
"*_22";
"*_23";
"*exponent_difference_24";
"*exponent_difference_25";
"*derefaddrtmp(28)";
"*derefaddrtmp(29)";
"*derefaddrtmp(30)";
"*i_75";
"*derefaddrtmp(32)";
"*i_79";
"*derefaddrtmp(34)";
"*i_83";
"*derefaddrtmp(36)";
"*i_87";
"*_28";
"*_29";
"*_30";
"*_31";
"*_32";
"*mantissa_33";
"*_34";
"*i_88";
"*_90";
"*_91";
"*_92";
"*derefaddrtmp(49)";
"*i_94";
"*_97";
"*_98";
"*_99";
"*derefaddrtmp(54)";
"*i_101";
"*_104";
"*_105";
"*_106";
"*derefaddrtmp(59)";
"*i_108";
"*derefaddrtmp(61)";
"*_52";
"*_53";
"*i_55";
"*i_54";
"*_114";
"*accum_115";
"*_116";
"*accum_117";
"*_127";
"*accum_128";
"*_129";
"*accum_130";
"*accum_131";
"*accum_132";
"*_140";
"*accum_141";
"*_142";
"*accum_143";
"*accum_144";
"*accum_145";
"*_153";
"*accum_154";
"*_155";
"*accum_156";
"*accum_157";
"*accum_158";
"*_7";
"*_8";
"*_9";

  // Edges in the constraint graph:
"*ESCAPED" -> "ESCAPED";
"*ptr" -> "_1";
"_1" -> "_2";
"i_11" -> "_12";
"i_11" -> "i_11";
"i_11" -> "i_11";
"_12" -> "_13";
"*_14" -> "_15";
"_15" -> "_16";
"_16" -> "n_18";
"n_18" -> "n_18";
"n_18" -> "n_18";
"n_18" -> "n_20";
"_21" -> "_22";
"_22" -> "_23";
"_23" -> "exponent_difference_24";
"exponent_difference_24" -> "exponent_difference_25";
"_21" -> "_28";
"exponent_difference_25" -> "_29";
"_28" -> "_30";
"_29" -> "_30";
"_30" -> "_31";
"exponent_difference_25" -> "_32";
"*ptr" -> "_34";
"mantissa_33" -> "_92";
"_52" -> "_53";
"i_55" -> "i_55";
"i_55" -> "i_55";
"mantissa_33" -> "_114";
"accum_115" -> "accum_117";
"accum_128" -> "accum_130";
"accum_130" -> "accum_131";
"accum_130" -> "accum_132";
"accum_131" -> "accum_132";
"accum_141" -> "accum_143";
"accum_143" -> "accum_144";
"accum_143" -> "accum_145";
"accum_144" -> "accum_145";
"accum_154" -> "accum_156";
"accum_156" -> "accum_157";
"accum_156" -> "accum_158";
"accum_157" -> "accum_158";
"*ptr" -> "_7";
"NONLOCAL" -> "*ESCAPED";
"derefaddrtmp(28)" -> "*ptr";
"derefaddrtmp(49)" -> "*_92";
"derefaddrtmp(54)" -> "*_99";
"derefaddrtmp(59)" -> "*_106";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"ptr" [label="\N\n_1 = *ptr\l_10 = ptr + UNKNOWN\l_21 = *ptr + 16\lmantissa_33 = ptr + UNKNOWN\l_52 = *ptr + 80\laccum_115 = *ptr + 32\l_127 = ptr + 48\laccum_128 = *ptr + 48\l_140 = ptr + 64\laccum_141 = *ptr + 64\l_153 = ptr + 80\laccum_154 = *ptr + 80\l_8 = *ptr + 80\l*ptr + UNKNOWN = derefaddrtmp(28)\l*ptr = derefaddrtmp(28)\l*ptr + 16 = ptr\l*ptr + 16 = _23\l*ptr + 32 = derefaddrtmp(28)\l*ptr + 32 = accum_117\l*ptr + 48 = accum_130\l*ptr + 64 = accum_143\l*ptr + 80 = ptr\l*ptr + 80 = _53\l*ptr + 80 = accum_156\l*ptr + 80 = _9\l"];
"_1";
"_2";
"_10" [label="\N\n_14 = _10 + UNKNOWN\l"];
"_12";
"_14" [label="\N\n_15 = *_14\l"];
"_15";
"n_18";
"puts";
"_21";
"_23";
"derefaddrtmp(28)";
"mantissa_33" [label="\N\n_99 = mantissa_33 + 16\l_106 = mantissa_33 + 32\l*mantissa_33 = derefaddrtmp(28)\l"];
"_99" [label="\N\n*_99 = derefaddrtmp(28)\l"];
"_106" [label="\N\n*_106 = derefaddrtmp(28)\l"];
"_52";
"_53";
"accum_115" [label="\N\n_116 = accum_115 + UNKNOWN\l"];
"_116";
"accum_117";
"_127";
"accum_128" [label="\N\n_129 = accum_128 + UNKNOWN\l"];
"_129";
"accum_130";
"_140";
"accum_141" [label="\N\n_142 = accum_141 + UNKNOWN\l"];
"_142";
"accum_143";
"_153";
"accum_154" [label="\N\n_155 = accum_154 + UNKNOWN\l"];
"_155";
"accum_156";
"_8" [label="\N\n_9 = _8 + UNKNOWN\l"];
"_9";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_21";
"STOREDANYTHING" -> "mantissa_33";
"STOREDANYTHING" -> "_99";
"STOREDANYTHING" -> "_106";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "accum_115";
"STOREDANYTHING" -> "_116";
"STOREDANYTHING" -> "_127";
"STOREDANYTHING" -> "accum_128";
"STOREDANYTHING" -> "_129";
"STOREDANYTHING" -> "_140";
"STOREDANYTHING" -> "accum_141";
"STOREDANYTHING" -> "_142";
"STOREDANYTHING" -> "_153";
"STOREDANYTHING" -> "accum_154";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"_1" -> "_2";
"_15" -> "n_18";
"_21" -> "_23";
"_52" -> "_53";
"accum_115" -> "accum_117";
"accum_128" -> "accum_130";
"accum_141" -> "accum_143";
"accum_154" -> "accum_156";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"ptr" [label="\N\n_1 = *ptr\l_10 = ptr + UNKNOWN\l_21 = *ptr + 16\lmantissa_33 = ptr + UNKNOWN\l_52 = *ptr + 80\laccum_115 = *ptr + 32\l_127 = ptr + 48\laccum_128 = *ptr + 48\l_140 = ptr + 64\laccum_141 = *ptr + 64\l_153 = ptr + 80\laccum_154 = *ptr + 80\l_8 = *ptr + 80\l*ptr + UNKNOWN = derefaddrtmp(28)\l*ptr = derefaddrtmp(28)\l*ptr + 16 = ptr\l*ptr + 16 = _23\l*ptr + 32 = derefaddrtmp(28)\l*ptr + 32 = accum_117\l*ptr + 48 = accum_130\l*ptr + 64 = accum_143\l*ptr + 80 = ptr\l*ptr + 80 = _53\l*ptr + 80 = accum_156\l*ptr + 80 = _9\l"];
"_1";
"_2";
"_10" [label="\N\n_14 = _10 + UNKNOWN\l"];
"_12";
"_14" [label="\N\n_15 = *_14\l"];
"_15";
"n_18";
"puts";
"_21";
"_23";
"derefaddrtmp(28)";
"mantissa_33" [label="\N\n_99 = mantissa_33 + 16\l_106 = mantissa_33 + 32\l*mantissa_33 = derefaddrtmp(28)\l"];
"_99" [label="\N\n*_99 = derefaddrtmp(28)\l"];
"_106" [label="\N\n*_106 = derefaddrtmp(28)\l"];
"_52";
"_53";
"accum_115" [label="\N\n_116 = accum_115 + UNKNOWN\l"];
"_116";
"accum_117";
"_127";
"accum_128" [label="\N\n_129 = accum_128 + UNKNOWN\l"];
"_129";
"accum_130";
"_140";
"accum_141" [label="\N\n_142 = accum_141 + UNKNOWN\l"];
"_142";
"accum_143";
"_153";
"accum_154" [label="\N\n_155 = accum_154 + UNKNOWN\l"];
"_155";
"accum_156";
"_8" [label="\N\n_9 = _8 + UNKNOWN\l"];
"_9";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "_10";
"STOREDANYTHING" -> "_14";
"STOREDANYTHING" -> "_21";
"STOREDANYTHING" -> "mantissa_33";
"STOREDANYTHING" -> "_99";
"STOREDANYTHING" -> "_106";
"STOREDANYTHING" -> "_52";
"STOREDANYTHING" -> "accum_115";
"STOREDANYTHING" -> "_116";
"STOREDANYTHING" -> "_127";
"STOREDANYTHING" -> "accum_128";
"STOREDANYTHING" -> "_129";
"STOREDANYTHING" -> "_140";
"STOREDANYTHING" -> "accum_141";
"STOREDANYTHING" -> "_142";
"STOREDANYTHING" -> "_153";
"STOREDANYTHING" -> "accum_154";
"STOREDANYTHING" -> "_155";
"STOREDANYTHING" -> "_8";
"STOREDANYTHING" -> "_9";
"ptr" -> "ESCAPED";
"_1" -> "_2";
"_15" -> "n_18";
"_21" -> "_23";
"_23" -> "ESCAPED";
"derefaddrtmp(28)" -> "ESCAPED";
"_52" -> "_53";
"_53" -> "ESCAPED";
"accum_115" -> "accum_117";
"accum_117" -> "ESCAPED";
"accum_128" -> "accum_130";
"accum_130" -> "ESCAPED";
"accum_141" -> "accum_143";
"accum_143" -> "ESCAPED";
"accum_154" -> "accum_156";
"accum_156" -> "ESCAPED";
"_9" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
ptr = { NONLOCAL }
_1 = { ESCAPED NONLOCAL }
_2 = { ESCAPED NONLOCAL }
_10 = { NONLOCAL }
_12 = { NULL NONLOCAL }
i_11 = { NULL NONLOCAL } same as _12
_13 = { NULL NONLOCAL } same as _12
_14 = { NONLOCAL }
_15 = { ESCAPED NONLOCAL }
_16 = { ESCAPED NONLOCAL } same as _15
n_18 = { NULL ESCAPED NONLOCAL }
n_17 = { NULL ESCAPED NONLOCAL } same as n_18
i_19 = { NULL NONLOCAL } same as _12
n_20 = { NULL ESCAPED NONLOCAL } same as n_18
puts = { }
_21 = { ESCAPED NONLOCAL }
_22 = { ESCAPED NONLOCAL } same as _21
_23 = { ESCAPED NONLOCAL }
exponent_difference_24 = { ESCAPED NONLOCAL } same as _23
exponent_difference_25 = { ESCAPED NONLOCAL } same as _23
derefaddrtmp(28) = { NULL }
derefaddrtmp(29) = { NONLOCAL } same as ptr
derefaddrtmp(30) = { NULL } same as derefaddrtmp(28)
i_75 = { NONLOCAL } same as ptr
derefaddrtmp(32) = { NULL } same as derefaddrtmp(28)
i_79 = { NONLOCAL } same as ptr
derefaddrtmp(34) = { NULL } same as derefaddrtmp(28)
i_83 = { NONLOCAL } same as ptr
derefaddrtmp(36) = { NULL } same as derefaddrtmp(28)
i_87 = { NONLOCAL } same as ptr
_28 = { ESCAPED NONLOCAL } same as _21
_29 = { ESCAPED NONLOCAL } same as _23
_30 = { ESCAPED NONLOCAL } same as _23
_31 = { ESCAPED NONLOCAL } same as _23
_32 = { ESCAPED NONLOCAL } same as _23
mantissa_33 = { NONLOCAL }
_34 = { ESCAPED NONLOCAL } same as _1
i_88 = { NULL } same as derefaddrtmp(28)
_90 = { NULL } same as derefaddrtmp(28)
_91 = { NULL } same as derefaddrtmp(28)
_92 = { NONLOCAL } same as mantissa_33
derefaddrtmp(49) = { NULL } same as derefaddrtmp(28)
i_94 = { NONLOCAL } same as ptr
_97 = { NONLOCAL } same as ptr
_98 = { NONLOCAL } same as ptr
_99 = { NONLOCAL }
derefaddrtmp(54) = { NULL } same as derefaddrtmp(28)
i_101 = { NONLOCAL } same as ptr
_104 = { NONLOCAL } same as ptr
_105 = { NONLOCAL } same as ptr
_106 = { NONLOCAL }
derefaddrtmp(59) = { NULL } same as derefaddrtmp(28)
i_108 = { NONLOCAL } same as ptr
derefaddrtmp(61) = { NONLOCAL } same as ptr
_52 = { ESCAPED NONLOCAL }
_53 = { ESCAPED NONLOCAL }
i_55 = { NULL NONLOCAL } same as _12
i_54 = { NULL NONLOCAL } same as _12
_114 = { NONLOCAL } same as mantissa_33
accum_115 = { ESCAPED NONLOCAL }
_116 = { ESCAPED NONLOCAL }
accum_117 = { ESCAPED NONLOCAL }
_127 = { NONLOCAL }
accum_128 = { ESCAPED NONLOCAL }
_129 = { ESCAPED NONLOCAL }
accum_130 = { ESCAPED NONLOCAL }
accum_131 = { ESCAPED NONLOCAL } same as accum_130
accum_132 = { ESCAPED NONLOCAL } same as accum_130
_140 = { NONLOCAL }
accum_141 = { ESCAPED NONLOCAL }
_142 = { ESCAPED NONLOCAL }
accum_143 = { ESCAPED NONLOCAL }
accum_144 = { ESCAPED NONLOCAL } same as accum_143
accum_145 = { ESCAPED NONLOCAL } same as accum_143
_153 = { NONLOCAL }
accum_154 = { ESCAPED NONLOCAL }
_155 = { ESCAPED NONLOCAL }
accum_156 = { ESCAPED NONLOCAL }
accum_157 = { ESCAPED NONLOCAL } same as accum_156
accum_158 = { ESCAPED NONLOCAL } same as accum_156
_7 = { ESCAPED NONLOCAL } same as _1
_8 = { ESCAPED NONLOCAL }
_9 = { ESCAPED NONLOCAL }


Alias information for RoundInternalFPF

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

ptr_4(D), points-to non-local, points-to NULL, points-to vars: { }
_10, points-to non-local, points-to NULL, points-to vars: { }
_14, points-to non-local, points-to NULL, points-to vars: { }
mantissa_33, points-to non-local, points-to NULL, points-to vars: { }
_92, points-to non-local, points-to NULL, points-to vars: { }
_99, points-to non-local, points-to NULL, points-to vars: { }
_106, points-to non-local, points-to NULL, points-to vars: { }
_114, points-to non-local, points-to NULL, points-to vars: { }
_127, points-to non-local, points-to NULL, points-to vars: { }
_140, points-to non-local, points-to NULL, points-to vars: { }
_153, points-to non-local, points-to NULL, points-to vars: { }

RoundInternalFPF (struct InternalFPF * ptr)
{
  int i;
  short unsigned int carry;
  short unsigned int * mantissa;
  short unsigned int accum;
  int i;
  int i;
  int i;
  int n;
  long int exponent_difference;
  unsigned char _1;
  unsigned char _2;
  unsigned char _7;
  short unsigned int _8;
  short unsigned int _9;
  short unsigned int[4] * _10;
  long unsigned int _12;
  long unsigned int _13;
  short unsigned int * _14;
  short unsigned int _15;
  int _16;
  short int _21;
  int _22;
  int _23;
  unsigned short _28;
  unsigned short _29;
  unsigned short _30;
  short int _31;
  int _32;
  unsigned char _34;
  short unsigned int _52;
  short unsigned int _53;
  long unsigned int _90;
  long unsigned int _91;
  short unsigned int * _92;
  long unsigned int _97;
  long unsigned int _98;
  short unsigned int * _99;
  long unsigned int _104;
  long unsigned int _105;
  short unsigned int * _106;
  short unsigned int * _114;
  short unsigned int _116;
  short unsigned int * _127;
  short unsigned int _129;
  short unsigned int * _140;
  short unsigned int _142;
  short unsigned int * _153;
  short unsigned int _155;

  <bb 2> [81.50%]:
  _1 = ptr_4(D)->type;
  _2 = _1 + 255;
  if (_2 <= 1)
    goto <bb 3>; [24.54%]
  else
    goto <bb 27>; [75.46%]

  <bb 3> [20.00%]:
  _10 = &ptr_4(D)->mantissa;
  goto <bb 5>; [100.00%]

  <bb 4> [80.00%]:
  _12 = (long unsigned int) i_11;
  _13 = _12 * 2;
  _14 = _10 + _13;
  _15 = *_14;
  _16 = (int) _15;
  n_18 = _16 | n_17;
  i_19 = i_11 + 1;

  <bb 5> [100.00%]:
  # i_11 = PHI <0(3), i_19(4)>
  # n_17 = PHI <0(3), n_18(4)>
  if (i_11 <= 3)
    goto <bb 4>; [80.00%]
  else
    goto <bb 6>; [20.00%]

  <bb 6> [20.00%]:
  # n_20 = PHI <n_17(5)>
  if (n_17 == 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [6.60%]:
  __builtin_puts (&"Error:  zero significand in denormalize"[0]);

  <bb 8> [20.00%]:
  _21 = ptr_4(D)->exp;
  _22 = (int) _21;
  _23 = _22 + 32767;
  exponent_difference_24 = (long int) _23;
  if (exponent_difference_24 < 0)
    goto <bb 9>; [39.77%]
  else
    goto <bb 25>; [60.23%]

  <bb 9> [7.95%]:
  exponent_difference_25 = -exponent_difference_24;
  if (exponent_difference_24 < -63)
    goto <bb 10>; [67.00%]
  else
    goto <bb 11>; [33.00%]

  <bb 10> [5.33%]:
  ptr_4(D)->type = 0;
  ptr_4(D)->exp = -32767;
  ptr_4(D)->mantissa[0] = 0;
  i_75 = 1;
  ptr_4(D)->mantissa[i_75] = 0;
  i_79 = 2;
  ptr_4(D)->mantissa[i_79] = 0;
  i_83 = 3;
  ptr_4(D)->mantissa[i_83] = 0;
  i_87 = 4;
  goto <bb 25>; [100.00%]

  <bb 11> [2.62%]:
  _28 = (unsigned short) _21;
  _29 = (unsigned short) exponent_difference_25;
  _30 = _28 + _29;
  _31 = (short int) _30;
  ptr_4(D)->exp = _31;
  _32 = (int) exponent_difference_25;
  mantissa_33 = &ptr_4(D)->mantissa;
  _34 = ptr_4(D)->type;
  if (_34 != 0)
    goto <bb 12>; [54.00%]
  else
    goto <bb 25>; [46.00%]

  <bb 12> [1.42%]:
  if (_32 > 63)
    goto <bb 14>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 13> [0.71%]:
  goto <bb 17>; [100.00%]

  <bb 14> [0.71%]:
  # i_88 = PHI <0(12)>
  _90 = 0;
  _91 = 0;
  _92 = mantissa_33;
  *_92 = 0;
  i_94 = 1;
  _97 = 1;
  _98 = 2;
  _99 = mantissa_33 + 2;
  *_99 = 0;
  i_101 = 2;
  _104 = 2;
  _105 = 4;
  _106 = mantissa_33 + 4;
  *_106 = 0;
  i_108 = 3;
  MEM[(short unsigned int *)ptr_4(D) + 10B] = 1;
  goto <bb 25>; [100.00%]

  <bb 15> [2.01%]:
  _52 = MEM[(short unsigned int *)ptr_4(D) + 10B];
  _53 = _52 | 1;
  MEM[(short unsigned int *)ptr_4(D) + 10B] = _53;

  <bb 16> [4.02%]:
  i_55 = i_54 + 1;

  <bb 17> [4.72%]:
  # i_54 = PHI <0(13), i_55(16)>
  if (_32 > i_54)
    goto <bb 18>; [85.00%]
  else
    goto <bb 25>; [15.00%]

  <bb 18> [4.02%]:
  _114 = mantissa_33;
  accum_115 = MEM[(short unsigned int *)ptr_4(D) + 4B];
  _116 = accum_115 & 1;
  accum_117 = accum_115 >> 1;
  MEM[(short unsigned int *)ptr_4(D) + 4B] = accum_117;
  _127 = &MEM[(void *)ptr_4(D) + 6B];
  accum_128 = MEM[(short unsigned int *)ptr_4(D) + 6B];
  _129 = accum_128 & 1;
  accum_130 = accum_128 >> 1;
  if (_116 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 19> [2.01%]:
  accum_131 = accum_130 | 32768;

  <bb 20> [4.02%]:
  # accum_132 = PHI <accum_130(18), accum_131(19)>
  MEM[(short unsigned int *)ptr_4(D) + 6B] = accum_132;
  _140 = &MEM[(void *)ptr_4(D) + 8B];
  accum_141 = MEM[(short unsigned int *)ptr_4(D) + 8B];
  _142 = accum_141 & 1;
  accum_143 = accum_141 >> 1;
  if (_129 != 0)
    goto <bb 21>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 21> [2.01%]:
  accum_144 = accum_143 | 32768;

  <bb 22> [4.02%]:
  # accum_145 = PHI <accum_143(20), accum_144(21)>
  MEM[(short unsigned int *)ptr_4(D) + 8B] = accum_145;
  _153 = &MEM[(void *)ptr_4(D) + 10B];
  accum_154 = MEM[(short unsigned int *)ptr_4(D) + 10B];
  _155 = accum_154 & 1;
  accum_156 = accum_154 >> 1;
  if (_142 != 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 23> [2.01%]:
  accum_157 = accum_156 | 32768;

  <bb 24> [4.02%]:
  # accum_158 = PHI <accum_156(22), accum_157(23)>
  MEM[(short unsigned int *)ptr_4(D) + 10B] = accum_158;
  if (_155 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 25> [20.00%]:
  _7 = ptr_4(D)->type;
  if (_7 != 0)
    goto <bb 26>; [54.00%]
  else
    goto <bb 27>; [46.00%]

  <bb 26> [10.80%]:
  _8 = ptr_4(D)->mantissa[3];
  _9 = _8 & 65528;
  ptr_4(D)->mantissa[3] = _9;

  <bb 27> [81.50%]:
  return;

}


